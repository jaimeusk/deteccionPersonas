<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="77:TestSerialAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f33b86ac640"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f33b8268500"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f33b8268500"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f33b8262280"/></to>
    </wire>
    <wire loc="78:TestSerialAppC.nc">
      <from><interface-ref name="Control" scoped="" ref="0x7f33b86b9960"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f33b71fa5c0"/></to>
    </wire>
    <wire loc="61:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f33b71fa5c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f33b718d8d0"/></to>
    </wire>
    <wire loc="79:TestSerialAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f33b8658a80"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f33b71f6800"/>
      <arguments>
        <value cst="I:137">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:TestSerialAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f33b864f950"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f33b71f7600"/>
      <arguments>
        <value cst="I:137">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:TestSerialAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f33b86ae0d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f33b85dacc0"/></to>
    </wire>
    <wire loc="51:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f33b85dacc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f33b85d2490"/></to>
    </wire>
    <wire loc="82:TestSerialAppC.nc">
      <from><interface-ref name="TimerIniTDMA" scoped="" ref="0x7f33b865a060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f33b6e5d060"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f33b6e5d060"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f33b73fc610"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:TestSerialAppC.nc">
      <from><interface-ref name="TimerApagaLeds" scoped="" ref="0x7f33b8642680"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f33b6e57b00"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f33b6e57b00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f33b73fc610"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:TestSerialAppC.nc">
      <from><interface-ref name="TimerFinTDMA" scoped="" ref="0x7f33b863dbe0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f33b6e504e0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f33b6e504e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f33b73fc610"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:TestSerialAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f33b862c180"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f33b71f6e10"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f33b71f6e10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f33b7196a40"/></to>
    </wire>
    <wire loc="53:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f33b85aadd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33b85d3e60"/></to>
    </wire>
    <wire loc="54:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f33b85caa90"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f33b85d4590"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f33b85d4590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f33b82939e0"/></to>
    </wire>
    <wire loc="55:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f33b85d0ca0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f33b85ac830"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f33b85ac830"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f33b827c020"/></to>
    </wire>
    <wire loc="56:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f33b85c9020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f33b85abb50"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f33b85abb50"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f33b8277630"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f33b8394de0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33b85aadd0"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f33b8282c50"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f33b853c020"/></to>
    </wire>
    <wire loc="737:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f33b853c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b83e5860"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f33b827b2f0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f33b853a8a0"/></to>
    </wire>
    <wire loc="738:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f33b853a8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b83e0e60"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f33b82767a0"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f33b8537020"/></to>
    </wire>
    <wire loc="739:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f33b8537020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b83da3f0"/></to>
    </wire>
    <wire loc="693:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f33b858ed50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b8495e60"/></to>
    </wire>
    <wire loc="706:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f33b8575e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b845d3f0"/></to>
    </wire>
    <wire loc="844:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f33b84ea3d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b844d3f0"/></to>
    </wire>
    <wire loc="864:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f33b84ef3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b83afe60"/></to>
    </wire>
    <wire loc="845:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f33b85183f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b8448860"/></to>
    </wire>
    <wire loc="711:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f33b8570e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b8453e60"/></to>
    </wire>
    <wire loc="724:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f33b8555020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b841c3f0"/></to>
    </wire>
    <wire loc="748:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f33b8527020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b83b93f0"/></to>
    </wire>
    <wire loc="848:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f33b85133f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b843d3f0"/></to>
    </wire>
    <wire loc="858:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f33b84ff3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b83d0e60"/></to>
    </wire>
    <wire loc="870:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f33b84e03f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b83a93f0"/></to>
    </wire>
    <wire loc="696:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f33b8586580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b8484e60"/></to>
    </wire>
    <wire loc="849:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f33b8511bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b8437860"/></to>
    </wire>
    <wire loc="701:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f33b8581580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b8479860"/></to>
    </wire>
    <wire loc="714:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f33b8568710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b8443e60"/></to>
    </wire>
    <wire loc="727:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f33b854e8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b840b3f0"/></to>
    </wire>
    <wire loc="740:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f33b85358a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b83d5860"/></to>
    </wire>
    <wire loc="751:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f33b85208a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b83a93f0"/></to>
    </wire>
    <wire loc="691:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f33b8593d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b849f3f0"/></to>
    </wire>
    <wire loc="704:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f33b857ad50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b84699f0"/></to>
    </wire>
    <wire loc="717:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f33b8560e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b8432e60"/></to>
    </wire>
    <wire loc="843:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f33b851bbc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b844d3f0"/></to>
    </wire>
    <wire loc="861:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f33b84f8bb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b83c0e60"/></to>
    </wire>
    <wire loc="868:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f33b84e3bb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b83a93f0"/></to>
    </wire>
    <wire loc="854:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f33b8507bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b83eb3f0"/></to>
    </wire>
    <wire loc="722:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f33b855be50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b8427a60"/></to>
    </wire>
    <wire loc="735:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f33b8541020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b83f1e60"/></to>
    </wire>
    <wire loc="746:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f33b852c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b83c5860"/></to>
    </wire>
    <wire loc="862:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f33b84f53e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b83b93f0"/></to>
    </wire>
    <wire loc="851:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f33b850e3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b83fb3f0"/></to>
    </wire>
    <wire loc="694:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f33b858b580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b848e3f0"/></to>
    </wire>
    <wire loc="707:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f33b8572710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b8458860"/></to>
    </wire>
    <wire loc="744:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f33b8532020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b83d0e60"/></to>
    </wire>
    <wire loc="712:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f33b856d710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b844d3f0"/></to>
    </wire>
    <wire loc="725:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f33b85538a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b8417860"/></to>
    </wire>
    <wire loc="749:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f33b85258a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b83b4860"/></to>
    </wire>
    <wire loc="853:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f33b85093f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b83f1e60"/></to>
    </wire>
    <wire loc="689:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f33b8596cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b84aa860"/></to>
    </wire>
    <wire loc="702:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f33b857fd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b8474e60"/></to>
    </wire>
    <wire loc="715:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f33b8565e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b843d3f0"/></to>
    </wire>
    <wire loc="728:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f33b854b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b8406860"/></to>
    </wire>
    <wire loc="855:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f33b85043f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b8432e60"/></to>
    </wire>
    <wire loc="859:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f33b84fdbb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b83ca3f0"/></to>
    </wire>
    <wire loc="865:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f33b84edbb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b83a93f0"/></to>
    </wire>
    <wire loc="733:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f33b8546020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b83fb3f0"/></to>
    </wire>
    <wire loc="856:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f33b8502bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b842c3f0"/></to>
    </wire>
    <wire loc="692:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f33b8590580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b849a860"/></to>
    </wire>
    <wire loc="705:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f33b8577710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b8463e60"/></to>
    </wire>
    <wire loc="718:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f33b855d710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b842c3f0"/></to>
    </wire>
    <wire loc="852:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f33b850cbc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b83f6860"/></to>
    </wire>
    <wire loc="863:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f33b84f3bb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b83b4860"/></to>
    </wire>
    <wire loc="723:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f33b85588a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b8422e60"/></to>
    </wire>
    <wire loc="736:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f33b853f8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b83eb3f0"/></to>
    </wire>
    <wire loc="747:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f33b852a8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b83c0e60"/></to>
    </wire>
    <wire loc="695:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f33b8589d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b8489860"/></to>
    </wire>
    <wire loc="745:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f33b85308a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b83ca3f0"/></to>
    </wire>
    <wire loc="700:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f33b8584d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b847e3f0"/></to>
    </wire>
    <wire loc="713:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f33b856be50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b8448860"/></to>
    </wire>
    <wire loc="726:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f33b8550020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b8411e60"/></to>
    </wire>
    <wire loc="750:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f33b8522020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b83afe60"/></to>
    </wire>
    <wire loc="690:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f33b8595580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b84a5e60"/></to>
    </wire>
    <wire loc="703:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f33b857c580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b846e3f0"/></to>
    </wire>
    <wire loc="716:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f33b8562710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b8437860"/></to>
    </wire>
    <wire loc="729:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f33b85498a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b8401e60"/></to>
    </wire>
    <wire loc="860:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f33b84fa3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b83c5860"/></to>
    </wire>
    <wire loc="847:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f33b84e8ba0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b8443e60"/></to>
    </wire>
    <wire loc="846:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f33b8516bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b8443e60"/></to>
    </wire>
    <wire loc="734:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f33b85448a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b83f6860"/></to>
    </wire>
    <wire loc="867:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f33b84e53e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b83afe60"/></to>
    </wire>
    <wire loc="871:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f33b84debc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b83d5860"/></to>
    </wire>
    <wire loc="842:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f33b851d060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f33b8453e60"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f33b83a6e50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33b83961a0"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7f33b83a2020"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7f33b8396810"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f33b8394020"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f33b837d900"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f33b837d900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33b8365850"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f33b8394700"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33b8397640"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f33b8365850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33b834b1c0"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f33b835cde0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f33b834b830"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f33b87e4c80"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f33b834aaf0"/></to>
    </wire>
    <wire loc="73:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f33b8268c00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33b6398cf0"/></to>
    </wire>
    <wire loc="59:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f33b8268c00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33b718d280"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f33b8268c00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33b72d0dd0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f33b8268c00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33b7358b70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f33b8268c00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33b7379750"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f33b8268c00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33b7396080"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f33b8268c00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33b75003a0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f33b8268c00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33b7601620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f33b8268c00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33b76eec60"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f33b8268c00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33b8092c70"/></to>
    </wire>
    <wire loc="73:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f33b8268c00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33b66bc020"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f33b8268c00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33b7bc1020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f33b8268c00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33b8142510"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f33b82628f0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f33b8b691e0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f33b8b691e0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f33b870e140"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f33b82613a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33b83a6e50"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f33b8261aa0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f33b8268c00"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f33b8b5c940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f33b870d040"/></to>
    </wire>
    <wire loc="56:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f33b8708490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f33b89419a0"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f33b82667a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f33b8215080"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f33b8215080"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f33b81ec340"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f33b82557f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f33b82141d0"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f33b82141d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f33b7292020"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f33b8252880"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f33b8212020"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f33b8212020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f33b7291df0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f33b8251020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f33b8211c20"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f33b8211c20"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f33b728ea80"/></to>
    </wire>
    <wire loc="89:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f33b8241430"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f33b757c550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f33b757c550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f33b756ea80"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f33b8222430"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f33b8205e70"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f33b8205e70"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f33b81d8080"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f33b8254b20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f33b82133f0"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f33b82133f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f33b7291210"/></to>
    </wire>
    <wire loc="85:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f33b8237350"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f33b820ec80"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f33b820ec80"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f33b81d9020"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f33b8250020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f33b8212650"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f33b8212650"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f33b728f470"/></to>
    </wire>
    <wire loc="90:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f33b822e660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f33b7578660"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f33b7578660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f33b756aaf0"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f33b81ec340"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f33b72c3b80"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f33b8205020"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f33b728c8b0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f33b81fb020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f33b728dce0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f33b8207dc0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f33b81da140"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f33b81da140"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f33b7581670"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f33b81d8080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f33b72c3080"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f33b81d9020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f33b757e6e0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f33b81f20d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f33b81d8b70"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f33b81d8b70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f33b72af020"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f33b8204e00"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f33b81d99d0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f33b81d99d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f33b757da70"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7f33b72830f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f33b81e5770"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f33b728b860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f33b81e4d10"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f33b81e4d10"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f33b732cc90"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f33b728a690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f33b81dca90"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f33b81dca90"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f33b732ba50"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f33b72864d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f33b77a8b20"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f33b728ace0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f33b7581670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f33b7581670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f33b7573d20"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f33b7289b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f33b757d0c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f33b757d0c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f33b756f640"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f33b7288610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f33b814cdc0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f33b814cdc0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f33b8141970"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f33b72841f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f33b81d1330"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f33b81d1330"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f33b81cc7e0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f33b7283d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f33b85dacc0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f33b72c3b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f33b72c0d90"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f33b757da70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f33b756e020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f33b72af020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f33b72ad410"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f33b732cc90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f33b7321a20"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f33b72c3080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f33b72bc2d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f33b81e9820"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f33b732c5e0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f33b732c5e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f33b7321370"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f33b757e6e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f33b7570c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f33b81e5770"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f33b732ebe0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f33b732ebe0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f33b73247b0"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f33b81dba30"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f33b732d8e0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f33b732d8e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f33b73234d0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f33b81e4020"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f33b732a170"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f33b732a170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f33b731f020"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f33b732ba50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f33b7320840"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f33b72c0d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f33b81d3390"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f33b81d3390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f33b81d0e70"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f33b73296b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f33b737e220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f33b737e220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f33b737ca10"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f33b737d020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f33b72b2350"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f33b72b2350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f33b72afd70"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f33b72afd70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f33b72c7ce0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f33b72c7ce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f33b72c1860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f33b72c1860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f33b81d3e80"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f33b81d3e80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f33b81cd990"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f33b7329020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f33b72c4980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f33b72c4980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f33b72c0690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f33b72c0690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f33b7360aa0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f33b7360aa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f33b735ce30"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f33b735d950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f33b81d2b40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f33b81d2b40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f33b76057c0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f33b76057c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f33b75ff020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f33b81cb640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f33b815c950"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f33b815c950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f33b8142b80"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f33b81c3b50"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f33b8157bf0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f33b8157bf0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f33b813f740"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f33b81c0760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f33b76ff6c0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f33b81c0760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f33b76085c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f33b76085c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f33b7601ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f33b76ff6c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f33b76ed320"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f33b81b82a0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f33b76fa020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f33b76fa020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f33b76edbc0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f33b81c1060"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f33b76facb0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f33b76facb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f33b76ec970"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f33b81b6330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f33b7581670"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f33b81ae920"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f33b757d0c0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f33b81b5420"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f33b739ba20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f33b739ba20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f33b7395a20"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f33b81b2110"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f33b7397aa0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f33b7397aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f33b7bc61d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f33b81b5bf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f33b85dacc0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f33b81a4b70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f33b8b5c940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f33b81a5ba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f33b8b5c940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f33b81a6c20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f33b8b5c940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f33b81480c0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f33b813eb40"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f33b8133d90"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f33b808f690"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f33b808f690"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f33b80895f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f33b8130060"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f33b7e3e690"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f33b7e3e690"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f33b7e30020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f33b812f380"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f33b7e3a020"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f33b7e3a020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f33b7e1f020"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f33b812d6a0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f33b7e386a0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f33b7e386a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f33b7e15b00"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f33b812b0e0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f33b7dfa400"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f33b7dfa400"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f33b7c96680"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f33b81161d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f33b7834e20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f33b7834e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f33b7c464d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f33b81142b0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f33b78307b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f33b78307b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f33b81149c0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f33b782fae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f33b782fae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f33b8117a40"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f33b7831ad0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f33b7831ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f33b8117120"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f33b782e160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f33b782e160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f33b811bb00"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f33b7826870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f33b7826870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f33b81223d0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f33b7823880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f33b7823880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f33b8122c80"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f33b78220a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f33b78220a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f33b811d5f0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f33b782ae50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f33b782ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f33b811a020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f33b7829670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f33b7829670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f33b8127520"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f33b7815500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f33b7815500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f33b811fa90"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f33b7816ce0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f33b7816ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f33b811a8e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f33b7827e50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f33b7827e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f33b81191c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f33b7829e50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f33b7829e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f33b8119a70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f33b7828e50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f33b7828e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f33b8113d90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f33b7801a80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f33b7801a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f33b7c464d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f33b8113020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f33b77d59e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f33b77d59e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f33b7c464d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f33b8123810"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f33b77a8b20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f33b813b020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f33b77a7d20"/></to>
    </wire>
    <wire loc="23:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f33b77a7d20"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f33b778d310"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f33b8108820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f33b8b5c940"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f33b8109940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f33b8b5c940"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f33b8092c70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33b808ad40"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f33b808ad40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33b69b31b0"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f33b80895f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f33b69b3a00"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f33b69b31b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33b69ac1b0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f33b69b3a00"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f33b69a6c90"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f33b69ac1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33b6990a30"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f33b699f410"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f33b69aca00"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f33b69aca00"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f33b698f340"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f33b69a1060"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f33b7ec48c0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f33b7ec48c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f33b7ea7cf0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f33b698c4c0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f33b6995640"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f33b6995640"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f33b805fcd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f33b698aa90"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f33b6994c20"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f33b6994c20"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f33b8056a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f33b6989da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f33b6992020"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f33b6992020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f33b80533f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f33b805fcd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f33b803fcd0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f33b803fcd0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f33b7fe9260"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f33b8056a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f33b803d5a0"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f33b803d5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f33b7f866d0"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f33b80533f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f33b803ca20"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f33b803ca20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f33b7f85ac0"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f33b805fcd0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f33b803fcd0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f33b8056a40"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f33b8037d40"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f33b8037d40"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f33b7f76220"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f33b80533f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f33b8035160"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f33b8035160"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f33b7f75610"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f33b805fcd0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f33b803fcd0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f33b8056a40"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f33b8033020"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f33b8033020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f33b7f6f6d0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f33b80533f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f33b8032570"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f33b8032570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f33b7f6eac0"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f33b805fcd0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f33b803fcd0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f33b8056a40"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f33b8030410"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f33b8030410"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f33b7f67b30"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f33b80533f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f33b802e890"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f33b802e890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f33b7f65020"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f33b805fcd0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f33b803fcd0"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f33b8056a40"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f33b802c8c0"/></to>
    </wire>
    <wire loc="175:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f33b802c8c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f33b7f5f220"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f33b80533f0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f33b802bd40"/></to>
    </wire>
    <wire loc="176:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f33b802bd40"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f33b7f5e610"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f33b805fcd0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f33b803fcd0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f33b8056a40"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f33b8029a50"/></to>
    </wire>
    <wire loc="182:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f33b8029a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f33b7f586d0"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f33b80533f0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f33b8027020"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f33b8027020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f33b7f56ac0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f33b8042a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f33b7f8e220"/></to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f33b8043a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f33b7f94cb0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f33b80313e0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f33b7f6d7a0"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f33b8049bb0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f33b7f94020"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f33b8027da0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f33b7f557a0"/></to>
    </wire>
    <wire loc="112:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f33b804d280"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f33b7fe26d0"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f33b8038da0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f33b7f7dcb0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f33b8038020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f33b7f7d020"/></to>
    </wire>
    <wire loc="146:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f33b803aa50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f33b7f7fb30"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f33b8040da0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f33b7f8c2f0"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f33b802d890"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f33b7f65cb0"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f33b8040020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f33b7f8d610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f33b8051a30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f33b7ff03e0"/></to>
    </wire>
    <wire loc="119:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f33b804a730"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f33b7f96b30"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f33b8044690"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f33b7f9c7a0"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f33b8034020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f33b7f742f0"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f33b804c700"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f33b7f9dac0"/></to>
    </wire>
    <wire loc="177:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f33b802aae0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f33b7f5d2f0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f33b803ba20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f33b7f847a0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f33b7fee2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f33b7fefbf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f33b7fee940"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f33b7f4e3f0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f33b7fed020"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f33b7f4eb80"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f33b7f9b610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f33b7ff03e0"/></to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f33b7f99c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f33b7fefbf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f33b7f93b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f33b7ff03e0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f33b7f912f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f33b7fefbf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f33b7f8b160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f33b7ff03e0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f33b7f8a7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f33b7fefbf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f33b7fe7100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f33b7fe8a60"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f33b7fe7750"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f33b7f4d430"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f33b7fe7da0"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f33b7f4dbc0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f33b7f83610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f33b7fe9260"/></to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f33b7f82c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f33b7fe8a60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f33b7f7cb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f33b7fe9260"/></to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f33b7f7a2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f33b7fe8a60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f33b7f73160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f33b7fe9260"/></to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f33b7f727a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f33b7fe8a60"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f33b7f6c610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f33b7fe9260"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f33b7f6bc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f33b7fe8a60"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f33b7f64b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f33b7fe9260"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f33b7f622f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f33b7fe8a60"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f33b7f5c160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f33b7fe9260"/></to>
    </wire>
    <wire loc="179:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f33b7f5b7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f33b7fe8a60"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f33b7f54610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f33b7fe9260"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f33b7f53c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f33b7fe8a60"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f33b7e890f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f33b7ec28e0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f33b7ec28e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f33b7ebbb80"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f33b7eadc50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f33b803fcd0"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f33b7e3d9c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f33b7e2a630"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f33b7e3ccf0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f33b7e25b00"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f33b7e3f3e0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f33b7e36a20"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f33b7e39370"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f33b7e1a630"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f33b7e35c50"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f33b858ed50"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f33b7e2f2f0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7f33b8555020"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f33b7e297a0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f33b8590580"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f33b7e24c60"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f33b8596cb0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f33b7e1e2f0"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7f33b854b020"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f33b7e197a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f33b85588a0"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f33b7e13c60"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7f33b854e8a0"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f33b7df7700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f33b7defc20"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f33b7df9060"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f33b7c88b70"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f33b7ddc760"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7f33b803aa50"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7f33b7ddba80"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7f33b8038da0"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f33b7dda930"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f33b85588a0"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f33b7c952f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f33b7dc7020"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f33b7dc7020"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f33b7db03f0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f33b7c867a0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f33b7dca3d0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f33b7dca3d0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f33b7db77a0"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f33b7dba3f0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f33b7da43f0"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f33b7dc4a30"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f33b7dadd50"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f33b7dc0020"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7f33b7daa3f0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f33b7dd0a30"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f33b7db3d50"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f33b7dbda30"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f33b7da7d50"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f33b7dc63f0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f33b7daf710"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f33b7db9710"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f33b7da2710"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f33b7dbf3f0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7f33b7da9710"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f33b7dc9d50"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f33b7db1020"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f33b7dbb020"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7f33b7da5100"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f33b7dc5710"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f33b7daea30"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f33b7dc3d50"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f33b7dab020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f33b7dd1710"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7f33b7db4a30"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f33b7dbe710"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f33b7da8a30"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f33b7830160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f33b7824880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f33b781c0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f33b78230a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f33b7810500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f33b7813500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f33b782f490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f33b7819880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f33b7814500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f33b781f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f33b78200a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f33b7833a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f33b7c45350"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f33b7c45350"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f33b7c3c660"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f33b782ee00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f33b782d490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f33b7817c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f33b782dbe0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f33b7814ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f33b78190a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f33b7828670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f33b781a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f33b781c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f33b781a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f33b7812ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f33b7813ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f33b7820880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f33b781b0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f33b7815ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f33b7822880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f33b7810ce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f33b7c442c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f33b7831480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f33b782a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f33b7827670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f33b781d0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f33b781d880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f33b78240a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f33b782b2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f33b782a020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f33b782e7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f33b7816500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f33b7812500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f33b781f0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f33b781b880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f33b7830e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f33b78210a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f33b782b940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f33b7821880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f33b78170a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f33b780d9b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f33b7c442c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f33b7c442c0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f33b7c3a890"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c39ba0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c37a30"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f33b7c464d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f33b7c3b510"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c368b0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f33b7c29b40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f33b7bcb770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f33b7bcb770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f33b7bc61d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f33b7c35060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f33b7ba8c40"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f33b7ba8c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f33b673da00"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f33b7c32c70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f33b7ba78f0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f33b7ba78f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f33b673b020"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f33b7c292e0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f33b7859020"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f33b7859020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f33b673a120"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f33b7c33a70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f33b85dacc0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f33b7c26bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f33b8b5c940"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f33b7bc61d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f33b7bc1b70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f33b673a120"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f33b7b42850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f33b673b020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f33b7b43110"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f33b673da00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f33b7b47d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f33b673c760"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f33b67322c0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f33b67322c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f33b79c22c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f33b7b43110"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f33b7ac7a10"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f33b673b630"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f33b7b43790"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f33b7b43790"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f33b7ac5060"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f33b7b3da40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f33b673a8c0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f33b6724760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f33b7b3f8e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f33b7b3e690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f33b6733640"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f33b6733640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f33b79c4020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f33b7b38b40"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f33b672dc10"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f33b672dc10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f33b79c64d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f33b7b3f8e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f33b7ac7250"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f33b7b42850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f33b7ac5c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f33b7b47d80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f33b7ac8470"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f33b7ac33e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f33b7b3da40"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f33b7ac45b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f33b7b3e690"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f33b7abe480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f33b7b38b40"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f33b7ac3a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f33b7ab4020"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f33b7ab4020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f33b7aa9700"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f33b7abec20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f33b85dacc0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7f33b7abc2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f33b8b5c940"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f33b7aab2c0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f33b7aa4c20"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f33b7ab0d10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f33b7aa42d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f33b7a76bb0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f33b851bbc0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f33b7a733e0"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7f33b85183f0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f33b7a71bb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f33b8516bc0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f33b7a6e3e0"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7f33b8511bc0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f33b7a6cbb0"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7f33b85133f0"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7f33b7a7bd10"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f33b7919d40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f33b672b440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f33b79c53f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f33b672ba50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f33b7920020"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f33b7920020"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f33b7919d40"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f33b67312b0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f33b7ab4020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f33b6732a60"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f33b79c2ad0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f33b79c2ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f33b792ce80"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f33b79c18a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f33b6724760"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f33b79c22c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f33b792da60"/></to>
    </wire>
    <wire loc="81:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f33b792da60"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f33b66b16c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f33b79c64d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f33b79bfd60"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f33b79c4020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f33b792eca0"/></to>
    </wire>
    <wire loc="80:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f33b792eca0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f33b66b3850"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7f33b79c53f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f33b79be710"/></to>
    </wire>
    <wire loc="83:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f33b792ce80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f33b66b0a70"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f33b792b790"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f33b79c18a0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f33b79acbf0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f33b792ce80"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f33b79bed80"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f33b7ab0d10"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f33b79ac5e0"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f33b7aab2c0"/></to>
    </wire>
    <wire loc="82:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f33b792c270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f33b66b1e40"/></to>
    </wire>
    <wire loc="84:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f33b66af9d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f33b792b790"/></to>
    </wire>
    <wire loc="85:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f33b66af2d0"/></from>
      <to><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f33b792a020"/></to>
    </wire>
    <wire loc="87:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f33b66ae2b0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f33b66bc630"/></to>
    </wire>
    <wire loc="155:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f33b66ac480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f33b8b5c940"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7f33b7910bb0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f33b7aa9700"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f33b790b700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f33b851bbc0"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f33b7909e40"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f33b8516bc0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f33b77f4c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f33b77ffda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f33b77f8b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f33b77f2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f33b77ebe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f33b77f2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f33b77de2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f33b77e02f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f33b77fd120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f33b77e6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f33b77e12f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f33b77f6c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f33b77f5c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f33b77ec670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f33b77eee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f33b77f1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f33b7800760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f33b7c45350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f33b77fbaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f33b77fa120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f33b77e5a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f33b77fa870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f33b77e1ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f33b77fddc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f33b77e7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f33b77f5480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f33b77f6480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f33b77ff750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f33b77e8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f33b77ea670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f33b77e7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f33b77dfad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f33b77e0ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f33b77ed670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f33b77eae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f33b77e3ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f33b77ef670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f33b77dead0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f33b7c442c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f33b77ff100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f33b77f8370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f33b77f4480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f33b77ece50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f33b77f1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f33b77eb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f33b77f3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f33b77fe450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f33b77f3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f33b77f9020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f33b77f9cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f33b77e32f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f33b77e4ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f33b77fb450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f33b77e42f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f33b77df2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f33b77ede50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f33b77e8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f33b77feaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f33b77fd770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f33b77efe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f33b77f9670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f33b77ee670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f33b77e6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f33b77dd7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f33b7c442c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f33b77c8c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f33b77d2da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f33b77cbb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f33b77c5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f33b77bee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f33b77c5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f33b77b12f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f33b77b42f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f33b77d0120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f33b77ba670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f33b77b52f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f33b77cac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f33b77c9c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f33b77bf670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f33b77c2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f33b77c4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f33b77d4760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f33b7c45350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f33b77cfaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f33b77ce120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f33b77b8a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f33b77ce870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f33b77b5ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f33b77d0dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f33b77bbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f33b77c9480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f33b77ca480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f33b77d2750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f33b77bce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f33b77bd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f33b77bb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f33b77b3ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f33b77b4ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f33b77c1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f33b77bde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f33b77b6ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f33b77c3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f33b77b1ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f33b7c442c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f33b77d2100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f33b77cb370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f33b77c8480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f33b77bfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f33b77c4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f33b77be670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f33b77c6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f33b77d1450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f33b77c6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f33b77cc020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f33b77cccc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f33b77b62f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f33b77b7ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f33b77cf450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f33b77b72f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f33b77b32f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f33b77c1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f33b77bc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f33b77d1aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f33b77d0770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f33b77c3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f33b77cc670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f33b77c2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f33b77bae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f33b77b07a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f33b7c442c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f33b778a880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f33b777f020"/></to>
    </wire>
    <wire loc="20:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f33b777f020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f33b7779140"/></to>
    </wire>
    <wire loc="16:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f33b7775bd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f33b777ec50"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f33b777ec50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f33b7761150"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7f33b7778530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f33b770b1b0"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f33b7765540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7f33b7766590"/></to>
    </wire>
    <wire loc="11:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7f33b7766590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f33b77149e0"/></to>
    </wire>
    <wire loc="18:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f33b775b950"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f33b7763ca0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f33b7763ca0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f33b7739a90"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f33b77619f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7f33b7765540"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f33b7728020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f33b7722530"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f33b7722530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f33b771ee50"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f33b771a020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f33b8051a30"/></to>
    </wire>
    <wire loc="9:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f33b7713c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f33b857ad50"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f33b76f6990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f33b76eb900"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f33b76f8150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f33b76ea0f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f33b76eaae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f33b808f690"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f33b76de500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f33b7e3f3e0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f33b76d7820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f33b7e3e690"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f33b76d6b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f33b7e39370"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f33b76df880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f33b7df7700"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f33b76d4020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f33b7639c30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f33b7639c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f33b7c464d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f33b76d4d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f33b76388f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f33b76388f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f33b7c45350"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f33b76d16d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f33b76362f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f33b76362f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f33b76d1de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f33b7635cc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f33b7635cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f33b76d0530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f33b7634370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f33b7634370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f33b76d0c60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f33b7633d00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f33b7633d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f33b76d2e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f33b762dc60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f33b762dc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f33b76d3780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f33b76147a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f33b76147a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f33b7c442c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f33b76d2550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f33b76192f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f33b76192f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f33b76cf3e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f33b762e480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f33b762e480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f33b76cd5e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f33b762ae50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f33b762ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f33b76cc020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f33b7629670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f33b7629670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f33b76cfe80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f33b76307b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f33b76307b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f33b76cb9c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f33b7617ad0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f33b7617ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f33b76cc890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f33b76182f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f33b76182f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f33b76cb130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f33b7618ad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f33b7618ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f33b76c6d40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f33b7608df0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f33b7608df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f33b7600550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f33b76e6d00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f33b7581670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f33b76e5bb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f33b757d0c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f33b76e4950"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f33b757c550"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f33b76d9be0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f33b7574480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f33b7574480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f33b75668b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f33b76c96c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f33b85dacc0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f33b762cc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f33b7635020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f33b762fc70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f33b7622e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f33b7629e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f33b76152f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f33b761e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f33b762ec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f33b7623670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f33b7626e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f33b7628670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f33b7632370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f33b761ca70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f33b7632ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f33b7619ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f33b7633060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f33b761fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f33b762d480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f33b7636940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f33b7620e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f33b7621670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f33b761f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f33b7625670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f33b7621e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f33b761aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f33b7627670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f33b7615ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f33b7c442c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f33b762f490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f33b762c480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f33b7623e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f33b7628e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f33b7622670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f33b762a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f33b7635670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f33b7630160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f33b7630e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f33b761a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f33b761bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f33b76336b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f33b761b2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f33b76172f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f33b7625e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f33b7620670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f33b76349c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f33b7627e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f33b7626670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f33b761ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f33b7604020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f33b75ff7c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f33b75ea150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f33b85dacc0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f33b75fe020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f33b7e3e690"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f33b75fd380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f33b7e3d9c0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f33b75fc6b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f33b7e3ccf0"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f33b75fba50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f33b7df9060"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f33b75f96e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f33b73eb250"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f33b73eb250"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f33b7c464d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f33b75f8530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f33b73c8120"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f33b73c8120"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f33b7c442c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f33b75f7ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f33b73e7d00"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f33b73e7d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f33b75f73a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f33b73e69c0"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f33b73e69c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f33b75f6330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f33b7581670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f33b75f51e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f33b757d0c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f33b75f3d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f33b757c550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f33b75f5b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f33b814cdc0"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f33b75ee3e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f33b73dd500"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f33b73dd500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f33b75eecb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f33b73ddce0"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f33b73ddce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f33b75efb10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f33b73e47b0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f33b73e47b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f33b75ec6d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f33b73c9900"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f33b73c9900"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f33b75ed590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f33b73cc900"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f33b73cc900"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f33b75ede00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f33b73cb120"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f33b73cb120"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f33b75eb020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f33b73cc120"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f33b73cc120"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f33b75eb8b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f33b73ea990"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f33b73ea990"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f33b75de9d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f33b8b5c940"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f33b7510a60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f33b7ec48c0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f33b7561820"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f33b7511790"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f33b7563b80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f33b74fa610"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f33b74fa610"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f33b740fa20"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f33b74ff1d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f33b741d8e0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f33b741d8e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f33b6513bc0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f33b75003a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33b74ca020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f33b74ca020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33b65819d0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f33b7416020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f33b749e2f0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f33b7499850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f33b74ca870"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f33b74ca870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f33b657b5f0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f33b740ed20"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f33b74eab70"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f33b74eab70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f33b74e1610"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f33b65819d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33b6565360"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f33b6575d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f33b6580260"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f33b6580260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f33b6565bf0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f33b65779b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f33b74eab70"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f33b6561dd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f33b656a020"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f33b656a020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f33b805fcd0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f33b655f440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f33b6569760"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f33b6569760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f33b8056a40"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f33b655e760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f33b6568a80"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f33b6568a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f33b80533f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f33b74dfb90"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f33b7ec28e0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f33b74959c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f33b8b5c940"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f33b650c180"/></from>
      <to><interface-ref name="TimerFrom" scoped="" ref="0x7f33b7416020"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimeSkew" scoped="" ref="0x7f33b65058b0"/></from>
      <to><interface-ref name="TimeSkew" scoped="" ref="0x7f33b7411450"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7f33b6506410"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7f33b83a2020"/></to>
    </wire>
    <wire loc="153:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f33b6504020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f33b8b5c940"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f33b7405ce0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f33b73fc610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f33b73fc610"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f33b74ff1d0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f33b73de2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f33b73e9670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f33b73e22f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f33b73d5500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f33b73dc500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f33b73e89c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f33b73d1ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f33b73cd900"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f33b73e12f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f33b73e02f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f33b73d7ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f33b73d9500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f33b73dcce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f33b73ea020"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f33b7c45350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f33b73e6370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f33b73cf120"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f33b73e4160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f33b73e76b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f33b73d1500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f33b73e1ad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f33b73e2ad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f33b73e9020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f33b73d3500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f33b73d5ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f33b73d3ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f33b73c9120"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f33b73d9ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f33b73d4500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f33b73cd120"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f33b73dbce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f33b73e3ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f33b73e0ad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f33b73d6500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f33b73db500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f33b73d6ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f33b73decd0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f33b73e9cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f33b73e3490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f33b73ce900"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f33b73ce120"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f33b73cf900"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f33b73cb900"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f33b73d7500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f33b73d4ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f33b73e8370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f33b73e7060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f33b73da500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f33b73e4e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f33b73dace0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f33b73d0500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f33b73c8db0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f33b7c442c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f33b7399920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f33b7396940"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f33b73a0990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33b7396080"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f33b7379e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f33b737d020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f33b7378ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f33b737a690"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f33b737a690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f33b7bc61d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f33b73778f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f33b739ba20"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f33b7376170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f33b757d0c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f33b735d200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f33b7358570"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f33b73573f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f33b735d950"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f33b7357a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f33b757d0c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f33b731fd70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f33b73296b0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f33b731eb10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f33b7329020"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f33b731d2f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f33b7581670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f33b731c170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f33b757d0c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f33b731cb70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f33b72cf410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f33b72f0db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f33b8b5c940"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f33b72c2800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f33b72be580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f33b72be580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f33b7bc61d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f33b72a91c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f33b81d9020"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f33b718d8d0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f33b71812f0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f33b71f7600"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f33b7198110"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f33b71f6800"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f33b7198e70"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f33b71f21a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f33b7195720"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f33b71f4ab0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f33b7197490"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f33b718d280"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f33b7184c70"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f33b7189dc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f33b71f2b20"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f33b7193120"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f33b718b480"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f33b7193d70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f33b718c940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f33b71894a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7f33b6e6fa30"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f33b718b480"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f33b7050830"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f33b718c940"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f33b7050110"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7f33b704e760"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f33b71894a0"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f33b717e8e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f33b7189dc0"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f33b704c590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f33b7189dc0"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f33b7044cc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f33b7189dc0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f33b704d0e0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f33b71775c0"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7f33b704d9d0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7f33b717a130"/></to>
    </wire>
    <wire loc="77:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7f33b71718e0"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7f33b7048b60"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f33b716f060"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f33b701e080"/></to>
    </wire>
    <wire loc="17:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f33b701e080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f33b6e81080"/></to>
    </wire>
    <wire loc="80:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f33b703ad20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f33b701e890"/></to>
    </wire>
    <wire loc="13:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f33b701e890"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f33b6e89440"/></to>
    </wire>
    <wire loc="332:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7f33b711ae40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f33b8b5c940"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7f33b7153d10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f33b8b5c940"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7f33b711c400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f33b8b5c940"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f33b71150c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f33b8b5c940"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7f33b704bc50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f33b8b5c940"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7f33b704a480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f33b8b5c940"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f33b701c020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f33b6e87440"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f33b6e87440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f33b7007020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f33b6e89440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f33b700a860"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f33b6e86020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f33b6e818e0"/></to>
    </wire>
    <wire loc="19:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f33b6e80020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f33b6e8a020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f33b6e8a020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f33b700c7a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f33b6e8ac70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f33b640c020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f33b640c020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f33b6eca510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f33b7005450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f33b6e86020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f33b6406440"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f33b700ba30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f33b70061d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f33b640d340"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f33b640d340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f33b6ecb280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f33b70031d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f33b6407c10"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f33b6407c10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f33b6ecc510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f33b700ba30"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f33b6f98dc0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f33b7007020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f33b6f96890"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f33b700a860"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f33b6f976d0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f33b700c7a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f33b6f98020"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f33b6f943e0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f33b7005450"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f33b6f955b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f33b70061d0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f33b6f8f5b0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f33b70031d0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f33b6f94a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f33b6f7fd30"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f33b6f7fd30"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f33b6f783c0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f33b6f8e020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f33b6ee97c0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f33b6ee97c0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f33b7ec28e0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f33b6f8b120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f33b85dacc0"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f33b6f7c860"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f33b6f73020"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f33b6f7f500"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f33b6f7b9c0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f33b6f738f0"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7f33b850cbc0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f33b6f6f020"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7f33b85093f0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f33b6f6d890"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7f33b8507bc0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f33b6f6a020"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7f33b8502bc0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f33b6f68890"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7f33b85043f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f33b640b020"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f33b6f7fd30"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f33b640c7c0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f33b6ecad20"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f33b6ecad20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f33b6ebf060"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f33b6ec9af0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f33b6406440"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f33b6eca510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f33b6ec1bd0"/></to>
    </wire>
    <wire loc="81:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f33b6ec1bd0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f33b63943a0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f33b6ecc510"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f33b6ec6230"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f33b6ecb280"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f33b6ec2e30"/></to>
    </wire>
    <wire loc="80:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f33b6ec2e30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f33b6395540"/></to>
    </wire>
    <wire loc="83:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f33b6ebf060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f33b63938b0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f33b6ec52f0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f33b6f7c860"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f33b6ebf950"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f33b6ec9af0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f33b6ec4120"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f33b6ebf060"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f33b6eb9d50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f33b6ec0400"/></to>
    </wire>
    <wire loc="82:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f33b6ec0400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f33b6394b20"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f33b6eb9020"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f33b6f7f500"/></to>
    </wire>
    <wire loc="84:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f33b63927e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f33b6ebf950"/></to>
    </wire>
    <wire loc="85:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f33b63920e0"/></from>
      <to><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f33b6ebd0f0"/></to>
    </wire>
    <wire loc="87:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f33b6390020"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f33b6397330"/></to>
    </wire>
    <wire loc="155:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f33b638e160"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f33b8b5c940"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f33b635a470"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f33b6eb9020"/></to>
    </wire>
    <wire loc="82:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f33b635abd0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f33b6eb9780"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f33b6358270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f33b6eb9d50"/></to>
    </wire>
    <wire loc="85:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f33b6358e80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f33b6ea3990"/></to>
    </wire>
    <wire loc="64:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f33b6dbf020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f33b6342920"/></to>
    </wire>
    <wire loc="63:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f33b6342920"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f33b6334db0"/></to>
    </wire>
    <wire loc="65:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f33b6dbfc30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f33b6340590"/></to>
    </wire>
    <wire loc="64:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f33b6340590"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f33b8251020"/></to>
    </wire>
    <wire loc="66:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f33b6dbe8b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f33b633f270"/></to>
    </wire>
    <wire loc="65:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f33b633f270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f33b8250020"/></to>
    </wire>
    <wire loc="67:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f33b6dbc020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f33b633e8f0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f33b633e8f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f33b8237350"/></to>
    </wire>
    <wire loc="60:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f33b6333a70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f33b6e26930"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f33b6332720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f33b8250020"/></to>
    </wire>
    <wire loc="53:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f33b6e26930"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f33b6dd6df0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f33b6dd4400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f33b82557f0"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f33b6dd2060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f33b8250020"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f33b6dd1720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f33b8251020"/></to>
    </wire>
    <wire loc="184:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f33b6dd0480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f33b8b5c940"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f33b6dd0c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f33b8b5c940"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f33b6db2020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f33b8251020"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f33b6db8910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f33b8254b20"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f33b866e550"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f33b6db2c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f33b8250020"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="TestSerialC" loc="57:TestSerialC.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="37:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; Digital pin i/o abstraction, TI MSP430 processors.</short>
        <long>&#10; Digital pin i/o abstraction, TI MSP430 processors.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @author Joao Goncalves &#60;joao.m.goncalves@ist.utl.pt>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="79(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="79(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="79(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="79(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="79(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="79(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="79(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="79(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="79(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="79(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="79(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="79(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="79(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="79(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="79(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="79(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="79(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="79(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="79(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="79(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="79(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="79(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="79(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="79(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="79(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="79(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="79(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="79(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="79(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="79(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="79(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="79(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="79(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="79(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="79(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="79(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="79(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="79(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="79(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="79(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="79(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="79(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="79(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="79(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="79(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="79(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="79(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="79(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformC" loc="41:../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="35:../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="200:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/x1xxx/McuSleepC.nc" safe="">
      <documentation loc="36:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RealMainP" loc="65:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="45:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="33:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="53:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC" loc="48:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <documentation loc="36:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="41(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="41(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="41(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="41(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="41(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="41(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="41(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="41(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="41(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="41(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="41(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="41(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="47(HplCC2420InterruptsC.CaptureSFDC):../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; The default for GpioCapture is CCIxA.  Other channels are available&#10; (like B) but they need to be hardcoded in another module.  See&#10; tos/platforms/exp5438_2520/hardware/cc2520/P81SfdCaptureC.nc&#10;&#10; Lower levels have been modified to support being able to change&#10; CCIS in the control registers.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="51:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc" safe="">
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="50(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="50(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
        <short>&#10; An HPL abstraction of USART0 on the MSP430.</short>
        <long>&#10; An HPL abstraction of USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="54:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="56(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="96(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1df0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f33b86c0200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1df0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f33b86c0200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c4e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f33b86c1200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c4e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f33b86c1200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c4e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f33b86c1200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="55(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c4e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f33b86c1200"/></typename>
          </type-tag>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC.VT" loc="61(HilTimerMilliC.VirtualizeTimerC.VT):../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <documentation loc="33:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerImplP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f33b7490530"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c4e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f33b86c1200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):../../../tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:../../../tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:../../../tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:../../../tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):../../../tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:../../../tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
        <short>&#10; An implementation of the UART on USART1 for the MSP430.</short>
        <long>&#10; An implementation of the UART on USART1 for the MSP430.&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire81@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="44(Msp430Uart1P.UartP):../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="36:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
        <short>&#10; An HPL abstraction of USART1 on the MSP430.</short>
        <long>&#10; An HPL abstraction of USART1 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="59:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="56(Msp430UsartShare1P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="96(Msp430UsartShare1P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):../../../tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:../../../tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestSerialAppC.TimerIniTDMA" loc="44(TestSerialAppC.TimerIniTDMA):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestSerialAppC.TimerApagaLeds" loc="44(TestSerialAppC.TimerApagaLeds):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestSerialAppC.TimerFinTDMA" loc="44(TestSerialAppC.TimerFinTDMA):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestSerialAppC.AMSenderC" loc="47(TestSerialAppC.AMSenderC):../../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestSerialAppC.AMSenderC.SenderC" loc="47(TestSerialAppC.AMSenderC.SenderC):../../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f33b866e550"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestSerialAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(TestSerialAppC.AMSenderC.SenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f33b866e550"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../../tos/system/AMQueueP.nc">
      <documentation loc="33:../../../tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestSerialAppC.AMReceiverC" loc="43(TestSerialAppC.AMReceiverC):../../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f33b84dabf0" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f33b84d7020" loc="81:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f33b84d73d0" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f33b84d7780" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f33b84d7af0" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f33b8022930" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f33b8022cd0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f33b80210d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f33b8021450" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f33b80217d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f33b8021b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f33b8020020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f33b80203b0" loc="49:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f33b8020780" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f33b7fe4c80" loc="42:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f33b7fe10d0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f33b7efecb0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f33b7efecb0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f33b7ebca40" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f33b7ebca40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f33b7ea6570" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f33b7ea6570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f33b7ea6d40" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f33b7ea6d40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f33b7ea5160" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f33b7ea5160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f33b7ea5940" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f33b7ea5940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f33b7ea5d10" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f33b7ea3540" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f33b7ea3540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f33b7e83620" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f33b7e83620"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f33b7e83df0" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f33b7e83df0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f33b7e82220" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f33b7e82220"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f33b7e82a00" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f33b7e82a00"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f33b7e82dd0" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="47:../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; The default for GpioCapture is CCIxA.  Other channels are available&#10; (like B) but they need to be hardcoded in another module.  See&#10; tos/platforms/exp5438_2520/hardware/cc2520/P81SfdCaptureC.nc&#10;&#10; Lower levels have been modified to support being able to change&#10; CCIS in the control registers.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="50:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="56:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f33b79a75e0" loc="56:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f33b799c9b0" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="96:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f33b7980cc0" loc="96:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f33b7737020" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f33b7737020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f33b77377b0" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f33b77377b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f33b7512d00" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f33b7512d00"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f33b74c6cc0" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f33b74c6cc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="55:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f33b7490530" loc="55:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f33b7490530"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f33b7490880" loc="56:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="VirtualizeTimerImplP" loc="61:../../../tos/lib/timer/VirtualizeTimerImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f33b7482980" loc="61:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f33b7482980"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f33b7482cd0" loc="62:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:../../../tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:../../../tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
        <short>&#10; An implementation of the UART on USART1 for the MSP430.</short>
        <long>&#10; An implementation of the UART on USART1 for the MSP430.&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire81@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="44:../../../tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="36:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:../../../tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../../../tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../../tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f33b6e4ac50" loc="47:../../../tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f33b866e550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../../tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f33b6e43820" loc="47:../../../tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f33b866e550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f33b6e3a2e0" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f33b866e550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f33b6e22c80" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:../../../tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f33b6db7330" loc="43:../../../tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f33b866e550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Boot" ref="0x7f33b86ac640" loc="61:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f33b86ac640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f33b86ac9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f33b864f950" loc="63:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f33b864f950"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b864fcd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b864fe60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b86ad020"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b86ad1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b86ad340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f33b862c180" loc="67:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f33b862c180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b862c500"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f33b862c690"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b862c820"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b862c9b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f33b862cb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f33b8658a80" loc="62:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f33b8658a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33b8658e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f33b86ae0d0" loc="60:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f33b86ae0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f33b86ae450"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f33b86ae5e0"/>
        <function-ref name="led1On" scoped="" ref="0x7f33b86ae770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f33b86ae900"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f33b86aea90"/>
        <function-ref name="get" scoped="" ref="0x7f33b86aec20"/>
        <function-ref name="led1Off" scoped="" ref="0x7f33b86aedb0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f33b86bd4d0"/>
        <function-ref name="set" scoped="" ref="0x7f33b86bd020"/>
        <function-ref name="led0On" scoped="" ref="0x7f33b86bd1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f33b86bd340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Control" ref="0x7f33b86b9960" loc="59:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f33b86b9960"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f33b86b9ce0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f33b86b9e70"/>
        <function-ref name="start" scoped="" ref="0x7f33b86bf030"/>
        <function-ref name="stop" scoped="" ref="0x7f33b86bf1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerIniTDMA" ref="0x7f33b865a060" loc="64:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerIniTDMA" scoped="" ref="0x7f33b865a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c4e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f33b86c1200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f33b8643630"/>
        <function-ref name="fired" scoped="" ref="0x7f33b8650ac0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f33b8645920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f33b86454a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f33b8642020"/>
        <function-ref name="gett0" scoped="" ref="0x7f33b8643ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f33b8645020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f33b865ac50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f33b8643020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f33b8650170"/>
        <function-ref name="stop" scoped="" ref="0x7f33b8650640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerApagaLeds" ref="0x7f33b8642680" loc="65:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerApagaLeds" scoped="" ref="0x7f33b8642680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c4e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f33b86c1200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f33b863ec40"/>
        <function-ref name="fired" scoped="" ref="0x7f33b86401e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f33b863e020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f33b8640ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f33b863d590"/>
        <function-ref name="gett0" scoped="" ref="0x7f33b863d110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f33b8640660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f33b8641390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f33b863e630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f33b8641860"/>
        <function-ref name="stop" scoped="" ref="0x7f33b8641d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFinTDMA" ref="0x7f33b863dbe0" loc="66:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFinTDMA" scoped="" ref="0x7f33b863dbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c4e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f33b86c1200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f33b8638110"/>
        <function-ref name="fired" scoped="" ref="0x7f33b863b6a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f33b86394a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f33b8639020"/>
        <function-ref name="getdt" scoped="" ref="0x7f33b8638a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f33b8638590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f33b863bb20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f33b863c860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f33b8639ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f33b863cd30"/>
        <function-ref name="stop" scoped="" ref="0x7f33b863b220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f33b85dacc0" loc="46:../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f33b85dacc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f33b85d70a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f33b85d7230"/>
        <function-ref name="led1On" scoped="" ref="0x7f33b85d73c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f33b85d7550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f33b85d76e0"/>
        <function-ref name="get" scoped="" ref="0x7f33b85d7870"/>
        <function-ref name="led1Off" scoped="" ref="0x7f33b85d7a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f33b85d61b0"/>
        <function-ref name="set" scoped="" ref="0x7f33b85d7b90"/>
        <function-ref name="led0On" scoped="" ref="0x7f33b85d7d20"/>
        <function-ref name="led2On" scoped="" ref="0x7f33b85d6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f33b85caa90" loc="50:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f33b85caa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b85cae10"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b85d0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b85d01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b85d0340"/>
        <function-ref name="get" scoped="" ref="0x7f33b85d04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b85d0660"/>
        <function-ref name="set" scoped="" ref="0x7f33b85d07f0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b85d0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33b85d3e60" loc="46:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f33b85d3e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b85d2210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f33b85d0ca0" loc="51:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f33b85d0ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b85cf0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b85cf230"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b85cf3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b85cf550"/>
        <function-ref name="get" scoped="" ref="0x7f33b85cf6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b85cf870"/>
        <function-ref name="set" scoped="" ref="0x7f33b85cfa00"/>
        <function-ref name="clr" scoped="" ref="0x7f33b85cfb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f33b85d2490" loc="47:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f33b85d2490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f33b85d2810"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f33b85d29a0"/>
        <function-ref name="led1On" scoped="" ref="0x7f33b85d2b30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f33b85d2cc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f33b85d2e50"/>
        <function-ref name="get" scoped="" ref="0x7f33b85d1020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f33b85d11b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f33b85d17f0"/>
        <function-ref name="set" scoped="" ref="0x7f33b85d1340"/>
        <function-ref name="led0On" scoped="" ref="0x7f33b85d14d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f33b85d1660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f33b85c9020" loc="52:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f33b85c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b85c93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b85c9530"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b85c96c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b85c9850"/>
        <function-ref name="get" scoped="" ref="0x7f33b85c99e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b85c9b70"/>
        <function-ref name="set" scoped="" ref="0x7f33b85c9d00"/>
        <function-ref name="clr" scoped="" ref="0x7f33b85c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f33b85d4590" loc="41:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f33b85d4590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b85d4910"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b85d4aa0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b85d4c30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b85d4dc0"/>
        <function-ref name="get" scoped="" ref="0x7f33b85ac020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b85ac1b0"/>
        <function-ref name="set" scoped="" ref="0x7f33b85ac340"/>
        <function-ref name="clr" scoped="" ref="0x7f33b85ac4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f33b85ac830" loc="42:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f33b85ac830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b85acbb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b85acd40"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b85ab020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b85ab1b0"/>
        <function-ref name="get" scoped="" ref="0x7f33b85ab340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b85ab4d0"/>
        <function-ref name="set" scoped="" ref="0x7f33b85ab660"/>
        <function-ref name="clr" scoped="" ref="0x7f33b85ab7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f33b85aadd0" loc="44:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f33b85aadd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b85a9180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f33b85abb50" loc="43:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f33b85abb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b85aa020"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b85aa1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b85aa340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b85aa4d0"/>
        <function-ref name="get" scoped="" ref="0x7f33b85aa660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b85aa7f0"/>
        <function-ref name="set" scoped="" ref="0x7f33b85aa980"/>
        <function-ref name="clr" scoped="" ref="0x7f33b85aab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f33b858ed50" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f33b858ed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b858d100"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b858d290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b858d420"/>
        <function-ref name="clr" scoped="" ref="0x7f33b858b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b858d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b858d8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b858da60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b858dbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b858dd80"/>
        <function-ref name="get" scoped="" ref="0x7f33b858c020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b858c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b858c340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b858c4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b858c760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b858c8f0"/>
        <function-ref name="set" scoped="" ref="0x7f33b858ca80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b858cc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b858d5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b858cda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b858b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f33b8575e50" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f33b8575e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8574210"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b85743a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8574530"/>
        <function-ref name="clr" scoped="" ref="0x7f33b8572340"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8574850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b85749e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8574b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8574d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8573020"/>
        <function-ref name="get" scoped="" ref="0x7f33b85731b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8573340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b85734d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8573660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b85738f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8573a80"/>
        <function-ref name="set" scoped="" ref="0x7f33b8573c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8573da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b85746c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b8572020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b85721b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f33b84ea3d0" loc="205:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f33b84ea3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b84ea750"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b84ea8e0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b84eaa70"/>
        <function-ref name="clr" scoped="" ref="0x7f33b84e87f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b84ead90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b84e9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b84e91b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b84e9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b84e94d0"/>
        <function-ref name="get" scoped="" ref="0x7f33b84e9660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b84e97f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b84e9980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b84e9b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b84e9da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b84e8020"/>
        <function-ref name="set" scoped="" ref="0x7f33b84e81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b84e8340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b84eac00"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b84e84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b84e8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f33b84ef3e0" loc="201:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f33b84ef3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b84ef760"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b84ef8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b84efa80"/>
        <function-ref name="clr" scoped="" ref="0x7f33b84ed7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b84efda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b84ee020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b84ee1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b84ee340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b84ee4d0"/>
        <function-ref name="get" scoped="" ref="0x7f33b84ee660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b84ee7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b84ee980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b84eeb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b84eeda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b84ed020"/>
        <function-ref name="set" scoped="" ref="0x7f33b84ed1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b84ed340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b84efc10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b84ed4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b84ed660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f33b85183f0" loc="183:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f33b85183f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8518770"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8518900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8518a90"/>
        <function-ref name="clr" scoped="" ref="0x7f33b85167f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8518db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b8517020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b85171b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8517340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b85174d0"/>
        <function-ref name="get" scoped="" ref="0x7f33b8517660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b85177f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8517980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8517b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b8517da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8516020"/>
        <function-ref name="set" scoped="" ref="0x7f33b85161b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8516340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b8518c20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b85164d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8516660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f33b8570e50" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f33b8570e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b856f210"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b856f3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b856f530"/>
        <function-ref name="clr" scoped="" ref="0x7f33b856d340"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b856f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b856f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b856fb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b856fd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b856e020"/>
        <function-ref name="get" scoped="" ref="0x7f33b856e1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b856e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b856e4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b856e660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b856e8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b856ea80"/>
        <function-ref name="set" scoped="" ref="0x7f33b856ec10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b856eda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b856f6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b856d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b856d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f33b8555020" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f33b8555020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b85553a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8555530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b85556c0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b85534d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b85559e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b8555b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8555d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8554020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b85541b0"/>
        <function-ref name="get" scoped="" ref="0x7f33b8554340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b85544d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8554660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b85547f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b8554a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8554c10"/>
        <function-ref name="set" scoped="" ref="0x7f33b8554da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8553020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b8555850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b85531b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8553340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f33b853c020" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f33b853c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b853c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b853c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b853c6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b853a4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b853c9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b853cb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b853cd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b853b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b853b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f33b853b340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b853b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b853b660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b853b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b853ba80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b853bc10"/>
        <function-ref name="set" scoped="" ref="0x7f33b853bda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b853a020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b853c850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b853a1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b853a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f33b8527020" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f33b8527020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b85273a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8527530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b85276c0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b85254d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b85279e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b8527b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8527d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8526020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b85261b0"/>
        <function-ref name="get" scoped="" ref="0x7f33b8526340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b85264d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8526660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b85267f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b8526a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8526c10"/>
        <function-ref name="set" scoped="" ref="0x7f33b8526da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8525020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b8527850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b85251b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8525340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f33b85133f0" loc="185:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f33b85133f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8513770"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8513900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8513a90"/>
        <function-ref name="clr" scoped="" ref="0x7f33b85117f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8513db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b8512020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b85121b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8512340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b85124d0"/>
        <function-ref name="get" scoped="" ref="0x7f33b8512660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b85127f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8512980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8512b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b8512da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8511020"/>
        <function-ref name="set" scoped="" ref="0x7f33b85111b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8511340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b8513c20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b85114d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8511660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f33b84ff3e0" loc="195:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f33b84ff3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b84ff760"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b84ff8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b84ffa80"/>
        <function-ref name="clr" scoped="" ref="0x7f33b84fd7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b84ffda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b84fe020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b84fe1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b84fe340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b84fe4d0"/>
        <function-ref name="get" scoped="" ref="0x7f33b84fe660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b84fe7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b84fe980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b84feb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b84feda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b84fd020"/>
        <function-ref name="set" scoped="" ref="0x7f33b84fd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b84fd340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b84ffc10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b84fd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b84fd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f33b84e03f0" loc="211:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f33b84e03f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b84e0770"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b84e0900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b84e0a90"/>
        <function-ref name="clr" scoped="" ref="0x7f33b84de7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b84e0db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b84df020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b84df1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b84df340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b84df4d0"/>
        <function-ref name="get" scoped="" ref="0x7f33b84df660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b84df7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b84df980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b84dfb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b84dfda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b84de020"/>
        <function-ref name="set" scoped="" ref="0x7f33b84de1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b84de340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b84e0c20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b84de4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b84de660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f33b8586580" loc="57:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f33b8586580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8586900"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8586a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8586c20"/>
        <function-ref name="clr" scoped="" ref="0x7f33b8584980"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8585020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b85851b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8585340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b85854d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8585660"/>
        <function-ref name="get" scoped="" ref="0x7f33b85857f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8585980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8585b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8585ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b8584020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b85841b0"/>
        <function-ref name="set" scoped="" ref="0x7f33b8584340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b85844d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b8586db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b8584660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b85847f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f33b8511bc0" loc="186:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f33b8511bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8510020"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b85101b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8510340"/>
        <function-ref name="clr" scoped="" ref="0x7f33b850e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8510660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b85107f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8510980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8510b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8510ca0"/>
        <function-ref name="get" scoped="" ref="0x7f33b8510e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b850f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b850f1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b850f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b850f5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b850f760"/>
        <function-ref name="set" scoped="" ref="0x7f33b850f8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b850fa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b85104d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b850fc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b850fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f33b8581580" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f33b8581580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8581900"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8581a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8581c20"/>
        <function-ref name="clr" scoped="" ref="0x7f33b857f980"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8580020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b85801b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8580340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b85804d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8580660"/>
        <function-ref name="get" scoped="" ref="0x7f33b85807f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8580980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8580b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8580ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b857f020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b857f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f33b857f340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b857f4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b8581db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b857f660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b857f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f33b8568710" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f33b8568710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8568a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8568c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8568db0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b8565a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b85661b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b8566340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b85664d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8566660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b85667f0"/>
        <function-ref name="get" scoped="" ref="0x7f33b8566980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8566b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8566ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8566e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b8565120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b85652b0"/>
        <function-ref name="set" scoped="" ref="0x7f33b8565440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b85655d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b8566020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b8565760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b85658f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f33b854e8a0" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f33b854e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b854ec20"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b854edb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b854d020"/>
        <function-ref name="clr" scoped="" ref="0x7f33b854cc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b854d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b854d4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b854d660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b854d7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b854d980"/>
        <function-ref name="get" scoped="" ref="0x7f33b854db10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b854dca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b854de30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b854c020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b854c2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b854c440"/>
        <function-ref name="set" scoped="" ref="0x7f33b854c5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b854c760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b854d1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b854c8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b854ca80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f33b85358a0" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f33b85358a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8535c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8535db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8534020"/>
        <function-ref name="clr" scoped="" ref="0x7f33b8533c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8534340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b85344d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8534660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b85347f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8534980"/>
        <function-ref name="get" scoped="" ref="0x7f33b8534b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8534ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8534e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8533020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b85332b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8533440"/>
        <function-ref name="set" scoped="" ref="0x7f33b85335d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8533760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b85341b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b85338f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8533a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f33b85208a0" loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f33b85208a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8520c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8520db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b851f020"/>
        <function-ref name="clr" scoped="" ref="0x7f33b851ec10"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b851f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b851f4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b851f660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b851f7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b851f980"/>
        <function-ref name="get" scoped="" ref="0x7f33b851fb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b851fca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b851fe30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b851e020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b851e2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b851e440"/>
        <function-ref name="set" scoped="" ref="0x7f33b851e5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b851e760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b851f1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b851e8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b851ea80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f33b8593d50" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f33b8593d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8592100"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8592290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8592420"/>
        <function-ref name="clr" scoped="" ref="0x7f33b85901b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8592740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b85928d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8592a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8592bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8592d80"/>
        <function-ref name="get" scoped="" ref="0x7f33b8591020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b85911b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8591340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b85914d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b8591760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b85918f0"/>
        <function-ref name="set" scoped="" ref="0x7f33b8591a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8591c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b85925b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b8591da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8590020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f33b857ad50" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f33b857ad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8579210"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b85793a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8579530"/>
        <function-ref name="clr" scoped="" ref="0x7f33b8577340"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8579850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b85799e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8579b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8579d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8578020"/>
        <function-ref name="get" scoped="" ref="0x7f33b85781b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8578340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b85784d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8578660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b85788f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8578a80"/>
        <function-ref name="set" scoped="" ref="0x7f33b8578c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8578da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b85796c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b8577020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b85771b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f33b8560e50" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f33b8560e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b855f210"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b855f3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b855f530"/>
        <function-ref name="clr" scoped="" ref="0x7f33b855d340"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b855f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b855f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b855fb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b855fd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b855e020"/>
        <function-ref name="get" scoped="" ref="0x7f33b855e1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b855e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b855e4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b855e660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b855e8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b855ea80"/>
        <function-ref name="set" scoped="" ref="0x7f33b855ec10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b855eda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b855f6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b855d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b855d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f33b851bbc0" loc="182:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f33b851bbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b851a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b851a1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b851a340"/>
        <function-ref name="clr" scoped="" ref="0x7f33b8518020"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b851a660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b851a7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b851a980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b851ab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b851aca0"/>
        <function-ref name="get" scoped="" ref="0x7f33b851ae30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8519020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b85191b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8519340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b85195d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8519760"/>
        <function-ref name="set" scoped="" ref="0x7f33b85198f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8519a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b851a4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b8519c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8519da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f33b84f8bb0" loc="198:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f33b84f8bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b84f7020"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b84f71b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b84f7340"/>
        <function-ref name="clr" scoped="" ref="0x7f33b84f5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b84f7660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b84f77f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b84f7980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b84f7b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b84f7ca0"/>
        <function-ref name="get" scoped="" ref="0x7f33b84f7e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b84f6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b84f61b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b84f6340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b84f65d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b84f6760"/>
        <function-ref name="set" scoped="" ref="0x7f33b84f68f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b84f6a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b84f74d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b84f6c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b84f6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f33b84e3bb0" loc="209:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f33b84e3bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b84e2020"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b84e21b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b84e2340"/>
        <function-ref name="clr" scoped="" ref="0x7f33b84e0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b84e2660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b84e27f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b84e2980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b84e2b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b84e2ca0"/>
        <function-ref name="get" scoped="" ref="0x7f33b84e2e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b84e1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b84e11b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b84e1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b84e15d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b84e1760"/>
        <function-ref name="set" scoped="" ref="0x7f33b84e18f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b84e1a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b84e24d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b84e1c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b84e1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f33b8507bc0" loc="191:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f33b8507bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8506020"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b85061b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8506340"/>
        <function-ref name="clr" scoped="" ref="0x7f33b8504020"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8506660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b85067f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8506980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8506b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8506ca0"/>
        <function-ref name="get" scoped="" ref="0x7f33b8506e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8505020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b85051b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8505340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b85055d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8505760"/>
        <function-ref name="set" scoped="" ref="0x7f33b85058f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8505a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b85064d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b8505c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8505da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f33b855be50" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f33b855be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b855a410"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b855a5a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b855a730"/>
        <function-ref name="clr" scoped="" ref="0x7f33b85584d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b855aa50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b855abe0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b855ad70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8559020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b85591b0"/>
        <function-ref name="get" scoped="" ref="0x7f33b8559340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b85594d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8559660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b85597f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b8559a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8559c10"/>
        <function-ref name="set" scoped="" ref="0x7f33b8559da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8558020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b855a8c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b85581b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8558340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f33b8541020" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f33b8541020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b85413a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8541530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b85416c0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b853f4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b85419e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b8541b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8541d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8540020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b85401b0"/>
        <function-ref name="get" scoped="" ref="0x7f33b8540340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b85404d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8540660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b85407f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b8540a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8540c10"/>
        <function-ref name="set" scoped="" ref="0x7f33b8540da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b853f020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b8541850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b853f1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b853f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f33b852c020" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f33b852c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b852c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b852c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b852c6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b852a4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b852c9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b852cb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b852cd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b852b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b852b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f33b852b340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b852b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b852b660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b852b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b852ba80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b852bc10"/>
        <function-ref name="set" scoped="" ref="0x7f33b852bda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b852a020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b852c850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b852a1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b852a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f33b84f53e0" loc="199:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f33b84f53e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b84f5760"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b84f58f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b84f5a80"/>
        <function-ref name="clr" scoped="" ref="0x7f33b84f37f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b84f5da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b84f4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b84f41b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b84f4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b84f44d0"/>
        <function-ref name="get" scoped="" ref="0x7f33b84f4660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b84f47f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b84f4980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b84f4b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b84f4da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b84f3020"/>
        <function-ref name="set" scoped="" ref="0x7f33b84f31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b84f3340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b84f5c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b84f34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b84f3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f33b850e3e0" loc="188:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f33b850e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b850e760"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b850e8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b850ea80"/>
        <function-ref name="clr" scoped="" ref="0x7f33b850c7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b850eda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b850d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b850d1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b850d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b850d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f33b850d660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b850d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b850d980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b850db10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b850dda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b850c020"/>
        <function-ref name="set" scoped="" ref="0x7f33b850c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b850c340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b850ec10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b850c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b850c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f33b858b580" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f33b858b580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b858b900"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b858ba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b858bc20"/>
        <function-ref name="clr" scoped="" ref="0x7f33b8589980"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b858a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b858a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b858a340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b858a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b858a660"/>
        <function-ref name="get" scoped="" ref="0x7f33b858a7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b858a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b858ab10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b858aca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b8589020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b85891b0"/>
        <function-ref name="set" scoped="" ref="0x7f33b8589340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b85894d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b858bdb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b8589660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b85897f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f33b8572710" loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f33b8572710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8572a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8572c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8572db0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b8570a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b85711b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b8571340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b85714d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8571660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b85717f0"/>
        <function-ref name="get" scoped="" ref="0x7f33b8571980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8571b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8571ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8571e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b8570120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b85702b0"/>
        <function-ref name="set" scoped="" ref="0x7f33b8570440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b85705d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b8571020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b8570760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b85708f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f33b8532020" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f33b8532020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b85323a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8532530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b85326c0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b85304d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b85329e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b8532b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8532d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8531020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b85311b0"/>
        <function-ref name="get" scoped="" ref="0x7f33b8531340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b85314d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8531660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b85317f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b8531a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8531c10"/>
        <function-ref name="set" scoped="" ref="0x7f33b8531da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8530020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b8532850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b85301b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8530340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f33b856d710" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f33b856d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b856da90"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b856dc20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b856ddb0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b856ba80"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b856c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b856c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b856c4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b856c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b856c7f0"/>
        <function-ref name="get" scoped="" ref="0x7f33b856c980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b856cb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b856cca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b856ce30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b856b120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b856b2b0"/>
        <function-ref name="set" scoped="" ref="0x7f33b856b440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b856b5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b856c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b856b760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b856b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f33b85538a0" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f33b85538a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8553c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8553db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8552020"/>
        <function-ref name="clr" scoped="" ref="0x7f33b8551c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8552340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b85524d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8552660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b85527f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8552980"/>
        <function-ref name="get" scoped="" ref="0x7f33b8552b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8552ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8552e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8551020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b85512b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8551440"/>
        <function-ref name="set" scoped="" ref="0x7f33b85515d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8551760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b85521b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b85518f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8551a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f33b853a8a0" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f33b853a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b853ac20"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b853adb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8539020"/>
        <function-ref name="clr" scoped="" ref="0x7f33b8538c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8539340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b85394d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8539660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b85397f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8539980"/>
        <function-ref name="get" scoped="" ref="0x7f33b8539b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8539ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8539e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8538020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b85382b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8538440"/>
        <function-ref name="set" scoped="" ref="0x7f33b85385d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8538760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b85391b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b85388f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8538a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f33b85258a0" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f33b85258a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8525c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8525db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8524020"/>
        <function-ref name="clr" scoped="" ref="0x7f33b8523c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8524340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b85244d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8524660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b85247f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8524980"/>
        <function-ref name="get" scoped="" ref="0x7f33b8524b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8524ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8524e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8523020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b85232b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8523440"/>
        <function-ref name="set" scoped="" ref="0x7f33b85235d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8523760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b85241b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b85238f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8523a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f33b85093f0" loc="190:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f33b85093f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8509770"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8509900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8509a90"/>
        <function-ref name="clr" scoped="" ref="0x7f33b85077f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8509db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b8508020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b85081b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8508340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b85084d0"/>
        <function-ref name="get" scoped="" ref="0x7f33b8508660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b85087f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8508980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8508b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b8508da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8507020"/>
        <function-ref name="set" scoped="" ref="0x7f33b85071b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8507340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b8509c20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b85074d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8507660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f33b8596cb0" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f33b8596cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b85a50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b85a5230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b85a53c0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b85951b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b85a56e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b85a5870"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b85a5a00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b85a5b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b85a5d20"/>
        <function-ref name="get" scoped="" ref="0x7f33b85a4020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b85a41b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b85a4340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b85a44d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b85a4760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b85a48f0"/>
        <function-ref name="set" scoped="" ref="0x7f33b85a4a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b85a4c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b85a5550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b85a4da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8595020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f33b857fd50" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f33b857fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b857e100"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b857e290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b857e420"/>
        <function-ref name="clr" scoped="" ref="0x7f33b857c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b857e740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b857e8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b857ea60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b857ebf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b857ed80"/>
        <function-ref name="get" scoped="" ref="0x7f33b857d020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b857d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b857d340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b857d4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b857d760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b857d8f0"/>
        <function-ref name="set" scoped="" ref="0x7f33b857da80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b857dc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b857e5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b857dda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b857c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f33b8565e50" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f33b8565e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8564210"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b85643a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8564530"/>
        <function-ref name="clr" scoped="" ref="0x7f33b8562340"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8564850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b85649e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8564b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8564d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8563020"/>
        <function-ref name="get" scoped="" ref="0x7f33b85631b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8563340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b85634d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8563660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b85638f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8563a80"/>
        <function-ref name="set" scoped="" ref="0x7f33b8563c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8563da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b85646c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b8562020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b85621b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f33b854b020" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f33b854b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b854b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b854b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b854b6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b85494d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b854b9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b854bb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b854bd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b854a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b854a1b0"/>
        <function-ref name="get" scoped="" ref="0x7f33b854a340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b854a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b854a660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b854a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b854aa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b854ac10"/>
        <function-ref name="set" scoped="" ref="0x7f33b854ada0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8549020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b854b850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b85491b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8549340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f33b85043f0" loc="192:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f33b85043f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8504770"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8504900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8504a90"/>
        <function-ref name="clr" scoped="" ref="0x7f33b85027f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8504db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b8503020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b85031b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8503340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b85034d0"/>
        <function-ref name="get" scoped="" ref="0x7f33b8503660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b85037f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8503980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8503b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b8503da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8502020"/>
        <function-ref name="set" scoped="" ref="0x7f33b85021b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8502340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b8504c20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b85024d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8502660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f33b84fdbb0" loc="196:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f33b84fdbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b84fc020"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b84fc1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b84fc340"/>
        <function-ref name="clr" scoped="" ref="0x7f33b84fa020"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b84fc660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b84fc7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b84fc980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b84fcb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b84fcca0"/>
        <function-ref name="get" scoped="" ref="0x7f33b84fce30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b84fb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b84fb1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b84fb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b84fb5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b84fb760"/>
        <function-ref name="set" scoped="" ref="0x7f33b84fb8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b84fba80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b84fc4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b84fbc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b84fbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f33b84edbb0" loc="202:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f33b84edbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b84ec020"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b84ec1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b84ec340"/>
        <function-ref name="clr" scoped="" ref="0x7f33b84ea020"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b84ec660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b84ec7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b84ec980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b84ecb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b84ecca0"/>
        <function-ref name="get" scoped="" ref="0x7f33b84ece30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b84eb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b84eb1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b84eb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b84eb5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b84eb760"/>
        <function-ref name="set" scoped="" ref="0x7f33b84eb8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b84eba80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b84ec4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b84ebc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b84ebda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f33b8546020" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f33b8546020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b85463a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8546530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b85466c0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b85444d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b85469e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b8546b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8546d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8545020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b85451b0"/>
        <function-ref name="get" scoped="" ref="0x7f33b8545340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b85454d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8545660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b85457f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b8545a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8545c10"/>
        <function-ref name="set" scoped="" ref="0x7f33b8545da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8544020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b8546850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b85441b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8544340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f33b8502bc0" loc="193:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f33b8502bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8501020"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b85011b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8501340"/>
        <function-ref name="clr" scoped="" ref="0x7f33b84ff020"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8501660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b85017f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8501980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8501b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8501ca0"/>
        <function-ref name="get" scoped="" ref="0x7f33b8501e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8500020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b85001b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8500340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b85005d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8500760"/>
        <function-ref name="set" scoped="" ref="0x7f33b85008f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8500a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b85014d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b8500c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8500da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f33b8590580" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f33b8590580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8590900"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8590a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8590c20"/>
        <function-ref name="clr" scoped="" ref="0x7f33b858e980"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b858f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b858f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b858f340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b858f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b858f660"/>
        <function-ref name="get" scoped="" ref="0x7f33b858f7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b858f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b858fb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b858fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b858e020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b858e1b0"/>
        <function-ref name="set" scoped="" ref="0x7f33b858e340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b858e4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b8590db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b858e660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b858e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f33b8577710" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f33b8577710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8577a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8577c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8577db0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b8575a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b85761b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b8576340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b85764d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8576660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b85767f0"/>
        <function-ref name="get" scoped="" ref="0x7f33b8576980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8576b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8576ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8576e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b8575120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b85752b0"/>
        <function-ref name="set" scoped="" ref="0x7f33b8575440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b85755d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b8576020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b8575760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b85758f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f33b855d710" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f33b855d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b855da90"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b855dc20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b855ddb0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b855ba80"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b855c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b855c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b855c4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b855c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b855c7f0"/>
        <function-ref name="get" scoped="" ref="0x7f33b855c980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b855cb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b855cca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b855ce30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b855b120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b855b2b0"/>
        <function-ref name="set" scoped="" ref="0x7f33b855b440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b855b5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b855c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b855b760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b855b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f33b850cbc0" loc="189:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f33b850cbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b850b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b850b1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b850b340"/>
        <function-ref name="clr" scoped="" ref="0x7f33b8509020"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b850b660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b850b7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b850b980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b850bb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b850bca0"/>
        <function-ref name="get" scoped="" ref="0x7f33b850be30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b850a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b850a1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b850a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b850a5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b850a760"/>
        <function-ref name="set" scoped="" ref="0x7f33b850a8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b850aa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b850b4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b850ac10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b850ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f33b84f3bb0" loc="200:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f33b84f3bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b84f1020"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b84f11b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b84f1340"/>
        <function-ref name="clr" scoped="" ref="0x7f33b84ef020"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b84f1660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b84f17f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b84f1980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b84f1b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b84f1ca0"/>
        <function-ref name="get" scoped="" ref="0x7f33b84f1e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b84f0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b84f01b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b84f0340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b84f05d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b84f0760"/>
        <function-ref name="set" scoped="" ref="0x7f33b84f08f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b84f0a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b84f14d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b84f0c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b84f0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f33b85588a0" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f33b85588a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8558c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8558db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8557020"/>
        <function-ref name="clr" scoped="" ref="0x7f33b8556c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8557340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b85574d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8557660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b85577f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8557980"/>
        <function-ref name="get" scoped="" ref="0x7f33b8557b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8557ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8557e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8556020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b85562b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8556440"/>
        <function-ref name="set" scoped="" ref="0x7f33b85565d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8556760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b85571b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b85568f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8556a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f33b853f8a0" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f33b853f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b853fc20"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b853fdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b853e020"/>
        <function-ref name="clr" scoped="" ref="0x7f33b853dc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b853e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b853e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b853e660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b853e7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b853e980"/>
        <function-ref name="get" scoped="" ref="0x7f33b853eb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b853eca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b853ee30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b853d020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b853d2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b853d440"/>
        <function-ref name="set" scoped="" ref="0x7f33b853d5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b853d760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b853e1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b853d8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b853da80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f33b852a8a0" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f33b852a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b852ac20"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b852adb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8529020"/>
        <function-ref name="clr" scoped="" ref="0x7f33b8528c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8529340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b85294d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8529660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b85297f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8529980"/>
        <function-ref name="get" scoped="" ref="0x7f33b8529b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8529ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8529e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8528020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b85282b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8528440"/>
        <function-ref name="set" scoped="" ref="0x7f33b85285d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8528760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b85291b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b85288f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8528a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f33b8589d50" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f33b8589d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8588100"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8588290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8588420"/>
        <function-ref name="clr" scoped="" ref="0x7f33b85861b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8588740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b85888d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8588a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8588bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8588d80"/>
        <function-ref name="get" scoped="" ref="0x7f33b8587020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b85871b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8587340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b85874d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b8587760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b85878f0"/>
        <function-ref name="set" scoped="" ref="0x7f33b8587a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8587c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b85885b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b8587da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8586020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f33b85308a0" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f33b85308a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8530c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8530db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b852f020"/>
        <function-ref name="clr" scoped="" ref="0x7f33b852ec10"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b852f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b852f4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b852f660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b852f7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b852f980"/>
        <function-ref name="get" scoped="" ref="0x7f33b852fb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b852fca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b852fe30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b852e020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b852e2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b852e440"/>
        <function-ref name="set" scoped="" ref="0x7f33b852e5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b852e760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b852f1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b852e8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b852ea80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f33b8584d50" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f33b8584d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8583100"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8583290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8583420"/>
        <function-ref name="clr" scoped="" ref="0x7f33b85811b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8583740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b85838d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8583a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8583bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8583d80"/>
        <function-ref name="get" scoped="" ref="0x7f33b8582020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b85821b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8582340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b85824d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b8582760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b85828f0"/>
        <function-ref name="set" scoped="" ref="0x7f33b8582a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8582c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b85835b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b8582da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8581020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f33b856be50" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f33b856be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b856a210"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b856a3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b856a530"/>
        <function-ref name="clr" scoped="" ref="0x7f33b8568340"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b856a850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b856a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b856ab70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b856ad00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8569020"/>
        <function-ref name="get" scoped="" ref="0x7f33b85691b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8569340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b85694d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8569660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b85698f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8569a80"/>
        <function-ref name="set" scoped="" ref="0x7f33b8569c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8569da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b856a6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b8568020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b85681b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f33b8550020" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f33b8550020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b85503a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8550530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b85506c0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b854e4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b85509e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b8550b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8550d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b854f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b854f1b0"/>
        <function-ref name="get" scoped="" ref="0x7f33b854f340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b854f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b854f660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b854f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b854fa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b854fc10"/>
        <function-ref name="set" scoped="" ref="0x7f33b854fda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b854e020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b8550850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b854e1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b854e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f33b8537020" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f33b8537020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b85373a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8537530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b85376c0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b85354d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b85379e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b8537b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8537d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8536020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b85361b0"/>
        <function-ref name="get" scoped="" ref="0x7f33b8536340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b85364d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8536660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b85367f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b8536a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8536c10"/>
        <function-ref name="set" scoped="" ref="0x7f33b8536da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8535020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b8537850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b85351b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8535340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f33b8522020" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f33b8522020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b85223a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8522530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b85226c0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b85204d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b85229e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b8522b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8522d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8521020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b85211b0"/>
        <function-ref name="get" scoped="" ref="0x7f33b8521340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b85214d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8521660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b85217f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b8521a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8521c10"/>
        <function-ref name="set" scoped="" ref="0x7f33b8521da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8520020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b8522850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b85201b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8520340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f33b8595580" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f33b8595580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8595900"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8595a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8595c20"/>
        <function-ref name="clr" scoped="" ref="0x7f33b8593980"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8594020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b85941b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8594340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b85944d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8594660"/>
        <function-ref name="get" scoped="" ref="0x7f33b85947f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8594980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8594b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8594ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b8593020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b85931b0"/>
        <function-ref name="set" scoped="" ref="0x7f33b8593340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b85934d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b8595db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b8593660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b85937f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f33b857c580" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f33b857c580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b857c900"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b857ca90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b857cc20"/>
        <function-ref name="clr" scoped="" ref="0x7f33b857a980"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b857b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b857b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b857b340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b857b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b857b660"/>
        <function-ref name="get" scoped="" ref="0x7f33b857b7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b857b980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b857bb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b857bca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b857a020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b857a1b0"/>
        <function-ref name="set" scoped="" ref="0x7f33b857a340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b857a4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b857cdb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b857a660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b857a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f33b8562710" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f33b8562710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8562a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8562c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8562db0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b8560a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b85611b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b8561340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b85614d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8561660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b85617f0"/>
        <function-ref name="get" scoped="" ref="0x7f33b8561980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8561b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8561ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8561e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b8560120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b85602b0"/>
        <function-ref name="set" scoped="" ref="0x7f33b8560440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b85605d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b8561020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b8560760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b85608f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f33b85498a0" loc="90:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f33b85498a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8549c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8549db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8548020"/>
        <function-ref name="clr" scoped="" ref="0x7f33b8547c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8548340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b85484d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8548660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b85487f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8548980"/>
        <function-ref name="get" scoped="" ref="0x7f33b8548b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8548ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8548e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8547020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b85472b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8547440"/>
        <function-ref name="set" scoped="" ref="0x7f33b85475d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8547760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b85481b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b85478f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8547a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f33b84fa3e0" loc="197:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f33b84fa3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b84fa760"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b84fa8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b84faa80"/>
        <function-ref name="clr" scoped="" ref="0x7f33b84f87f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b84fada0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b84f9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b84f91b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b84f9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b84f94d0"/>
        <function-ref name="get" scoped="" ref="0x7f33b84f9660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b84f97f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b84f9980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b84f9b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b84f9da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b84f8020"/>
        <function-ref name="set" scoped="" ref="0x7f33b84f81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b84f8340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b84fac10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b84f84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b84f8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f33b84e8ba0" loc="206:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f33b84e8ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b84e7020"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b84e71b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b84e7340"/>
        <function-ref name="clr" scoped="" ref="0x7f33b84e5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b84e7660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b84e77f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b84e7980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b84e7b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b84e7ca0"/>
        <function-ref name="get" scoped="" ref="0x7f33b84e7e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b84e6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b84e61b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b84e6340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b84e65d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b84e6760"/>
        <function-ref name="set" scoped="" ref="0x7f33b84e68f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b84e6a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b84e74d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b84e6c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b84e6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f33b8516bc0" loc="184:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f33b8516bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8515020"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b85151b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8515340"/>
        <function-ref name="clr" scoped="" ref="0x7f33b8513020"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8515660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b85157f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8515980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8515b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8515ca0"/>
        <function-ref name="get" scoped="" ref="0x7f33b8515e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8514020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b85141b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8514340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b85145d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8514760"/>
        <function-ref name="set" scoped="" ref="0x7f33b85148f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8514a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b85154d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b8514c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8514da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f33b85448a0" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f33b85448a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8544c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8544db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8543020"/>
        <function-ref name="clr" scoped="" ref="0x7f33b8542c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8543340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b85434d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8543660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b85437f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8543980"/>
        <function-ref name="get" scoped="" ref="0x7f33b8543b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8543ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8543e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8542020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b85422b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8542440"/>
        <function-ref name="set" scoped="" ref="0x7f33b85425d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8542760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b85431b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b85428f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8542a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f33b84e53e0" loc="208:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f33b84e53e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b84e5760"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b84e58f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b84e5a80"/>
        <function-ref name="clr" scoped="" ref="0x7f33b84e37f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b84e5da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b84e4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b84e41b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b84e4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b84e44d0"/>
        <function-ref name="get" scoped="" ref="0x7f33b84e4660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b84e47f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b84e4980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b84e4b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b84e4da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b84e3020"/>
        <function-ref name="set" scoped="" ref="0x7f33b84e31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b84e3340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b84e5c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b84e34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b84e3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f33b84debc0" loc="212:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f33b84debc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b84dd020"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b84dd1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b84dd340"/>
        <function-ref name="clr" scoped="" ref="0x7f33b84db020"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b84dd660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b84dd7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b84dd980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b84ddb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b84ddca0"/>
        <function-ref name="get" scoped="" ref="0x7f33b84dde30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b84dc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b84dc1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b84dc340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b84dc5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b84dc760"/>
        <function-ref name="set" scoped="" ref="0x7f33b84dc8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b84dca80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b84dd4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b84dcc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b84dcda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f33b851d060" loc="181:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f33b851d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b851d7e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b851d970"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b851db00"/>
        <function-ref name="clr" scoped="" ref="0x7f33b851b7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b851de20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b851c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b851c1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b851c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b851c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f33b851c660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b851c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b851c980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b851cb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b851cda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b851b020"/>
        <function-ref name="set" scoped="" ref="0x7f33b851b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b851b340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b851dc90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b851b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b851b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b84aa860" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b84aa860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b84aabe0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b84aad70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b84a9020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b84a8c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b84a9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b84a94d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b84a9660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b84a97f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b84a9980"/>
        <function-ref name="get" scoped="" ref="0x7f33b84a9b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b84a9ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b84a9e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b84a8020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b84a82b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b84a8440"/>
        <function-ref name="set" scoped="" ref="0x7f33b84a85d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b84a8760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b84a88f0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b84a91b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b84a8a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b84a5e60" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b84a5e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b84a4210"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b84a43a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b84a4530"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b84a2340"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b84a4850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b84a49e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b84a4b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b84a4d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b84a3020"/>
        <function-ref name="get" scoped="" ref="0x7f33b84a31b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b84a3340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b84a34d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b84a3660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b84a38f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b84a3a80"/>
        <function-ref name="set" scoped="" ref="0x7f33b84a3c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b84a3da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b84a2020"/>
        <function-ref name="clr" scoped="" ref="0x7f33b84a46c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b84a21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b849f3f0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b849f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b849f770"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b849f900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b849fa90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b849d7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b849fdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b849e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b849e1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b849e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b849e4d0"/>
        <function-ref name="get" scoped="" ref="0x7f33b849e660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b849e7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b849e980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b849eb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b849eda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b849d020"/>
        <function-ref name="set" scoped="" ref="0x7f33b849d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b849d340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b849d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b849fc20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b849d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b849a860" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b849a860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b849abe0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b849ad70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8499020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8498c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8499340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b84994d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8499660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b84997f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8499980"/>
        <function-ref name="get" scoped="" ref="0x7f33b8499b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8499ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8499e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8498020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b84982b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8498440"/>
        <function-ref name="set" scoped="" ref="0x7f33b84985d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8498760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b84988f0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b84991b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b8498a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b8495e60" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b8495e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8494210"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b84943a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8494530"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8492340"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8494850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b84949e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8494b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8494d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8493020"/>
        <function-ref name="get" scoped="" ref="0x7f33b84931b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8493340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b84934d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8493660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b84938f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8493a80"/>
        <function-ref name="set" scoped="" ref="0x7f33b8493c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8493da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b8492020"/>
        <function-ref name="clr" scoped="" ref="0x7f33b84946c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b84921b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b848e3f0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b848e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b848e770"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b848e900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b848ea90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b848c7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b848edb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b848d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b848d1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b848d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b848d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f33b848d660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b848d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b848d980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b848db10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b848dda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b848c020"/>
        <function-ref name="set" scoped="" ref="0x7f33b848c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b848c340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b848c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b848ec20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b848c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b8489860" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b8489860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8489be0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8489d70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8488020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8487c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8488340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b84884d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8488660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b84887f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8488980"/>
        <function-ref name="get" scoped="" ref="0x7f33b8488b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8488ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8488e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8487020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b84872b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8487440"/>
        <function-ref name="set" scoped="" ref="0x7f33b84875d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8487760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b84878f0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b84881b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b8487a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b8484e60" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b8484e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8483210"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b84833a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8483530"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8481340"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8483850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b84839e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8483b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8483d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8482020"/>
        <function-ref name="get" scoped="" ref="0x7f33b84821b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8482340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b84824d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8482660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b84828f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8482a80"/>
        <function-ref name="set" scoped="" ref="0x7f33b8482c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8482da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b8481020"/>
        <function-ref name="clr" scoped="" ref="0x7f33b84836c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b84811b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b847e3f0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b847e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b847e770"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b847e900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b847ea90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b847c7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b847edb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b847d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b847d1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b847d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b847d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f33b847d660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b847d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b847d980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b847db10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b847dda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b847c020"/>
        <function-ref name="set" scoped="" ref="0x7f33b847c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b847c340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b847c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b847ec20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b847c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b8479860" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b8479860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8479be0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8479d70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8478020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8477c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8478340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b84784d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8478660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b84787f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8478980"/>
        <function-ref name="get" scoped="" ref="0x7f33b8478b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8478ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8478e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8477020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b84772b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8477440"/>
        <function-ref name="set" scoped="" ref="0x7f33b84775d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8477760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b84778f0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b84781b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b8477a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b8474e60" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b8474e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8473210"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b84733a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8473530"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8471340"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8473850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b84739e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8473b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8473d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8472020"/>
        <function-ref name="get" scoped="" ref="0x7f33b84721b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8472340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b84724d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8472660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b84728f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8472a80"/>
        <function-ref name="set" scoped="" ref="0x7f33b8472c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8472da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b8471020"/>
        <function-ref name="clr" scoped="" ref="0x7f33b84736c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b84711b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b846e3f0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b846e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b846e770"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b846e900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b846ea90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b846c7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b846edb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b846d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b846d1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b846d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b846d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f33b846d660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b846d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b846d980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b846db10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b846dda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b846c020"/>
        <function-ref name="set" scoped="" ref="0x7f33b846c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b846c340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b846c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b846ec20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b846c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b84699f0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b84699f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8469d70"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8467020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b84671b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8466da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b84674d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b8467660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b84677f0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8467980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8467b10"/>
        <function-ref name="get" scoped="" ref="0x7f33b8467ca0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8467e30"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8466020"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b84661b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b8466440"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b84665d0"/>
        <function-ref name="set" scoped="" ref="0x7f33b8466760"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b84668f0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b8466a80"/>
        <function-ref name="clr" scoped="" ref="0x7f33b8467340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b8466c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b8463e60" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b8463e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8462210"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b84623a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8462530"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8460340"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8462850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b84629e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8462b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8462d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8461020"/>
        <function-ref name="get" scoped="" ref="0x7f33b84611b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8461340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b84614d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8461660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b84618f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8461a80"/>
        <function-ref name="set" scoped="" ref="0x7f33b8461c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8461da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b8460020"/>
        <function-ref name="clr" scoped="" ref="0x7f33b84626c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b84601b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b845d3f0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b845d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b845d770"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b845d900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b845da90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b845b7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b845ddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b845c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b845c1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b845c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b845c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f33b845c660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b845c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b845c980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b845cb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b845cda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b845b020"/>
        <function-ref name="set" scoped="" ref="0x7f33b845b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b845b340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b845b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b845dc20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b845b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b8458860" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b8458860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8458be0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8458d70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8457020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8456c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8457340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b84574d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8457660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b84577f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8457980"/>
        <function-ref name="get" scoped="" ref="0x7f33b8457b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8457ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8457e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8456020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b84562b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8456440"/>
        <function-ref name="set" scoped="" ref="0x7f33b84565d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8456760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b84568f0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b84571b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b8456a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b8453e60" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b8453e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8452210"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b84523a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8452530"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8450340"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8452850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b84529e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8452b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8452d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8451020"/>
        <function-ref name="get" scoped="" ref="0x7f33b84511b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8451340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b84514d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8451660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b84518f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8451a80"/>
        <function-ref name="set" scoped="" ref="0x7f33b8451c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8451da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b8450020"/>
        <function-ref name="clr" scoped="" ref="0x7f33b84526c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b84501b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b844d3f0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b844d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b844d770"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b844d900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b844da90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b844b7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b844ddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b844c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b844c1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b844c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b844c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f33b844c660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b844c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b844c980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b844cb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b844cda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b844b020"/>
        <function-ref name="set" scoped="" ref="0x7f33b844b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b844b340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b844b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b844dc20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b844b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b8448860" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b8448860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8448be0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8448d70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8447020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8446c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8447340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b84474d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8447660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b84477f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8447980"/>
        <function-ref name="get" scoped="" ref="0x7f33b8447b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8447ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8447e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8446020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b84462b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8446440"/>
        <function-ref name="set" scoped="" ref="0x7f33b84465d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8446760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b84468f0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b84471b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b8446a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b8443e60" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b8443e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8442210"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b84423a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8442530"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8440340"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8442850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b84429e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8442b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8442d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8441020"/>
        <function-ref name="get" scoped="" ref="0x7f33b84411b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8441340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b84414d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8441660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b84418f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8441a80"/>
        <function-ref name="set" scoped="" ref="0x7f33b8441c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8441da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b8440020"/>
        <function-ref name="clr" scoped="" ref="0x7f33b84426c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b84401b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b843d3f0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b843d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b843d770"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b843d900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b843da90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b843a7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b843ddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b843b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b843b1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b843b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b843b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f33b843b660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b843b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b843b980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b843bb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b843bda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b843a020"/>
        <function-ref name="set" scoped="" ref="0x7f33b843a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b843a340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b843a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b843dc20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b843a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b8437860" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b8437860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8437be0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8437d70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8436020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8435c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8436340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b84364d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8436660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b84367f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8436980"/>
        <function-ref name="get" scoped="" ref="0x7f33b8436b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8436ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8436e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8435020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b84352b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8435440"/>
        <function-ref name="set" scoped="" ref="0x7f33b84355d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8435760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b84358f0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b84361b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b8435a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b8432e60" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b8432e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8431210"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b84313a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8431530"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b842f340"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8431850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b84319e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8431b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8431d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8430020"/>
        <function-ref name="get" scoped="" ref="0x7f33b84301b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8430340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b84304d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8430660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b84308f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8430a80"/>
        <function-ref name="set" scoped="" ref="0x7f33b8430c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8430da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b842f020"/>
        <function-ref name="clr" scoped="" ref="0x7f33b84316c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b842f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b842c3f0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b842c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b842c770"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b842c900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b842ca90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b842a7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b842cdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b842b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b842b1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b842b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b842b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f33b842b660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b842b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b842b980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b842bb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b842bda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b842a020"/>
        <function-ref name="set" scoped="" ref="0x7f33b842a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b842a340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b842a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b842cc20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b842a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b8427a60" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b8427a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8427de0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8426020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b84261b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8425da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b84264d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b8426660"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b84267f0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8426980"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8426b10"/>
        <function-ref name="get" scoped="" ref="0x7f33b8426ca0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8426e30"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8425020"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b84251b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b8425440"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b84255d0"/>
        <function-ref name="set" scoped="" ref="0x7f33b8425760"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b84258f0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b8425a80"/>
        <function-ref name="clr" scoped="" ref="0x7f33b8426340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b8425c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b8422e60" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b8422e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8421210"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b84213a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8421530"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b841f340"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8421850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b84219e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8421b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8421d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8420020"/>
        <function-ref name="get" scoped="" ref="0x7f33b84201b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8420340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b84204d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8420660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b84208f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8420a80"/>
        <function-ref name="set" scoped="" ref="0x7f33b8420c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8420da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b841f020"/>
        <function-ref name="clr" scoped="" ref="0x7f33b84216c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b841f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b841c3f0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b841c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b841c770"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b841c900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b841ca90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b841a7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b841cdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b841b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b841b1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b841b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b841b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f33b841b660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b841b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b841b980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b841bb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b841bda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b841a020"/>
        <function-ref name="set" scoped="" ref="0x7f33b841a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b841a340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b841a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b841cc20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b841a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b8417860" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b8417860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8417be0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8417d70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8416020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8415c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8416340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b84164d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8416660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b84167f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8416980"/>
        <function-ref name="get" scoped="" ref="0x7f33b8416b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8416ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8416e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8415020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b84152b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8415440"/>
        <function-ref name="set" scoped="" ref="0x7f33b84155d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8415760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b84158f0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b84161b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b8415a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b8411e60" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b8411e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8410210"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b84103a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8410530"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b840e340"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8410850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b84109e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8410b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8410d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b840f020"/>
        <function-ref name="get" scoped="" ref="0x7f33b840f1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b840f340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b840f4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b840f660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b840f8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b840fa80"/>
        <function-ref name="set" scoped="" ref="0x7f33b840fc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b840fda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b840e020"/>
        <function-ref name="clr" scoped="" ref="0x7f33b84106c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b840e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b840b3f0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b840b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b840b770"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b840b900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b840ba90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b84097f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b840bdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b840a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b840a1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b840a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b840a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f33b840a660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b840a7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b840a980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b840ab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b840ada0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8409020"/>
        <function-ref name="set" scoped="" ref="0x7f33b84091b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8409340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b84094d0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b840bc20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b8409660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b8406860" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b8406860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8406be0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8406d70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8405020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8404c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8405340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b84054d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8405660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b84057f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8405980"/>
        <function-ref name="get" scoped="" ref="0x7f33b8405b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8405ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8405e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8404020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b84042b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8404440"/>
        <function-ref name="set" scoped="" ref="0x7f33b84045d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8404760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b84048f0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b84051b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b8404a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b8401e60" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b8401e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8400210"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b84003a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8400530"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b83fe340"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8400850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b84009e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8400b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8400d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b83ff020"/>
        <function-ref name="get" scoped="" ref="0x7f33b83ff1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b83ff340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b83ff4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b83ff660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b83ff8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b83ffa80"/>
        <function-ref name="set" scoped="" ref="0x7f33b83ffc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b83ffda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b83fe020"/>
        <function-ref name="clr" scoped="" ref="0x7f33b84006c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b83fe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b83fb3f0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b83fb3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b83fb770"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b83fb900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b83fba90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b83f97f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b83fbdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b83fa020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b83fa1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b83fa340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b83fa4d0"/>
        <function-ref name="get" scoped="" ref="0x7f33b83fa660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b83fa7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b83fa980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b83fab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b83fada0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b83f9020"/>
        <function-ref name="set" scoped="" ref="0x7f33b83f91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b83f9340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b83f94d0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b83fbc20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b83f9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b83f6860" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b83f6860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b83f6be0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b83f6d70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b83f5020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b83f4c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b83f5340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b83f54d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b83f5660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b83f57f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b83f5980"/>
        <function-ref name="get" scoped="" ref="0x7f33b83f5b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b83f5ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b83f5e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b83f4020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b83f42b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b83f4440"/>
        <function-ref name="set" scoped="" ref="0x7f33b83f45d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b83f4760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b83f48f0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b83f51b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b83f4a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b83f1e60" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b83f1e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b83f0210"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b83f03a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b83f0530"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b83ee340"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b83f0850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b83f09e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b83f0b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b83f0d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b83ef020"/>
        <function-ref name="get" scoped="" ref="0x7f33b83ef1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b83ef340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b83ef4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b83ef660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b83ef8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b83efa80"/>
        <function-ref name="set" scoped="" ref="0x7f33b83efc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b83efda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b83ee020"/>
        <function-ref name="clr" scoped="" ref="0x7f33b83f06c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b83ee1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b83eb3f0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b83eb3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b83eb770"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b83eb900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b83eba90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b83e87f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b83ebdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b83e9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b83e91b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b83e9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b83e94d0"/>
        <function-ref name="get" scoped="" ref="0x7f33b83e9660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b83e97f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b83e9980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b83e9b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b83e9da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b83e8020"/>
        <function-ref name="set" scoped="" ref="0x7f33b83e81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b83e8340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b83e84d0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b83ebc20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b83e8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b83e5860" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b83e5860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b83e5be0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b83e5d70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b83e4020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b83e3c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b83e4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b83e44d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b83e4660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b83e47f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b83e4980"/>
        <function-ref name="get" scoped="" ref="0x7f33b83e4b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b83e4ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b83e4e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b83e3020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b83e32b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b83e3440"/>
        <function-ref name="set" scoped="" ref="0x7f33b83e35d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b83e3760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b83e38f0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b83e41b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b83e3a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b83e0e60" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b83e0e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b83df210"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b83df3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b83df530"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b83dd340"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b83df850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b83df9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b83dfb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b83dfd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b83de020"/>
        <function-ref name="get" scoped="" ref="0x7f33b83de1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b83de340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b83de4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b83de660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b83de8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b83dea80"/>
        <function-ref name="set" scoped="" ref="0x7f33b83dec10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b83deda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b83dd020"/>
        <function-ref name="clr" scoped="" ref="0x7f33b83df6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b83dd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b83da3f0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b83da3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b83da770"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b83da900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b83daa90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b83d87f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b83dadb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b83d9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b83d91b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b83d9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b83d94d0"/>
        <function-ref name="get" scoped="" ref="0x7f33b83d9660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b83d97f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b83d9980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b83d9b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b83d9da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b83d8020"/>
        <function-ref name="set" scoped="" ref="0x7f33b83d81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b83d8340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b83d84d0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b83dac20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b83d8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b83d5860" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b83d5860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b83d5be0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b83d5d70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b83d4020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b83d3c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b83d4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b83d44d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b83d4660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b83d47f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b83d4980"/>
        <function-ref name="get" scoped="" ref="0x7f33b83d4b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b83d4ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b83d4e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b83d3020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b83d32b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b83d3440"/>
        <function-ref name="set" scoped="" ref="0x7f33b83d35d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b83d3760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b83d38f0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b83d41b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b83d3a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b83d0e60" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b83d0e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b83cf210"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b83cf3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b83cf530"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b83cd340"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b83cf850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b83cf9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b83cfb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b83cfd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b83ce020"/>
        <function-ref name="get" scoped="" ref="0x7f33b83ce1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b83ce340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b83ce4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b83ce660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b83ce8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b83cea80"/>
        <function-ref name="set" scoped="" ref="0x7f33b83cec10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b83ceda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b83cd020"/>
        <function-ref name="clr" scoped="" ref="0x7f33b83cf6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b83cd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b83ca3f0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b83ca3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b83ca770"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b83ca900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b83caa90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b83c87f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b83cadb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b83c9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b83c91b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b83c9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b83c94d0"/>
        <function-ref name="get" scoped="" ref="0x7f33b83c9660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b83c97f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b83c9980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b83c9b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b83c9da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b83c8020"/>
        <function-ref name="set" scoped="" ref="0x7f33b83c81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b83c8340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b83c84d0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b83cac20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b83c8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b83c5860" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b83c5860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b83c5be0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b83c5d70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b83c4020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b83c3c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b83c4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b83c44d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b83c4660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b83c47f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b83c4980"/>
        <function-ref name="get" scoped="" ref="0x7f33b83c4b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b83c4ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b83c4e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b83c3020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b83c32b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b83c3440"/>
        <function-ref name="set" scoped="" ref="0x7f33b83c35d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b83c3760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b83c38f0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b83c41b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b83c3a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b83c0e60" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b83c0e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b83be210"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b83be3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b83be530"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b83bc340"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b83be850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b83be9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b83beb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b83bed00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b83bd020"/>
        <function-ref name="get" scoped="" ref="0x7f33b83bd1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b83bd340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b83bd4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b83bd660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b83bd8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b83bda80"/>
        <function-ref name="set" scoped="" ref="0x7f33b83bdc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b83bdda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b83bc020"/>
        <function-ref name="clr" scoped="" ref="0x7f33b83be6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b83bc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b83b93f0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b83b93f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b83b9770"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b83b9900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b83b9a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b83b77f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b83b9db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b83b8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b83b81b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b83b8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b83b84d0"/>
        <function-ref name="get" scoped="" ref="0x7f33b83b8660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b83b87f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b83b8980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b83b8b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b83b8da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b83b7020"/>
        <function-ref name="set" scoped="" ref="0x7f33b83b71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b83b7340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b83b74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b83b9c20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b83b7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b83b4860" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b83b4860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b83b4be0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b83b4d70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b83b3020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b83b2c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b83b3340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b83b34d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b83b3660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b83b37f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b83b3980"/>
        <function-ref name="get" scoped="" ref="0x7f33b83b3b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b83b3ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b83b3e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b83b2020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b83b22b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b83b2440"/>
        <function-ref name="set" scoped="" ref="0x7f33b83b25d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b83b2760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b83b28f0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b83b31b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b83b2a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b83afe60" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b83afe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b83ae210"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b83ae3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b83ae530"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b83ac340"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b83ae850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b83ae9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b83aeb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b83aed00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b83ad020"/>
        <function-ref name="get" scoped="" ref="0x7f33b83ad1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b83ad340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b83ad4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b83ad660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b83ad8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b83ada80"/>
        <function-ref name="set" scoped="" ref="0x7f33b83adc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b83adda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b83ac020"/>
        <function-ref name="clr" scoped="" ref="0x7f33b83ae6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b83ac1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f33b83a93f0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f33b83a93f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b83a9770"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b83a9900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b83a9a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b83a77f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b83a9db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b83a8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b83a81b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b83a8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b83a84d0"/>
        <function-ref name="get" scoped="" ref="0x7f33b83a8660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b83a87f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b83a8980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b83a8b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b83a8da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b83a7020"/>
        <function-ref name="set" scoped="" ref="0x7f33b83a71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b83a7340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b83a74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b83a9c20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b83a7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33b83a6e50" loc="42:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f33b83a6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b83a3210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7f33b83a2020" loc="43:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f33b83a2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7f33b83a11b0"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7f33b83a1340"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f33b83a26c0"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f33b83a2850"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7f33b83a29e0"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f33b83a2b70"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f33b83a2d00"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f33b83a1020"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f33b83a23a0"/>
        <function-ref name="node_id" scoped="" ref="0x7f33b83a2530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f33b8394700" loc="7:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f33b8394700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b8394a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33b83961a0" loc="4:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f33b83961a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b8396520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f33b8394020" loc="6:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f33b8394020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b83943a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f33b8394de0" loc="8:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f33b8394de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b8393180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7f33b8396810" loc="5:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f33b8396810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7f33b8395980"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7f33b8395b10"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f33b8395020"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f33b83951b0"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7f33b8395340"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f33b83954d0"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f33b8395660"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f33b83957f0"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f33b8396b90"/>
        <function-ref name="node_id" scoped="" ref="0x7f33b8396d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33b8397640" loc="2:../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f33b8397640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b83979c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f33b837d900" loc="39:../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f33b837d900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b837dc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f33b835cde0" loc="40:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f33b835cde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f33b8360c70"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f33b8360310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f33b83604a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f33b8360630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f33b8360180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f33b83607c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f33b8360950"/>
        <function-ref name="initClocks" scoped="" ref="0x7f33b8360ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33b8365850" loc="39:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f33b8365850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b8365bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f33b834b830" loc="203:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f33b834b830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f33b834a7f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f33b834bd40"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f33b834a020"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f33b834a1b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f33b834bbb0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f33b834a340"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f33b834a4d0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f33b834a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f33b834aaf0" loc="204:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f33b834aaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f33b834ae70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33b834b1c0" loc="202:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f33b834b1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b834b540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f33b87e4c80" loc="55:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f33b87e4c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f33b89bf0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f33b89419a0" loc="51:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f33b89419a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f33b8941d20"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f33b8a5c020"/>
        <function-ref name="sleep" scoped="" ref="0x7f33b8a5c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f33b88823d0" loc="52:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f33b88823d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f33b8882750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f33b83638b0" loc="39:../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f33b83638b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f33b83157f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f33b8363dc0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f33b8315020"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f33b83151b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f33b8363c30"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f33b8315340"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f33b83154d0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f33b8315660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f33b8282c50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f33b8282c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8281020"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b82811b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8281340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b827f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8281660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b82817f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b8281980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8281b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8281ca0"/>
        <function-ref name="get" scoped="" ref="0x7f33b8281e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8280020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b82801b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8280340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b82805d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b8280760"/>
        <function-ref name="set" scoped="" ref="0x7f33b82808f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b8280a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b8280c10"/>
        <function-ref name="clr" scoped="" ref="0x7f33b82814d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b8280da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f33b82939e0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f33b82939e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8293d60"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8282020"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b82821b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b8282340"/>
        <function-ref name="get" scoped="" ref="0x7f33b82824d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8282660"/>
        <function-ref name="set" scoped="" ref="0x7f33b82827f0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b8282980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f33b827b2f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f33b827b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b827b670"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b827b800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b827b990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8279660"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b827bcb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b827be40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b827a020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b827a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b827a340"/>
        <function-ref name="get" scoped="" ref="0x7f33b827a4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b827a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b827a7f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b827a980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b827ac10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b827ada0"/>
        <function-ref name="set" scoped="" ref="0x7f33b8279020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b82791b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b8279340"/>
        <function-ref name="clr" scoped="" ref="0x7f33b827bb20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b82794d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f33b827c020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f33b827c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b827c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b827c530"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b827c6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b827c850"/>
        <function-ref name="get" scoped="" ref="0x7f33b827c9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b827cb70"/>
        <function-ref name="set" scoped="" ref="0x7f33b827cd00"/>
        <function-ref name="clr" scoped="" ref="0x7f33b827b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f33b82767a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f33b82767a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b8276b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8276cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b8276e40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b8274a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b82751b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b8275340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b82754d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b8275660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b82757f0"/>
        <function-ref name="get" scoped="" ref="0x7f33b8275980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b8275b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b8275ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b8275e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b8274120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b82742b0"/>
        <function-ref name="set" scoped="" ref="0x7f33b8274440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b82745d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b8274760"/>
        <function-ref name="clr" scoped="" ref="0x7f33b8275020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b82748f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f33b8277630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f33b8277630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b82779b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8277b40"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8277cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b8277e60"/>
        <function-ref name="get" scoped="" ref="0x7f33b8276020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b82761b0"/>
        <function-ref name="set" scoped="" ref="0x7f33b8276340"/>
        <function-ref name="clr" scoped="" ref="0x7f33b82764d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f33b8268c00" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f33b8268c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b8265020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f33b8268500" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f33b8268500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f33b8268880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f33b8261aa0" loc="69:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f33b8261aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b8261e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f33b8262280" loc="66:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f33b8262280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f33b8262600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f33b82613a0" loc="68:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f33b82613a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b8261720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f33b82628f0" loc="67:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f33b82628f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b8262c70"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f33b8262e00"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f33b8261020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f33b8b5c940" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f33b8b5c940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f33b8b5ccc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f33b8b5ce50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f33b8b691e0" loc="46:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f33b8b691e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b8b69560"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f33b8b696f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f33b8b69880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f33b870d040" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f33b870d040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f33b870d3c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f33b870d550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f33b8708490" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f33b8708490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f33b8708810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f33b87089a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f33b8708b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f33b870e140" loc="54:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f33b870e140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b870e4c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f33b870e650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f33b870e7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f33b82667a0" loc="61:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f33b82667a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f33b8266b20"/>
        <function-ref name="stopDone" scoped="" ref="0x7f33b8266cb0"/>
        <function-ref name="start" scoped="" ref="0x7f33b8266e40"/>
        <function-ref name="stop" scoped="" ref="0x7f33b8255020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f33b82557f0" loc="63:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f33b82557f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33b866e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b8255b70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b8255d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b8254020"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b82541b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b8254340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f33b8252880" loc="65:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f33b8252880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33b866e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33b8252c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f33b8251020" loc="67:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f33b8251020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b82513a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f33b8251530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b82516c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b8251850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f33b82519e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f33b8241430" loc="70:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f33b8241430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f33b823db00"/>
        <function-ref name="clear" scoped="" ref="0x7f33b82302a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f33b823d3d0"/>
        <function-ref name="set" scoped="" ref="0x7f33b82309d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f33b8222430" loc="72:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f33b8222430"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f33b82227b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f33b8222940"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f33b8222ad0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f33b8222c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f33b8254b20" loc="64:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f33b8254b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33b866e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33b8252020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f33b8237350" loc="69:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f33b8237350"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f33b82376d0"/>
        <function-ref name="noAck" scoped="" ref="0x7f33b8237860"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f33b82379f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f33b8250020" loc="68:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f33b8250020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f33b82503a0"/>
        <function-ref name="source" scoped="" ref="0x7f33b8250530"/>
        <function-ref name="address" scoped="" ref="0x7f33b82506c0"/>
        <function-ref name="destination" scoped="" ref="0x7f33b8250850"/>
        <function-ref name="setSource" scoped="" ref="0x7f33b82509e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f33b8250b70"/>
        <function-ref name="type" scoped="" ref="0x7f33b8250d00"/>
        <function-ref name="setType" scoped="" ref="0x7f33b824f020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f33b824f1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f33b824f340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f33b824f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f33b822e660" loc="71:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f33b822e660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c4e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f33b86c1200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f33b822dce0"/>
        <function-ref name="clear" scoped="" ref="0x7f33b822c460"/>
        <function-ref name="isValid" scoped="" ref="0x7f33b822d5b0"/>
        <function-ref name="set" scoped="" ref="0x7f33b822cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f33b8215080" loc="55:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f33b8215080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f33b8215400"/>
        <function-ref name="stopDone" scoped="" ref="0x7f33b8215590"/>
        <function-ref name="start" scoped="" ref="0x7f33b8215720"/>
        <function-ref name="stop" scoped="" ref="0x7f33b82158b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f33b8205020" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f33b8205020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33b866e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f33b82053a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f33b8205530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f33b82056c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f33b8205850"/>
        <function-ref name="setCca" scoped="" ref="0x7f33b82059e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f33b8205b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f33b81fb020" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f33b81fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33b866e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f33b81fb4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f33b8211c20" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f33b8211c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b8210020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f33b82101b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b8210340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b82104d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f33b8210660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f33b82141d0" loc="56:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f33b82141d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33b866e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b8214550"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b82146e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b8214870"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b8214a00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b8214b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f33b8212020" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f33b8212020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33b866e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33b82123a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f33b8207dc0" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f33b8207dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f33b820e180"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f33b820e310"/>
        <function-ref name="getRssi" scoped="" ref="0x7f33b820e4a0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f33b820e630"/>
        <function-ref name="getPower" scoped="" ref="0x7f33b820e7c0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f33b820e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f33b8205e70" loc="65:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f33b8205e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f33b8203220"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f33b82033b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f33b8203540"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f33b82036d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f33b82133f0" loc="57:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f33b82133f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33b866e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33b8213770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f33b820ec80" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f33b820ec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f33b820d0a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f33b820d230"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f33b820d3c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f33b81f20d0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f33b81f20d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f33b81f2450"/>
        <function-ref name="setRetries" scoped="" ref="0x7f33b81f25e0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f33b81f2770"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f33b81f2900"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f33b81f2a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f33b8212650" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f33b8212650"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f33b82129d0"/>
        <function-ref name="source" scoped="" ref="0x7f33b8212b60"/>
        <function-ref name="address" scoped="" ref="0x7f33b8212cf0"/>
        <function-ref name="destination" scoped="" ref="0x7f33b8212e80"/>
        <function-ref name="setSource" scoped="" ref="0x7f33b8211030"/>
        <function-ref name="setDestination" scoped="" ref="0x7f33b82111c0"/>
        <function-ref name="type" scoped="" ref="0x7f33b8211350"/>
        <function-ref name="setType" scoped="" ref="0x7f33b82114e0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f33b8211670"/>
        <function-ref name="setGroup" scoped="" ref="0x7f33b8211800"/>
        <function-ref name="localGroup" scoped="" ref="0x7f33b8211990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f33b8204e00" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f33b8204e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f33b82061c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f33b81ec340" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f33b81ec340"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f33b81ec6c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f33b81ec850"/>
        <function-ref name="start" scoped="" ref="0x7f33b81ec9e0"/>
        <function-ref name="stop" scoped="" ref="0x7f33b81ecb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f33b81d99d0" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f33b81d99d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f33b81d9d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f33b81d8b70" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f33b81d8b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f33b81d7020"/>
        <function-ref name="setRetries" scoped="" ref="0x7f33b81d71b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f33b81d7340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f33b81d74d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f33b81d7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f33b81da140" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f33b81da140"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f33b81da4c0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f33b81da650"/>
        <function-ref name="getRssi" scoped="" ref="0x7f33b81da7e0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f33b81da970"/>
        <function-ref name="getPower" scoped="" ref="0x7f33b81dab00"/>
        <function-ref name="getLqi" scoped="" ref="0x7f33b81dac90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f33b81e4d10" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f33b81e4d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b81dc0e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b81dc270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b81dc400"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b81dc590"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b81dc720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f33b81d8080" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f33b81d8080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f33b81d8400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f33b81d8590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f33b81d8720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f33b81d88b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f33b81e9820" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f33b81e9820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33b81e9ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f33b81d9020" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f33b81d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f33b81d93a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f33b81d9530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f33b81d96c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f33b81e5770" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f33b81e5770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b81e5af0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b81e5c80"/>
        <function-ref name="request" scoped="" ref="0x7f33b81e5e10"/>
        <function-ref name="granted" scoped="" ref="0x7f33b81ea020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b81ea1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f33b81dba30" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f33b81dba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b81dbdb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b81e9020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b81e91b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b81e9340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b81e94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f33b81e4020" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f33b81e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b81e43a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f33b81e4530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b81e46c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b81e4850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f33b81e49e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f33b81dca90" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f33b81dca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33b81dce10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f33b81d3390" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f33b81d3390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f33b81d3710"/>
        <function-ref name="stopDone" scoped="" ref="0x7f33b81d38a0"/>
        <function-ref name="start" scoped="" ref="0x7f33b81d3a30"/>
        <function-ref name="stop" scoped="" ref="0x7f33b81d3bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f33b81d1330" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f33b81d1330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f33b81d16b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f33b81d1840"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f33b81d19d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f33b81d1b60"/>
        <function-ref name="setCca" scoped="" ref="0x7f33b81d1cf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f33b81d1e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f33b81d3e80" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f33b81d3e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b81d2220"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b81d23b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b81d2540"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b81d26d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b81d2860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f33b81d2b40" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f33b81d2b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33b81d1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f33b81d0e70" loc="39:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f33b81d0e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f33b81cd220"/>
        <function-ref name="stopDone" scoped="" ref="0x7f33b81cd3b0"/>
        <function-ref name="start" scoped="" ref="0x7f33b81cd540"/>
        <function-ref name="stop" scoped="" ref="0x7f33b81cd6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f33b81cc7e0" loc="41:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f33b81cc7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f33b81ccb60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f33b81cccf0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f33b81cce80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f33b81cb030"/>
        <function-ref name="setCca" scoped="" ref="0x7f33b81cb1c0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f33b81cb350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f33b81c1060" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f33b81c1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f33b81c13e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f33b81c1570"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f33b81c1700"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f33b81c1890"/>
        <function-ref name="setCca" scoped="" ref="0x7f33b81c1a20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f33b81c1bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f33b81b6330" loc="50:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f33b81b6330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f33b81b66b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f33b81b6840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f33b81b69d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f33b81b6b60"/>
        <function-ref name="getPower" scoped="" ref="0x7f33b81b6cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f33b81b6e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f33b81b82a0" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f33b81b82a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b81b8620"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b81b87b0"/>
        <function-ref name="modify" scoped="" ref="0x7f33b81b8940"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b81b8ad0"/>
        <function-ref name="resend" scoped="" ref="0x7f33b81b8c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f33b81cd990" loc="40:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f33b81cd990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b81cdd10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b81cc020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b81cc1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b81cc340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b81cc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f33b81b5420" loc="48:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f33b81b5420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f33b81b57a0"/>
        <function-ref name="rand32" scoped="" ref="0x7f33b81b5930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f33b81c0760" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f33b81c0760"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f33b81c0ae0"/>
        <function-ref name="stop" scoped="" ref="0x7f33b81c0c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f33b81ae920" loc="51:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f33b81ae920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f33b81aeca0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f33b81aee30"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f33b81b3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f33b81c3b50" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f33b81c3b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f33b81c9020"/>
        <function-ref name="rfOff" scoped="" ref="0x7f33b81c91b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f33b81c9340"/>
        <function-ref name="startVReg" scoped="" ref="0x7f33b81c94d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f33b81c9660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f33b81c97f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f33b81c9980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f33b81c9b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f33b81b5bf0" loc="49:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f33b81b5bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f33b81b7020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f33b81b71b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f33b81b7340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f33b81b74d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f33b81b7660"/>
        <function-ref name="get" scoped="" ref="0x7f33b81b77f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f33b81b7980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f33b81b6020"/>
        <function-ref name="set" scoped="" ref="0x7f33b81b7b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f33b81b7ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f33b81b7e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f33b81cb640" loc="43:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f33b81cb640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b81cb9c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b81cbb50"/>
        <function-ref name="request" scoped="" ref="0x7f33b81cbce0"/>
        <function-ref name="granted" scoped="" ref="0x7f33b81cbe70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b81ca030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f33b81b2110" loc="52:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7f33b81b2110"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f33b81b2590"/>
        <function-ref name="toIdle" scoped="" ref="0x7f33b81b2720"/>
        <function-ref name="isState" scoped="" ref="0x7f33b81b28b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f33b81b2a40"/>
        <function-ref name="requestState" scoped="" ref="0x7f33b81b2bd0"/>
        <function-ref name="forceState" scoped="" ref="0x7f33b81b2d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f33b81a4b70" loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7f33b81a4b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f33b81a3020"/>
        <function-ref name="runTask" scoped="" ref="0x7f33b81a31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f33b81a5ba0" loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7f33b81a5ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f33b81a4020"/>
        <function-ref name="runTask" scoped="" ref="0x7f33b81a41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f33b81a6c20" loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7f33b81a6c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f33b81a5020"/>
        <function-ref name="runTask" scoped="" ref="0x7f33b81a51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f33b814cdc0" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f33b814cdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f33b8158180"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f33b8158310"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f33b81584a0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f33b8158630"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f33b81587c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f33b8158950"/>
        <function-ref name="setChannel" scoped="" ref="0x7f33b8158ae0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f33b8158c70"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f33b8158e00"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f33b8157020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f33b81571b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f33b8157340"/>
        <function-ref name="sync" scoped="" ref="0x7f33b81574d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f33b8157760"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f33b81578f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f33b81480c0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f33b81480c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b8148cb0"/>
        <function-ref name="readDone" scoped="" ref="0x7f33b8147170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f33b8157bf0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f33b8157bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f33b814a020"/>
        <function-ref name="rfOff" scoped="" ref="0x7f33b814a1b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f33b814a340"/>
        <function-ref name="startVReg" scoped="" ref="0x7f33b814a4d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f33b814a660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f33b814a7f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f33b814a980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f33b814ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f33b815c950" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f33b815c950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b815ccd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b815ce60"/>
        <function-ref name="request" scoped="" ref="0x7f33b8159020"/>
        <function-ref name="granted" scoped="" ref="0x7f33b81591b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b8159340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f33b8141970" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f33b8141970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f33b8141cf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f33b8141e80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f33b8140030"/>
        <function-ref name="syncDone" scoped="" ref="0x7f33b81401c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f33b8140350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f33b81404e0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f33b8140670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f33b8140800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f33b8140990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f33b8140b20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f33b8140cb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f33b8140e40"/>
        <function-ref name="sync" scoped="" ref="0x7f33b813f020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f33b813f2b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f33b813f440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f33b811a8e0" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f33b811a8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b811ac60"/>
        <function-ref name="write" scoped="" ref="0x7f33b811adf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f33b813b020" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f33b813b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f33b813b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f33b8133d90" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7f33b8133d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f33b8131670"/>
        <function-ref name="fired" scoped="" ref="0x7f33b81325d0"/>
        <function-ref name="startAt" scoped="" ref="0x7f33b8131020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f33b8132a90"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f33b8131b30"/>
        <function-ref name="start" scoped="" ref="0x7f33b8139bc0"/>
        <function-ref name="stop" scoped="" ref="0x7f33b8132110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f33b811d5f0" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f33b811d5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b811d970"/>
        <function-ref name="write" scoped="" ref="0x7f33b811db00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f33b812f380" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f33b812f380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b812f700"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b812f890"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b812fa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b812fbb0"/>
        <function-ref name="get" scoped="" ref="0x7f33b812fd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b812d020"/>
        <function-ref name="set" scoped="" ref="0x7f33b812d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b812d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f33b813eb40" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f33b813eb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b813d750"/>
        <function-ref name="readDone" scoped="" ref="0x7f33b813dbd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f33b8108820" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7f33b8108820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f33b8108ba0"/>
        <function-ref name="runTask" scoped="" ref="0x7f33b8108d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f33b81191c0" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f33b81191c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b8119540"/>
        <function-ref name="write" scoped="" ref="0x7f33b81196d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f33b8119a70" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f33b8119a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b8119df0"/>
        <function-ref name="write" scoped="" ref="0x7f33b8118020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f33b81223d0" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f33b81223d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b8122750"/>
        <function-ref name="write" scoped="" ref="0x7f33b81228e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f33b8123810" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f33b8123810"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f33b8123b90"/>
        <function-ref name="changed" scoped="" ref="0x7f33b8123d20"/>
        <function-ref name="amGroup" scoped="" ref="0x7f33b812a020"/>
        <function-ref name="setAddress" scoped="" ref="0x7f33b812a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f33b8130060" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f33b8130060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b81303e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b8130570"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b8130700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b8130890"/>
        <function-ref name="get" scoped="" ref="0x7f33b8130a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b8130bb0"/>
        <function-ref name="set" scoped="" ref="0x7f33b8130d40"/>
        <function-ref name="clr" scoped="" ref="0x7f33b812f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f33b8117120" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f33b8117120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b81176a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f33b812d6a0" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f33b812d6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b812da20"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b812dbb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b812dd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b812c020"/>
        <function-ref name="get" scoped="" ref="0x7f33b812c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b812c340"/>
        <function-ref name="set" scoped="" ref="0x7f33b812c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b812c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33b8142510" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f33b8142510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b8142890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f33b811a020" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f33b811a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b811a3a0"/>
        <function-ref name="write" scoped="" ref="0x7f33b811a530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f33b8117a40" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f33b8117a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b8117dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f33b81161d0" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f33b81161d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b8116550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b81166e0"/>
        <function-ref name="request" scoped="" ref="0x7f33b8116870"/>
        <function-ref name="granted" scoped="" ref="0x7f33b8116a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b8116b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f33b8113d90" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7f33b8113d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b8112180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b8112310"/>
        <function-ref name="request" scoped="" ref="0x7f33b81124a0"/>
        <function-ref name="granted" scoped="" ref="0x7f33b8112630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b81127c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f33b813f740" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f33b813f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f33b813fac0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f33b813fc50"/>
        <function-ref name="rxOn" scoped="" ref="0x7f33b813fde0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f33b813e020"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f33b813e1b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f33b813e340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f33b813e4d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f33b813e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f33b8122c80" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f33b8122c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b811d0a0"/>
        <function-ref name="write" scoped="" ref="0x7f33b811d230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f33b811bb00" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f33b811bb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b811be80"/>
        <function-ref name="write" scoped="" ref="0x7f33b8122030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f33b81142b0" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f33b81142b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b8114630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f33b8112a80" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f33b8112a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f33b8112e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f33b8111020"/>
        <function-ref name="led1On" scoped="" ref="0x7f33b81111b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f33b8111340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f33b81114d0"/>
        <function-ref name="get" scoped="" ref="0x7f33b8111660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f33b81117f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f33b8111e30"/>
        <function-ref name="set" scoped="" ref="0x7f33b8111980"/>
        <function-ref name="led0On" scoped="" ref="0x7f33b8111b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f33b8111ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f33b8109940" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7f33b8109940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f33b8109cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f33b8109e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f33b8142b80" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f33b8142b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b8141020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b81411b0"/>
        <function-ref name="request" scoped="" ref="0x7f33b8141340"/>
        <function-ref name="granted" scoped="" ref="0x7f33b81414d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b8141660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f33b8127520" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f33b8127520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b81278a0"/>
        <function-ref name="write" scoped="" ref="0x7f33b8127a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f33b811fa90" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f33b811fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b8127020"/>
        <function-ref name="write" scoped="" ref="0x7f33b81271b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f33b812b0e0" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f33b812b0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f33b812b460"/>
        <function-ref name="disable" scoped="" ref="0x7f33b812b5f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f33b812b780"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f33b812b910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f33b8113020" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7f33b8113020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b81133a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b8113530"/>
        <function-ref name="request" scoped="" ref="0x7f33b81136c0"/>
        <function-ref name="granted" scoped="" ref="0x7f33b8113850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b81139e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f33b81149c0" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f33b81149c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b8114d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33b8092c70" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f33b8092c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b808f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f33b808f690" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f33b808f690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f33b808b020"/>
        <function-ref name="fired" scoped="" ref="0x7f33b808c020"/>
        <function-ref name="startAt" scoped="" ref="0x7f33b808c9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f33b808c4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f33b808b4e0"/>
        <function-ref name="start" scoped="" ref="0x7f33b808e5b0"/>
        <function-ref name="stop" scoped="" ref="0x7f33b808eac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33b808ad40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f33b808ad40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b80890e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f33b80895f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f33b80895f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f33b7e44e50"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7e45e00"/>
        <function-ref name="startAt" scoped="" ref="0x7f33b7e44800"/>
        <function-ref name="isRunning" scoped="" ref="0x7f33b7e44340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f33b7e42340"/>
        <function-ref name="start" scoped="" ref="0x7f33b7e45430"/>
        <function-ref name="stop" scoped="" ref="0x7f33b7e45940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f33b69b3a00" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f33b69b3a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f33b69b02a0"/>
        <function-ref name="fired" scoped="" ref="0x7f33b69b12a0"/>
        <function-ref name="startAt" scoped="" ref="0x7f33b69b1c20"/>
        <function-ref name="isRunning" scoped="" ref="0x7f33b69b1760"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f33b69b0760"/>
        <function-ref name="start" scoped="" ref="0x7f33b69b2890"/>
        <function-ref name="stop" scoped="" ref="0x7f33b69b2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33b69b31b0" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f33b69b31b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b69b3530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f33b69aca00" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f33b69aca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f33b69a82a0"/>
        <function-ref name="fired" scoped="" ref="0x7f33b69a92a0"/>
        <function-ref name="startAt" scoped="" ref="0x7f33b69a9c20"/>
        <function-ref name="isRunning" scoped="" ref="0x7f33b69a9760"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f33b69a8760"/>
        <function-ref name="start" scoped="" ref="0x7f33b69ab890"/>
        <function-ref name="stop" scoped="" ref="0x7f33b69abda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33b69ac1b0" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f33b69ac1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b69ac530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f33b6992020" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f33b6992020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b69923a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f33b6992530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f33b69926c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f33b6992850"/>
        <function-ref name="fired" scoped="" ref="0x7f33b69929e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f33b6995640" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f33b6995640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b69959c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f33b6995b50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b6995ce0"/>
        <function-ref name="get" scoped="" ref="0x7f33b6995e70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b6994030"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b69941c0"/>
        <function-ref name="getMode" scoped="" ref="0x7f33b6994350"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b69944e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f33b6994670"/>
        <function-ref name="setMode" scoped="" ref="0x7f33b6994800"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f33b6994990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f33b6994c20" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f33b6994c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f33b6993020"/>
        <function-ref name="getControl" scoped="" ref="0x7f33b69931b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b6993340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f33b69934d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f33b6993660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b69937f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f33b6993980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f33b6993b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f33b6993ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f33b80533f0" loc="52:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f33b80533f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b8053770"/>
        <function-ref name="setEvent" scoped="" ref="0x7f33b8053900"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f33b8053a90"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f33b8053c20"/>
        <function-ref name="fired" scoped="" ref="0x7f33b8053db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f33b805fcd0" loc="50:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f33b805fcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b80570a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f33b8057230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b80573c0"/>
        <function-ref name="get" scoped="" ref="0x7f33b8057550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b80576e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b8057870"/>
        <function-ref name="getMode" scoped="" ref="0x7f33b8057a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b8057b90"/>
        <function-ref name="overflow" scoped="" ref="0x7f33b8057d20"/>
        <function-ref name="setMode" scoped="" ref="0x7f33b8056020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f33b80561b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f33b8056a40" loc="51:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f33b8056a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f33b8056dc0"/>
        <function-ref name="getControl" scoped="" ref="0x7f33b8054020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b80541b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f33b8054340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f33b80544d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b8054660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f33b80547f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f33b8054980"/>
        <function-ref name="setControl" scoped="" ref="0x7f33b8054b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f33b8042a50" loc="56:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f33b8042a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f33b8042dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f33b8041020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b80411b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f33b8041340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f33b80414d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b8041660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f33b80417f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f33b8041980"/>
        <function-ref name="setControl" scoped="" ref="0x7f33b8041b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f33b803d5a0" loc="61:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f33b803d5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f33b803d920"/>
        <function-ref name="getControl" scoped="" ref="0x7f33b803dab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b803dc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f33b803ddd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f33b803c020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b803c1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f33b803c340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f33b803c4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f33b803c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f33b8043a20" loc="55:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f33b8043a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b8043da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f33b8042020"/>
        <function-ref name="captured" scoped="" ref="0x7f33b80421b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b8042340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b80424d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f33b8042660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f33b80313e0" loc="73:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f33b80313e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b8031760"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f33b80318f0"/>
        <function-ref name="captured" scoped="" ref="0x7f33b8031a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b8031c10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b8031da0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f33b8030020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f33b8049bb0" loc="54:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f33b8049bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b8043020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f33b80431b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f33b8043340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f33b80434d0"/>
        <function-ref name="fired" scoped="" ref="0x7f33b8043660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f33b8032570" loc="72:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f33b8032570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b80328f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f33b8032a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f33b8032c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f33b8032da0"/>
        <function-ref name="fired" scoped="" ref="0x7f33b8031020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f33b8027da0" loc="82:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f33b8027da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b8026180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f33b8026310"/>
        <function-ref name="captured" scoped="" ref="0x7f33b80264a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b8026630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b80267c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f33b8026950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f33b8030410" loc="74:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f33b8030410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f33b8030790"/>
        <function-ref name="getControl" scoped="" ref="0x7f33b8030920"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b8030ab0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f33b8030c40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f33b8030dd0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b802e020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f33b802e1b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f33b802e340"/>
        <function-ref name="setControl" scoped="" ref="0x7f33b802e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f33b804d280" loc="50:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f33b804d280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f33b804d600"/>
        <function-ref name="getControl" scoped="" ref="0x7f33b804d790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b804d920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f33b804dab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f33b804dc40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b804ddd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f33b804c020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f33b804c1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f33b804c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f33b8038da0" loc="66:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f33b8038da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b8037180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f33b8037310"/>
        <function-ref name="captured" scoped="" ref="0x7f33b80374a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b8037630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b80377c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f33b8037950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f33b8038020" loc="65:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f33b8038020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b80383a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f33b8038530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f33b80386c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f33b8038850"/>
        <function-ref name="fired" scoped="" ref="0x7f33b80389e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f33b803aa50" loc="64:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f33b803aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f33b803add0"/>
        <function-ref name="getControl" scoped="" ref="0x7f33b8039020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b80391b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f33b8039340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f33b80394d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b8039660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f33b80397f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f33b8039980"/>
        <function-ref name="setControl" scoped="" ref="0x7f33b8039b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f33b8040da0" loc="58:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f33b8040da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b803f180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f33b803f310"/>
        <function-ref name="captured" scoped="" ref="0x7f33b803f4a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b803f630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b803f7c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f33b803f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f33b802d890" loc="76:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f33b802d890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b802dc10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f33b802dda0"/>
        <function-ref name="captured" scoped="" ref="0x7f33b802c020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b802c1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b802c340"/>
        <function-ref name="setEdge" scoped="" ref="0x7f33b802c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f33b8037d40" loc="67:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f33b8037d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f33b80360e0"/>
        <function-ref name="getControl" scoped="" ref="0x7f33b8036270"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b8036400"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f33b8036590"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f33b8036720"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b80368b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f33b8036a40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f33b8036bd0"/>
        <function-ref name="setControl" scoped="" ref="0x7f33b8036d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f33b8040020" loc="57:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f33b8040020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b80403a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f33b8040530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f33b80406c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f33b8040850"/>
        <function-ref name="fired" scoped="" ref="0x7f33b80409e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f33b8051a30" loc="49:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f33b8051a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b8051db0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f33b804e020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b804e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f33b804e340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b804e4d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b804e660"/>
        <function-ref name="getMode" scoped="" ref="0x7f33b804e7f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b804e980"/>
        <function-ref name="overflow" scoped="" ref="0x7f33b804eb10"/>
        <function-ref name="setMode" scoped="" ref="0x7f33b804eca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f33b804ee30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f33b802e890" loc="75:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f33b802e890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b802ee10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f33b802d020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f33b802d1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f33b802d340"/>
        <function-ref name="fired" scoped="" ref="0x7f33b802d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f33b804a730" loc="53:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f33b804a730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f33b804aab0"/>
        <function-ref name="getControl" scoped="" ref="0x7f33b804ac40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b804add0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f33b8049020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f33b80491b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b8049340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f33b80494d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f33b8049660"/>
        <function-ref name="setControl" scoped="" ref="0x7f33b80497f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f33b802c8c0" loc="77:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f33b802c8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f33b802cc40"/>
        <function-ref name="getControl" scoped="" ref="0x7f33b802cdd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b802b020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f33b802b1b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f33b802b340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b802b4d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f33b802b660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f33b802b7f0"/>
        <function-ref name="setControl" scoped="" ref="0x7f33b802b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f33b8044690" loc="52:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f33b8044690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b8044a10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f33b8044ba0"/>
        <function-ref name="captured" scoped="" ref="0x7f33b8044d30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b804a020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b804a1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f33b804a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f33b8034020" loc="69:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f33b8034020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b80343a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f33b8034530"/>
        <function-ref name="captured" scoped="" ref="0x7f33b80346c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b8034850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b80349e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f33b8034b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f33b804c700" loc="51:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f33b804c700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b804ca80"/>
        <function-ref name="setEvent" scoped="" ref="0x7f33b804cc10"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f33b804cda0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f33b804b020"/>
        <function-ref name="fired" scoped="" ref="0x7f33b804b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f33b8035160" loc="68:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f33b8035160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b80354e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f33b8035670"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f33b8035800"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f33b8035990"/>
        <function-ref name="fired" scoped="" ref="0x7f33b8035b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f33b802aae0" loc="79:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f33b802aae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b802ae60"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f33b8029020"/>
        <function-ref name="captured" scoped="" ref="0x7f33b80291b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b8029340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b80294d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f33b8029660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f33b8033020" loc="71:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f33b8033020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f33b80333a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f33b8033530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b80336c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f33b8033850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f33b80339e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b8033b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f33b8033d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f33b8032020"/>
        <function-ref name="setControl" scoped="" ref="0x7f33b80321b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f33b803fcd0" loc="60:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f33b803fcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b803e0a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f33b803e230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b803e3c0"/>
        <function-ref name="get" scoped="" ref="0x7f33b803e550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b803e6e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b803e870"/>
        <function-ref name="getMode" scoped="" ref="0x7f33b803ea00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b803eb90"/>
        <function-ref name="overflow" scoped="" ref="0x7f33b803ed20"/>
        <function-ref name="setMode" scoped="" ref="0x7f33b803d020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f33b803d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f33b803ba20" loc="63:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f33b803ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b803bda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f33b803a020"/>
        <function-ref name="captured" scoped="" ref="0x7f33b803a1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b803a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b803a4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f33b803a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f33b802bd40" loc="78:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f33b802bd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b802a0e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f33b802a270"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f33b802a400"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f33b802a590"/>
        <function-ref name="fired" scoped="" ref="0x7f33b802a720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f33b8027020" loc="81:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f33b8027020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b80273a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f33b8027530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f33b80276c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f33b8027850"/>
        <function-ref name="fired" scoped="" ref="0x7f33b80279e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f33b803ca20" loc="62:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f33b803ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b803b020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f33b803b1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f33b803b340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f33b803b4d0"/>
        <function-ref name="fired" scoped="" ref="0x7f33b803b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f33b8029a50" loc="80:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f33b8029a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f33b8029dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f33b8028020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b80281b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f33b8028340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f33b80284d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b8028660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f33b80287f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f33b8028980"/>
        <function-ref name="setControl" scoped="" ref="0x7f33b8028b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f33b7fee940" loc="55:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f33b7fee940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f33b7feecc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f33b7fee2f0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f33b7fee2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f33b7fee670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f33b7fed020" loc="56:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f33b7fed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f33b7fed3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f33b7fefbf0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f33b7fefbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f33b7fee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f33b7ff03e0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f33b7ff03e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7ff0760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f33b7ff08f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b7ff0a80"/>
        <function-ref name="get" scoped="" ref="0x7f33b7ff0c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b7ff0da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b7fef020"/>
        <function-ref name="getMode" scoped="" ref="0x7f33b7fef1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b7fef340"/>
        <function-ref name="overflow" scoped="" ref="0x7f33b7fef4d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f33b7fef660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f33b7fef7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f33b7fe7750" loc="55:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f33b7fe7750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f33b7fe7ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f33b7fe7100" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f33b7fe7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f33b7fe7480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f33b7fe7da0" loc="56:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f33b7fe7da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f33b7fe5180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f33b7fe8a60" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f33b7fe8a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f33b7fe8e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f33b7fe9260" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f33b7fe9260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7fe95e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f33b7fe9770"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b7fe9900"/>
        <function-ref name="get" scoped="" ref="0x7f33b7fe9a90"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b7fe9c20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b7fe9db0"/>
        <function-ref name="getMode" scoped="" ref="0x7f33b7fe8020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b7fe81b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f33b7fe8340"/>
        <function-ref name="setMode" scoped="" ref="0x7f33b7fe84d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f33b7fe8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f33b7f9c7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f33b7f9c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b7f9cb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f33b7f9ccb0"/>
        <function-ref name="captured" scoped="" ref="0x7f33b7f9ce40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b7f9b020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b7f9b1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f33b7f9b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f33b7fe26d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f33b7fe26d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f33b7fe2a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f33b7fe2be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b7fe2d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f33b7f9d020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f33b7f9d1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b7f9d340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f33b7f9d4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f33b7f9d660"/>
        <function-ref name="setControl" scoped="" ref="0x7f33b7f9d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f33b7f99c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f33b7f99c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f33b7f98020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f33b7f9dac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f33b7f9dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b7f9de40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f33b7f9c020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f33b7f9c1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f33b7f9c340"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7f9c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f33b7f9b610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f33b7f9b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7f9b990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f33b7f9bb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b7f9bcb0"/>
        <function-ref name="get" scoped="" ref="0x7f33b7f9be40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b7f99020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b7f991b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f33b7f99340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b7f994d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f33b7f99660"/>
        <function-ref name="setMode" scoped="" ref="0x7f33b7f997f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f33b7f99980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f33b7f94cb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f33b7f94cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b7f930a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f33b7f93230"/>
        <function-ref name="captured" scoped="" ref="0x7f33b7f933c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b7f93550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b7f936e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f33b7f93870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f33b7f96b30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f33b7f96b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f33b7f95020"/>
        <function-ref name="getControl" scoped="" ref="0x7f33b7f951b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b7f95340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f33b7f954d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f33b7f95660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b7f957f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f33b7f95980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f33b7f95b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f33b7f95ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f33b7f912f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f33b7f912f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f33b7f91670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f33b7f94020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f33b7f94020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b7f943a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f33b7f94530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f33b7f946c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f33b7f94850"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7f949e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f33b7f93b40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f33b7f93b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7f92020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f33b7f921b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b7f92340"/>
        <function-ref name="get" scoped="" ref="0x7f33b7f924d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b7f92660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b7f927f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f33b7f92980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b7f92b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f33b7f92ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f33b7f92e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f33b7f91020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f33b7f8c2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f33b7f8c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b7f8c670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f33b7f8c800"/>
        <function-ref name="captured" scoped="" ref="0x7f33b7f8c990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b7f8cb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b7f8ccb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f33b7f8ce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f33b7f8e220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f33b7f8e220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f33b7f8e5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f33b7f8e730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b7f8e8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f33b7f8ea50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f33b7f8ebe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b7f8ed70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f33b7f8d020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f33b7f8d1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f33b7f8d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f33b7f8a7a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f33b7f8a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f33b7f8ab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f33b7f8d610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f33b7f8d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b7f8d990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f33b7f8db20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f33b7f8dcb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f33b7f8de40"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7f8c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f33b7f8b160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f33b7f8b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7f8b4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f33b7f8b670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b7f8b800"/>
        <function-ref name="get" scoped="" ref="0x7f33b7f8b990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b7f8bb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b7f8bcb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f33b7f8be40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b7f8a020"/>
        <function-ref name="overflow" scoped="" ref="0x7f33b7f8a1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f33b7f8a340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f33b7f8a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f33b7f847a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f33b7f847a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b7f84b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f33b7f84cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f33b7f84e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b7f83020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b7f831b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f33b7f83340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f33b7f866d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f33b7f866d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f33b7f86a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f33b7f86be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b7f86d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f33b7f85020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f33b7f851b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b7f85340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f33b7f854d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f33b7f85660"/>
        <function-ref name="setControl" scoped="" ref="0x7f33b7f857f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f33b7f82c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f33b7f82c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f33b7f81020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f33b7f85ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f33b7f85ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b7f85e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f33b7f84020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f33b7f841b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f33b7f84340"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7f844d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f33b7f83610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f33b7f83610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7f83990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f33b7f83b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b7f83cb0"/>
        <function-ref name="get" scoped="" ref="0x7f33b7f83e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b7f82020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b7f821b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f33b7f82340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b7f824d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f33b7f82660"/>
        <function-ref name="setMode" scoped="" ref="0x7f33b7f827f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f33b7f82980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f33b7f7dcb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f33b7f7dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b7f7c0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f33b7f7c230"/>
        <function-ref name="captured" scoped="" ref="0x7f33b7f7c3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b7f7c550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b7f7c6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f33b7f7c870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f33b7f7fb30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f33b7f7fb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f33b7f7e020"/>
        <function-ref name="getControl" scoped="" ref="0x7f33b7f7e1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b7f7e340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f33b7f7e4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f33b7f7e660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b7f7e7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f33b7f7e980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f33b7f7eb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f33b7f7eca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f33b7f7a2f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f33b7f7a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f33b7f7a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f33b7f7d020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f33b7f7d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b7f7d3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f33b7f7d530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f33b7f7d6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f33b7f7d850"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7f7d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f33b7f7cb40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f33b7f7cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7f7b020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f33b7f7b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b7f7b340"/>
        <function-ref name="get" scoped="" ref="0x7f33b7f7b4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b7f7b660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b7f7b7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f33b7f7b980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b7f7bb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f33b7f7bca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f33b7f7be30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f33b7f7a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f33b7f742f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f33b7f742f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b7f74670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f33b7f74800"/>
        <function-ref name="captured" scoped="" ref="0x7f33b7f74990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b7f74b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b7f74cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f33b7f74e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f33b7f76220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f33b7f76220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f33b7f765a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f33b7f76730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b7f768c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f33b7f76a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f33b7f76be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b7f76d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f33b7f75020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f33b7f751b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f33b7f75340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f33b7f727a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f33b7f727a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f33b7f72b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f33b7f75610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f33b7f75610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b7f75990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f33b7f75b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f33b7f75cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f33b7f75e40"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7f74020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f33b7f73160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f33b7f73160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7f734e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f33b7f73670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b7f73800"/>
        <function-ref name="get" scoped="" ref="0x7f33b7f73990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b7f73b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b7f73cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f33b7f73e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b7f72020"/>
        <function-ref name="overflow" scoped="" ref="0x7f33b7f721b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f33b7f72340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f33b7f724d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f33b7f6d7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f33b7f6d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b7f6db20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f33b7f6dcb0"/>
        <function-ref name="captured" scoped="" ref="0x7f33b7f6de40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b7f6c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b7f6c1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f33b7f6c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f33b7f6f6d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f33b7f6f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f33b7f6fa50"/>
        <function-ref name="getControl" scoped="" ref="0x7f33b7f6fbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b7f6fd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f33b7f6e020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f33b7f6e1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b7f6e340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f33b7f6e4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f33b7f6e660"/>
        <function-ref name="setControl" scoped="" ref="0x7f33b7f6e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f33b7f6bc50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f33b7f6bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f33b7f6a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f33b7f6eac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f33b7f6eac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b7f6ee40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f33b7f6d020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f33b7f6d1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f33b7f6d340"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7f6d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f33b7f6c610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f33b7f6c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7f6c990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f33b7f6cb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b7f6ccb0"/>
        <function-ref name="get" scoped="" ref="0x7f33b7f6ce40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b7f6b020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b7f6b1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f33b7f6b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b7f6b4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f33b7f6b660"/>
        <function-ref name="setMode" scoped="" ref="0x7f33b7f6b7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f33b7f6b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f33b7f65cb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f33b7f65cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b7f640a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f33b7f64230"/>
        <function-ref name="captured" scoped="" ref="0x7f33b7f643c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b7f64550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b7f646e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f33b7f64870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f33b7f67b30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f33b7f67b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f33b7f66020"/>
        <function-ref name="getControl" scoped="" ref="0x7f33b7f661b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b7f66340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f33b7f664d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f33b7f66660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b7f667f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f33b7f66980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f33b7f66b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f33b7f66ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f33b7f622f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f33b7f622f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f33b7f62670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f33b7f65020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f33b7f65020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b7f653a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f33b7f65530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f33b7f656c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f33b7f65850"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7f659e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f33b7f64b40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f33b7f64b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7f63020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f33b7f631b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b7f63340"/>
        <function-ref name="get" scoped="" ref="0x7f33b7f634d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b7f63660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b7f637f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f33b7f63980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b7f63b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f33b7f63ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f33b7f63e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f33b7f62020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f33b7f5d2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f33b7f5d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b7f5d670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f33b7f5d800"/>
        <function-ref name="captured" scoped="" ref="0x7f33b7f5d990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b7f5db20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b7f5dcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f33b7f5de40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f33b7f5f220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f33b7f5f220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f33b7f5f5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f33b7f5f730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b7f5f8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f33b7f5fa50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f33b7f5fbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b7f5fd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f33b7f5e020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f33b7f5e1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f33b7f5e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f33b7f5b7a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f33b7f5b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f33b7f5bb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f33b7f5e610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f33b7f5e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b7f5e990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f33b7f5eb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f33b7f5ecb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f33b7f5ee40"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7f5d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f33b7f5c160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f33b7f5c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7f5c4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f33b7f5c670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b7f5c800"/>
        <function-ref name="get" scoped="" ref="0x7f33b7f5c990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b7f5cb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b7f5ccb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f33b7f5ce40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b7f5b020"/>
        <function-ref name="overflow" scoped="" ref="0x7f33b7f5b1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f33b7f5b340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f33b7f5b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f33b7f557a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f33b7f557a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b7f55b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f33b7f55cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f33b7f55e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b7f54020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b7f541b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f33b7f54340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f33b7f586d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f33b7f586d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f33b7f58a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f33b7f58be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b7f58d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f33b7f56020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f33b7f561b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b7f56340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f33b7f564d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f33b7f56660"/>
        <function-ref name="setControl" scoped="" ref="0x7f33b7f567f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f33b7f53c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f33b7f53c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f33b7f52020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f33b7f56ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f33b7f56ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b7f56e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f33b7f55020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f33b7f551b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f33b7f55340"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7f554d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f33b7f54610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f33b7f54610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7f54990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f33b7f54b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b7f54cb0"/>
        <function-ref name="get" scoped="" ref="0x7f33b7f54e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b7f53020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b7f531b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f33b7f53340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b7f534d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f33b7f53660"/>
        <function-ref name="setMode" scoped="" ref="0x7f33b7f537f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f33b7f53980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f33b7f4dbc0" loc="7:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f33b7f4dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f33b7f4c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f33b7f4e3f0" loc="4:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f33b7f4e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f33b7f4e770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f33b7f4eb80" loc="5:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f33b7f4eb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f33b7f4d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f33b7f4d430" loc="6:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f33b7f4d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f33b7f4d7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f33b6989da0" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f33b6989da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b6988180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f33b6988310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f33b69884a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f33b6988630"/>
        <function-ref name="fired" scoped="" ref="0x7f33b69887c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f33b698c4c0" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f33b698c4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b698c840"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f33b698c9d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b698cb60"/>
        <function-ref name="get" scoped="" ref="0x7f33b698ccf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b698ce80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b698a030"/>
        <function-ref name="getMode" scoped="" ref="0x7f33b698a1c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b698a350"/>
        <function-ref name="overflow" scoped="" ref="0x7f33b698a4e0"/>
        <function-ref name="setMode" scoped="" ref="0x7f33b698a670"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f33b698a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f33b698f340" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f33b698f340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f33b698dba0"/>
        <function-ref name="fired" scoped="" ref="0x7f33b698eb80"/>
        <function-ref name="startAt" scoped="" ref="0x7f33b698d550"/>
        <function-ref name="isRunning" scoped="" ref="0x7f33b698d090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f33b698c090"/>
        <function-ref name="start" scoped="" ref="0x7f33b698e1b0"/>
        <function-ref name="stop" scoped="" ref="0x7f33b698e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33b6990a30" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f33b6990a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b6990db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f33b698aa90" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f33b698aa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f33b698ae10"/>
        <function-ref name="getControl" scoped="" ref="0x7f33b6989020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b69891b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f33b6989340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f33b69894d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b6989660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f33b69897f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f33b6989980"/>
        <function-ref name="setControl" scoped="" ref="0x7f33b6989b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f33b7ec48c0" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f33b7ec48c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33b7ec8700"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b7ec70d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b7ec8bc0"/>
        <function-ref name="overflow" scoped="" ref="0x7f33b7ec7590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f33b7ec28e0" loc="43:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f33b7ec28e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33b7ebf780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b7ebd150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b7ebfc40"/>
        <function-ref name="overflow" scoped="" ref="0x7f33b7ebd610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f33b7eadc50" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f33b7eadc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7eab020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f33b7eab1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b7eab340"/>
        <function-ref name="get" scoped="" ref="0x7f33b7eab4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b7eab660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b7eab7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f33b7eab980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b7eabb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f33b7eabca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f33b7eabe30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f33b7eaa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f33b7ebbb80" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f33b7ebbb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33b7eba9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b7ead360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b7ebae70"/>
        <function-ref name="overflow" scoped="" ref="0x7f33b7ead820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f33b7e890f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f33b7e890f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33b7e88020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b7e889a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b7e884e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f33b7e88e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f33b7ea7cf0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f33b7ea7cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33b7e8cb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b7e8a550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b7e8a090"/>
        <function-ref name="overflow" scoped="" ref="0x7f33b7e8aa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f33b69a6c90" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f33b69a6c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f33b69a34e0"/>
        <function-ref name="fired" scoped="" ref="0x7f33b69a44e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f33b69a4e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f33b69a49a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f33b69a39a0"/>
        <function-ref name="start" scoped="" ref="0x7f33b69a5ac0"/>
        <function-ref name="stop" scoped="" ref="0x7f33b69a4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f33b699f410" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f33b699f410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f33b699dc20"/>
        <function-ref name="fired" scoped="" ref="0x7f33b699ec20"/>
        <function-ref name="startAt" scoped="" ref="0x7f33b699d5d0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f33b699d110"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f33b699b110"/>
        <function-ref name="start" scoped="" ref="0x7f33b699e250"/>
        <function-ref name="stop" scoped="" ref="0x7f33b699e760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f33b69a1060" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f33b69a1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33b69a1e70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b69a0820"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b69a0360"/>
        <function-ref name="overflow" scoped="" ref="0x7f33b69a0ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f33b7e3d9c0" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f33b7e3d9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b7e3dd40"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b7e3c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b7e3c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b7e3c340"/>
        <function-ref name="get" scoped="" ref="0x7f33b7e3c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b7e3c660"/>
        <function-ref name="set" scoped="" ref="0x7f33b7e3c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b7e3c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f33b7e3ccf0" loc="45:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f33b7e3ccf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b7e3b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b7e3b230"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b7e3b3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b7e3b550"/>
        <function-ref name="get" scoped="" ref="0x7f33b7e3b6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b7e3b870"/>
        <function-ref name="set" scoped="" ref="0x7f33b7e3ba00"/>
        <function-ref name="clr" scoped="" ref="0x7f33b7e3bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f33b7e3a020" loc="46:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f33b7e3a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b7e3a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b7e3a530"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b7e3a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b7e3a850"/>
        <function-ref name="get" scoped="" ref="0x7f33b7e3a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b7e3ab70"/>
        <function-ref name="set" scoped="" ref="0x7f33b7e3ad00"/>
        <function-ref name="clr" scoped="" ref="0x7f33b7e39020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f33b7e3e690" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f33b7e3e690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b7e3ea10"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b7e3eba0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b7e3ed30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b7e3d020"/>
        <function-ref name="get" scoped="" ref="0x7f33b7e3d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b7e3d340"/>
        <function-ref name="set" scoped="" ref="0x7f33b7e3d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b7e3d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f33b7e386a0" loc="48:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f33b7e386a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b7e38a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b7e38bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b7e38d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b7e37020"/>
        <function-ref name="get" scoped="" ref="0x7f33b7e371b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b7e37340"/>
        <function-ref name="set" scoped="" ref="0x7f33b7e374d0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b7e37660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f33b7e3f3e0" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f33b7e3f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b7e3f760"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b7e3f8f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b7e3fa80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b7e3fc10"/>
        <function-ref name="get" scoped="" ref="0x7f33b7e3fda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b7e3e020"/>
        <function-ref name="set" scoped="" ref="0x7f33b7e3e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b7e3e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f33b7e39370" loc="47:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f33b7e39370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b7e396f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b7e39880"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b7e39a10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b7e39ba0"/>
        <function-ref name="get" scoped="" ref="0x7f33b7e39d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b7e38020"/>
        <function-ref name="set" scoped="" ref="0x7f33b7e381b0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b7e38340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f33b7e35c50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f33b7e35c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b7e34020"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b7e341b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b7e34340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b7e32020"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b7e34660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b7e347f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b7e34980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b7e34b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b7e34ca0"/>
        <function-ref name="get" scoped="" ref="0x7f33b7e34e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b7e33020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b7e331b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b7e33340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b7e335d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b7e33760"/>
        <function-ref name="set" scoped="" ref="0x7f33b7e338f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b7e33a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b7e33c10"/>
        <function-ref name="clr" scoped="" ref="0x7f33b7e344d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b7e33da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f33b7e36a20" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f33b7e36a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b7e36da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b7e35020"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b7e351b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b7e35340"/>
        <function-ref name="get" scoped="" ref="0x7f33b7e354d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b7e35660"/>
        <function-ref name="set" scoped="" ref="0x7f33b7e357f0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b7e35980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f33b7e2f2f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f33b7e2f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b7e2f670"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b7e2f800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b7e2f990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b7e2c660"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b7e2fcb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b7e2fe40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b7e2d020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b7e2d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b7e2d340"/>
        <function-ref name="get" scoped="" ref="0x7f33b7e2d4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b7e2d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b7e2d7f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b7e2d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b7e2dc10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b7e2dda0"/>
        <function-ref name="set" scoped="" ref="0x7f33b7e2c020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b7e2c1b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b7e2c340"/>
        <function-ref name="clr" scoped="" ref="0x7f33b7e2fb20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b7e2c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f33b7e30020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f33b7e30020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b7e303a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b7e30530"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b7e306c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b7e30850"/>
        <function-ref name="get" scoped="" ref="0x7f33b7e309e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b7e30b70"/>
        <function-ref name="set" scoped="" ref="0x7f33b7e30d00"/>
        <function-ref name="clr" scoped="" ref="0x7f33b7e2f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f33b7e297a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f33b7e297a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b7e29b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b7e29cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b7e29e40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b7e27a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b7e281b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b7e28340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b7e284d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b7e28660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b7e287f0"/>
        <function-ref name="get" scoped="" ref="0x7f33b7e28980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b7e28b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b7e28ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b7e28e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b7e27120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b7e272b0"/>
        <function-ref name="set" scoped="" ref="0x7f33b7e27440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b7e275d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b7e27760"/>
        <function-ref name="clr" scoped="" ref="0x7f33b7e28020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b7e278f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f33b7e2a630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f33b7e2a630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b7e2a9b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b7e2ab40"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b7e2acd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b7e2ae60"/>
        <function-ref name="get" scoped="" ref="0x7f33b7e29020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b7e291b0"/>
        <function-ref name="set" scoped="" ref="0x7f33b7e29340"/>
        <function-ref name="clr" scoped="" ref="0x7f33b7e294d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f33b7e24c60" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f33b7e24c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b7e23020"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b7e231b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b7e23340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b7e21020"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b7e23660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b7e237f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b7e23980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b7e23b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b7e23ca0"/>
        <function-ref name="get" scoped="" ref="0x7f33b7e23e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b7e22020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b7e221b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b7e22340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b7e225d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b7e22760"/>
        <function-ref name="set" scoped="" ref="0x7f33b7e228f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b7e22a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b7e22c10"/>
        <function-ref name="clr" scoped="" ref="0x7f33b7e234d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b7e22da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f33b7e25b00" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f33b7e25b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b7e25e80"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b7e24030"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b7e241c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b7e24350"/>
        <function-ref name="get" scoped="" ref="0x7f33b7e244e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b7e24670"/>
        <function-ref name="set" scoped="" ref="0x7f33b7e24800"/>
        <function-ref name="clr" scoped="" ref="0x7f33b7e24990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f33b7e1e2f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f33b7e1e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b7e1e670"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b7e1e800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b7e1e990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b7e1c660"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b7e1ecb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b7e1ee40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b7e1d020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b7e1d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b7e1d340"/>
        <function-ref name="get" scoped="" ref="0x7f33b7e1d4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b7e1d660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b7e1d7f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b7e1d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b7e1dc10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b7e1dda0"/>
        <function-ref name="set" scoped="" ref="0x7f33b7e1c020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b7e1c1b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b7e1c340"/>
        <function-ref name="clr" scoped="" ref="0x7f33b7e1eb20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b7e1c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f33b7e1f020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f33b7e1f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b7e1f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b7e1f530"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b7e1f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b7e1f850"/>
        <function-ref name="get" scoped="" ref="0x7f33b7e1f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b7e1fb70"/>
        <function-ref name="set" scoped="" ref="0x7f33b7e1fd00"/>
        <function-ref name="clr" scoped="" ref="0x7f33b7e1e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f33b7e197a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f33b7e197a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b7e19b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b7e19cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b7e19e40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b7e17a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b7e181b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b7e18340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b7e184d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b7e18660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b7e187f0"/>
        <function-ref name="get" scoped="" ref="0x7f33b7e18980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b7e18b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b7e18ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b7e18e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b7e17120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b7e172b0"/>
        <function-ref name="set" scoped="" ref="0x7f33b7e17440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b7e175d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b7e17760"/>
        <function-ref name="clr" scoped="" ref="0x7f33b7e18020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b7e178f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f33b7e1a630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f33b7e1a630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b7e1a9b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b7e1ab40"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b7e1acd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b7e1ae60"/>
        <function-ref name="get" scoped="" ref="0x7f33b7e19020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b7e191b0"/>
        <function-ref name="set" scoped="" ref="0x7f33b7e19340"/>
        <function-ref name="clr" scoped="" ref="0x7f33b7e194d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f33b7e13c60" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f33b7e13c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b7e12020"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b7e121b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b7e12340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b7e10020"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b7e12660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b7e127f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b7e12980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b7e12b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b7e12ca0"/>
        <function-ref name="get" scoped="" ref="0x7f33b7e12e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b7e11020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b7e111b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b7e11340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b7e115d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b7e11760"/>
        <function-ref name="set" scoped="" ref="0x7f33b7e118f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b7e11a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b7e11c10"/>
        <function-ref name="clr" scoped="" ref="0x7f33b7e124d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b7e11da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f33b7e15b00" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f33b7e15b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b7e15e80"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b7e13030"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b7e131c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b7e13350"/>
        <function-ref name="get" scoped="" ref="0x7f33b7e134e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b7e13670"/>
        <function-ref name="set" scoped="" ref="0x7f33b7e13800"/>
        <function-ref name="clr" scoped="" ref="0x7f33b7e13990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f33b7df7700" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f33b7df7700"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f33b7df7a80"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7df7c10"/>
        <function-ref name="captured" scoped="" ref="0x7f33b7df7da0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f33b7dfa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f33b7dfa400" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f33b7dfa400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f33b7dfa780"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7dfa910"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f33b7dfaaa0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f33b7dfac30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f33b7df9060" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f33b7df9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f33b7df93e0"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7df9570"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f33b7df9700"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f33b7df9890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7f33b7ddba80" loc="50:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7f33b7ddba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b7ddbe00"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f33b7dda020"/>
        <function-ref name="captured" scoped="" ref="0x7f33b7dda1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b7dda340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b7dda4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f33b7dda660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f33b7defc20" loc="48:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f33b7defc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f33b7ddc020"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7ddc1b0"/>
        <function-ref name="captured" scoped="" ref="0x7f33b7ddc340"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f33b7ddc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f33b7ddc760" loc="49:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f33b7ddc760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f33b7ddcae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f33b7ddcc70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b7ddce00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f33b7ddb020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f33b7ddb1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b7ddb340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f33b7ddb4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f33b7ddb660"/>
        <function-ref name="setControl" scoped="" ref="0x7f33b7ddb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f33b7dda930" loc="51:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f33b7dda930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b7ddacb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b7ddae40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b7dd9020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b7dd8c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b7dd9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b7dd94d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b7dd9660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b7dd97f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b7dd9980"/>
        <function-ref name="get" scoped="" ref="0x7f33b7dd9b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b7dd9ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b7dd9e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b7dd8020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b7dd82b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b7dd8440"/>
        <function-ref name="set" scoped="" ref="0x7f33b7dd85d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b7dd8760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b7dd88f0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b7dd91b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b7dd8a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f33b7dc7020" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f33b7dc7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7dc73a0"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7dc7530"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7dc76c0"/>
        <function-ref name="edge" scoped="" ref="0x7f33b7dc7850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f33b7dc79e0"/>
        <function-ref name="enable" scoped="" ref="0x7f33b7dc7b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f33b7dc7d00"/>
        <function-ref name="getValue" scoped="" ref="0x7f33b7dc6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f33b7dba3f0" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f33b7dba3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7dba770"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7dba900"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7dbaa90"/>
        <function-ref name="edge" scoped="" ref="0x7f33b7dbac20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f33b7dbadb0"/>
        <function-ref name="enable" scoped="" ref="0x7f33b7db9020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f33b7db91b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f33b7db9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f33b7dc4a30" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f33b7dc4a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7dc4db0"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7dc3020"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7dc31b0"/>
        <function-ref name="edge" scoped="" ref="0x7f33b7dc3340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f33b7dc34d0"/>
        <function-ref name="enable" scoped="" ref="0x7f33b7dc3660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f33b7dc37f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f33b7dc3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f33b7dc0020" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f33b7dc0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7dc03a0"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7dc0530"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7dc06c0"/>
        <function-ref name="edge" scoped="" ref="0x7f33b7dc0850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f33b7dc09e0"/>
        <function-ref name="enable" scoped="" ref="0x7f33b7dc0b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f33b7dc0d00"/>
        <function-ref name="getValue" scoped="" ref="0x7f33b7dbf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f33b7dd0a30" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f33b7dd0a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7dd0db0"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7dc9020"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7dc91b0"/>
        <function-ref name="edge" scoped="" ref="0x7f33b7dc9340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f33b7dc94d0"/>
        <function-ref name="enable" scoped="" ref="0x7f33b7dc9660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f33b7dc97f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f33b7dc9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f33b7dbda30" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f33b7dbda30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7dbc020"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7dbc1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7dbc340"/>
        <function-ref name="edge" scoped="" ref="0x7f33b7dbc4d0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f33b7dbc660"/>
        <function-ref name="enable" scoped="" ref="0x7f33b7dbc7f0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f33b7dbc980"/>
        <function-ref name="getValue" scoped="" ref="0x7f33b7dbcb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f33b7dc63f0" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f33b7dc63f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7dc6770"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7dc6900"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7dc6a90"/>
        <function-ref name="edge" scoped="" ref="0x7f33b7dc6c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f33b7dc6db0"/>
        <function-ref name="enable" scoped="" ref="0x7f33b7dc5020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f33b7dc51b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f33b7dc5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f33b7db9710" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f33b7db9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7db9a90"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7db9c20"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7db9db0"/>
        <function-ref name="edge" scoped="" ref="0x7f33b7db8020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f33b7db81b0"/>
        <function-ref name="enable" scoped="" ref="0x7f33b7db8340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f33b7db84d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f33b7db8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f33b7dca3d0" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f33b7dca3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7dca750"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7dca8e0"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7dcaa70"/>
        <function-ref name="edge" scoped="" ref="0x7f33b7dcac00"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f33b7dcad90"/>
        <function-ref name="enable" scoped="" ref="0x7f33b7dd1020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f33b7dd11b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f33b7dd1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f33b7dbf3f0" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f33b7dbf3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7dbf770"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7dbf900"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7dbfa90"/>
        <function-ref name="edge" scoped="" ref="0x7f33b7dbfc20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f33b7dbfdb0"/>
        <function-ref name="enable" scoped="" ref="0x7f33b7dbe020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f33b7dbe1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f33b7dbe340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f33b7dc9d50" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f33b7dc9d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7dc8100"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7dc8290"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7dc8420"/>
        <function-ref name="edge" scoped="" ref="0x7f33b7dc85b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f33b7dc8740"/>
        <function-ref name="enable" scoped="" ref="0x7f33b7dc88d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f33b7dc8a60"/>
        <function-ref name="getValue" scoped="" ref="0x7f33b7dc8bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f33b7dbb020" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f33b7dbb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7dbb3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7dbb530"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7dbb6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f33b7dbb850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f33b7dbb9e0"/>
        <function-ref name="enable" scoped="" ref="0x7f33b7dbbb70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f33b7dbbd00"/>
        <function-ref name="getValue" scoped="" ref="0x7f33b7dba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f33b7dc5710" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f33b7dc5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7dc5a90"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7dc5c20"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7dc5db0"/>
        <function-ref name="edge" scoped="" ref="0x7f33b7dc4020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f33b7dc41b0"/>
        <function-ref name="enable" scoped="" ref="0x7f33b7dc4340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f33b7dc44d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f33b7dc4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f33b7dc3d50" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f33b7dc3d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7dc1100"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7dc1290"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7dc1420"/>
        <function-ref name="edge" scoped="" ref="0x7f33b7dc15b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f33b7dc1740"/>
        <function-ref name="enable" scoped="" ref="0x7f33b7dc18d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f33b7dc1a60"/>
        <function-ref name="getValue" scoped="" ref="0x7f33b7dc1bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f33b7dd1710" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f33b7dd1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7dd1a90"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7dd1c20"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7dd1db0"/>
        <function-ref name="edge" scoped="" ref="0x7f33b7dd0020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f33b7dd01b0"/>
        <function-ref name="enable" scoped="" ref="0x7f33b7dd0340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f33b7dd04d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f33b7dd0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f33b7dbe710" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f33b7dbe710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7dbea90"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7dbec20"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7dbedb0"/>
        <function-ref name="edge" scoped="" ref="0x7f33b7dbd020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f33b7dbd1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f33b7dbd340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f33b7dbd4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f33b7dbd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f33b7db03f0" loc="58:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f33b7db03f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7db0770"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7db0900"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7db0a90"/>
        <function-ref name="edge" scoped="" ref="0x7f33b7db0c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f33b7db0db0"/>
        <function-ref name="enable" scoped="" ref="0x7f33b7daf020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f33b7daf1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f33b7daf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f33b7da43f0" loc="70:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f33b7da43f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7da4770"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7da4900"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7da4a90"/>
        <function-ref name="edge" scoped="" ref="0x7f33b7da4c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f33b7da4db0"/>
        <function-ref name="enable" scoped="" ref="0x7f33b7da2020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f33b7da21b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f33b7da2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f33b7dadd50" loc="61:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f33b7dadd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7dac100"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7dac290"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7dac420"/>
        <function-ref name="edge" scoped="" ref="0x7f33b7dac5b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f33b7dac740"/>
        <function-ref name="enable" scoped="" ref="0x7f33b7dac8d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f33b7daca60"/>
        <function-ref name="getValue" scoped="" ref="0x7f33b7dacbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f33b7daa3f0" loc="65:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f33b7daa3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7daa770"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7daa900"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7daaa90"/>
        <function-ref name="edge" scoped="" ref="0x7f33b7daac20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f33b7daadb0"/>
        <function-ref name="enable" scoped="" ref="0x7f33b7da9020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f33b7da91b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f33b7da9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f33b7db3d50" loc="56:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f33b7db3d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7db2100"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7db2290"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7db2420"/>
        <function-ref name="edge" scoped="" ref="0x7f33b7db25b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f33b7db2740"/>
        <function-ref name="enable" scoped="" ref="0x7f33b7db28d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f33b7db2a60"/>
        <function-ref name="getValue" scoped="" ref="0x7f33b7db2bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f33b7da7d50" loc="68:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f33b7da7d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7da6210"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7da63a0"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7da6530"/>
        <function-ref name="edge" scoped="" ref="0x7f33b7da66c0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f33b7da6850"/>
        <function-ref name="enable" scoped="" ref="0x7f33b7da69e0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f33b7da6b70"/>
        <function-ref name="getValue" scoped="" ref="0x7f33b7da6d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f33b7daf710" loc="59:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f33b7daf710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7dafa90"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7dafc20"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7dafdb0"/>
        <function-ref name="edge" scoped="" ref="0x7f33b7dae020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f33b7dae1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f33b7dae340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f33b7dae4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f33b7dae660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f33b7da2710" loc="71:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f33b7da2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7da2a90"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7da2c20"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7da2db0"/>
        <function-ref name="edge" scoped="" ref="0x7f33b7da1020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f33b7da11b0"/>
        <function-ref name="enable" scoped="" ref="0x7f33b7da1340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f33b7da14d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f33b7da1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f33b7db77a0" loc="54:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f33b7db77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7db7b20"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7db7cb0"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7db7e40"/>
        <function-ref name="edge" scoped="" ref="0x7f33b7db4020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f33b7db41b0"/>
        <function-ref name="enable" scoped="" ref="0x7f33b7db4340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f33b7db44d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f33b7db4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f33b7da9710" loc="66:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f33b7da9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7da9a90"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7da9c20"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7da9db0"/>
        <function-ref name="edge" scoped="" ref="0x7f33b7da8020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f33b7da81b0"/>
        <function-ref name="enable" scoped="" ref="0x7f33b7da8340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f33b7da84d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f33b7da8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f33b7db1020" loc="57:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f33b7db1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7db13a0"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7db1530"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7db16c0"/>
        <function-ref name="edge" scoped="" ref="0x7f33b7db1850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f33b7db19e0"/>
        <function-ref name="enable" scoped="" ref="0x7f33b7db1b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f33b7db1d00"/>
        <function-ref name="getValue" scoped="" ref="0x7f33b7db0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f33b7da5100" loc="69:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f33b7da5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7da5480"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7da5610"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7da57a0"/>
        <function-ref name="edge" scoped="" ref="0x7f33b7da5930"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f33b7da5ac0"/>
        <function-ref name="enable" scoped="" ref="0x7f33b7da5c50"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f33b7da5de0"/>
        <function-ref name="getValue" scoped="" ref="0x7f33b7da4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f33b7daea30" loc="60:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f33b7daea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7daedb0"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7dad020"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7dad1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f33b7dad340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f33b7dad4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f33b7dad660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f33b7dad7f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f33b7dad980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f33b7dab020" loc="64:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f33b7dab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7dab3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7dab530"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7dab6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f33b7dab850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f33b7dab9e0"/>
        <function-ref name="enable" scoped="" ref="0x7f33b7dabb70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f33b7dabd00"/>
        <function-ref name="getValue" scoped="" ref="0x7f33b7daa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f33b7db4a30" loc="55:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f33b7db4a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7db4db0"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7db3020"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7db31b0"/>
        <function-ref name="edge" scoped="" ref="0x7f33b7db3340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f33b7db34d0"/>
        <function-ref name="enable" scoped="" ref="0x7f33b7db3660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f33b7db37f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f33b7db3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f33b7da8a30" loc="67:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f33b7da8a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7da8db0"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7da7020"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7da71b0"/>
        <function-ref name="edge" scoped="" ref="0x7f33b7da7340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f33b7da74d0"/>
        <function-ref name="enable" scoped="" ref="0x7f33b7da7660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f33b7da77f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f33b7da7980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f33b7c952f0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f33b7c952f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7c95670"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7c95800"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7c95990"/>
        <function-ref name="edge" scoped="" ref="0x7f33b7c95b20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f33b7c95cb0"/>
        <function-ref name="enable" scoped="" ref="0x7f33b7c95e40"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f33b7c89020"/>
        <function-ref name="getValue" scoped="" ref="0x7f33b7c891b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f33b7c96680" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f33b7c96680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f33b7c96a00"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7c96b90"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f33b7c96d20"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f33b7c95020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f33b7c867a0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f33b7c867a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7c86b20"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7c86cb0"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7c86e40"/>
        <function-ref name="edge" scoped="" ref="0x7f33b7c85020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f33b7c851b0"/>
        <function-ref name="enable" scoped="" ref="0x7f33b7c85340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f33b7c854d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f33b7c85660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f33b7c88b70" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f33b7c88b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f33b7c86020"/>
        <function-ref name="disable" scoped="" ref="0x7f33b7c861b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f33b7c86340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f33b7c864d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f33b7827e50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f33b7827e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7826410"/>
        <function-ref name="write" scoped="" ref="0x7f33b78265a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f33b7830160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f33b7830160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b78304e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f33b782ae50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f33b782ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7829210"/>
        <function-ref name="write" scoped="" ref="0x7f33b78293a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f33b7824880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f33b7824880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7824c00"/>
        <function-ref name="write" scoped="" ref="0x7f33b7824d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f33b781c0a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f33b781c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b781c420"/>
        <function-ref name="write" scoped="" ref="0x7f33b781c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f33b78230a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f33b78230a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7823420"/>
        <function-ref name="write" scoped="" ref="0x7f33b78235b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f33b7810500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f33b7810500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7810880"/>
        <function-ref name="write" scoped="" ref="0x7f33b7810a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f33b7813500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f33b7813500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7813880"/>
        <function-ref name="write" scoped="" ref="0x7f33b7813a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f33b782f490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f33b782f490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b782f810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f33b7819880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f33b7819880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7819c00"/>
        <function-ref name="write" scoped="" ref="0x7f33b7819d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f33b7814500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f33b7814500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7814880"/>
        <function-ref name="write" scoped="" ref="0x7f33b7814a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f33b7829e50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f33b7829e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7828210"/>
        <function-ref name="write" scoped="" ref="0x7f33b78283a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f33b7828e50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f33b7828e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7827210"/>
        <function-ref name="write" scoped="" ref="0x7f33b78273a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f33b781f880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f33b781f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b781fc00"/>
        <function-ref name="write" scoped="" ref="0x7f33b781fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f33b78200a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f33b78200a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7820420"/>
        <function-ref name="write" scoped="" ref="0x7f33b78205b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f33b7823880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f33b7823880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7823c00"/>
        <function-ref name="write" scoped="" ref="0x7f33b7823d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f33b7833a90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f33b7833a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f33b7833e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f33b7831020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f33b78311b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f33b782ee00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f33b782ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b782d1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f33b782d490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f33b782d490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b782d910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f33b7817c80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f33b7817c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b78160a0"/>
        <function-ref name="write" scoped="" ref="0x7f33b7816230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f33b782dbe0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f33b782dbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b782b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f33b7814ce0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f33b7814ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b78130a0"/>
        <function-ref name="write" scoped="" ref="0x7f33b7813230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f33b782e160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f33b782e160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b782e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f33b78190a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f33b78190a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7819420"/>
        <function-ref name="write" scoped="" ref="0x7f33b78195b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f33b7828670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f33b7828670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b78289f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b7828b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f33b7829670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f33b7829670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b78299f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b7829b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f33b7831ad0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f33b7831ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b7831e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f33b781a0a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f33b781a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b781a420"/>
        <function-ref name="write" scoped="" ref="0x7f33b781a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f33b781c880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f33b781c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b781cc00"/>
        <function-ref name="write" scoped="" ref="0x7f33b781cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f33b781a880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f33b781a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b781ac00"/>
        <function-ref name="write" scoped="" ref="0x7f33b781ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f33b7812ce0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f33b7812ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b78100a0"/>
        <function-ref name="write" scoped="" ref="0x7f33b7810230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f33b7813ce0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f33b7813ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b78120a0"/>
        <function-ref name="write" scoped="" ref="0x7f33b7812230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f33b7820880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f33b7820880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7820c00"/>
        <function-ref name="write" scoped="" ref="0x7f33b7820d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f33b781b0a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f33b781b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b781b420"/>
        <function-ref name="write" scoped="" ref="0x7f33b781b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f33b7815ce0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f33b7815ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b78140a0"/>
        <function-ref name="write" scoped="" ref="0x7f33b7814230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f33b7822880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f33b7822880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7822c00"/>
        <function-ref name="write" scoped="" ref="0x7f33b7822d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f33b7810ce0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f33b7810ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f33b780d0a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f33b780d230"/>
        <function-ref name="write" scoped="" ref="0x7f33b780d3c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f33b780d550"/>
        <function-ref name="readDone" scoped="" ref="0x7f33b780d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f33b7831480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f33b7831480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b7831800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f33b782a670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f33b782a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b782a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b782ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f33b7827670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f33b7827670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b78279f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b7827b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f33b781d0a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f33b781d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b781d420"/>
        <function-ref name="write" scoped="" ref="0x7f33b781d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f33b78220a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f33b78220a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7822420"/>
        <function-ref name="write" scoped="" ref="0x7f33b78225b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f33b781d880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f33b781d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b781dc00"/>
        <function-ref name="write" scoped="" ref="0x7f33b781dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f33b7826870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f33b7826870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7826bf0"/>
        <function-ref name="write" scoped="" ref="0x7f33b7826d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f33b78307b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f33b78307b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b7830b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f33b78240a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f33b78240a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7824420"/>
        <function-ref name="write" scoped="" ref="0x7f33b78245b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f33b7834e20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f33b7834e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b78331c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b7833350"/>
        <function-ref name="request" scoped="" ref="0x7f33b78334e0"/>
        <function-ref name="granted" scoped="" ref="0x7f33b7833670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b7833800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f33b782b2f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f33b782b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b782b670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f33b782a020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f33b782a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b782a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f33b7815500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f33b7815500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7815880"/>
        <function-ref name="write" scoped="" ref="0x7f33b7815a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f33b7816ce0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f33b7816ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b78150a0"/>
        <function-ref name="write" scoped="" ref="0x7f33b7815230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f33b782e7b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f33b782e7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b782eb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f33b7816500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f33b7816500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7816880"/>
        <function-ref name="write" scoped="" ref="0x7f33b7816a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f33b7812500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f33b7812500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7812880"/>
        <function-ref name="write" scoped="" ref="0x7f33b7812a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f33b781f0a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f33b781f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b781f420"/>
        <function-ref name="write" scoped="" ref="0x7f33b781f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f33b781b880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f33b781b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b781bc00"/>
        <function-ref name="write" scoped="" ref="0x7f33b781bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f33b7830e00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f33b7830e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b782f1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f33b782fae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f33b782fae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b782fe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f33b78210a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f33b78210a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7821420"/>
        <function-ref name="write" scoped="" ref="0x7f33b78215b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f33b782b940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f33b782b940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b782bcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f33b7821880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f33b7821880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7821c00"/>
        <function-ref name="write" scoped="" ref="0x7f33b7821d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f33b78170a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f33b78170a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7817820"/>
        <function-ref name="write" scoped="" ref="0x7f33b78179b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f33b780d9b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f33b780d9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f33b780dd30"/>
        <function-ref name="writeDone" scoped="" ref="0x7f33b780c020"/>
        <function-ref name="write" scoped="" ref="0x7f33b780c1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f33b780c340"/>
        <function-ref name="readDone" scoped="" ref="0x7f33b780c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f33b7c442c0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f33b7c442c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f33b7c44640"/>
        <function-ref name="writeDone" scoped="" ref="0x7f33b7c447d0"/>
        <function-ref name="write" scoped="" ref="0x7f33b7c44960"/>
        <function-ref name="beginRead" scoped="" ref="0x7f33b7c44af0"/>
        <function-ref name="readDone" scoped="" ref="0x7f33b7c44c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f33b7c45350" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f33b7c45350"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f33b7c456d0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f33b7c45860"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f33b7c459f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f33b7c42540" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f33b7c42540"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7c428c0"/>
        <function-ref name="write" scoped="" ref="0x7f33b7c42a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f33b7c41370" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f33b7c41370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7c416f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b7c41880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f33b7c464d0" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f33b7c464d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b7c46850"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b7c469e0"/>
        <function-ref name="request" scoped="" ref="0x7f33b7c46b70"/>
        <function-ref name="granted" scoped="" ref="0x7f33b7c46d00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b7c45020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f33b7c401d0" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f33b7c401d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b7c40550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f33b7c292e0" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f33b7c292e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b7c29660"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b7c297f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f33b7c3a890" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f33b7c3a890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f33b7c3ac10"/>
        <function-ref name="writeDone" scoped="" ref="0x7f33b7c3ada0"/>
        <function-ref name="write" scoped="" ref="0x7f33b7c39020"/>
        <function-ref name="beginRead" scoped="" ref="0x7f33b7c391b0"/>
        <function-ref name="readDone" scoped="" ref="0x7f33b7c39340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f33b7c3c660" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f33b7c3c660"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f33b7c3c9e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f33b7c3cb70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f33b7c3cd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f33b7c32c70" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f33b7c32c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f33b7c34020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f33b7c29b40" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7f33b7c29b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f33b7c33020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f33b7c331b0"/>
        <function-ref name="isState" scoped="" ref="0x7f33b7c33340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f33b7c334d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f33b7c33660"/>
        <function-ref name="forceState" scoped="" ref="0x7f33b7c337f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f33b7c35060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f33b7c35060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b7c353e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b7c35570"/>
        <function-ref name="request" scoped="" ref="0x7f33b7c35700"/>
        <function-ref name="granted" scoped="" ref="0x7f33b7c35890"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b7c35a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f33b7c39ba0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f33b7c39ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7c37020"/>
        <function-ref name="write" scoped="" ref="0x7f33b7c371b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f33b7c37a30" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f33b7c37a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7c37db0"/>
        <function-ref name="write" scoped="" ref="0x7f33b7c36020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f33b7c33a70" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f33b7c33a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f33b7c33df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f33b7c31020"/>
        <function-ref name="led1On" scoped="" ref="0x7f33b7c311b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f33b7c31340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f33b7c314d0"/>
        <function-ref name="get" scoped="" ref="0x7f33b7c31660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f33b7c317f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f33b7c31e30"/>
        <function-ref name="set" scoped="" ref="0x7f33b7c31980"/>
        <function-ref name="led0On" scoped="" ref="0x7f33b7c31b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f33b7c31ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f33b7c3b510" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f33b7c3b510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b7c3b890"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b7c3ba20"/>
        <function-ref name="request" scoped="" ref="0x7f33b7c3bbb0"/>
        <function-ref name="granted" scoped="" ref="0x7f33b7c3bd40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b7c3a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f33b7c26bd0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7f33b7c26bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f33b7c24020"/>
        <function-ref name="runTask" scoped="" ref="0x7f33b7c241b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f33b7c368b0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f33b7c368b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b7c36c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f33b7bcb770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f33b7bcb770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f33b7bcbaf0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f33b7bcbc80"/>
        <function-ref name="isState" scoped="" ref="0x7f33b7bcbe10"/>
        <function-ref name="isIdle" scoped="" ref="0x7f33b7bc7020"/>
        <function-ref name="requestState" scoped="" ref="0x7f33b7bc71b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f33b7bc7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f33b7bc61d0" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f33b7bc61d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f33b7bc6550"/>
        <function-ref name="toIdle" scoped="" ref="0x7f33b7bc66e0"/>
        <function-ref name="isState" scoped="" ref="0x7f33b7bc6870"/>
        <function-ref name="isIdle" scoped="" ref="0x7f33b7bc6a00"/>
        <function-ref name="requestState" scoped="" ref="0x7f33b7bc6b90"/>
        <function-ref name="forceState" scoped="" ref="0x7f33b7bc6d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33b7bc1020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f33b7bc1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b7bc13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f33b7bc1b70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f33b7bc1b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f33b7bc0020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f33b7bc01b0"/>
        <function-ref name="isState" scoped="" ref="0x7f33b7bc0340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f33b7bc04d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f33b7bc0660"/>
        <function-ref name="forceState" scoped="" ref="0x7f33b7bc07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f33b7859020" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f33b7859020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b78593a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b7859530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f33b7ba78f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f33b7ba78f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f33b7ba7c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f33b7ba8c40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f33b7ba8c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b7ba7020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b7ba71b0"/>
        <function-ref name="request" scoped="" ref="0x7f33b7ba7340"/>
        <function-ref name="granted" scoped="" ref="0x7f33b7ba74d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b7ba7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f33b673c760" loc="82:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f33b673c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f33b673cae0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f33b673cc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f33b673a120" loc="87:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f33b673a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b673a4a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b673a630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f33b673a8c0" loc="89:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f33b673a8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f33b673ac40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f33b673b020" loc="83:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f33b673b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f33b673b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f33b673da00" loc="81:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f33b673da00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b673dd80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b673c020"/>
        <function-ref name="request" scoped="" ref="0x7f33b673c1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f33b673c340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b673c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f33b673b630" loc="85:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f33b673b630"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f33b673b9b0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f33b673bb40"/>
        <function-ref name="splitRead" scoped="" ref="0x7f33b673bcd0"/>
        <function-ref name="write" scoped="" ref="0x7f33b673be60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f33b7b3f8e0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f33b7b3f8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f33b7b3fc60"/>
        <function-ref name="configure" scoped="" ref="0x7f33b7b3fdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f33b7b42850" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f33b7b42850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b7b42bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b7b42d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f33b7b3da40" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f33b7b3da40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f33b7b3ddc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f33b7b43110" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f33b7b43110"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f33b7b43490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f33b7b3e690" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f33b7b3e690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b7b3ea10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b7b3eba0"/>
        <function-ref name="request" scoped="" ref="0x7f33b7b3ed30"/>
        <function-ref name="granted" scoped="" ref="0x7f33b7b3d020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b7b3d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f33b7b47d80" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f33b7b47d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b7b44180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b7b44310"/>
        <function-ref name="request" scoped="" ref="0x7f33b7b444a0"/>
        <function-ref name="granted" scoped="" ref="0x7f33b7b44630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b7b447c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f33b7b43790" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f33b7b43790"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f33b7b43b10"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f33b7b43ca0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f33b7b43e30"/>
        <function-ref name="write" scoped="" ref="0x7f33b7b42020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f33b7b38b40" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f33b7b38b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f33b7b3a020"/>
        <function-ref name="txDone" scoped="" ref="0x7f33b7b3a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f33b7ac7250" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f33b7ac7250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f33b7ac75f0"/>
        <function-ref name="configure" scoped="" ref="0x7f33b7ac7780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f33b7ac5c50" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f33b7ac5c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b7ac4020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b7ac41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f33b7ac33e0" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f33b7ac33e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f33b7ac3780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f33b7ac7a10" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f33b7ac7a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f33b7ac7d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f33b7ac3a50" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f33b7ac3a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f33b7ac3dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f33b7ac2020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f33b7ac21b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f33b7ac2340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f33b7ac24d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f33b7ac2660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f33b7ac27f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f33b7ac2980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f33b7ac2b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f33b7ac2ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f33b7ac2e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f33b7ac1020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f33b7ac11b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f33b7ac1440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f33b7ac15d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f33b7ac1760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f33b7ac18f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f33b7ac1a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f33b7ac1c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f33b7ac1da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f33b7ac0020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f33b7ac01b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f33b7ac0340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f33b7ac04d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f33b7ac0660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f33b7ac09f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f33b7ac0b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f33b7ac0d10"/>
        <function-ref name="tx" scoped="" ref="0x7f33b7abf020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f33b7abf1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f33b7abf340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f33b7abf4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f33b7abf660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f33b7abf7f0"/>
        <function-ref name="rx" scoped="" ref="0x7f33b7abf980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f33b7abfb10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f33b7abfca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f33b7abfe30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f33b7abe020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f33b7abe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f33b7abec20" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f33b7abec20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f33b7abd020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f33b7abd1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f33b7abd340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f33b7abd4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f33b7abd660"/>
        <function-ref name="get" scoped="" ref="0x7f33b7abd7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f33b7abd980"/>
        <function-ref name="led2On" scoped="" ref="0x7f33b7abc020"/>
        <function-ref name="set" scoped="" ref="0x7f33b7abdca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f33b7abdb10"/>
        <function-ref name="led0On" scoped="" ref="0x7f33b7abde30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f33b7ac45b0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f33b7ac45b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b7ac4950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b7ac4ae0"/>
        <function-ref name="request" scoped="" ref="0x7f33b7ac4c70"/>
        <function-ref name="granted" scoped="" ref="0x7f33b7ac4e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b7ac3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f33b7ac8470" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f33b7ac8470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b7ac8810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b7ac89a0"/>
        <function-ref name="request" scoped="" ref="0x7f33b7ac8b30"/>
        <function-ref name="granted" scoped="" ref="0x7f33b7ac8cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b7ac8e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f33b7ac5060" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f33b7ac5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f33b7ac53e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f33b7ac5570"/>
        <function-ref name="splitRead" scoped="" ref="0x7f33b7ac5700"/>
        <function-ref name="write" scoped="" ref="0x7f33b7ac5890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f33b7abe480" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f33b7abe480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f33b7abe800"/>
        <function-ref name="txDone" scoped="" ref="0x7f33b7abe990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7f33b7abc2f0" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7f33b7abc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f33b7abc670"/>
        <function-ref name="runTask" scoped="" ref="0x7f33b7abc800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f33b7aab2c0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f33b7aab2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f33b7aab640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f33b7ab0d10" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f33b7ab0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f33b7aaf0e0"/>
        <function-ref name="txDone" scoped="" ref="0x7f33b7aaf270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f33b7ab4020" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f33b7ab4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f33b7ab43a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f33b7ab4530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f33b7ab46c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f33b7ab4850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f33b7ab49e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f33b7ab4b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f33b7ab4d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f33b7ab3020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f33b7ab31b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f33b7ab3340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f33b7ab34d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f33b7ab3660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f33b7ab37f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f33b7ab3a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f33b7ab3c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f33b7ab3da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f33b7ab2020"/>
        <function-ref name="isUart" scoped="" ref="0x7f33b7ab21b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f33b7ab2340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f33b7ab24d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f33b7ab2660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f33b7ab27f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f33b7ab2980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f33b7ab2b10"/>
        <function-ref name="getMode" scoped="" ref="0x7f33b7ab2ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f33b7ab1220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f33b7ab13b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f33b7ab1540"/>
        <function-ref name="tx" scoped="" ref="0x7f33b7ab16d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f33b7ab1860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f33b7ab19f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f33b7ab1b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f33b7ab1d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f33b7ab0020"/>
        <function-ref name="rx" scoped="" ref="0x7f33b7ab01b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f33b7ab0340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f33b7ab04d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f33b7ab0660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f33b7ab07f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f33b7ab0980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f33b7a71bb0" loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f33b7a71bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b7a70020"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b7a701b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b7a70340"/>
        <function-ref name="clr" scoped="" ref="0x7f33b7a6e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b7a70660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b7a707f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b7a70980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b7a70b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b7a70ca0"/>
        <function-ref name="get" scoped="" ref="0x7f33b7a70e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b7a6f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b7a6f1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b7a6f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b7a6f5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b7a6f760"/>
        <function-ref name="set" scoped="" ref="0x7f33b7a6f8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b7a6fa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b7a704d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b7a6fc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b7a6fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f33b7aa42d0" loc="56:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f33b7aa42d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f33b7aa4650"/>
        <function-ref name="txDone" scoped="" ref="0x7f33b7aa47e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f33b7a6e3e0" loc="63:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f33b7a6e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b7a6e760"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b7a6e8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b7a6ea80"/>
        <function-ref name="clr" scoped="" ref="0x7f33b7a6c7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b7a6eda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b7a6d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b7a6d1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b7a6d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b7a6d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f33b7a6d660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b7a6d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b7a6d980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b7a6db10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b7a6dda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b7a6c020"/>
        <function-ref name="set" scoped="" ref="0x7f33b7a6c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b7a6c340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b7a6ec10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b7a6c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b7a6c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f33b7a6cbb0" loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f33b7a6cbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b7a6b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b7a6b1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b7a6b340"/>
        <function-ref name="clr" scoped="" ref="0x7f33b7a69020"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b7a6b660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b7a6b7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b7a6b980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b7a6bb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b7a6bca0"/>
        <function-ref name="get" scoped="" ref="0x7f33b7a6be30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b7a6a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b7a6a1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b7a6a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b7a6a5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b7a6a760"/>
        <function-ref name="set" scoped="" ref="0x7f33b7a6a8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b7a6aa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b7a6b4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b7a6ac10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b7a6ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f33b7aa9700" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f33b7aa9700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f33b7aa9a80"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f33b7aa9c10"/>
        <function-ref name="setUctl" scoped="" ref="0x7f33b7aa9da0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f33b7aa8020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f33b7aa81b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f33b7aa8340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f33b7aa84d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f33b7aa8660"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f33b7aa87f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f33b7aa8980"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f33b7aa8b10"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f33b7aa8ca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f33b7aa8e30"/>
        <function-ref name="getUbr" scoped="" ref="0x7f33b7aa7120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f33b7aa72b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f33b7aa7440"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f33b7aa75d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f33b7aa7760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f33b7aa78f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f33b7aa7a80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f33b7aa7c10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f33b7aa7da0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f33b7aa6020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f33b7aa61b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f33b7aa6340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f33b7aa66d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f33b7aa6860"/>
        <function-ref name="setUbr" scoped="" ref="0x7f33b7aa69f0"/>
        <function-ref name="tx" scoped="" ref="0x7f33b7aa6b80"/>
        <function-ref name="getUctl" scoped="" ref="0x7f33b7aa6d10"/>
        <function-ref name="disableUart" scoped="" ref="0x7f33b7aa5020"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f33b7aa51b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f33b7aa5340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f33b7aa54d0"/>
        <function-ref name="rx" scoped="" ref="0x7f33b7aa5660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f33b7aa57f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f33b7aa5980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f33b7aa5b10"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f33b7aa5ca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f33b7aa5e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7f33b7a7bd10" loc="59:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f33b7a7bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f33b7aa20e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f33b7aa2270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f33b7aa2400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f33b7aa2590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f33b7aa2720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f33b7aa28b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f33b7aa2a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f33b7aa2bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f33b7aa2d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f33b7aa1020"/>
        <function-ref name="getData" scoped="" ref="0x7f33b7aa11b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f33b7aa1340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f33b7aa14d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f33b7aa1760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f33b7aa18f0"/>
        <function-ref name="getIV" scoped="" ref="0x7f33b7aa1a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f33b7aa1c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f33b7aa1da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f33b7a7a020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f33b7a7a1b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f33b7a7a340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f33b7a7a4d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f33b7a7a660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f33b7a7a7f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f33b7a7a980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f33b7a7ad10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f33b7a79020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f33b7a791b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f33b7a79340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f33b7a794d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f33b7a79660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f33b7a797f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f33b7a79980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f33b7a79b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f33b7a79ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f33b7a79e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f33b7a78020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f33b7a781b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f33b7a78340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f33b7a784d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f33b7a78660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f33b7a787f0"/>
        <function-ref name="setData" scoped="" ref="0x7f33b7a78980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f33b7a78b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f33b7a78ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f33b7a78e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f33b7a77020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f33b7a771b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f33b7a77340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f33b7a778d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f33b7a77a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f33b7a77bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f33b7a77d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f33b7a76020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f33b7a761b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f33b7a76340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f33b7a764d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f33b7a76660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f33b7a767f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f33b7a733e0" loc="61:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f33b7a733e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b7a73760"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b7a738f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b7a73a80"/>
        <function-ref name="clr" scoped="" ref="0x7f33b7a717f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b7a73da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b7a72020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b7a721b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b7a72340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b7a724d0"/>
        <function-ref name="get" scoped="" ref="0x7f33b7a72660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b7a727f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b7a72980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b7a72b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b7a72da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b7a71020"/>
        <function-ref name="set" scoped="" ref="0x7f33b7a711b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b7a71340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b7a73c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b7a714d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b7a71660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f33b7aa4c20" loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f33b7aa4c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f33b7aa3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f33b7a76bb0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f33b7a76bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b7a75020"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b7a751b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b7a75340"/>
        <function-ref name="clr" scoped="" ref="0x7f33b7a73020"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b7a75660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b7a757f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b7a75980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b7a75b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b7a75ca0"/>
        <function-ref name="get" scoped="" ref="0x7f33b7a75e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b7a74020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b7a741b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b7a74340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b7a745d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b7a74760"/>
        <function-ref name="set" scoped="" ref="0x7f33b7a748f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b7a74a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b7a754d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b7a74c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b7a74da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f33b67322c0" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f33b67322c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f33b6732640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f33b67327d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f33b672b440" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f33b672b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f33b672b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f33b6724760" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f33b6724760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f33b6724ae0"/>
        <function-ref name="configure" scoped="" ref="0x7f33b6724c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f33b672ba50" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f33b672ba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f33b672bdd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f33b672a020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f33b672a1b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f33b672a340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f33b672a4d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f33b672a660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f33b672a7f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f33b672a980"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f33b672ab10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f33b672aca0"/>
        <function-ref name="getData" scoped="" ref="0x7f33b672ae30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f33b6729020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f33b67291b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f33b6729440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f33b67295d0"/>
        <function-ref name="getIV" scoped="" ref="0x7f33b6729760"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f33b67298f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f33b6729a80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f33b6729c10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f33b6729da0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f33b6728020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f33b67281b0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f33b6728340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f33b67284d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f33b6728660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f33b67289f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f33b6728b80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f33b6728d10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f33b6727020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f33b67271b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f33b6727340"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f33b67274d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f33b6727660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f33b67277f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f33b6727980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f33b6727b10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f33b6727ca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f33b6727e30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f33b6726020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f33b67261b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f33b6726340"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f33b67264d0"/>
        <function-ref name="setData" scoped="" ref="0x7f33b6726660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f33b67267f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f33b6726980"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f33b6726b10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f33b6726ca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f33b6726e30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f33b6725020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f33b67255b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f33b6725740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f33b67258d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f33b6725a60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f33b6725bf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f33b6725d80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f33b6724020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f33b67241b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f33b6724340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f33b67244d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f33b672dc10" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f33b672dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f33b672b020"/>
        <function-ref name="txDone" scoped="" ref="0x7f33b672b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f33b6733640" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f33b6733640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b67339c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b6733b50"/>
        <function-ref name="request" scoped="" ref="0x7f33b6733ce0"/>
        <function-ref name="granted" scoped="" ref="0x7f33b6733e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b6732030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f33b67312b0" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f33b67312b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f33b6731630"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f33b67317c0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f33b6731950"/>
        <function-ref name="enableUart" scoped="" ref="0x7f33b6731ae0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f33b6731c70"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f33b6731e00"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f33b6730020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f33b67301b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f33b6730340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f33b67304d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f33b6730660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f33b67307f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f33b6730980"/>
        <function-ref name="getUbr" scoped="" ref="0x7f33b6730c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f33b6730da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f33b672f020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f33b672f1b0"/>
        <function-ref name="isUart" scoped="" ref="0x7f33b672f340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f33b672f4d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f33b672f660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f33b672f7f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f33b672f980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f33b672fb10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f33b672fca0"/>
        <function-ref name="getMode" scoped="" ref="0x7f33b672fe30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f33b672e220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f33b672e3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f33b672e540"/>
        <function-ref name="tx" scoped="" ref="0x7f33b672e6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f33b672e860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f33b672e9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f33b672eb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f33b672ed10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f33b672d020"/>
        <function-ref name="rx" scoped="" ref="0x7f33b672d1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f33b672d340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f33b672d4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f33b672d660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f33b672d7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f33b672d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f33b6732a60" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f33b6732a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f33b6732de0"/>
        <function-ref name="userId" scoped="" ref="0x7f33b6731020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f33b79c22c0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f33b79c22c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f33b79c2640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f33b79c27d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f33b79c18a0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f33b79c18a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f33b79c1c20"/>
        <function-ref name="configure" scoped="" ref="0x7f33b79c1db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f33b79c64d0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f33b79c64d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f33b79c6850"/>
        <function-ref name="txDone" scoped="" ref="0x7f33b79c69e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f33b79c4020" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f33b79c4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b79c43a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b79c4530"/>
        <function-ref name="request" scoped="" ref="0x7f33b79c46c0"/>
        <function-ref name="granted" scoped="" ref="0x7f33b79c4850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b79c49e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f33b79c53f0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f33b79c53f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f33b79c5770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f33b79c2ad0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f33b79c2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f33b79c2e50"/>
        <function-ref name="userId" scoped="" ref="0x7f33b79c1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f33b79acbf0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f33b79acbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f33b79ab020"/>
        <function-ref name="userId" scoped="" ref="0x7f33b79ab1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f33b79bfd60" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f33b79bfd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f33b79be180"/>
        <function-ref name="txDone" scoped="" ref="0x7f33b79be310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f33b79ac5e0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f33b79ac5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f33b79ac960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f33b79be710" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f33b79be710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f33b79beab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f33b79bed80" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f33b79bed80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f33b79ac180"/>
        <function-ref name="txDone" scoped="" ref="0x7f33b79ac310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f33b792da60" loc="59:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f33b792da60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f33b792de00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f33b792c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f33b792b790" loc="64:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f33b792b790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f33b792bb30"/>
        <function-ref name="configure" scoped="" ref="0x7f33b792bcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f33b792c270" loc="60:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f33b792c270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b792c5f0"/>
        <function-ref name="requested" scoped="" ref="0x7f33b792c780"/>
        <function-ref name="granted" scoped="" ref="0x7f33b792c910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b792caa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f33b792cc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f33b792eca0" loc="58:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f33b792eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b792d0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b792d230"/>
        <function-ref name="request" scoped="" ref="0x7f33b792d3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f33b792d550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b792d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7f33b792a020" loc="65:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f33b792a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f33b792a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f33b792ce80" loc="61:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f33b792ce80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f33b792b220"/>
        <function-ref name="userId" scoped="" ref="0x7f33b792b3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33b66bc020" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f33b66bc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b66bc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f33b66bc630" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f33b66bc630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f33b66bc9b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f33b66bcb40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f33b66bccd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f33b66bce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f33b66b16c0" loc="99:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f33b66b16c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f33b66b1a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f33b66b1bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f33b66af9d0" loc="105:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f33b66af9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f33b66afd70"/>
        <function-ref name="configure" scoped="" ref="0x7f33b66ae020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f33b66ae2b0" loc="106:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f33b66ae2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f33b66ae630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f33b66ae7c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f33b66ae950"/>
        <function-ref name="dequeue" scoped="" ref="0x7f33b66aeae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f33b66b1e40" loc="100:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f33b66b1e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b66b01e0"/>
        <function-ref name="requested" scoped="" ref="0x7f33b66b0370"/>
        <function-ref name="granted" scoped="" ref="0x7f33b66b0500"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b66b0690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f33b66b0820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f33b66aed30" loc="107:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f33b66aed30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f33b66ad0e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f33b66ad270"/>
        <function-ref name="led1On" scoped="" ref="0x7f33b66ad400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f33b66ad590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f33b66ad720"/>
        <function-ref name="get" scoped="" ref="0x7f33b66ad8b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f33b66ada40"/>
        <function-ref name="led0On" scoped="" ref="0x7f33b66ac1b0"/>
        <function-ref name="set" scoped="" ref="0x7f33b66add60"/>
        <function-ref name="led2On" scoped="" ref="0x7f33b66adbd0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f33b66ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f33b66b3850" loc="98:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f33b66b3850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b66b3bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b66b3d80"/>
        <function-ref name="request" scoped="" ref="0x7f33b66b1020"/>
        <function-ref name="granted" scoped="" ref="0x7f33b66b11b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b66b1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7f33b66af2d0" loc="104:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f33b66af2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f33b66af650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f33b66b0a70" loc="101:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f33b66b0a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f33b66b0df0"/>
        <function-ref name="userId" scoped="" ref="0x7f33b66af020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f33b66ac480" loc="155:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f33b66ac480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f33b66ac800"/>
        <function-ref name="runTask" scoped="" ref="0x7f33b66ac990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f33b7920020" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f33b7920020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f33b79203a0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f33b7920530"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f33b79206c0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f33b7920850"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f33b79209e0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f33b7920b70"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f33b7920d00"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f33b791f020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f33b791f1b0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f33b791f340"/>
        <function-ref name="getData" scoped="" ref="0x7f33b791f4d0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f33b791f660"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f33b791f7f0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f33b791fa80"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f33b791fc10"/>
        <function-ref name="getIV" scoped="" ref="0x7f33b791fda0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f33b791e020"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f33b791e1b0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f33b791e340"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f33b791e4d0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f33b791e660"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f33b791e7f0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f33b791e980"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f33b791eb10"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f33b791eca0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f33b791d220"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f33b791d3b0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f33b791d540"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f33b791d6d0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f33b791d860"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f33b791d9f0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f33b791db80"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f33b791dd10"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f33b791c020"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f33b791c1b0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f33b791c340"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f33b791c4d0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f33b791c660"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f33b791c7f0"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f33b791c980"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f33b791cb10"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f33b791cca0"/>
        <function-ref name="setData" scoped="" ref="0x7f33b791ce30"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f33b791b020"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f33b791b1b0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f33b791b340"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f33b791b4d0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f33b791b660"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f33b791b7f0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f33b791bd80"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f33b791a020"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f33b791a1b0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f33b791a340"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f33b791a4d0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f33b791a660"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f33b791a7f0"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f33b791a980"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f33b791ab10"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f33b791aca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7f33b7910bb0" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7f33b7910bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f33b790f020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f33b790f1b0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f33b790f340"/>
        <function-ref name="enableUart" scoped="" ref="0x7f33b790f4d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f33b790f660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f33b790f7f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f33b790f980"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f33b790fb10"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f33b790fca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f33b790fe30"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f33b790e020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f33b790e1b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f33b790e340"/>
        <function-ref name="getUbr" scoped="" ref="0x7f33b790e5d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f33b790e760"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f33b790e8f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f33b790ea80"/>
        <function-ref name="isUart" scoped="" ref="0x7f33b790ec10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f33b790eda0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f33b790d020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f33b790d1b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f33b790d340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f33b790d4d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f33b790d660"/>
        <function-ref name="getMode" scoped="" ref="0x7f33b790d7f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f33b790db80"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f33b790dd10"/>
        <function-ref name="setUbr" scoped="" ref="0x7f33b790c020"/>
        <function-ref name="tx" scoped="" ref="0x7f33b790c1b0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f33b790c340"/>
        <function-ref name="disableUart" scoped="" ref="0x7f33b790c4d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f33b790c660"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f33b790c7f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f33b790c980"/>
        <function-ref name="rx" scoped="" ref="0x7f33b790cb10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f33b790cca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f33b790ce30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f33b790b020"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f33b790b1b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f33b790b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f33b7909e40" loc="52:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f33b7909e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b79081e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b7908370"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b7908500"/>
        <function-ref name="clr" scoped="" ref="0x7f33b79061b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b7908820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b79089b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b7908b40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b7908cd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b7908e60"/>
        <function-ref name="get" scoped="" ref="0x7f33b7907020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b79071b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b7907340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b79074d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b7907760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b79078f0"/>
        <function-ref name="set" scoped="" ref="0x7f33b7907a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b7907c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b7908690"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b7907da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b7906020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7f33b7919d40" loc="48:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f33b7919d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f33b79160e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f33b7916270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f33b7916400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f33b7916590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f33b7916720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f33b79168b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f33b7916a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f33b7916bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f33b7916d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f33b7915020"/>
        <function-ref name="getData" scoped="" ref="0x7f33b79151b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f33b7915340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f33b79154d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f33b7915760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f33b79158f0"/>
        <function-ref name="getIV" scoped="" ref="0x7f33b7915a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f33b7915c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f33b7915da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f33b7914020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f33b79141b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f33b7914340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f33b79144d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f33b7914660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f33b79147f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f33b7914980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f33b7914d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f33b7913020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f33b79131b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f33b7913340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f33b79134d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f33b7913660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f33b79137f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f33b7913980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f33b7913b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f33b7913ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f33b7913e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f33b7912020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f33b79121b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f33b7912340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f33b79124d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f33b7912660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f33b79127f0"/>
        <function-ref name="setData" scoped="" ref="0x7f33b7912980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f33b7912b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f33b7912ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f33b7912e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f33b7911020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f33b79111b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f33b7911340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f33b79118d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f33b7911a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f33b7911bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f33b7911d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f33b7910020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f33b79101b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f33b7910340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f33b79104d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f33b7910660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f33b79107f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f33b790b700" loc="51:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f33b790b700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b790ba80"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b790bc10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b790bda0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b7909a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b790a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b790a340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b790a4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b790a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b790a7f0"/>
        <function-ref name="get" scoped="" ref="0x7f33b790a980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b790ab10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b790aca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b790ae30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b7909120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b79092b0"/>
        <function-ref name="set" scoped="" ref="0x7f33b7909440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b79095d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b790a020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b7909760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b79098f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f33b77f4c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f33b77f4c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77f3210"/>
        <function-ref name="write" scoped="" ref="0x7f33b77f33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f33b77ffda0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f33b77ffda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b77fe180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f33b77f8b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f33b77f8b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77f6020"/>
        <function-ref name="write" scoped="" ref="0x7f33b77f61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f33b77f2670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f33b77f2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77f29f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b77f2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f33b77ebe50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f33b77ebe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77ea210"/>
        <function-ref name="write" scoped="" ref="0x7f33b77ea3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f33b77f2e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f33b77f2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77f1210"/>
        <function-ref name="write" scoped="" ref="0x7f33b77f13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f33b77de2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f33b77de2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77de670"/>
        <function-ref name="write" scoped="" ref="0x7f33b77de800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f33b77e02f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f33b77e02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77e0670"/>
        <function-ref name="write" scoped="" ref="0x7f33b77e0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f33b77fd120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f33b77fd120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b77fd4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f33b77e6670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f33b77e6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77e69f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b77e6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f33b77e12f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f33b77e12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77e1670"/>
        <function-ref name="write" scoped="" ref="0x7f33b77e1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f33b77f6c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f33b77f6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77f5020"/>
        <function-ref name="write" scoped="" ref="0x7f33b77f51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f33b77f5c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f33b77f5c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77f4020"/>
        <function-ref name="write" scoped="" ref="0x7f33b77f41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f33b77ec670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f33b77ec670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77ec9f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b77ecb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f33b77eee50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f33b77eee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77ed210"/>
        <function-ref name="write" scoped="" ref="0x7f33b77ed3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f33b77f1670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f33b77f1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77f19f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b77f1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f33b7800760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f33b7800760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f33b7800ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f33b7800c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f33b7800e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f33b77fbaa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f33b77fbaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b77fbe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f33b77fa120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f33b77fa120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b77fa5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f33b77e5a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f33b77e5a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77e5df0"/>
        <function-ref name="write" scoped="" ref="0x7f33b77e4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f33b77fa870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f33b77fa870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b77fabf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f33b77e1ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f33b77e1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77e1e50"/>
        <function-ref name="write" scoped="" ref="0x7f33b77e0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f33b77fddc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f33b77fddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b77fb180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f33b77e7e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f33b77e7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77e6210"/>
        <function-ref name="write" scoped="" ref="0x7f33b77e63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f33b77f5480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f33b77f5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77f5800"/>
        <function-ref name="write" scoped="" ref="0x7f33b77f5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f33b77f6480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f33b77f6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77f6800"/>
        <function-ref name="write" scoped="" ref="0x7f33b77f6990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f33b77ff750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f33b77ff750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b77ffad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f33b77e8e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f33b77e8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77e7210"/>
        <function-ref name="write" scoped="" ref="0x7f33b77e73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f33b77ea670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f33b77ea670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77ea9f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b77eab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f33b77e7670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f33b77e7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77e79f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b77e7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f33b77dfad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f33b77dfad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77dfe50"/>
        <function-ref name="write" scoped="" ref="0x7f33b77de020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f33b77e0ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f33b77e0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77e0e50"/>
        <function-ref name="write" scoped="" ref="0x7f33b77df020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f33b77ed670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f33b77ed670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77ed9f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b77edb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f33b77eae50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f33b77eae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77e8210"/>
        <function-ref name="write" scoped="" ref="0x7f33b77e83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f33b77e3ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f33b77e3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77e3e50"/>
        <function-ref name="write" scoped="" ref="0x7f33b77e1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f33b77ef670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f33b77ef670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77ef9f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b77efb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f33b77dead0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f33b77dead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f33b77dee50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f33b77dd020"/>
        <function-ref name="write" scoped="" ref="0x7f33b77dd1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f33b77dd340"/>
        <function-ref name="readDone" scoped="" ref="0x7f33b77dd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f33b77ff100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f33b77ff100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b77ff480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f33b77f8370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f33b77f8370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77f86f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b77f8880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f33b77f4480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f33b77f4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77f4800"/>
        <function-ref name="write" scoped="" ref="0x7f33b77f4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f33b77ece50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f33b77ece50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77eb210"/>
        <function-ref name="write" scoped="" ref="0x7f33b77eb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f33b77f1e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f33b77f1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77ef210"/>
        <function-ref name="write" scoped="" ref="0x7f33b77ef3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f33b77eb670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f33b77eb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77eb9f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b77ebb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f33b77f3670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f33b77f3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77f39f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b77f3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f33b77fe450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f33b77fe450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b77fe7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f33b77f3e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f33b77f3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77f2210"/>
        <function-ref name="write" scoped="" ref="0x7f33b77f23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f33b7801a80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f33b7801a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b7801e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b7800020"/>
        <function-ref name="request" scoped="" ref="0x7f33b78001b0"/>
        <function-ref name="granted" scoped="" ref="0x7f33b7800340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b78004d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f33b77f9020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f33b77f9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b77f93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f33b77f9cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f33b77f9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b77f80a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f33b77e32f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f33b77e32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77e3670"/>
        <function-ref name="write" scoped="" ref="0x7f33b77e3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f33b77e4ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f33b77e4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77e4e50"/>
        <function-ref name="write" scoped="" ref="0x7f33b77e3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f33b77fb450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f33b77fb450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b77fb7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f33b77e42f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f33b77e42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77e4670"/>
        <function-ref name="write" scoped="" ref="0x7f33b77e4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f33b77df2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f33b77df2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77df670"/>
        <function-ref name="write" scoped="" ref="0x7f33b77df800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f33b77ede50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f33b77ede50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77ec210"/>
        <function-ref name="write" scoped="" ref="0x7f33b77ec3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f33b77e8670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f33b77e8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77e89f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b77e8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f33b77feaa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f33b77feaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b77fee20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f33b77fd770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f33b77fd770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b77fdaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f33b77efe50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f33b77efe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77ee210"/>
        <function-ref name="write" scoped="" ref="0x7f33b77ee3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f33b77f9670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f33b77f9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b77f99f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f33b77ee670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f33b77ee670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77ee9f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b77eeb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f33b77e6e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f33b77e6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77e5610"/>
        <function-ref name="write" scoped="" ref="0x7f33b77e57a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f33b77dd7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f33b77dd7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f33b77ddb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f33b77ddcb0"/>
        <function-ref name="write" scoped="" ref="0x7f33b77dde40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f33b77dc020"/>
        <function-ref name="readDone" scoped="" ref="0x7f33b77dc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f33b77c8c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f33b77c8c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77c6210"/>
        <function-ref name="write" scoped="" ref="0x7f33b77c63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f33b77d2da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f33b77d2da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b77d1180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f33b77cbb50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f33b77cbb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77ca020"/>
        <function-ref name="write" scoped="" ref="0x7f33b77ca1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f33b77c5670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f33b77c5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77c59f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b77c5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f33b77bee50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f33b77bee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77bd210"/>
        <function-ref name="write" scoped="" ref="0x7f33b77bd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f33b77c5e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f33b77c5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77c4210"/>
        <function-ref name="write" scoped="" ref="0x7f33b77c43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f33b77b12f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f33b77b12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77b1670"/>
        <function-ref name="write" scoped="" ref="0x7f33b77b1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f33b77b42f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f33b77b42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77b4670"/>
        <function-ref name="write" scoped="" ref="0x7f33b77b4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f33b77d0120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f33b77d0120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b77d04a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f33b77ba670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f33b77ba670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77ba9f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b77bab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f33b77b52f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f33b77b52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77b5670"/>
        <function-ref name="write" scoped="" ref="0x7f33b77b5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f33b77cac60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f33b77cac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77c9020"/>
        <function-ref name="write" scoped="" ref="0x7f33b77c91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f33b77c9c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f33b77c9c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77c8020"/>
        <function-ref name="write" scoped="" ref="0x7f33b77c81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f33b77bf670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f33b77bf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77bf9f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b77bfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f33b77c2e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f33b77c2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77c1210"/>
        <function-ref name="write" scoped="" ref="0x7f33b77c13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f33b77c4670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f33b77c4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77c49f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b77c4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f33b77d4760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f33b77d4760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f33b77d4ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f33b77d4c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f33b77d4e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f33b77cfaa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f33b77cfaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b77cfe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f33b77ce120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f33b77ce120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b77ce5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f33b77b8a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f33b77b8a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77b8df0"/>
        <function-ref name="write" scoped="" ref="0x7f33b77b7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f33b77ce870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f33b77ce870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b77cebf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f33b77b5ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f33b77b5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77b5e50"/>
        <function-ref name="write" scoped="" ref="0x7f33b77b4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f33b77d0dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f33b77d0dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b77cf180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f33b77bbe50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f33b77bbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77ba210"/>
        <function-ref name="write" scoped="" ref="0x7f33b77ba3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f33b77c9480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f33b77c9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77c9800"/>
        <function-ref name="write" scoped="" ref="0x7f33b77c9990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f33b77ca480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f33b77ca480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77ca800"/>
        <function-ref name="write" scoped="" ref="0x7f33b77ca990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f33b77d2750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f33b77d2750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b77d2ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f33b77bce50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f33b77bce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77bb210"/>
        <function-ref name="write" scoped="" ref="0x7f33b77bb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f33b77bd670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f33b77bd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77bd9f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b77bdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f33b77bb670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f33b77bb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77bb9f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b77bbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f33b77b3ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f33b77b3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77b3e50"/>
        <function-ref name="write" scoped="" ref="0x7f33b77b1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f33b77b4ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f33b77b4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77b4e50"/>
        <function-ref name="write" scoped="" ref="0x7f33b77b3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f33b77c1670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f33b77c1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77c19f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b77c1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f33b77bde50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f33b77bde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77bc210"/>
        <function-ref name="write" scoped="" ref="0x7f33b77bc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f33b77b6ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f33b77b6ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77b6e50"/>
        <function-ref name="write" scoped="" ref="0x7f33b77b5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f33b77c3670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f33b77c3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77c39f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b77c3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f33b77b1ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f33b77b1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f33b77b1e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f33b77b0020"/>
        <function-ref name="write" scoped="" ref="0x7f33b77b01b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f33b77b0340"/>
        <function-ref name="readDone" scoped="" ref="0x7f33b77b04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f33b77d2100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f33b77d2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b77d2480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f33b77cb370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f33b77cb370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77cb6f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b77cb880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f33b77c8480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f33b77c8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77c8800"/>
        <function-ref name="write" scoped="" ref="0x7f33b77c8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f33b77bfe50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f33b77bfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77be210"/>
        <function-ref name="write" scoped="" ref="0x7f33b77be3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f33b77c4e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f33b77c4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77c3210"/>
        <function-ref name="write" scoped="" ref="0x7f33b77c33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f33b77be670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f33b77be670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77be9f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b77beb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f33b77c6670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f33b77c6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77c69f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b77c6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f33b77d1450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f33b77d1450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b77d17d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f33b77c6e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f33b77c6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77c5210"/>
        <function-ref name="write" scoped="" ref="0x7f33b77c53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f33b77d59e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f33b77d59e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b77d5d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b77d4020"/>
        <function-ref name="request" scoped="" ref="0x7f33b77d41b0"/>
        <function-ref name="granted" scoped="" ref="0x7f33b77d4340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b77d44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f33b77cc020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f33b77cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b77cc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f33b77cccc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f33b77cccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b77cb0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f33b77b62f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f33b77b62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77b6670"/>
        <function-ref name="write" scoped="" ref="0x7f33b77b6800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f33b77b7ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f33b77b7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77b7e50"/>
        <function-ref name="write" scoped="" ref="0x7f33b77b6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f33b77cf450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f33b77cf450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b77cf7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f33b77b72f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f33b77b72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77b7670"/>
        <function-ref name="write" scoped="" ref="0x7f33b77b7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f33b77b32f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f33b77b32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77b3670"/>
        <function-ref name="write" scoped="" ref="0x7f33b77b3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f33b77c1e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f33b77c1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77bf210"/>
        <function-ref name="write" scoped="" ref="0x7f33b77bf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f33b77bc670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f33b77bc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77bc9f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b77bcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f33b77d1aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f33b77d1aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b77d1e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f33b77d0770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f33b77d0770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b77d0af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f33b77c3e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f33b77c3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77c2210"/>
        <function-ref name="write" scoped="" ref="0x7f33b77c23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f33b77cc670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f33b77cc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b77cc9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f33b77c2670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f33b77c2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77c29f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b77c2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f33b77bae50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f33b77bae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77b8610"/>
        <function-ref name="write" scoped="" ref="0x7f33b77b87a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f33b77b07a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f33b77b07a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f33b77b0b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f33b77b0cb0"/>
        <function-ref name="write" scoped="" ref="0x7f33b77b0e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f33b77af020"/>
        <function-ref name="readDone" scoped="" ref="0x7f33b77af1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f33b77a8b20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f33b77a8b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f33b77a5020"/>
        <function-ref name="changed" scoped="" ref="0x7f33b77a51b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f33b77a5340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f33b77a54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f33b77a7d20" loc="13:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f33b77a7d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f33b77910e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f33b778d310" loc="5:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f33b778d310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f33b778d690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7f33b778a880" loc="8:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f33b778a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b778ac00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f33b777f020" loc="8:../../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f33b777f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b777f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7f33b7775bd0" loc="14:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f33b7775bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7778020"/>
        <function-ref name="write" scoped="" ref="0x7f33b77781b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7f33b7778530" loc="15:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7f33b7778530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f33b77788b0"/>
        <function-ref name="stop" scoped="" ref="0x7f33b7778a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f33b7779140" loc="11:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f33b7779140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77794c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f33b777ec50" loc="8:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f33b777ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7765020"/>
        <function-ref name="write" scoped="" ref="0x7f33b77651b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f33b7765540" loc="11:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f33b7765540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b77658c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b7765a50"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b7765be0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b7765d70"/>
        <function-ref name="get" scoped="" ref="0x7f33b7764020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b77641b0"/>
        <function-ref name="set" scoped="" ref="0x7f33b7764340"/>
        <function-ref name="clr" scoped="" ref="0x7f33b77644d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f33b775b950" loc="15:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f33b775b950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1df0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f33b86c0200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f33b775e780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f33b7761150" loc="11:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f33b7761150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b77614d0"/>
        <function-ref name="write" scoped="" ref="0x7f33b7761660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f33b77619f0" loc="14:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f33b77619f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b7761d70"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b775f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b775f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b775f340"/>
        <function-ref name="get" scoped="" ref="0x7f33b775f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b775f660"/>
        <function-ref name="set" scoped="" ref="0x7f33b775f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b775f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f33b7763ca0" loc="41:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f33b7763ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1df0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f33b86c0200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f33b773bae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f33b7739a90" loc="54:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f33b7739a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1df0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f33b86c0200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f33b77388d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f33b7728020" loc="55:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f33b7728020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1df0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f33b86c0200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33b7728e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b7727800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b7727340"/>
        <function-ref name="overflow" scoped="" ref="0x7f33b7727cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7f33b7722530" loc="46:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f33b7722530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1df0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f33b86c0200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33b77213d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b7721d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b7721890"/>
        <function-ref name="overflow" scoped="" ref="0x7f33b771f260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f33b771a020" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f33b771a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b771a3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f33b771a530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b771a6c0"/>
        <function-ref name="get" scoped="" ref="0x7f33b771a850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b771a9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b771ab70"/>
        <function-ref name="getMode" scoped="" ref="0x7f33b771ad00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b7719020"/>
        <function-ref name="overflow" scoped="" ref="0x7f33b77191b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f33b7719340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f33b77194d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f33b771ee50" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f33b771ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1df0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f33b86c0200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33b771dca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b771c670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b771c1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f33b771cb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7f33b7766590" loc="3:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7f33b7766590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b7766910"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b7766aa0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b7766c30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b7766dc0"/>
        <function-ref name="get" scoped="" ref="0x7f33b7715020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b77151b0"/>
        <function-ref name="set" scoped="" ref="0x7f33b7715340"/>
        <function-ref name="clr" scoped="" ref="0x7f33b77154d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f33b7713c50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f33b7713c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b7712020"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b77121b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b7712340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b7710020"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b7712660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b77127f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b7712980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b7712b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b7712ca0"/>
        <function-ref name="get" scoped="" ref="0x7f33b7712e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b7711020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b77111b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b7711340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b77115d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b7711760"/>
        <function-ref name="set" scoped="" ref="0x7f33b77118f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b7711a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b7711c10"/>
        <function-ref name="clr" scoped="" ref="0x7f33b77124d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b7711da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f33b77149e0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f33b77149e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b7714d60"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b7713020"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b77131b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b7713340"/>
        <function-ref name="get" scoped="" ref="0x7f33b77134d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b7713660"/>
        <function-ref name="set" scoped="" ref="0x7f33b77137f0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b7713980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f33b770b1b0" loc="14:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f33b770b1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f33b770b530"/>
        <function-ref name="stop" scoped="" ref="0x7f33b770b6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f33b76facb0" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f33b76facb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f33b76f90a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f33b76f9230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f33b76f93c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f33b76f9550"/>
        <function-ref name="setCca" scoped="" ref="0x7f33b76f96e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f33b76f9870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f33b76f6990" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f33b76f6990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f33b76f6d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f33b76fa020" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f33b76fa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b76fa3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b76fa530"/>
        <function-ref name="modify" scoped="" ref="0x7f33b76fa6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b76fa850"/>
        <function-ref name="resend" scoped="" ref="0x7f33b76fa9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f33b76ff6c0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f33b76ff6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f33b76ffa40"/>
        <function-ref name="stop" scoped="" ref="0x7f33b76ffbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f33b76f8150" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f33b76f8150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f33b76f84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f33b76ec970" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f33b76ec970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f33b76eccf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f33b76ece80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f33b76eb030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f33b76eb1c0"/>
        <function-ref name="setCca" scoped="" ref="0x7f33b76eb350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f33b76eb4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f33b76e4950" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f33b76e4950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f33b76e1020"/>
        <function-ref name="clear" scoped="" ref="0x7f33b76e1750"/>
        <function-ref name="isValid" scoped="" ref="0x7f33b76e3780"/>
        <function-ref name="set" scoped="" ref="0x7f33b76e1e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f33b76cc020" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f33b76cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b76cc3a0"/>
        <function-ref name="write" scoped="" ref="0x7f33b76cc530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f33b76cc890" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f33b76cc890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b76ccc10"/>
        <function-ref name="write" scoped="" ref="0x7f33b76ccda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f33b76eb900" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f33b76eb900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f33b76ebc80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f33b76d0530" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f33b76d0530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b76d08b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f33b76df880" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f33b76df880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f33b76dfc00"/>
        <function-ref name="disable" scoped="" ref="0x7f33b76dfd90"/>
        <function-ref name="captured" scoped="" ref="0x7f33b76de020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f33b76de1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f33b76eaae0" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7f33b76eaae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f33b76e6390"/>
        <function-ref name="fired" scoped="" ref="0x7f33b76e7360"/>
        <function-ref name="startAt" scoped="" ref="0x7f33b76e7ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f33b76e7820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f33b76e6850"/>
        <function-ref name="start" scoped="" ref="0x7f33b76e9970"/>
        <function-ref name="stop" scoped="" ref="0x7f33b76e9e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f33b76e6d00" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f33b76e6d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f33b76e50a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f33b76e5230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f33b76e53c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f33b76e5550"/>
        <function-ref name="getPower" scoped="" ref="0x7f33b76e56e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f33b76e5870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f33b76d2550" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f33b76d2550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b76d28d0"/>
        <function-ref name="write" scoped="" ref="0x7f33b76d2a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f33b76d2e00" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f33b76d2e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b76d11c0"/>
        <function-ref name="write" scoped="" ref="0x7f33b76d1350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f33b76c6d40" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f33b76c6d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33b76c90e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f33b76c9270"/>
        <function-ref name="sfd" scoped="" ref="0x7f33b76c9400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f33b76edbc0" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f33b76edbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b76ec020"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b76ec1b0"/>
        <function-ref name="modify" scoped="" ref="0x7f33b76ec340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b76ec4d0"/>
        <function-ref name="resend" scoped="" ref="0x7f33b76ec660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f33b76d4d10" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f33b76d4d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f33b76d30e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f33b76d3270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f33b76d3400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f33b76d0c60" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f33b76d0c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b76cf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f33b76d7820" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f33b76d7820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b76d7ba0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b76d7d30"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b76d6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b76d61b0"/>
        <function-ref name="get" scoped="" ref="0x7f33b76d6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b76d64d0"/>
        <function-ref name="set" scoped="" ref="0x7f33b76d6660"/>
        <function-ref name="clr" scoped="" ref="0x7f33b76d67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33b76eec60" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f33b76eec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b76ed020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f33b76e5bb0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f33b76e5bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f33b76e4020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f33b76e41b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f33b76e4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f33b76d9be0" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f33b76d9be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33b76df020"/>
        <function-ref name="isSet" scoped="" ref="0x7f33b76df1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b76df340"/>
        <function-ref name="set" scoped="" ref="0x7f33b76df4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f33b76cf3e0" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f33b76cf3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b76cf960"/>
        <function-ref name="write" scoped="" ref="0x7f33b76cfaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f33b76d4020" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f33b76d4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b76d43a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b76d4530"/>
        <function-ref name="request" scoped="" ref="0x7f33b76d46c0"/>
        <function-ref name="granted" scoped="" ref="0x7f33b76d4850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b76d49e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f33b76de500" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f33b76de500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b76de980"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b76deb10"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b76deca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b76dee30"/>
        <function-ref name="get" scoped="" ref="0x7f33b76d7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b76d71b0"/>
        <function-ref name="set" scoped="" ref="0x7f33b76d7340"/>
        <function-ref name="clr" scoped="" ref="0x7f33b76d74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f33b76cb130" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f33b76cb130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b76cb4b0"/>
        <function-ref name="write" scoped="" ref="0x7f33b76cb640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f33b76cb9c0" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f33b76cb9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b76cbd40"/>
        <function-ref name="write" scoped="" ref="0x7f33b76ca020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f33b76d16d0" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f33b76d16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b76d1a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f33b76d6b40" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f33b76d6b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b76d5020"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b76d51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b76d5340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b76d54d0"/>
        <function-ref name="get" scoped="" ref="0x7f33b76d5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b76d57f0"/>
        <function-ref name="set" scoped="" ref="0x7f33b76d5980"/>
        <function-ref name="clr" scoped="" ref="0x7f33b76d5b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f33b76c96c0" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f33b76c96c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f33b76c9a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f33b76c9bd0"/>
        <function-ref name="led1On" scoped="" ref="0x7f33b76c9d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f33b76c5020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f33b76c51b0"/>
        <function-ref name="get" scoped="" ref="0x7f33b76c5340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f33b76c54d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f33b76c5b10"/>
        <function-ref name="set" scoped="" ref="0x7f33b76c5660"/>
        <function-ref name="led0On" scoped="" ref="0x7f33b76c57f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f33b76c5980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f33b76cd5e0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f33b76cd5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b76cd960"/>
        <function-ref name="write" scoped="" ref="0x7f33b76cdaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f33b76ed320" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f33b76ed320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f33b76ed6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f33b76ed830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f33b76d3780" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f33b76d3780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f33b76d3b00"/>
        <function-ref name="writeDone" scoped="" ref="0x7f33b76d3c90"/>
        <function-ref name="write" scoped="" ref="0x7f33b76d3e20"/>
        <function-ref name="beginRead" scoped="" ref="0x7f33b76d2020"/>
        <function-ref name="readDone" scoped="" ref="0x7f33b76d21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f33b76d1de0" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f33b76d1de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b76d0180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f33b76cfe80" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f33b76cfe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b76cd220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f33b76ea0f0" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f33b76ea0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f33b76ea470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f33b762cc60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f33b762cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b762a210"/>
        <function-ref name="write" scoped="" ref="0x7f33b762a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f33b7635020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f33b7635020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b76353a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f33b762fc70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f33b762fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b762e020"/>
        <function-ref name="write" scoped="" ref="0x7f33b762e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f33b7629670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f33b7629670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b76299f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b7629b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f33b7622e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f33b7622e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7621210"/>
        <function-ref name="write" scoped="" ref="0x7f33b76213a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f33b7629e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f33b7629e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7628210"/>
        <function-ref name="write" scoped="" ref="0x7f33b76283a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f33b76152f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f33b76152f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7615670"/>
        <function-ref name="write" scoped="" ref="0x7f33b7615800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f33b76182f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f33b76182f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7618670"/>
        <function-ref name="write" scoped="" ref="0x7f33b7618800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f33b7634370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f33b7634370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b76346f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f33b761e670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f33b761e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b761e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b761eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f33b76192f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f33b76192f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7619670"/>
        <function-ref name="write" scoped="" ref="0x7f33b7619800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f33b762ec60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f33b762ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b762d020"/>
        <function-ref name="write" scoped="" ref="0x7f33b762d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f33b762dc60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f33b762dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b762c020"/>
        <function-ref name="write" scoped="" ref="0x7f33b762c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f33b7623670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f33b7623670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b76239f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b7623b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f33b7626e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f33b7626e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7625210"/>
        <function-ref name="write" scoped="" ref="0x7f33b76253a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f33b7628670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f33b7628670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b76289f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b7628b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f33b76388f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f33b76388f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f33b7638c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f33b7638e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f33b7636020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f33b7633d00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f33b7633d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b76320a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f33b7632370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f33b7632370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b76327f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f33b761ca70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f33b761ca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b761cdf0"/>
        <function-ref name="write" scoped="" ref="0x7f33b761b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f33b7632ac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f33b7632ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b7632e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f33b7619ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f33b7619ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7619e50"/>
        <function-ref name="write" scoped="" ref="0x7f33b7618020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f33b7633060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f33b7633060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b76333e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f33b761fe50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f33b761fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b761e210"/>
        <function-ref name="write" scoped="" ref="0x7f33b761e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f33b762d480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f33b762d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b762d800"/>
        <function-ref name="write" scoped="" ref="0x7f33b762d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f33b762e480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f33b762e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b762e800"/>
        <function-ref name="write" scoped="" ref="0x7f33b762e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f33b7636940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f33b7636940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b7636cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f33b7620e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f33b7620e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b761f210"/>
        <function-ref name="write" scoped="" ref="0x7f33b761f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f33b7621670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f33b7621670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b76219f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b7621b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f33b761f670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f33b761f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b761f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b761fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f33b7617ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f33b7617ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7617e50"/>
        <function-ref name="write" scoped="" ref="0x7f33b7615020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f33b7618ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f33b7618ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7618e50"/>
        <function-ref name="write" scoped="" ref="0x7f33b7617020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f33b7625670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f33b7625670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b76259f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b7625b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f33b7621e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f33b7621e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7620210"/>
        <function-ref name="write" scoped="" ref="0x7f33b76203a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f33b761aad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f33b761aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b761ae50"/>
        <function-ref name="write" scoped="" ref="0x7f33b7619020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f33b7627670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f33b7627670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b76279f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b7627b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f33b7615ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f33b7615ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f33b7615e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f33b7614020"/>
        <function-ref name="write" scoped="" ref="0x7f33b76141b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f33b7614340"/>
        <function-ref name="readDone" scoped="" ref="0x7f33b76144d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f33b76362f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f33b76362f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b7636670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f33b762f490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f33b762f490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b762f810"/>
        <function-ref name="write" scoped="" ref="0x7f33b762f9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f33b762c480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f33b762c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b762c800"/>
        <function-ref name="write" scoped="" ref="0x7f33b762c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f33b7623e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f33b7623e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7622210"/>
        <function-ref name="write" scoped="" ref="0x7f33b76223a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f33b7628e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f33b7628e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7627210"/>
        <function-ref name="write" scoped="" ref="0x7f33b76273a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f33b7622670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f33b7622670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b76229f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b7622b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f33b762a670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f33b762a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b762a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b762ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f33b7635670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f33b7635670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b76359f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f33b762ae50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f33b762ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7629210"/>
        <function-ref name="write" scoped="" ref="0x7f33b76293a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f33b7639c30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f33b7639c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b7638020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b76381b0"/>
        <function-ref name="request" scoped="" ref="0x7f33b7638340"/>
        <function-ref name="granted" scoped="" ref="0x7f33b76384d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b7638660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f33b7630160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f33b7630160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b76304e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f33b7630e00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f33b7630e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b762f1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f33b761a2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f33b761a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b761a670"/>
        <function-ref name="write" scoped="" ref="0x7f33b761a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f33b761bad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f33b761bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b761be50"/>
        <function-ref name="write" scoped="" ref="0x7f33b761a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f33b76336b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f33b76336b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b7633a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f33b761b2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f33b761b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b761b670"/>
        <function-ref name="write" scoped="" ref="0x7f33b761b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f33b76172f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f33b76172f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7617670"/>
        <function-ref name="write" scoped="" ref="0x7f33b7617800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f33b7625e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f33b7625e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7623210"/>
        <function-ref name="write" scoped="" ref="0x7f33b76233a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f33b7620670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f33b7620670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b76209f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b7620b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f33b7635cc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f33b7635cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b76340a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f33b76349c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f33b76349c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b7634d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f33b7627e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f33b7627e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b7626210"/>
        <function-ref name="write" scoped="" ref="0x7f33b76263a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f33b76307b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f33b76307b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b7630b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f33b7626670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f33b7626670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b76269f0"/>
        <function-ref name="write" scoped="" ref="0x7f33b7626b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f33b761ee50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f33b761ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b761c610"/>
        <function-ref name="write" scoped="" ref="0x7f33b761c7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f33b76147a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f33b76147a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f33b7614b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f33b7614cb0"/>
        <function-ref name="write" scoped="" ref="0x7f33b7614e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f33b7613020"/>
        <function-ref name="readDone" scoped="" ref="0x7f33b76131b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f33b7608df0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f33b7608df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33b76051c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f33b7605350"/>
        <function-ref name="sfd" scoped="" ref="0x7f33b76054e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f33b76057c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f33b76057c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33b7605b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f33b7604020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f33b7604020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f33b76043a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f33b76085c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f33b76085c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f33b7608940"/>
        <function-ref name="stop" scoped="" ref="0x7f33b7608ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f33b75fd380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f33b75fd380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b75fd700"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b75fd890"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b75fda20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b75fdbb0"/>
        <function-ref name="get" scoped="" ref="0x7f33b75fdd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b75fc020"/>
        <function-ref name="set" scoped="" ref="0x7f33b75fc1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b75fc340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f33b75f5b90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f33b75f5b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f33b75f4020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f33b75f41b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f33b75f4340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f33b75f44d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f33b75f4660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f33b75f47f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f33b75f4980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f33b75f4b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f33b75f4ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f33b75f4e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f33b75f3020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f33b75f31b0"/>
        <function-ref name="sync" scoped="" ref="0x7f33b75f3340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f33b75f35d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f33b75f3760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f33b75de9d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7f33b75de9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f33b75ded50"/>
        <function-ref name="runTask" scoped="" ref="0x7f33b75dd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f33b75f3d70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f33b75f3d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f33b75f1330"/>
        <function-ref name="clear" scoped="" ref="0x7f33b75f1a60"/>
        <function-ref name="isValid" scoped="" ref="0x7f33b75f2ba0"/>
        <function-ref name="set" scoped="" ref="0x7f33b75ef210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f33b75fc6b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f33b75fc6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b75fca30"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b75fcbc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b75fcd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b75fb020"/>
        <function-ref name="get" scoped="" ref="0x7f33b75fb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b75fb340"/>
        <function-ref name="set" scoped="" ref="0x7f33b75fb4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b75fb660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f33b75eecb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f33b75eecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b75ed0a0"/>
        <function-ref name="write" scoped="" ref="0x7f33b75ed230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f33b75ed590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f33b75ed590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b75ed910"/>
        <function-ref name="write" scoped="" ref="0x7f33b75edaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f33b75ec6d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f33b75ec6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b75eca50"/>
        <function-ref name="write" scoped="" ref="0x7f33b75ecbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f33b75f6330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f33b75f6330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f33b75f66b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f33b75f6840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f33b75f69d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f33b75f6b60"/>
        <function-ref name="getPower" scoped="" ref="0x7f33b75f6cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f33b75f6e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f33b7600550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f33b7600550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33b76008d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f33b7600a60"/>
        <function-ref name="sfd" scoped="" ref="0x7f33b7600bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f33b75f73a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f33b75f73a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b75f7720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f33b75fe020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f33b75fe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b75fe3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b75fe530"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b75fe6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b75fe850"/>
        <function-ref name="get" scoped="" ref="0x7f33b75fe9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b75feb70"/>
        <function-ref name="set" scoped="" ref="0x7f33b75fed00"/>
        <function-ref name="clr" scoped="" ref="0x7f33b75fd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f33b75eb020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f33b75eb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b75eb3a0"/>
        <function-ref name="write" scoped="" ref="0x7f33b75eb530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33b7601620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f33b7601620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b76019a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f33b75f51e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f33b75f51e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f33b75f5560"/>
        <function-ref name="getHeader" scoped="" ref="0x7f33b75f56f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f33b75f5880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f33b75ff020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f33b75ff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33b75ff3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f33b75f96e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f33b75f96e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b75f9a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b75f9bf0"/>
        <function-ref name="request" scoped="" ref="0x7f33b75f9d80"/>
        <function-ref name="granted" scoped="" ref="0x7f33b75f8020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b75f81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f33b75ede00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f33b75ede00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b75ec1c0"/>
        <function-ref name="write" scoped="" ref="0x7f33b75ec350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f33b75f8530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f33b75f8530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f33b75f88b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f33b75f8a40"/>
        <function-ref name="write" scoped="" ref="0x7f33b75f8bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f33b75f8d60"/>
        <function-ref name="readDone" scoped="" ref="0x7f33b75f7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f33b75eb8b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f33b75eb8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b75ebe30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f33b75ff7c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f33b75ff7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f33b75ffb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f33b75ea150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f33b75ea150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f33b75ea4d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f33b75ea660"/>
        <function-ref name="led1On" scoped="" ref="0x7f33b75ea7f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f33b75ea980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f33b75eab10"/>
        <function-ref name="get" scoped="" ref="0x7f33b75eaca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f33b75eae30"/>
        <function-ref name="led2Off" scoped="" ref="0x7f33b75e94d0"/>
        <function-ref name="set" scoped="" ref="0x7f33b75e9020"/>
        <function-ref name="led0On" scoped="" ref="0x7f33b75e91b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f33b75e9340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f33b75ee3e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f33b75ee3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b75ee760"/>
        <function-ref name="write" scoped="" ref="0x7f33b75ee8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f33b75efb10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f33b75efb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b75ee020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f33b75fba50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f33b75fba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f33b75fbdd0"/>
        <function-ref name="disable" scoped="" ref="0x7f33b75f9020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f33b75f91b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f33b75f9340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f33b75f7ad0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f33b75f7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b75f6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f33b7601ca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f33b7601ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f33b76000a0"/>
        <function-ref name="stop" scoped="" ref="0x7f33b7600230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f33b757da70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f33b757da70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f33b757ddf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f33b7581670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f33b7581670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f33b75819f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f33b7581b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f33b7581d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f33b757e020"/>
        <function-ref name="getPower" scoped="" ref="0x7f33b757e1b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f33b757e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f33b757c550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f33b757c550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f33b757bb00"/>
        <function-ref name="clear" scoped="" ref="0x7f33b757a2a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f33b757b3d0"/>
        <function-ref name="set" scoped="" ref="0x7f33b757a9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f33b757d0c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f33b757d0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f33b757d440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f33b757d5d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f33b757d760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f33b7574480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f33b7574480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33b7574800"/>
        <function-ref name="isSet" scoped="" ref="0x7f33b7574990"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b7574b20"/>
        <function-ref name="set" scoped="" ref="0x7f33b7574cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f33b7578660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f33b7578660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c4e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f33b86c1200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f33b7577ce0"/>
        <function-ref name="clear" scoped="" ref="0x7f33b7576460"/>
        <function-ref name="isValid" scoped="" ref="0x7f33b75775b0"/>
        <function-ref name="set" scoped="" ref="0x7f33b7576b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f33b757e6e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f33b757e6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f33b757ea60"/>
        <function-ref name="noAck" scoped="" ref="0x7f33b757ebf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f33b757ed80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f33b756e020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f33b756e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f33b756e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f33b7573d20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f33b7573d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f33b75700e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f33b7570270"/>
        <function-ref name="getRssi" scoped="" ref="0x7f33b7570400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f33b7570590"/>
        <function-ref name="getPower" scoped="" ref="0x7f33b7570720"/>
        <function-ref name="getLqi" scoped="" ref="0x7f33b75708b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f33b75654a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f33b75654a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7565820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f33b75659b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b7565b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b7565cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f33b7565e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f33b756ea80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f33b756ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f33b756c020"/>
        <function-ref name="clear" scoped="" ref="0x7f33b756c750"/>
        <function-ref name="isValid" scoped="" ref="0x7f33b756d8d0"/>
        <function-ref name="set" scoped="" ref="0x7f33b756ce80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f33b756f640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f33b756f640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f33b756f9c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f33b756fb50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f33b756fce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f33b75668b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f33b75668b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33b7566c30"/>
        <function-ref name="isSet" scoped="" ref="0x7f33b7566dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b7565020"/>
        <function-ref name="set" scoped="" ref="0x7f33b75651b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f33b7561820" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f33b7561820"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33b75634c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f33b7563b80" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f33b7563b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c4e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f33b86c1200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33b75627d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f33b756aaf0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f33b756aaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c4e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f33b86c1200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f33b75680d0"/>
        <function-ref name="clear" scoped="" ref="0x7f33b7568800"/>
        <function-ref name="isValid" scoped="" ref="0x7f33b7569970"/>
        <function-ref name="set" scoped="" ref="0x7f33b7566020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f33b7570c50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f33b7570c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f33b756f020"/>
        <function-ref name="noAck" scoped="" ref="0x7f33b756f1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f33b756f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f33b7511790" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f33b7511790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33b75103f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f33b7510a60" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f33b7510a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33b7506890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b7504260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b7506d50"/>
        <function-ref name="overflow" scoped="" ref="0x7f33b7504720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f33b74ff1d0" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f33b74ff1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c4e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f33b86c1200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f33b74fb630"/>
        <function-ref name="fired" scoped="" ref="0x7f33b74fec30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f33b74fd9d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f33b74fd550"/>
        <function-ref name="getdt" scoped="" ref="0x7f33b74fa020"/>
        <function-ref name="gett0" scoped="" ref="0x7f33b74fbab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f33b74fd0d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f33b74ffdc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f33b74fb020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f33b74fe2e0"/>
        <function-ref name="stop" scoped="" ref="0x7f33b74fe7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f33b74fa610" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f33b74fa610"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c4e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f33b86c1200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33b74f93d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33b75003a0" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f33b75003a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b7500720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f33b74ca870" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f33b74ca870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c4e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f33b86c1200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f33b74c7090"/>
        <function-ref name="fired" scoped="" ref="0x7f33b74c8090"/>
        <function-ref name="startAt" scoped="" ref="0x7f33b74c8a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f33b74c8550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f33b74c7550"/>
        <function-ref name="start" scoped="" ref="0x7f33b74c96a0"/>
        <function-ref name="stop" scoped="" ref="0x7f33b74c9bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33b74ca020" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f33b74ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b74ca3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f33b6580260" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f33b6580260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f33b657eb30"/>
        <function-ref name="fired" scoped="" ref="0x7f33b657fa60"/>
        <function-ref name="startAt" scoped="" ref="0x7f33b657e4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f33b657e020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f33b657d020"/>
        <function-ref name="start" scoped="" ref="0x7f33b657f090"/>
        <function-ref name="stop" scoped="" ref="0x7f33b657f5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33b65819d0" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f33b65819d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b6581d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f33b6568a80" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f33b6568a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b6568e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f33b6567020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f33b65671b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f33b6567340"/>
        <function-ref name="fired" scoped="" ref="0x7f33b65674d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f33b656a020" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f33b656a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b656a3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f33b656a530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b656a6c0"/>
        <function-ref name="get" scoped="" ref="0x7f33b656a850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b656a9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b656ab70"/>
        <function-ref name="getMode" scoped="" ref="0x7f33b656ad00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b6569020"/>
        <function-ref name="overflow" scoped="" ref="0x7f33b65691b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f33b6569340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f33b65694d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f33b6569760" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f33b6569760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f33b6569ae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f33b6569c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b6569e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f33b6568020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f33b65681b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b6568340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f33b65684d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f33b6568660"/>
        <function-ref name="setControl" scoped="" ref="0x7f33b65687f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f33b655e760" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f33b655e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f33b655eae0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f33b655ec70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f33b655ee00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f33b655d020"/>
        <function-ref name="fired" scoped="" ref="0x7f33b655d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f33b6561dd0" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f33b6561dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b6560180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f33b6560310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b65604a0"/>
        <function-ref name="get" scoped="" ref="0x7f33b6560630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b65607c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b6560950"/>
        <function-ref name="getMode" scoped="" ref="0x7f33b6560ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b6560c70"/>
        <function-ref name="overflow" scoped="" ref="0x7f33b6560e00"/>
        <function-ref name="setMode" scoped="" ref="0x7f33b655f020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f33b655f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f33b6565bf0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f33b6565bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f33b65614e0"/>
        <function-ref name="fired" scoped="" ref="0x7f33b65634e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f33b6563e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f33b65639a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f33b65619a0"/>
        <function-ref name="start" scoped="" ref="0x7f33b6564a80"/>
        <function-ref name="stop" scoped="" ref="0x7f33b6563020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33b6565360" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f33b6565360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b65656e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f33b655f440" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f33b655f440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f33b655f7c0"/>
        <function-ref name="getControl" scoped="" ref="0x7f33b655f950"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f33b655fae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f33b655fc70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f33b655fe00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f33b655e020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f33b655e1b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f33b655e340"/>
        <function-ref name="setControl" scoped="" ref="0x7f33b655e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f33b74eab70" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f33b74eab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c4e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f33b86c1200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33b74e69b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b74e5360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b74e6e70"/>
        <function-ref name="overflow" scoped="" ref="0x7f33b74e5820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f33b74dfb90" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f33b74dfb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33b74dd9d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b74dc4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b74dc020"/>
        <function-ref name="overflow" scoped="" ref="0x7f33b74dc9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f33b74e1610" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f33b74e1610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c4e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f33b86c1200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33b74e05b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b74df020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b74e0a70"/>
        <function-ref name="overflow" scoped="" ref="0x7f33b74df4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f33b657b5f0" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f33b657b5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c4e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f33b86c1200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f33b6578e50"/>
        <function-ref name="fired" scoped="" ref="0x7f33b657ae00"/>
        <function-ref name="startAt" scoped="" ref="0x7f33b6578800"/>
        <function-ref name="isRunning" scoped="" ref="0x7f33b6578340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f33b6577340"/>
        <function-ref name="start" scoped="" ref="0x7f33b657a430"/>
        <function-ref name="stop" scoped="" ref="0x7f33b657a940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f33b6575d20" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f33b6575d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f33b6571670"/>
        <function-ref name="fired" scoped="" ref="0x7f33b6572550"/>
        <function-ref name="startAt" scoped="" ref="0x7f33b6571020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f33b6572a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f33b6571b30"/>
        <function-ref name="start" scoped="" ref="0x7f33b6573b60"/>
        <function-ref name="stop" scoped="" ref="0x7f33b6572090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f33b65779b0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f33b65779b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c4e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f33b86c1200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33b65767e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b65751b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b6576ca0"/>
        <function-ref name="overflow" scoped="" ref="0x7f33b6575670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f33b74959c0" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f33b74959c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f33b7495d40"/>
        <function-ref name="runTask" scoped="" ref="0x7f33b7494020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f33b7499850" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f33b7499850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c4e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f33b86c1200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f33b7495090"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7496090"/>
        <function-ref name="startAt" scoped="" ref="0x7f33b7496a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f33b7496550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f33b7495550"/>
        <function-ref name="start" scoped="" ref="0x7f33b74986a0"/>
        <function-ref name="stop" scoped="" ref="0x7f33b7498bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f33b749e2f0" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f33b749e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c4e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f33b86c1200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f33b749a870"/>
        <function-ref name="fired" scoped="" ref="0x7f33b749de40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f33b749bc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f33b749b780"/>
        <function-ref name="getdt" scoped="" ref="0x7f33b74991e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f33b749acf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f33b749b300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f33b749d020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f33b749a260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f33b749d4f0"/>
        <function-ref name="stop" scoped="" ref="0x7f33b749d9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f33b7416020" loc="58:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f33b7416020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c4e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f33b86c1200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f33b7412630"/>
        <function-ref name="fired" scoped="" ref="0x7f33b7415a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f33b7414920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f33b74144a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f33b7411020"/>
        <function-ref name="gett0" scoped="" ref="0x7f33b7412ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f33b7414020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f33b7416c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f33b7412020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f33b7415110"/>
        <function-ref name="stop" scoped="" ref="0x7f33b74155e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7f33b7411450" loc="59:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSkew" scoped="" ref="0x7f33b7411450"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7f33b74117d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f33b741d8e0" loc="57:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f33b741d8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c4e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f33b86c1200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f33b7418020"/>
        <function-ref name="fired" scoped="" ref="0x7f33b741b4c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f33b7419300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f33b741be00"/>
        <function-ref name="getdt" scoped="" ref="0x7f33b7418960"/>
        <function-ref name="gett0" scoped="" ref="0x7f33b74184c0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f33b741b960"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f33b741c560"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f33b7419930"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f33b741ca50"/>
        <function-ref name="stop" scoped="" ref="0x7f33b741b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f33b6504020" loc="153:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f33b6504020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f33b65043a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f33b6504530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f33b650c180" loc="65:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f33b650c180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c4e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f33b86c1200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f33b6508630"/>
        <function-ref name="fired" scoped="" ref="0x7f33b650abf0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f33b6509990"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f33b6509510"/>
        <function-ref name="getdt" scoped="" ref="0x7f33b6506020"/>
        <function-ref name="gett0" scoped="" ref="0x7f33b6508ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f33b6509090"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f33b650cd70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f33b6508020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f33b650a2a0"/>
        <function-ref name="stop" scoped="" ref="0x7f33b650a770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7f33b65058b0" loc="67:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSkew" scoped="" ref="0x7f33b65058b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7f33b6505c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Platform" ref="0x7f33b6506410" loc="66:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f33b6506410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7f33b65054d0"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7f33b6505660"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f33b6506ab0"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f33b6506c40"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7f33b6506dd0"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f33b6505020"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f33b65051b0"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f33b6505340"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f33b6506790"/>
        <function-ref name="node_id" scoped="" ref="0x7f33b6506920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f33b6513bc0" loc="63:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f33b6513bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c4e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f33b86c1200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f33b650d220"/>
        <function-ref name="fired" scoped="" ref="0x7f33b6510740"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f33b650f570"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f33b650f0d0"/>
        <function-ref name="getdt" scoped="" ref="0x7f33b650db60"/>
        <function-ref name="gett0" scoped="" ref="0x7f33b650d6c0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f33b6510be0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f33b6512860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f33b650fba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f33b6512d50"/>
        <function-ref name="stop" scoped="" ref="0x7f33b65102a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f33b740fa20" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f33b740fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c4e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f33b86c1200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33b740e6b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f33b740ed20" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f33b740ed20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c4e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f33b86c1200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33b740cb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b740b550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b740b090"/>
        <function-ref name="overflow" scoped="" ref="0x7f33b740ba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f33b7405ce0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f33b7405ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c4e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f33b86c1200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f33b73f0220"/>
        <function-ref name="fired" scoped="" ref="0x7f33b73f27c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f33b73f1590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f33b73f1110"/>
        <function-ref name="getdt" scoped="" ref="0x7f33b73f0b20"/>
        <function-ref name="gett0" scoped="" ref="0x7f33b73f06a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f33b73f2c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f33b73f4940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f33b73f1ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f33b73f4e10"/>
        <function-ref name="stop" scoped="" ref="0x7f33b73f2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f33b73fc610" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f33b73fc610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c4e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f33b86c1200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f33b73f8c40"/>
        <function-ref name="fired" scoped="" ref="0x7f33b73f91e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f33b73f8020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f33b73f9ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f33b73f7590"/>
        <function-ref name="gett0" scoped="" ref="0x7f33b73f7110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f33b73f9660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f33b73fb390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f33b73f8630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f33b73fb860"/>
        <function-ref name="stop" scoped="" ref="0x7f33b73fbd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f33b73de2f0" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f33b73de2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73de870"/>
        <function-ref name="write" scoped="" ref="0x7f33b73dea00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f33b73e9670" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f33b73e9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b73e99f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f33b73e22f0" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f33b73e22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73e2670"/>
        <function-ref name="write" scoped="" ref="0x7f33b73e2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f33b73ddce0" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f33b73ddce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73dc0a0"/>
        <function-ref name="write" scoped="" ref="0x7f33b73dc230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f33b73d5500" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f33b73d5500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73d5880"/>
        <function-ref name="write" scoped="" ref="0x7f33b73d5a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f33b73dc500" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f33b73dc500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73dc880"/>
        <function-ref name="write" scoped="" ref="0x7f33b73dca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f33b73c9900" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f33b73c9900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73c9c80"/>
        <function-ref name="write" scoped="" ref="0x7f33b73c9e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f33b73cc900" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f33b73cc900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73ccc80"/>
        <function-ref name="write" scoped="" ref="0x7f33b73cce10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f33b73e89c0" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f33b73e89c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b73e8d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f33b73d1ce0" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f33b73d1ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73d00a0"/>
        <function-ref name="write" scoped="" ref="0x7f33b73d0230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f33b73cd900" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f33b73cd900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73cdc80"/>
        <function-ref name="write" scoped="" ref="0x7f33b73cde10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f33b73e12f0" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f33b73e12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73e1670"/>
        <function-ref name="write" scoped="" ref="0x7f33b73e1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f33b73e02f0" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f33b73e02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73e0670"/>
        <function-ref name="write" scoped="" ref="0x7f33b73e0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f33b73d7ce0" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f33b73d7ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73d60a0"/>
        <function-ref name="write" scoped="" ref="0x7f33b73d6230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f33b73d9500" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f33b73d9500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73d9880"/>
        <function-ref name="write" scoped="" ref="0x7f33b73d9a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f33b73dcce0" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f33b73dcce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73db0a0"/>
        <function-ref name="write" scoped="" ref="0x7f33b73db230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f33b73ea020" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f33b73ea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f33b73ea3a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f33b73ea530"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f33b73ea6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f33b73e6370" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f33b73e6370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b73e66f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f33b73e69c0" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f33b73e69c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b73e6e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f33b73cf120" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f33b73cf120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73cf4a0"/>
        <function-ref name="write" scoped="" ref="0x7f33b73cf630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f33b73e4160" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f33b73e4160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b73e44e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f33b73cc120" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f33b73cc120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73cc4a0"/>
        <function-ref name="write" scoped="" ref="0x7f33b73cc630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f33b73e76b0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f33b73e76b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b73e7a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f33b73d1500" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f33b73d1500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73d1880"/>
        <function-ref name="write" scoped="" ref="0x7f33b73d1a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f33b73e1ad0" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f33b73e1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73e1e50"/>
        <function-ref name="write" scoped="" ref="0x7f33b73e0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f33b73e2ad0" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f33b73e2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73e2e50"/>
        <function-ref name="write" scoped="" ref="0x7f33b73e1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f33b73e9020" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f33b73e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b73e93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f33b73d3500" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f33b73d3500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73d3880"/>
        <function-ref name="write" scoped="" ref="0x7f33b73d3a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f33b73d5ce0" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f33b73d5ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73d40a0"/>
        <function-ref name="write" scoped="" ref="0x7f33b73d4230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f33b73d3ce0" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f33b73d3ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73d10a0"/>
        <function-ref name="write" scoped="" ref="0x7f33b73d1230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f33b73c9120" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f33b73c9120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73c94a0"/>
        <function-ref name="write" scoped="" ref="0x7f33b73c9630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f33b73cb120" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f33b73cb120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73cb4a0"/>
        <function-ref name="write" scoped="" ref="0x7f33b73cb630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f33b73d9ce0" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f33b73d9ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73d70a0"/>
        <function-ref name="write" scoped="" ref="0x7f33b73d7230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f33b73d4500" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f33b73d4500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73d4880"/>
        <function-ref name="write" scoped="" ref="0x7f33b73d4a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f33b73cd120" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f33b73cd120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73cd4a0"/>
        <function-ref name="write" scoped="" ref="0x7f33b73cd630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f33b73dbce0" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f33b73dbce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73da0a0"/>
        <function-ref name="write" scoped="" ref="0x7f33b73da230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f33b73c8120" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f33b73c8120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f33b73c84a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f33b73c8630"/>
        <function-ref name="write" scoped="" ref="0x7f33b73c87c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f33b73c8950"/>
        <function-ref name="readDone" scoped="" ref="0x7f33b73c8ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f33b73ea990" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f33b73ea990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b73ead10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f33b73e3ae0" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f33b73e3ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73e3e60"/>
        <function-ref name="write" scoped="" ref="0x7f33b73e2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f33b73e0ad0" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f33b73e0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73e0e50"/>
        <function-ref name="write" scoped="" ref="0x7f33b73de020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f33b73d6500" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f33b73d6500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73d6880"/>
        <function-ref name="write" scoped="" ref="0x7f33b73d6a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f33b73db500" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f33b73db500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73db880"/>
        <function-ref name="write" scoped="" ref="0x7f33b73dba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f33b73d6ce0" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f33b73d6ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73d50a0"/>
        <function-ref name="write" scoped="" ref="0x7f33b73d5230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f33b73decd0" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f33b73decd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73dd0a0"/>
        <function-ref name="write" scoped="" ref="0x7f33b73dd230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f33b73e9cc0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f33b73e9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b73e80a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f33b73dd500" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f33b73dd500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73dd880"/>
        <function-ref name="write" scoped="" ref="0x7f33b73dda10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f33b73eb250" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f33b73eb250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b73eb5d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b73eb760"/>
        <function-ref name="request" scoped="" ref="0x7f33b73eb8f0"/>
        <function-ref name="granted" scoped="" ref="0x7f33b73eba80"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b73ebc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f33b73e47b0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f33b73e47b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b73e4b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f33b73e3490" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f33b73e3490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b73e3810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f33b73ce900" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f33b73ce900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73cec80"/>
        <function-ref name="write" scoped="" ref="0x7f33b73cee10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f33b73ce120" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f33b73ce120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73ce4a0"/>
        <function-ref name="write" scoped="" ref="0x7f33b73ce630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f33b73e7d00" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f33b73e7d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b73e60a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f33b73cf900" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f33b73cf900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73cfc80"/>
        <function-ref name="write" scoped="" ref="0x7f33b73cfe10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f33b73cb900" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f33b73cb900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73cbc80"/>
        <function-ref name="write" scoped="" ref="0x7f33b73cbe10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f33b73d7500" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f33b73d7500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73d7880"/>
        <function-ref name="write" scoped="" ref="0x7f33b73d7a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f33b73d4ce0" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f33b73d4ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73d30a0"/>
        <function-ref name="write" scoped="" ref="0x7f33b73d3230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f33b73e8370" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f33b73e8370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b73e86f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f33b73e7060" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f33b73e7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b73e73e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f33b73da500" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f33b73da500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73da880"/>
        <function-ref name="write" scoped="" ref="0x7f33b73daa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f33b73e4e00" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f33b73e4e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f33b73e31c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f33b73dace0" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f33b73dace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73d90a0"/>
        <function-ref name="write" scoped="" ref="0x7f33b73d9230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f33b73d0500" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f33b73d0500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f33b73d0c80"/>
        <function-ref name="write" scoped="" ref="0x7f33b73d0e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f33b73c8db0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f33b73c8db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f33b73c7180"/>
        <function-ref name="writeDone" scoped="" ref="0x7f33b73c7310"/>
        <function-ref name="write" scoped="" ref="0x7f33b73c74a0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f33b73c7630"/>
        <function-ref name="readDone" scoped="" ref="0x7f33b73c77c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f33b739ba20" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f33b739ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f33b739bda0"/>
        <function-ref name="rand32" scoped="" ref="0x7f33b739a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f33b7399920" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f33b7399920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b739b560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33b73a0990" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f33b73a0990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b73a0d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f33b7395a20" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f33b7395a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f33b7395da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f33b7394020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f33b7396940" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f33b7396940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b7395560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33b7396080" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f33b7396080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b7396400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f33b7397aa0" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f33b7397aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f33b7397e20"/>
        <function-ref name="toIdle" scoped="" ref="0x7f33b7387020"/>
        <function-ref name="isState" scoped="" ref="0x7f33b73871b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f33b7387340"/>
        <function-ref name="requestState" scoped="" ref="0x7f33b73874d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f33b7387660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f33b737d020" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f33b737d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b737d3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b737d530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b737d6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b737d850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b737d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f33b737e220" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f33b737e220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b737e5a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b737e730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b737e8c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b737ea50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b737ebe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f33b7379e60" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f33b7379e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b7378210"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b73783a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b7378530"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b73786c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b7378850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f33b737ca10" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f33b737ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b737cd90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b7379020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b73791b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b7379340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b73794d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f33b73778f0" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f33b73778f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f33b7377c70"/>
        <function-ref name="rand32" scoped="" ref="0x7f33b7377e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33b7379750" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f33b7379750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b7379ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f33b7376170" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f33b7376170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f33b73764f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f33b7376680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f33b7376810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f33b7378ae0" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f33b7378ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f33b7378e60"/>
        <function-ref name="toIdle" scoped="" ref="0x7f33b7377020"/>
        <function-ref name="isState" scoped="" ref="0x7f33b73771b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f33b7377340"/>
        <function-ref name="requestState" scoped="" ref="0x7f33b73774d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f33b7377660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f33b737a690" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f33b737a690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f33b737aa10"/>
        <function-ref name="toIdle" scoped="" ref="0x7f33b737aba0"/>
        <function-ref name="isState" scoped="" ref="0x7f33b737ad30"/>
        <function-ref name="isIdle" scoped="" ref="0x7f33b7363020"/>
        <function-ref name="requestState" scoped="" ref="0x7f33b73631b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f33b7363340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f33b735d950" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f33b735d950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33b735dcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f33b7360aa0" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f33b7360aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33b7360e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f33b735d200" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f33b735d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33b735d580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f33b73573f0" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f33b73573f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33b7357770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33b7358b70" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f33b7358b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b7357020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f33b735ce30" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f33b735ce30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33b73581e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f33b7357a70" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f33b7357a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f33b7357df0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f33b7356020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f33b73561b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f33b7358570" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f33b7358570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33b73588f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f33b7329020" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f33b7329020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33b73293a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f33b73296b0" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f33b73296b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b7329a30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b7329bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b7329d50"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b7328020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b73281b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f33b732d8e0" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f33b732d8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b732dc60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b732ddf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b732c020"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b732c1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b732c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f33b732cc90" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f33b732cc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b732b0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b732b230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b732b3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b732b550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b732b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f33b732c5e0" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f33b732c5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33b732c960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f33b732ebe0" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f33b732ebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b732d020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b732d1b0"/>
        <function-ref name="request" scoped="" ref="0x7f33b732d340"/>
        <function-ref name="granted" scoped="" ref="0x7f33b732d4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b732d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f33b732ba50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f33b732ba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33b732bdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f33b732a170" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f33b732a170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b732a4f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f33b732a680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b732a810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b732a9a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f33b732ab30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f33b731fd70" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f33b731fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b731e180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b731e310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b731e4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b731e630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b731e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f33b731eb10" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f33b731eb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33b731d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f33b72f0db0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7f33b72f0db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f33b72ef180"/>
        <function-ref name="runTask" scoped="" ref="0x7f33b72ef310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f33b731d2f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f33b731d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f33b731d670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f33b731d800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f33b731d990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f33b731db20"/>
        <function-ref name="getPower" scoped="" ref="0x7f33b731dcb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f33b731de40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f33b7321a20" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f33b7321a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b7321da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b7320020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b73201b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b7320340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b73204d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f33b731cb70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f33b731cb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f33b731b020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f33b731b1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f33b731b340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f33b731b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f33b731c170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f33b731c170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f33b731c4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f33b731c680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f33b731c810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f33b7321370" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f33b7321370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33b73216f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f33b73247b0" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f33b73247b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b7324b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b7324cc0"/>
        <function-ref name="request" scoped="" ref="0x7f33b7324e50"/>
        <function-ref name="granted" scoped="" ref="0x7f33b7323020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b73231b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f33b73234d0" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f33b73234d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b7323850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b73239e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b7323b70"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b7323d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b7321020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f33b7320840" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f33b7320840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33b7320bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f33b731f020" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f33b731f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b731f3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f33b731f530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b731f6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b731f850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f33b731f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33b72d0dd0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f33b72d0dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b72cf180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f33b72cf410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f33b72cf410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f33b72cf790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f33b72cf920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f33b72cfab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f33b72cfc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f33b72c3b80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f33b72c3b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f33b72c2020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f33b72c21b0"/>
        <function-ref name="start" scoped="" ref="0x7f33b72c2340"/>
        <function-ref name="stop" scoped="" ref="0x7f33b72c24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f33b72c1860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f33b72c1860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b72c1be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b72c1d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b72c0020"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b72c01b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b72c0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f33b72c0690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f33b72c0690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33b72c0a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f33b72c7ce0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f33b72c7ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b72c40a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b72c4230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b72c43c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b72c4550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b72c46e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f33b72c3080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f33b72c3080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f33b72c3400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f33b72c3590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f33b72c3720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f33b72c38b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f33b72c2800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f33b72c2800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f33b72c2b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7f33b72c2d10"/>
        <function-ref name="isState" scoped="" ref="0x7f33b72c1020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f33b72c11b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f33b72c1340"/>
        <function-ref name="forceState" scoped="" ref="0x7f33b72c14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f33b72c0d90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f33b72c0d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f33b72bf180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f33b72bf310"/>
        <function-ref name="start" scoped="" ref="0x7f33b72bf4a0"/>
        <function-ref name="stop" scoped="" ref="0x7f33b72bf630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f33b72c4980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f33b72c4980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33b72c4d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f33b72bc2d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f33b72bc2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f33b72bc650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f33b72bc7e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f33b72bc970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f33b72bcb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f33b72be580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f33b72be580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f33b72be900"/>
        <function-ref name="toIdle" scoped="" ref="0x7f33b72bea90"/>
        <function-ref name="isState" scoped="" ref="0x7f33b72bec20"/>
        <function-ref name="isIdle" scoped="" ref="0x7f33b72bedb0"/>
        <function-ref name="requestState" scoped="" ref="0x7f33b72bd020"/>
        <function-ref name="forceState" scoped="" ref="0x7f33b72bd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f33b72afd70" loc="45:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f33b72afd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b72ae180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b72ae310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b72ae4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b72ae630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b72ae7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f33b72b2350" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f33b72b2350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b72b26d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b72b2860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b72b29f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b72b2b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b72b2d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f33b72af020" loc="41:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f33b72af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f33b72af3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f33b72af530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f33b72af6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f33b72af850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f33b72af9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f33b72a91c0" loc="44:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f33b72a91c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f33b72a9540"/>
        <function-ref name="noAck" scoped="" ref="0x7f33b72a96d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f33b72a9860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f33b72ad410" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f33b72ad410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f33b72ad790"/>
        <function-ref name="setRetries" scoped="" ref="0x7f33b72ad920"/>
        <function-ref name="getRetries" scoped="" ref="0x7f33b72adab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f33b72adc40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f33b72addd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f33b728a690" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f33b728a690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33b728aa10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f33b728b860" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f33b728b860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b728bbe0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b728bd70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b728a020"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b728a1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b728a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f33b7288610" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f33b7288610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f33b7288990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f33b7288b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f33b7288cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f33b7288e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f33b7287020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f33b72871b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f33b7287340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f33b72874d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f33b7287660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f33b72877f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f33b7287980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f33b7287b10"/>
        <function-ref name="sync" scoped="" ref="0x7f33b7287ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f33b7286020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f33b72861b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f33b728c8b0" loc="54:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f33b728c8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33b866e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f33b728cc30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f33b728cdc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f33b728b020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f33b728b1b0"/>
        <function-ref name="setCca" scoped="" ref="0x7f33b728b340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f33b728b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f33b728dce0" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f33b728dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33b866e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f33b728c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f33b72841f0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f33b72841f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f33b7284570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f33b7284700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f33b7284890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f33b7284a20"/>
        <function-ref name="setCca" scoped="" ref="0x7f33b7284bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f33b7284d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f33b728ea80" loc="52:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f33b728ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b728ee00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f33b728d020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b728d1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b728d340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f33b728d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f33b7292020" loc="48:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f33b7292020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33b866e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b72923a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b7292530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b72926c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b7292850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b72929e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f33b7291df0" loc="50:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f33b7291df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33b866e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33b728f1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f33b728ace0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f33b728ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f33b72890a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f33b7289230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f33b72893c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f33b7289550"/>
        <function-ref name="getPower" scoped="" ref="0x7f33b72896e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f33b7289870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f33b72864d0" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f33b72864d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f33b7286950"/>
        <function-ref name="changed" scoped="" ref="0x7f33b7286ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f33b7286c70"/>
        <function-ref name="setAddress" scoped="" ref="0x7f33b7286e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f33b7289b70" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f33b7289b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f33b7288020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f33b72881b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f33b7288340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f33b7291210" loc="49:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f33b7291210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33b866e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33b7291590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f33b7283d30" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f33b7283d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f33b72820e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f33b7282270"/>
        <function-ref name="led1On" scoped="" ref="0x7f33b7282400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f33b7282590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f33b7282720"/>
        <function-ref name="get" scoped="" ref="0x7f33b72828b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f33b7282a40"/>
        <function-ref name="led2Off" scoped="" ref="0x7f33b72811b0"/>
        <function-ref name="set" scoped="" ref="0x7f33b7282bd0"/>
        <function-ref name="led0On" scoped="" ref="0x7f33b7282d60"/>
        <function-ref name="led2On" scoped="" ref="0x7f33b7281020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f33b728f470" loc="51:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f33b728f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f33b728f7f0"/>
        <function-ref name="source" scoped="" ref="0x7f33b728f980"/>
        <function-ref name="address" scoped="" ref="0x7f33b728fb10"/>
        <function-ref name="destination" scoped="" ref="0x7f33b728fca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f33b728fe30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f33b728e020"/>
        <function-ref name="type" scoped="" ref="0x7f33b728e1b0"/>
        <function-ref name="setType" scoped="" ref="0x7f33b728e340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f33b728e4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f33b728e660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f33b728e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7f33b72830f0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7f33b72830f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b7283470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b7283600"/>
        <function-ref name="request" scoped="" ref="0x7f33b7283790"/>
        <function-ref name="granted" scoped="" ref="0x7f33b7283920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b7283ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f33b71fa5c0" loc="46:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f33b71fa5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f33b71fa940"/>
        <function-ref name="stopDone" scoped="" ref="0x7f33b71faad0"/>
        <function-ref name="start" scoped="" ref="0x7f33b71fac60"/>
        <function-ref name="stop" scoped="" ref="0x7f33b71fadf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f33b71f7600" loc="47:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f33b71f7600"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33b866e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b71f7980"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b71f7b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b71f7ca0"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b71f7e30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b71f6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f33b71f6e10" loc="49:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f33b71f6e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b71f41c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f33b71f4350"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b71f44e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b71f4670"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f33b71f4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f33b71f6800" loc="48:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f33b71f6800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33b866e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33b71f6b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f33b71f2b20" loc="53:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f33b71f2b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f33b71f1020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f33b71f11b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f33b71f1340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f33b71f14d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f33b71f1660"/>
        <function-ref name="get" scoped="" ref="0x7f33b71f17f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f33b71f1980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f33b71f0020"/>
        <function-ref name="set" scoped="" ref="0x7f33b71f1b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f33b71f1ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f33b71f1e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f33b71f21a0" loc="51:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f33b71f21a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f33b71f2520"/>
        <function-ref name="noAck" scoped="" ref="0x7f33b71f26b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f33b71f2840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f33b71f4ab0" loc="50:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f33b71f4ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f33b71f4e30"/>
        <function-ref name="source" scoped="" ref="0x7f33b71f3020"/>
        <function-ref name="address" scoped="" ref="0x7f33b71f31b0"/>
        <function-ref name="destination" scoped="" ref="0x7f33b71f3340"/>
        <function-ref name="setSource" scoped="" ref="0x7f33b71f34d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f33b71f3660"/>
        <function-ref name="type" scoped="" ref="0x7f33b71f37f0"/>
        <function-ref name="setType" scoped="" ref="0x7f33b71f3980"/>
        <function-ref name="isForMe" scoped="" ref="0x7f33b71f3b10"/>
        <function-ref name="setGroup" scoped="" ref="0x7f33b71f3ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f33b71f3e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f33b7193120" loc="54:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f33b7193120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b71934a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b7193630"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b71937c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b7193950"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b7193ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f33b7193d70" loc="55:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f33b7193d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33b7192180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f33b7198110" loc="47:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f33b7198110"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33b866e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b71984b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b7198640"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b71987d0"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b7198960"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b7198af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f33b7196a40" loc="50:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f33b7196a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b7196dc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f33b7195020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b71951b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b7195340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f33b71954d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f33b7198e70" loc="48:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f33b7198e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33b866e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33b7197240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f33b7195720" loc="51:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f33b7195720"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f33b7195aa0"/>
        <function-ref name="noAck" scoped="" ref="0x7f33b7195c30"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f33b7195dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f33b7197490" loc="49:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f33b7197490"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f33b7197810"/>
        <function-ref name="source" scoped="" ref="0x7f33b71979a0"/>
        <function-ref name="address" scoped="" ref="0x7f33b7197b30"/>
        <function-ref name="destination" scoped="" ref="0x7f33b7197cc0"/>
        <function-ref name="setSource" scoped="" ref="0x7f33b7197e50"/>
        <function-ref name="setDestination" scoped="" ref="0x7f33b7196020"/>
        <function-ref name="type" scoped="" ref="0x7f33b71961b0"/>
        <function-ref name="setType" scoped="" ref="0x7f33b7196340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f33b71964d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f33b7196660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f33b71967f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f33b718d8d0" loc="50:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f33b718d8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f33b718dc50"/>
        <function-ref name="stopDone" scoped="" ref="0x7f33b718dde0"/>
        <function-ref name="start" scoped="" ref="0x7f33b718c020"/>
        <function-ref name="stop" scoped="" ref="0x7f33b718c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f33b718b480" loc="52:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f33b718b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f33b866c0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b718b800"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b718b990"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b718bb20"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b718bcb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b718be40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33b718d280" loc="49:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f33b718d280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b718d600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f33b718c940" loc="51:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f33b718c940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f33b866c0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33b718ccc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f33b7189dc0" loc="56:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f33b7189dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f33b7188180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f33b7188310"/>
        <function-ref name="led1On" scoped="" ref="0x7f33b71884a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f33b7188630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f33b71887c0"/>
        <function-ref name="get" scoped="" ref="0x7f33b7188950"/>
        <function-ref name="led1Off" scoped="" ref="0x7f33b7188ae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f33b71841b0"/>
        <function-ref name="set" scoped="" ref="0x7f33b7188c70"/>
        <function-ref name="led0On" scoped="" ref="0x7f33b7188e00"/>
        <function-ref name="led2On" scoped="" ref="0x7f33b7184020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7f33b71894a0" loc="55:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f33b71894a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f33b866c0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f33b7189820"/>
        <function-ref name="offset" scoped="" ref="0x7f33b71899b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f33b7189b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f33b71812f0" loc="66:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f33b71812f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f33b7181670"/>
        <function-ref name="stopDone" scoped="" ref="0x7f33b7181800"/>
        <function-ref name="start" scoped="" ref="0x7f33b7181990"/>
        <function-ref name="stop" scoped="" ref="0x7f33b7181b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7f33b711ae40" loc="332:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7f33b711ae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f33b71191e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f33b7119370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f33b716f060" loc="74:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f33b716f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f33b716f3e0"/>
        <function-ref name="stop" scoped="" ref="0x7f33b716f570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7f33b7153d10" loc="191:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7f33b7153d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f33b71520e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f33b7152270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33b7184c70" loc="65:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f33b7184c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b7181020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7f33b716cc50" loc="75:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7f33b716cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7f33b716e020"/>
        <function-ref name="flush" scoped="" ref="0x7f33b716e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7f33b711c400" loc="322:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7f33b711c400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f33b711c780"/>
        <function-ref name="runTask" scoped="" ref="0x7f33b711c910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7f33b71718e0" loc="72:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f33b71718e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f33b7171c60"/>
        <function-ref name="resetSend" scoped="" ref="0x7f33b7171df0"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f33b717e020"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f33b717e1b0"/>
        <function-ref name="putData" scoped="" ref="0x7f33b717e340"/>
        <function-ref name="putDone" scoped="" ref="0x7f33b717e4d0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f33b717e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f33b717e8e0" loc="73:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f33b717e8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f33b717ec60"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f33b717edf0"/>
        <function-ref name="led1On" scoped="" ref="0x7f33b7176020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f33b71761b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f33b7176340"/>
        <function-ref name="get" scoped="" ref="0x7f33b71764d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f33b7176660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f33b7176ca0"/>
        <function-ref name="set" scoped="" ref="0x7f33b71767f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f33b7176980"/>
        <function-ref name="led2On" scoped="" ref="0x7f33b7176b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7f33b71150c0" loc="341:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f33b71150c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f33b7115440"/>
        <function-ref name="runTask" scoped="" ref="0x7f33b71155d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7f33b717a130" loc="67:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f33b717a130"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f33b717a4b0"/>
        <function-ref name="nextByte" scoped="" ref="0x7f33b717a640"/>
        <function-ref name="startSend" scoped="" ref="0x7f33b717a7d0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f33b717a960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7f33b71775c0" loc="68:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f33b71775c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f33b7177940"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f33b7177ad0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f33b7177c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7f33b704bc50" loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7f33b704bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f33b704a020"/>
        <function-ref name="runTask" scoped="" ref="0x7f33b704a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f33b7050830" loc="51:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f33b7050830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f33b866c0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b7050bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b7050d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b704e020"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b704e1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b704e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7f33b704a480" loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7f33b704a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f33b704a800"/>
        <function-ref name="runTask" scoped="" ref="0x7f33b704a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f33b7050110" loc="50:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f33b7050110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f33b866c0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33b70504b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7f33b704e760" loc="54:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7f33b704e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f33b866c0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f33b704eb00"/>
        <function-ref name="offset" scoped="" ref="0x7f33b704ec90"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f33b704ee20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f33b704c590" loc="57:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f33b704c590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f33b704c910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f33b704caa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f33b704cc30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f33b704cdc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f33b704b020"/>
        <function-ref name="get" scoped="" ref="0x7f33b704b1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f33b704b340"/>
        <function-ref name="led2On" scoped="" ref="0x7f33b704b980"/>
        <function-ref name="set" scoped="" ref="0x7f33b704b660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f33b704b4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f33b704b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7f33b704d9d0" loc="56:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f33b704d9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f33b704dd50"/>
        <function-ref name="nextByte" scoped="" ref="0x7f33b704c020"/>
        <function-ref name="startSend" scoped="" ref="0x7f33b704c1b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f33b704c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7f33b704d0e0" loc="55:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f33b704d0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f33b704d460"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f33b704d5f0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f33b704d780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7f33b703ad20" loc="50:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f33b703ad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b70440e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f33b7044270"/>
        <function-ref name="receive" scoped="" ref="0x7f33b7044400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f33b7044590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f33b7044720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f33b70448b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b7044a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7f33b7048b60" loc="48:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f33b7048b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f33b7045020"/>
        <function-ref name="resetSend" scoped="" ref="0x7f33b70451b0"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f33b7045340"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f33b70454d0"/>
        <function-ref name="putData" scoped="" ref="0x7f33b7045660"/>
        <function-ref name="putDone" scoped="" ref="0x7f33b70457f0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f33b7045980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f33b7044cc0" loc="51:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f33b7044cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f33b70430a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f33b7043230"/>
        <function-ref name="led1On" scoped="" ref="0x7f33b70433c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f33b7043550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f33b70436e0"/>
        <function-ref name="get" scoped="" ref="0x7f33b7043870"/>
        <function-ref name="led1Off" scoped="" ref="0x7f33b7043a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f33b70381b0"/>
        <function-ref name="set" scoped="" ref="0x7f33b7043b90"/>
        <function-ref name="led0On" scoped="" ref="0x7f33b7043d20"/>
        <function-ref name="led2On" scoped="" ref="0x7f33b7038020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f33b701c020" loc="6:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f33b701c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b701c3a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f33b701c530"/>
        <function-ref name="receive" scoped="" ref="0x7f33b701c6c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f33b701c850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f33b701e890" loc="5:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f33b701e890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b701ec10"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f33b701eda0"/>
        <function-ref name="receive" scoped="" ref="0x7f33b701d020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f33b701d1b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f33b701d340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f33b701d4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b701d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f33b701e080" loc="4:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f33b701e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f33b701e400"/>
        <function-ref name="stop" scoped="" ref="0x7f33b701e590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f33b6e8ac70" loc="45:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f33b6e8ac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f33b6e89020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f33b6e891b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f33b6e87440" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f33b6e87440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b6e877c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f33b6e87950"/>
        <function-ref name="receive" scoped="" ref="0x7f33b6e87ae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f33b6e87c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f33b6e86020" loc="49:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f33b6e86020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f33b6e863a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f33b6e89440" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f33b6e89440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b6e897c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f33b6e89950"/>
        <function-ref name="receive" scoped="" ref="0x7f33b6e89ae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f33b6e89c70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f33b6e89e00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f33b6e87020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b6e871b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f33b6e8a020" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f33b6e8a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b6e8a3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b6e8a530"/>
        <function-ref name="request" scoped="" ref="0x7f33b6e8a6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f33b6e8a850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b6e8a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f33b700ba30" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f33b700ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f33b700bdb0"/>
        <function-ref name="configure" scoped="" ref="0x7f33b700a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f33b7007020" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f33b7007020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b70073a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f33b7007530"/>
        <function-ref name="receive" scoped="" ref="0x7f33b70076c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f33b7007850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f33b7005450" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f33b7005450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f33b70057d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f33b700a860" loc="43:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f33b700a860"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b700abe0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f33b700ad70"/>
        <function-ref name="receive" scoped="" ref="0x7f33b7009020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f33b70091b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f33b7009340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f33b70094d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b7009660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f33b70061d0" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f33b70061d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b7006550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b70066e0"/>
        <function-ref name="request" scoped="" ref="0x7f33b7006870"/>
        <function-ref name="granted" scoped="" ref="0x7f33b7006a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b7006b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f33b700c7a0" loc="41:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f33b700c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b700cb20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b700ccb0"/>
        <function-ref name="request" scoped="" ref="0x7f33b700ce40"/>
        <function-ref name="granted" scoped="" ref="0x7f33b700b020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b700b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f33b70031d0" loc="48:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f33b70031d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f33b7003550"/>
        <function-ref name="txDone" scoped="" ref="0x7f33b70036e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f33b6f98dc0" loc="47:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f33b6f98dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f33b6f97180"/>
        <function-ref name="configure" scoped="" ref="0x7f33b6f97310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f33b6f96890" loc="49:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f33b6f96890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b6f96c30"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f33b6f96dc0"/>
        <function-ref name="receive" scoped="" ref="0x7f33b6f95020"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f33b6f951b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f33b6f943e0" loc="52:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f33b6f943e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f33b6f94780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f33b6f94a50" loc="53:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f33b6f94a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f33b6f94dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f33b6f93020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f33b6f931b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f33b6f93340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f33b6f934d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f33b6f93660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f33b6f937f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f33b6f93980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f33b6f93b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f33b6f93ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f33b6f93e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f33b6f92020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f33b6f921b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f33b6f92440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f33b6f925d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f33b6f92760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f33b6f928f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f33b6f92a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f33b6f92c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f33b6f92da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f33b6f91020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f33b6f911b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f33b6f91340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f33b6f914d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f33b6f91660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f33b6f919f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f33b6f91b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f33b6f91d10"/>
        <function-ref name="tx" scoped="" ref="0x7f33b6f90020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f33b6f901b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f33b6f90340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f33b6f904d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f33b6f90660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f33b6f907f0"/>
        <function-ref name="rx" scoped="" ref="0x7f33b6f90980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f33b6f90b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f33b6f90ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f33b6f90e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f33b6f8f020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f33b6f8f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f33b6f976d0" loc="48:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f33b6f976d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b6f97a70"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f33b6f97c00"/>
        <function-ref name="receive" scoped="" ref="0x7f33b6f97d90"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f33b6f96020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f33b6f961b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f33b6f96340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b6f964d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f33b6f8e020" loc="55:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f33b6f8e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33b6f8ee30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b6f8c800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b6f8c340"/>
        <function-ref name="overflow" scoped="" ref="0x7f33b6f8ccc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f33b6f955b0" loc="51:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f33b6f955b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b6f95950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b6f95ae0"/>
        <function-ref name="request" scoped="" ref="0x7f33b6f95c70"/>
        <function-ref name="granted" scoped="" ref="0x7f33b6f95e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b6f94020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f33b6f98020" loc="46:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f33b6f98020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b6f983c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b6f98550"/>
        <function-ref name="request" scoped="" ref="0x7f33b6f986e0"/>
        <function-ref name="granted" scoped="" ref="0x7f33b6f98870"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b6f98a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f33b6f8f5b0" loc="54:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f33b6f8f5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f33b6f8f950"/>
        <function-ref name="txDone" scoped="" ref="0x7f33b6f8fae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f33b6f8b120" loc="56:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f33b6f8b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f33b6f8b4a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f33b6f8b630"/>
        <function-ref name="led1On" scoped="" ref="0x7f33b6f8b7c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f33b6f8b950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f33b6f8bae0"/>
        <function-ref name="get" scoped="" ref="0x7f33b6f8bc70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f33b6f8be00"/>
        <function-ref name="led2On" scoped="" ref="0x7f33b6f8a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f33b6f8a1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f33b6f8a020"/>
        <function-ref name="led0On" scoped="" ref="0x7f33b6f8a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f33b6f7c860" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f33b6f7c860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f33b6f7cbe0"/>
        <function-ref name="txDone" scoped="" ref="0x7f33b6f7cd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f33b6f7f500" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f33b6f7f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f33b6f7f880"/>
        <function-ref name="stop" scoped="" ref="0x7f33b6f7fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f33b6f7fd30" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f33b6f7fd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f33b6f820e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f33b6f82270"/>
        <function-ref name="setUctl" scoped="" ref="0x7f33b6f82400"/>
        <function-ref name="enableUart" scoped="" ref="0x7f33b6f82590"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f33b6f82720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f33b6f828b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f33b6f82a40"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f33b6f82bd0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f33b6f82d60"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f33b6f81020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f33b6f811b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f33b6f81340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f33b6f814d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f33b6f81760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f33b6f818f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f33b6f81a80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f33b6f81c10"/>
        <function-ref name="isUart" scoped="" ref="0x7f33b6f81da0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f33b6f7e020"/>
        <function-ref name="isSpi" scoped="" ref="0x7f33b6f7e1b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f33b6f7e340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f33b6f7e4d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f33b6f7e660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f33b6f7e7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f33b6f7e980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f33b6f7ed10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f33b6f7d020"/>
        <function-ref name="setUbr" scoped="" ref="0x7f33b6f7d1b0"/>
        <function-ref name="tx" scoped="" ref="0x7f33b6f7d340"/>
        <function-ref name="getUctl" scoped="" ref="0x7f33b6f7d4d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f33b6f7d660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f33b6f7d7f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f33b6f7d980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f33b6f7db10"/>
        <function-ref name="rx" scoped="" ref="0x7f33b6f7dca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f33b6f7de30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f33b6f7c020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f33b6f7c1b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f33b6f7c340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f33b6f7c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f33b6f6d890" loc="66:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f33b6f6d890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b6f6dc10"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b6f6dda0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b6f6c020"/>
        <function-ref name="clr" scoped="" ref="0x7f33b6f6bc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b6f6c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b6f6c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b6f6c660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b6f6c7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b6f6c980"/>
        <function-ref name="get" scoped="" ref="0x7f33b6f6cb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b6f6cca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b6f6ce30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b6f6b020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b6f6b2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b6f6b440"/>
        <function-ref name="set" scoped="" ref="0x7f33b6f6b5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b6f6b760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b6f6c1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b6f6b8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b6f6ba80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f33b6f73020" loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f33b6f73020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f33b6f733a0"/>
        <function-ref name="txDone" scoped="" ref="0x7f33b6f73530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f33b6f6a020" loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f33b6f6a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b6f6a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b6f6a530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b6f6a6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b6f684d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b6f6a9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b6f6ab70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b6f6ad00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b6f69020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b6f691b0"/>
        <function-ref name="get" scoped="" ref="0x7f33b6f69340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b6f694d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b6f69660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b6f697f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b6f69a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b6f69c10"/>
        <function-ref name="set" scoped="" ref="0x7f33b6f69da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b6f68020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b6f6a850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b6f681b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b6f68340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f33b6f68890" loc="68:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f33b6f68890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b6f68c10"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b6f68da0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b6f67020"/>
        <function-ref name="clr" scoped="" ref="0x7f33b6f66c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b6f67340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b6f674d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b6f67660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b6f677f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b6f67980"/>
        <function-ref name="get" scoped="" ref="0x7f33b6f67b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b6f67ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b6f67e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b6f66020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b6f662b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b6f66440"/>
        <function-ref name="set" scoped="" ref="0x7f33b6f665d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b6f66760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b6f671b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b6f668f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b6f66a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f33b6f783c0" loc="61:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f33b6f783c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f33b6f78740"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f33b6f788d0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f33b6f78a60"/>
        <function-ref name="enableUart" scoped="" ref="0x7f33b6f78bf0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f33b6f78d80"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f33b6f77020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f33b6f771b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f33b6f77340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f33b6f774d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f33b6f77660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f33b6f777f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f33b6f77980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f33b6f77b10"/>
        <function-ref name="getUbr" scoped="" ref="0x7f33b6f77da0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f33b6f76020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f33b6f761b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f33b6f76340"/>
        <function-ref name="isUart" scoped="" ref="0x7f33b6f764d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f33b6f76660"/>
        <function-ref name="isSpi" scoped="" ref="0x7f33b6f767f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f33b6f76980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f33b6f76b10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f33b6f76ca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f33b6f76e30"/>
        <function-ref name="getMode" scoped="" ref="0x7f33b6f75020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f33b6f753b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f33b6f75540"/>
        <function-ref name="setUbr" scoped="" ref="0x7f33b6f756d0"/>
        <function-ref name="tx" scoped="" ref="0x7f33b6f75860"/>
        <function-ref name="getUctl" scoped="" ref="0x7f33b6f759f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f33b6f75b80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f33b6f75d10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f33b6f74020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f33b6f741b0"/>
        <function-ref name="rx" scoped="" ref="0x7f33b6f74340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f33b6f744d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f33b6f74660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f33b6f747f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f33b6f74980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f33b6f74b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f33b6f7b9c0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f33b6f7b9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f33b6f7bd40"/>
        <function-ref name="stop" scoped="" ref="0x7f33b6f78020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f33b6f6f020" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f33b6f6f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b6f6f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b6f6f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b6f6f6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f33b6f6d4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b6f6f9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b6f6fb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b6f6fd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b6f6e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b6f6e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f33b6f6e340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b6f6e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b6f6e660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b6f6e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b6f6ea80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b6f6ec10"/>
        <function-ref name="set" scoped="" ref="0x7f33b6f6eda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b6f6d020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b6f6f850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b6f6d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b6f6d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f33b6f738f0" loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f33b6f738f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f33b6f73c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f33b6f73e00"/>
        <function-ref name="setResistor" scoped="" ref="0x7f33b6f72020"/>
        <function-ref name="clr" scoped="" ref="0x7f33b6f71c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f33b6f72340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f33b6f724d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f33b6f72660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f33b6f727f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f33b6f72980"/>
        <function-ref name="get" scoped="" ref="0x7f33b6f72b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f33b6f72ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f33b6f72e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f33b6f71020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f33b6f712b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f33b6f71440"/>
        <function-ref name="set" scoped="" ref="0x7f33b6f715d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f33b6f71760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f33b6f721b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f33b6f718f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f33b6f71a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f33b6ee97c0" loc="43:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f33b6ee97c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c1640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f33b86c19b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f33b6ee6620"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f33b6ee5020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f33b6ee6ae0"/>
        <function-ref name="overflow" scoped="" ref="0x7f33b6ee54e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f33b640c020" loc="43:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f33b640c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f33b640c3a0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f33b640c530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f33b6406440" loc="48:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f33b6406440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f33b64067c0"/>
        <function-ref name="configure" scoped="" ref="0x7f33b6406950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f33b6407c10" loc="46:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f33b6407c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f33b6406020"/>
        <function-ref name="txDone" scoped="" ref="0x7f33b64061b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f33b640d340" loc="42:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f33b640d340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b640d6c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b640d850"/>
        <function-ref name="request" scoped="" ref="0x7f33b640d9e0"/>
        <function-ref name="granted" scoped="" ref="0x7f33b640db70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b640dd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f33b640b020" loc="45:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f33b640b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f33b640b3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f33b640b530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f33b640b6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f33b640b850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f33b640b9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f33b640bb70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f33b640bd00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f33b640a020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f33b640a1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f33b640a340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f33b640a4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f33b640a660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f33b640a7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f33b640aa80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f33b640ac10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f33b640ada0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f33b6409020"/>
        <function-ref name="isUart" scoped="" ref="0x7f33b64091b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f33b6409340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f33b64094d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f33b6409660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f33b64097f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f33b6409980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f33b6409b10"/>
        <function-ref name="getMode" scoped="" ref="0x7f33b6409ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f33b6408220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f33b64083b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f33b6408540"/>
        <function-ref name="tx" scoped="" ref="0x7f33b64086d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f33b6408860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f33b64089f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f33b6408b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f33b6408d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f33b6407020"/>
        <function-ref name="rx" scoped="" ref="0x7f33b64071b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f33b6407340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f33b64074d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f33b6407660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f33b64077f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f33b6407980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f33b640c7c0" loc="44:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f33b640c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f33b640cb40"/>
        <function-ref name="userId" scoped="" ref="0x7f33b640ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f33b6eca510" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f33b6eca510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f33b6eca890"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f33b6ecaa20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f33b6ec9af0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f33b6ec9af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f33b6ec9e70"/>
        <function-ref name="configure" scoped="" ref="0x7f33b6ec8030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f33b6ecc510" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f33b6ecc510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f33b6ecc890"/>
        <function-ref name="txDone" scoped="" ref="0x7f33b6ecca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f33b6ecb280" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f33b6ecb280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b6ecb600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b6ecb790"/>
        <function-ref name="request" scoped="" ref="0x7f33b6ecb920"/>
        <function-ref name="granted" scoped="" ref="0x7f33b6ecbab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b6ecbc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f33b6ecad20" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f33b6ecad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f33b6ec90e0"/>
        <function-ref name="userId" scoped="" ref="0x7f33b6ec9270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f33b6ec4120" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f33b6ec4120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f33b6ec44a0"/>
        <function-ref name="userId" scoped="" ref="0x7f33b6ec4630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f33b6ec6230" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f33b6ec6230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f33b6ec65d0"/>
        <function-ref name="txDone" scoped="" ref="0x7f33b6ec6760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f33b6ec5ad0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f33b6ec5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f33b6ec5e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f33b6ec6b60" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f33b6ec6b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f33b6ec5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f33b6ec52f0" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f33b6ec52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f33b6ec5670"/>
        <function-ref name="txDone" scoped="" ref="0x7f33b6ec5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f33b6ec1bd0" loc="59:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f33b6ec1bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f33b6ec0020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f33b6ec01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f33b6ebf950" loc="64:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f33b6ebf950"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f33b6ebfcf0"/>
        <function-ref name="configure" scoped="" ref="0x7f33b6ebfe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f33b6ec0400" loc="60:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f33b6ec0400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b6ec0780"/>
        <function-ref name="requested" scoped="" ref="0x7f33b6ec0910"/>
        <function-ref name="granted" scoped="" ref="0x7f33b6ec0aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b6ec0c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f33b6ec0dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f33b6ec2e30" loc="58:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f33b6ec2e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b6ec1210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b6ec13a0"/>
        <function-ref name="request" scoped="" ref="0x7f33b6ec1530"/>
        <function-ref name="granted" scoped="" ref="0x7f33b6ec16c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b6ec1850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7f33b6ebd0f0" loc="65:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f33b6ebd0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f33b6ebd470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f33b6ebf060" loc="61:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f33b6ebf060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f33b6ebf3e0"/>
        <function-ref name="userId" scoped="" ref="0x7f33b6ebf570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f33b6398cf0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f33b6398cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f33b63970a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f33b6397330" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f33b6397330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f33b63976b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f33b6397840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f33b63979d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f33b6397b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f33b63943a0" loc="99:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f33b63943a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f33b6394740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f33b63948d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f33b63927e0" loc="105:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f33b63927e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f33b6392b80"/>
        <function-ref name="configure" scoped="" ref="0x7f33b6392d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f33b6390020" loc="106:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f33b6390020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f33b63903a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f33b6390530"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f33b63906c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f33b6390850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f33b6394b20" loc="100:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f33b6394b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b6393020"/>
        <function-ref name="requested" scoped="" ref="0x7f33b63931b0"/>
        <function-ref name="granted" scoped="" ref="0x7f33b6393340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b63934d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f33b6393660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f33b6390aa0" loc="107:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f33b6390aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f33b6390e20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f33b638f020"/>
        <function-ref name="led1On" scoped="" ref="0x7f33b638f1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f33b638f340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f33b638f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f33b638f660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f33b638f7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f33b638fe30"/>
        <function-ref name="set" scoped="" ref="0x7f33b638fb10"/>
        <function-ref name="led2On" scoped="" ref="0x7f33b638f980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f33b638fca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f33b6395540" loc="98:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f33b6395540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b63958e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b6395a70"/>
        <function-ref name="request" scoped="" ref="0x7f33b6395c00"/>
        <function-ref name="granted" scoped="" ref="0x7f33b6395d90"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b6394020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7f33b63920e0" loc="104:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f33b63920e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f33b6392460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f33b63938b0" loc="101:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f33b63938b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f33b6393c30"/>
        <function-ref name="userId" scoped="" ref="0x7f33b6393dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f33b638e160" loc="155:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f33b638e160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f33b638e4e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f33b638e670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f33b6eb9780" loc="72:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f33b6eb9780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f33b6eb9b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f33b6eb9d50" loc="73:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f33b6eb9d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b6ea3100"/>
        <function-ref name="requested" scoped="" ref="0x7f33b6ea3290"/>
        <function-ref name="granted" scoped="" ref="0x7f33b6ea3420"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b6ea35b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f33b6ea3740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f33b6eb9020" loc="70:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f33b6eb9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f33b6eb93a0"/>
        <function-ref name="stop" scoped="" ref="0x7f33b6eb9530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f33b6ea3990" loc="74:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f33b6ea3990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f33b6ea3d10"/>
        <function-ref name="userId" scoped="" ref="0x7f33b6ea2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f33b635abd0" loc="62:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f33b635abd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f33b6358020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f33b6358270" loc="63:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f33b6358270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b63585f0"/>
        <function-ref name="requested" scoped="" ref="0x7f33b6358780"/>
        <function-ref name="granted" scoped="" ref="0x7f33b6358910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b6358aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f33b6358c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f33b635a470" loc="60:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f33b635a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f33b635a7f0"/>
        <function-ref name="stop" scoped="" ref="0x7f33b635a980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f33b6358e80" loc="64:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f33b6358e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f33b6357220"/>
        <function-ref name="userId" scoped="" ref="0x7f33b63573b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7f33b6e818e0" loc="3:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f33b6e818e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f33b6e81c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f33b6e80020" loc="4:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f33b6e80020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f33b6e803a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f33b6e80530"/>
        <function-ref name="request" scoped="" ref="0x7f33b6e806c0"/>
        <function-ref name="granted" scoped="" ref="0x7f33b6e80850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f33b6e809e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f33b6e81080" loc="2:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f33b6e81080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f33b6e81400"/>
        <function-ref name="stop" scoped="" ref="0x7f33b6e81590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7f33b6e6fa30" loc="47:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7f33b6e6fa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f33b6e6fdb0"/>
        <function-ref name="offset" scoped="" ref="0x7f33b6e6c020"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f33b6e6c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f33b6e5d060" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="TestSerialAppC.TimerIniTDMA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f33b6e5d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c4e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f33b86c1200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f33b6e5a630"/>
        <function-ref name="fired" scoped="" ref="0x7f33b6e5cac0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f33b6e5b920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f33b6e5b4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f33b6e59020"/>
        <function-ref name="gett0" scoped="" ref="0x7f33b6e5aab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f33b6e5b020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f33b6e5dc50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f33b6e5a020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f33b6e5c170"/>
        <function-ref name="stop" scoped="" ref="0x7f33b6e5c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f33b6e57b00" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="TestSerialAppC.TimerApagaLeds"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f33b6e57b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c4e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f33b86c1200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f33b6e53110"/>
        <function-ref name="fired" scoped="" ref="0x7f33b6e555b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f33b6e544a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f33b6e54020"/>
        <function-ref name="getdt" scoped="" ref="0x7f33b6e53a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f33b6e53590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f33b6e55a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f33b6e56750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f33b6e54ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f33b6e56c20"/>
        <function-ref name="stop" scoped="" ref="0x7f33b6e55130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f33b6e504e0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="TestSerialAppC.TimerFinTDMA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f33b6e504e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f33b86c4e00"/>
            <typename><typedef-ref name="TMilli" ref="0x7f33b86c1200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f33b6e4da20"/>
        <function-ref name="fired" scoped="" ref="0x7f33b6e4e020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f33b6e4eda0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f33b6e4e920"/>
        <function-ref name="getdt" scoped="" ref="0x7f33b6e4b4a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f33b6e4b020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f33b6e4e4a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f33b6e4f110"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f33b6e4d410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f33b6e4f5e0"/>
        <function-ref name="stop" scoped="" ref="0x7f33b6e4fab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f33b6dbf020" loc="49:../../../tos/system/AMSenderC.nc">
      <component-ref qname="TestSerialAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f33b6dbf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b6dbf3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b6dbf530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b6dbf6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b6dbf850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b6dbf9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f33b6dbfc30" loc="50:../../../tos/system/AMSenderC.nc">
      <component-ref qname="TestSerialAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f33b6dbfc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b6dbe020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f33b6dbe1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b6dbe340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b6dbe4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f33b6dbe660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f33b6dbe8b0" loc="51:../../../tos/system/AMSenderC.nc">
      <component-ref qname="TestSerialAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f33b6dbe8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f33b6dbec30"/>
        <function-ref name="source" scoped="" ref="0x7f33b6dbedc0"/>
        <function-ref name="address" scoped="" ref="0x7f33b6dbd020"/>
        <function-ref name="destination" scoped="" ref="0x7f33b6dbd1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f33b6dbd340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f33b6dbd4d0"/>
        <function-ref name="type" scoped="" ref="0x7f33b6dbd660"/>
        <function-ref name="setType" scoped="" ref="0x7f33b6dbd7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f33b6dbd980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f33b6dbdb10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f33b6dbdca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f33b6dbc020" loc="52:../../../tos/system/AMSenderC.nc">
      <component-ref qname="TestSerialAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f33b6dbc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f33b6dbc3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f33b6dbc530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f33b6dbc6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f33b6342920" loc="49:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="TestSerialAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f33b6342920"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b6342ca0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b6342e30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b6340020"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b63401b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b6340340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f33b6340590" loc="50:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="TestSerialAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f33b6340590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b6340910"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f33b6340aa0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b6340c30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b6340dc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f33b633f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f33b633f270" loc="51:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="TestSerialAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f33b633f270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f33b633f5f0"/>
        <function-ref name="source" scoped="" ref="0x7f33b633f780"/>
        <function-ref name="address" scoped="" ref="0x7f33b633f910"/>
        <function-ref name="destination" scoped="" ref="0x7f33b633faa0"/>
        <function-ref name="setSource" scoped="" ref="0x7f33b633fc30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f33b633fdc0"/>
        <function-ref name="type" scoped="" ref="0x7f33b633e020"/>
        <function-ref name="setType" scoped="" ref="0x7f33b633e1b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f33b633e340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f33b633e4d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f33b633e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f33b633e8f0" loc="52:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="TestSerialAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f33b633e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f33b633ec70"/>
        <function-ref name="noAck" scoped="" ref="0x7f33b633ee00"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f33b633d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f33b6334db0" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestSerialAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f33b6334db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b6333180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b6333310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b63334a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b6333630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b63337c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f33b6333a70" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestSerialAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f33b6333a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b6333df0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b6332020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b63321b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b6332340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b63324d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f33b6332720" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestSerialAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f33b6332720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f33b6332aa0"/>
        <function-ref name="source" scoped="" ref="0x7f33b6332c30"/>
        <function-ref name="address" scoped="" ref="0x7f33b6332dc0"/>
        <function-ref name="destination" scoped="" ref="0x7f33b6331020"/>
        <function-ref name="setSource" scoped="" ref="0x7f33b63311b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f33b6331340"/>
        <function-ref name="type" scoped="" ref="0x7f33b63314d0"/>
        <function-ref name="setType" scoped="" ref="0x7f33b6331660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f33b63317f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f33b6331980"/>
        <function-ref name="localGroup" scoped="" ref="0x7f33b6331b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f33b6e26930" loc="43:../../../tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f33b6e26930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b6e26cb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b6e26e40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b6e23020"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b6e231b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b6e23340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f33b6dd4400" loc="51:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f33b6dd4400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f33b866e550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b6dd47a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b6dd4930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b6dd4ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b6dd4c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b6dd4de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f33b6dd6df0" loc="47:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f33b6dd6df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f33b6dd51c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b6dd5350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b6dd54e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f33b6dd5670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f33b6dd5800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f33b6dd1720" loc="53:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f33b6dd1720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b6dd1aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f33b6dd1c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b6dd1dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b6dd0020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f33b6dd01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBusy" ref="0x7f33b6dd5b80" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBusy" scoped="" ref="0x7f33b6dd5b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBusy"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="busy" scoped="" ref="0x7f33b6dd4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f33b6dd0480" loc="184:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f33b6dd0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f33b6dd0800"/>
        <function-ref name="runTask" scoped="" ref="0x7f33b6dd0990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f33b6dd0c60" loc="140:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f33b6dd0c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f33b6dcf020"/>
        <function-ref name="runTask" scoped="" ref="0x7f33b6dcf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f33b6dd2060" loc="52:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f33b6dd2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f33b6dd23e0"/>
        <function-ref name="source" scoped="" ref="0x7f33b6dd2570"/>
        <function-ref name="address" scoped="" ref="0x7f33b6dd2700"/>
        <function-ref name="destination" scoped="" ref="0x7f33b6dd2890"/>
        <function-ref name="setSource" scoped="" ref="0x7f33b6dd2a20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f33b6dd2bb0"/>
        <function-ref name="type" scoped="" ref="0x7f33b6dd2d40"/>
        <function-ref name="setType" scoped="" ref="0x7f33b6dd1020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f33b6dd11b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f33b6dd1340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f33b6dd14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f33b6db2020" loc="46:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="TestSerialAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f33b6db2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f33b6db23a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f33b6db2530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f33b6db26c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f33b6db2850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f33b6db29e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f33b6db8910" loc="45:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="TestSerialAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f33b6db8910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f33b6db8c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f33b6db2c30" loc="47:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="TestSerialAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f33b6db2c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f33b6db1020"/>
        <function-ref name="source" scoped="" ref="0x7f33b6db11b0"/>
        <function-ref name="address" scoped="" ref="0x7f33b6db1340"/>
        <function-ref name="destination" scoped="" ref="0x7f33b6db14d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f33b6db1660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f33b6db17f0"/>
        <function-ref name="type" scoped="" ref="0x7f33b6db1980"/>
        <function-ref name="setType" scoped="" ref="0x7f33b6db1b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f33b6db1ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f33b6db1e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f33b6db0020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f33b86ac270" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f33b86573d0" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33b866ed10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f33b86b8a50" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33b866ed10"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f33b86b8dd0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f33b8657130" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f33b8654a00" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b8654400" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f33b8654730" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f33b8652b60" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f33b8656740" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b86564c0" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f33b8653c70" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
              <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b8653690" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f33b86539e0" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
              <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <documentation loc="42:../../../tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f33b8637a90" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b8637810" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f33b8633ba0" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b8633920" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f33b862e020" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b8630910" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f33b8630c40" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f33b8630020" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f33b8632050" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b8631a70" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f33b8631da0" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <function event="" provided="0" name="receive" ref="0x7f33b865b300" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
              <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b865c850" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f33b865cba0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f33b865b020" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f33b86b4070" loc="61:../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f33b86b4820" loc="67:../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f33b86b3030" loc="72:../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f33b86b1020" loc="83:../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f33b86b07d0" loc="100:../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f33b86af020" loc="117:../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f33b86b37c0" loc="77:../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f33b86afb90" loc="134:../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f33b86af910" loc="134:../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f33b86b58a0" loc="56:../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f33b86b1800" loc="89:../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f33b86b0020" loc="94:../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f33b86ba020" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
              <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f33b86bcc50" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
              <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f33b86b9520" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
              <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f33b86b92a0" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
              <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f33b86bc270" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f33b86ba870" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f33b86add30" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f33b86add30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f33b8648a20" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f33b864b350" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f33b8649120" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f33b864ab00" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f33b864ae40" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f33b864a350" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f33b8646a70" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f33b86461f0" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f33b864bb30" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f33b864e8d0" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f33b864e650" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f33b86480c0" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f33b8649ac0" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f33b8649e00" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f33b864d3b0" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f33b864d130" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f33b864dbb0" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f33b85cb0e0" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f33b85cb810" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f33b85cd270" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f33b85ca760" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f33b85cd970" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f33b85ca020" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f33b85ce440" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f33b85ceb10" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f33b85d3a90" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f33b859f070" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f33b859f7c0" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f33b859a2e0" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f33b859a060" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorPullUp" ref="0x7f33b8599d30" loc="126:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f33b85a2870" loc="59:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f33b859e780" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f33b8598520" loc="134:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="129:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDriveStrength" ref="0x7f33b8596020" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="136:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short> &#10; Set port drive strength.</short>
          <long> &#10; Set port drive strength.&#10; @param mode: MSP430_PORT_DRIVE_STRENGTH_*&#10; @return EINVAL if invalid mode or pin doesn't support drive&#10;     strength config.&#10; FAIL if pin is not an output&#10; SUCCESS if pin supports it, is an output, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f33b8598d70" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f33b859e020" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f33b85a1870" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDriveStrength" ref="0x7f33b8596910" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get drive strength.</short>
          <long>&#10; Get drive strength.&#10; @return MSP430_PORT_DRIVE_STRENGTH_*&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f33b859b020" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorPullDown" ref="0x7f33b85995f0" loc="125:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f33b85a1070" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorOff" ref="0x7f33b859ab80" loc="124:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; set resistor mode directly.</short>
          <long>&#10; set resistor mode directly.&#10;&#10; You have to know what you are doing when you use these.  These routines&#10; assume that the port is set for input (PxDIR).  The routines explicitly&#10; change the value of the bits setting in PxOUT.&#10;&#10; The advantage of using these routines is efficiency because there is no&#10; mode checking.  In addition, no error check is done to make sure that the&#10; port is in input mode.  The thing is, first, this is something that you&#10; get right once and then it doesn't change so why check and, second no&#10; one actually checks the error return because there really isn't any&#10; point to doing the check because this isn't something you actually need&#10; to check the return code for.  So why have one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f33b85a69c0" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="46:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f33b859d020" loc="91:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f33b859b7c0" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f33b859d7e0" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f33b85a2120" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Platform" loc="51:../../../tos/interfaces/Platform.nc">
      <function command="" provided="0" name="jiffiesRawSize" ref="0x7f33b839daf0" loc="109:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="node_id" ref="0x7f33b83999e0" loc="182:../../../tos/interfaces/Platform.nc">
        <documentation loc="164:../../../tos/interfaces/Platform.nc">
          <short>&#10; Platform dependent node id.</short>
          <long>&#10; Platform dependent node id.&#10;&#10; Get a Platform defined node id.  This will typically be a serial number&#10; or mac address.&#10;&#10; Platform define PLATFORM_SERIAL_NUM_SIZE determines the&#10; size.  If not defined defaults to 4 bytes (uint32_t).  But platforms&#10; really should define it to be clear.  (see platform.h)&#10;&#10; input:  *lenp      pointer where to place the length of the number.&#10;&#10; output: *lenp      length filled in if non-null.&#10; return: *uint8_t   pointer to the serial_num or NULL.&#10;&#10; a Node Id is assumed to be a sequence of bytes starting with the&#10; msb first.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lenp" ref="0x7f33b8399720" loc="182:../../../tos/interfaces/Platform.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRawSize" ref="0x7f33b83a0db0" loc="79:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRaw" ref="0x7f33b83a0620" loc="78:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesExpired" ref="0x7f33b839c940" loc="126:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t_base" ref="0x7f33b839c350" loc="126:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
            </type-int>
          </variable>
          <variable name="limit" ref="0x7f33b839c6b0" loc="126:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIntPriority" ref="0x7f33b839bd40" loc="162:../../../tos/interfaces/Platform.nc">
        <documentation loc="153:../../../tos/interfaces/Platform.nc">
          <short>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.</short>
          <long>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.&#10;   modern computer hardware allows the assignment of different priorities&#10;   to interrupt sources.  This is inherently a platform thing.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="irq_number" ref="0x7f33b839bac0" loc="162:../../../tos/interfaces/Platform.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set_unaligned_traps" ref="0x7f33b839b390" loc="150:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on_off" ref="0x7f33b839b110" loc="150:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesRaw" ref="0x7f33b839d350" loc="108:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="localTime" ref="0x7f33b83a3e40" loc="64:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsExpired" ref="0x7f33b839eb70" loc="95:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t_base" ref="0x7f33b839e580" loc="95:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
            </type-int>
          </variable>
          <variable name="limit" ref="0x7f33b839e8e0" loc="95:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f33b835cb40" loc="48:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f33b835ede0" loc="43:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f33b835c420" loc="47:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f33b835e700" loc="42:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f33b835d5a0" loc="45:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f33b83618f0" loc="40:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f33b835e020" loc="41:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f33b835dcc0" loc="46:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f33b87e47e0" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f33b8aac700"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f33b870aa80" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f33b87081f0" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f33b870a2b0" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f33b8882020" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f33b9222e80" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f33b8b6ae20" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f33b8b6a610" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f33b8b5e770" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event.&#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f33b8b5c020" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f33b823a1e0" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f33b823a1e0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f33b823a420" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f33b823a420"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f33b82342a0" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f33b823a420"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b8234020" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f33b8233430" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b82331b0" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f33b8236020" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b823ad60" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f33b8232740" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f33b823a420"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b8232150" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f33b82324b0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f33b823a420"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f33b8226990" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b8226370" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f33b8226700" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f33b8224b30" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b82248b0" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f33b8227ae0" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f33b8227120" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f33b822ae80" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f33b823c5f0" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b823c370" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f33b823b7d0" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b823b550" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f33b8239940" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b82396c0" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f33b8242840" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f33b866e930"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f33b82425c0" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f33b824c400" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f33b866ed10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f33b824c180" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f33b824e840" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f33b866ed10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f33b824d350" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f33b866ed10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f33b824d0d0" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f33b8248d00" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33b866ed10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f33b8248720" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f33b8248a70" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33b866ed10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f33b824a800" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33b866ed10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f33b824a220" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f33b824a570" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33b866ed10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f33b82452e0" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f33b866e550"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f33b8245060" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f33b8244680" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f33b866e550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f33b82440d0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f33b82443f0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f33b866e550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f33b82470b0" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f33b8249e00" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f33b8240d00" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f33b866e930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f33b8240720" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f33b8240a70" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f33b866e930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f33b823fb50" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f33b866e930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f33b81fc6e0" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b81fc460" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f33b81ff980" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b81ff700" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f33b82000b0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f33b8201dc0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f33b8201520" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f33b82012a0" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f33b8200ae0" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f33b8200860" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f33b81fe860" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b81fe5e0" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f33b81ef020" loc="59:../../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33b866ed10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f33b81f18b0" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33b866ed10"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f33b81f1c30" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f33b820b420" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f33b820ce10" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f33b820b190" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f33b8207b20" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f33b8207520" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f33b8207890" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f33b820a020" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f33b9216110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f33b820bc80" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f33b8209a30" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f33b82097b0" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f33b820c610" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f33b820c390" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f33b820ab50" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f33b820a8d0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f33b81f5830" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b81f55b0" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f33b81f98f0" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b81f92d0" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f33b81f9660" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f33b81f7810" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b81f7590" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f33b81f6d20" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b81f6700" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f33b81f6a90" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f33b81f3810" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b81f3590" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f33b8204430" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b82041b0" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f33b81e33c0" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b81eadd0" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f33b81e3130" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f33b81df970" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b81df370" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f33b81df6a0" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f33b81deaa0" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f33b81e26c0" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b81e2440" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f33b81e0b80" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
              <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b81e05a0" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f33b81e08f0" loc="100:../../../tos/interfaces/Send.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
              <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f33b81e7390" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.&#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource&#10;&#10; @note This command should never be called between putting in a request&#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event,&#10;       we have opted to keep thing simple and warn you about the potential&#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f33b81e8390" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f33b81eba00" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f33b81e8b80" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f33b81e7de0" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f33b81be3a0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f33b81c2dc0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f33b81be110" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f33b81bc6a0" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f33b81bae70" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f33b81ba060" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f33b81ba8a0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f33b81babd0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f33b81bb840" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
              <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f33b81bb260" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f33b81bb5b0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
              <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f33b81bee30" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f33b81bebb0" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f33b81b50e0" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f33b81bf870" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f33b81c8a40" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f33b81c0270" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f33b81af2e0" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b81af020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f33b81b1710" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header" ref="0x7f33b86a8080"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f33b86a79e0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b81b1410" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f33b81ae620" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata" ref="0x7f33b86a54e0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f33b86a4db0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b81ae320" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f33b81c66e0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f33b81c3840" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f33b81c3070" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f33b81cae20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f33b81c7e80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f33b81c4020" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f33b81c4840" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f33b81c76c0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f33b81a9d00" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f33b81aa350" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f33b81a9530" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f33b81a92b0" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f33b81aaac0" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f33b81ab020" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f33b81b3c90" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f33b81abad0" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f33b81ab850" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f33b814d870" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f33b814d290" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f33b814d5e0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f33b814e1f0" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f33b814f880" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f33b814f210" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f33b814f5f0" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f33b8156c10" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
              <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f33b8156990" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
              <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f33b814ea70" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f33b8152730" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f33b81524b0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f33b8154d30" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f33b8154ab0" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f33b814cae0" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f33b81509c0" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f33b8150740" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f33b814c2b0" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f33b81534d0" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f33b8229e10"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f33b82205a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f33b8153cc0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f33b81561f0" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f33b8154390" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f33b8150020" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10;&#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f33b81494a0" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f33b81494a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f33b8149d60" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10;&#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f33b8146ac0" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
              <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
            </type-tag>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f33b81494a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f33b8146510" loc="63:../../../tos/interfaces/Read.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
              <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
            </type-tag>
          </variable>
          <variable name="val" ref="0x7f33b8146830" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f33b81494a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f33b811cc10" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f33b86aa260"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f33b811c990" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f33b811b710" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f33b86aa260"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f33b811b490" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f33b813cc20" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f33b8229e10"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f33b82205a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f33b8138020" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f33b8138020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f33b8138260" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f33b8138260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f33b8134e00" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f33b8138260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f33b8136e40" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f33b8134460" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f33b8138260"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f33b8138260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f33b8135e60" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f33b8138260"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f33b81341d0" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f33b8138260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f33b8135640" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f33b8133620" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f33b8138260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f33b8138dc0" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f33b8138260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f33b8138b40" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f33b8138260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f33b8136680" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f33b8125560" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f33b866ed10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f33b81234f0" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f33b8125d40" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f33b866e930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f33b8126cd0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f33b866e930"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33b866ed10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f33b81266f0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f33b866e930"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f33b8126a40" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f33b866ed10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f33b8118e40" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f33b86aa260"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f33b8121e80" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f33b86aa260"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f33b8121020" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f33b8121890" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f33b8121be0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f33b811f610" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f33b86aa260"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f33b8120770" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f33b811f020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f33b811f370" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f33b8128c30" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f33b8128470" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f33b8129ce0" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f33b8129420" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f33b805e560" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f33b805c020" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f33b805ec60" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f33b805ca00" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f33b805c780" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f33b805b410" loc="44:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f33b805b190" loc="44:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f33b805bb00" loc="46:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f33b806b3e0" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f33b8069c60" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f33b80699e0" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f33b806bb10" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f33b806f650" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f33b8069270" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f33b806d570" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f33b806ccc0" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f33b806fde0" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f33b806dc80" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f33b806c5c0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f33b806c340" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f33b80686a0" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f33b8068420" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f33b8062bc0" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10;&#10; It has a predefined idea of what mode that capture should occur in.&#10; If that doesn't work for you, use setControl.&#10;&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; @param ccis configures which input channel to use.&#10;&#10; Msp430Timer.h has convenience definitions:&#10;&#10;     MSP430TIMER_CM_NONE,            MSP430TIMER_CCI_A&#10;     MSP430TIMER_CM_RISING,          MSP430TIMER_CCI_B&#10;     MSP430TIMER_CM_FALLING,         MSP430TIMER_CCI_GND&#10;     MSP430TIMER_CM_BOTH             MSP430TIMER_CCI_VCC&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f33b80625f0" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
          <variable name="ccis" ref="0x7f33b8062930" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f33b8070b60" loc="41:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f33b8352550"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f33b8351020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f33b80615c0" loc="76:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f33b80604d0" loc="78:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f33b8064d30" loc="56:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short>&#10; Sets the time in compare mode.</short>
          <long>&#10; Sets the time in compare mode.&#10;&#10; setControlAsCompare has a predefined, hardcoded idea of&#10; how the control register should be set for doing a compare.&#10;&#10; Your mileage may vary and this may not work for you.   In&#10; which case you set use setControl.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f33b8061d00" loc="77:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f33b8065350" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f33b8065ae0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f33b80645a0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f33b8352550"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f33b8351020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f33b8064320" loc="45:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f33b8352550"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f33b8351020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f33b8048020" loc="45:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="42:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f33b80466a0" loc="85:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="76:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f33b8046420" loc="85:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f33b80442a0" loc="92:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="87:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f33b8044020" loc="92:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f33b8047c10" loc="74:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="71:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f33b8047350" loc="69:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="59:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f33b80489d0" loc="57:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="47:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f33b8048750" loc="57:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f33b801b1f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f33b7ecbe10" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f33b7ecbe10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f33b7ec6070" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f33b7ec6070"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f33b7ec6990" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Return counter value.</short>
          <long>&#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f33b7ec6070"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f33b7ec5ad0" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f33b7ec5270" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f33b7ec4270" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f33b7df8190" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f33b7df7350" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f33b7df8b30" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f33b7df88b0" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f33b7dfb8f0" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="34:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f33b7dce5a0" loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="51:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f33b7dca020" loc="85:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f33b7dcfdc0" loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="46:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f33b7dcb6d0" loc="80:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Sets whether the edge should be high to low or low to high.</short>
          <long>&#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;&#10; DEPRECATED.&#10;&#10; The if generates extra code that doesn't need to be there.   Replaced&#10; by edge{Rising,Falling}();&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f33b7dcb450" loc="80:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeFalling" ref="0x7f33b7dccd30" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f33b7dcf620" loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeRising" ref="0x7f33b7dcc5d0" loc="66:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="63:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Sets rising or falling edge for the interrupt generation&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f33b7dceda0" loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="56:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current input value of a port.</short>
          <long> &#10; Gets the current input value of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f33b7c78810" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f33b7c770e0" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f33b7c77920" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f33b7c50420" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f33b7c51e10" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f33b7c50190" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f33b7c4b700" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
              <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f33b7c4cd90" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f33b7c4b110" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f33b7c4b460" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
              <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f33b7c4c020" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f33b86aa260"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f33b7c4d970" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f33b7c4dcc0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f33b7c51020" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f33b86aa260"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f33b7c529d0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f33b7c52d20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f33b7c4eb90" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
              <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f33b7c4e250" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f33b7c4e5a0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f33b7c4e8f0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
              <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f33b7c30a40" loc="76:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f33b7c300d0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f33b7c30460" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f33b7c307a0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f33b7c2b020" loc="88:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
              <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f33b7c2e2a0" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f33b7c2e630" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f33b7c2e970" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f33b7c2ece0" loc="89:../../../tos/interfaces/SpiPacket.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
              <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f33b7c328f0" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f33b7c32670" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f33b7b51b70" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f33b7b4e4e0" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <short>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; </short>
        <long>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f33b7b4daa0" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f33b7b832b0"/></typename>
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f33b7b84e00"/></type-tag>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f33b7b4c6f0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f33b7b4c470" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f33b7b4bb30" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f33b7b4b8b0" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f33b7b4b020" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f33b7b4a5f0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f33b7b4a370" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f33b7b3f020" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f33b7b41750" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART. &#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information.&#10;&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f33b7b38740" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f33b7b384c0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f33b7b3bcd0" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART.&#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information. I.e. calling &#60;code>tx&#60;/done> will transmit a byte of&#10; data in the mode (SPI or UART) the USART has been set to before.&#10;&#10; @author Vlado Handziski (handzisk@tkn.tu-berlin.de)&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f33b7b147c0" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f33b7b1f2d0" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f33b7b2c020" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f33b7b9f020"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f33b7b9f860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f33b7b2fcf0" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f33b7b9f020"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f33b7b9f860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f33b7b223b0" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f33b7b29530" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f33b7b9a020"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f33b7b9a860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f33b7b292b0" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f33b7b9a020"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f33b7b9a860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f33b7b199e0" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f33b7b15020" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f33b7b2ba90" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f33b7b9eec0"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f33b7b9d680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f33b7b29d20" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f33b7b9a020"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f33b7b9a860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f33b7b26b90" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f33b7b26910" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f33b7b261f0" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f33b7b192b0" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f33b7b2b2a0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f33b7b9eec0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f33b7b9d680"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f33b7b2b020" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f33b7b9eec0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f33b7b9d680"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f33b7b27020" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f33b7b18190" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f33b7b27a00" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f33b7b27780" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f33b7b23480" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f33b7b23c00" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f33b7b1a420" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f33b7b1d190" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f33b7b20350" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f33b7b1ab60" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f33b7b1fab0" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f33b7b188b0" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f33b7b24390" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f33b7ba5d80"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f33b7ba14d0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f33b7b16070" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f33b7b14020" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f33b7b28700" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f33b7b28480" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f33b7b132a0" loc="220:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f33b7b13020" loc="220:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f33b7b2c800" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f33b7b9f020"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f33b7b9f860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f33b7b22b20" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f33b7b1e270" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f33b7b1bba0" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f33b7b6eb50"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f33b7b6e730"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f33b7b1b920" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f33b7b6eb50"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f33b7b6e730"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f33b7b1dca0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f33b7b832b0"/></typename>
                <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f33b7b84e00"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f33b7b1da20" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f33b7b832b0"/></typename>
                <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f33b7b84e00"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f33b7b13ac0" loc="227:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="222:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return byte received&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f33b7b16860" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f33b7b24ba0" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f33b7b15780" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f33b7b1e9e0" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f33b7b20b30" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f33b7aab020" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <function command="" provided="0" name="disableOwnAddress" ref="0x7f33b7a849d0" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7f33b7a96020" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7f33b7a8a620" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f33b7a8a3a0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7f33b7a9f5b0" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7f33b7a88c50" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7f33b7a905e0" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7f33b7a97070" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7f33b7a95020" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f33b7a98020" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f33b7a9ad30" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7f33b7a9b4b0" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7f33b7a92020" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7f33b7a89550" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7f33b7a84270" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7f33b7a8cc30" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7f33b7a7f350" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7f33b7a7b9d0" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7f33b7a9d420" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7f33b7a93740" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7f33b7a911f0" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7f33b7a988e0" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7f33b7aa0350" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7f33b7a8c460" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f33b7a8c1e0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7f33b7aa3c00" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7f33b7a884d0" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7f33b7a83190" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7f33b7a7eb00" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7f33b7a7b270" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7f33b7a87b90" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7f33b7a838c0" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7f33b7a8adb0" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7f33b7a80390" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7f33b7a9db40" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7f33b7a8e7e0" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7f33b7a817b0" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7f33b7a85ac0" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7f33b7a91de0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7f33b7a91b60" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7f33b7a7d2d0" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7f33b7a8da60" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7f33b7a87420" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7f33b7aa0e10" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f33b7b5b4a0"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f33b7b5b080"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f33b7aa0b90" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f33b7b5b4a0"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f33b7b5b080"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7f33b7a93020" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7f33b7a9ccb0" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f33b7a9ca30" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7f33b7a92980" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f33b7a92700" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7f33b7a80b60" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7f33b7a9a620" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7f33b7a9c350" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7f33b7a8d2a0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7f33b7a8d020" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7f33b7a9fce0" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7f33b7a81020" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7f33b7a85350" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7f33b7a89cc0" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7f33b7a8e020" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7f33b7a90d30" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7f33b7a95740" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7f33b7a977b0" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7f33b7a7da40" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7f33b7a9be30" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f33b7a9bbb0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7f33b7a7fb10" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7f33b7a96750" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7f33b7a7e350" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f33b79d7020" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f33b79d7880" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="38:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f33b79a1dc0" loc="54:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f33b799f020" loc="71:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f33b79a1530" loc="44:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="39:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f33b79a06d0" loc="63:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f33b799f950" loc="79:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwnerInfo" loc="2:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
      <function command="" provided="0" name="inUse" ref="0x7f33b799eb20" loc="9:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
        <documentation loc="3:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
          <short>&#10; Check whether a DefaultOwner has an active client.</short>
          <long>&#10; Check whether a DefaultOwner has an active client.&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f33b79934c0" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f33b799c490"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f33b7993240" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f33b799c490"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f33b7995420" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f33b7994020" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f33b799c490"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f33b7995ca0" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f33b799c490"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f33b7994930" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f33b799c490"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f33b778a5e0" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f33b778a360" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f33b7776b00" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7f33b77761c0" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f33b7776530" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f33b7776860" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f33b7775880" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f33b77752c0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f33b77755f0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f33b775c530" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f33b775c530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f33b775c770" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f33b775c770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f33b775b2e0" loc="66:../../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f33b775c770"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f33b775b060" loc="66:../../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f33b775c770"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f33b76f6580" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f33b76c69e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f33b76c6020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f33b76c6750" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f33b76c77f0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f33b76c7020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f33b76cad30" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f33b76db3d0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b76db150" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f33b76dd3d0" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b76dd150" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f33b76d9350" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b76d90d0" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f33b76da390" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b76da110" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f33b7564910" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f33b7564910"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f33b7561270" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f33b9215920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSkew" loc="51:../../../tos/lib/timer/TimeSkew.nc">
      <documentation loc="35:../../../tos/lib/timer/TimeSkew.nc">
        <short>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.</short>
        <long>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.  Under various circumstances&#10; adjustments may be made by this underlying timing that can result&#10; in time skew.&#10;&#10; Typically this can occur when the RTC (Real Time Clock) subsystem&#10; has had its time adjusted for example via a GPS providing synchronized&#10; time.  If this skew is below a reasonable threshold (platform dependent)&#10; TimeSkew.skew(skew_val) will be signalled.  Beyond that threshold&#10; it might be better to reboot and reestablish reasonable time via&#10; those mechanisms.&#10;&#10; @author Eric B.Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function event="" provided="0" name="skew" ref="0x7f33b7483e80" loc="62:../../../tos/lib/timer/TimeSkew.nc">
        <documentation loc="52:../../../tos/lib/timer/TimeSkew.nc">
          <short>&#10; Signaled when the underlying timing system has detected timing&#10; skew.</short>
          <long>&#10; Signaled when the underlying timing system has detected timing&#10; skew.&#10;&#10; @param skew    estimated skew computed.  in millisecs (units platform&#10;                dependent, typically binary millisecs).&#10;                > 0, time has been moved into the future (we were slow).&#10;                &#60; 0, time has been shifted backwards, (we were fast).&#10;                = 0, skew is beyond platform limits.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSkew"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f33b9216930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="skew" ref="0x7f33b7483c00" loc="62:../../../tos/lib/timer/TimeSkew.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f33b9216930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f33b739c5e0" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f33b739c5e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f33b73992a0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f33b739c5e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f33b7399020" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f33b739c5e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:../../../tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:../../../tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7f33b7185b00" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b71854f0" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7f33b7185870" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7f33b718ac70" loc="15:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7f33b7187b60" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f33b7187560" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f33b865f940"/>
                <typename><typedef-ref name="message_t" ref="0x7f33b865c020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7f33b71878d0" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:../../../tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7f33b716c960" loc="54:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f33b716c1f0" loc="49:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:../../../tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7f33b717fc20" loc="56:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7f33b71730e0" loc="72:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7f33b7172d00" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f33b7172a80" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7f33b7173960" loc="79:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7f33b71747e0" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f33b7174560" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7f33b71715b0" loc="100:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7f33b7172270" loc="85:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:../../../tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7f33b717d780" loc="71:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7f33b717b0e0" loc="81:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7f33b7180d80" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7f33b7180b00" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7f33b717bc60" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
              <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f33b717b9e0" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
              <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:../../../tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7f33b71798f0" loc="62:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7f33b71785b0" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f33b7178330" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7f33b71770b0" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
              <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f33b7178e00" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
              <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:../../../tos/interfaces/UartStream.nc">
      <documentation loc="32:../../../tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f33b7042c40" loc="48:../../../tos/interfaces/UartStream.nc">
        <documentation loc="39:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f33b7042670" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f33b70429b0" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f33b703da70" loc="79:../../../tos/interfaces/UartStream.nc">
        <documentation loc="74:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f33b703d7f0" loc="79:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f33b703c890" loc="90:../../../tos/interfaces/UartStream.nc">
        <documentation loc="81:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f33b703c2c0" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f33b703c600" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f33b703e610" loc="65:../../../tos/interfaces/UartStream.nc">
        <documentation loc="59:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f33b703a2c0" loc="99:../../../tos/interfaces/UartStream.nc">
        <documentation loc="92:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
              <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f33b7039820" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f33b7039b60" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f33b703a020" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
              <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f33b703d020" loc="72:../../../tos/interfaces/UartStream.nc">
        <documentation loc="67:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f33b7041610" loc="57:../../../tos/interfaces/UartStream.nc">
        <documentation loc="50:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
              <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f33b7040bd0" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f33b7041020" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f33b9215520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f33b7041370" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
              <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:../../../tos/interfaces/UartByte.nc">
      <documentation loc="36:../../../tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f33b701a5b0" loc="50:../../../tos/interfaces/UartByte.nc">
        <documentation loc="43:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f33b701a330" loc="50:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7f33b701adf0" loc="59:../../../tos/interfaces/UartByte.nc">
        <documentation loc="52:../../../tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f33b7018cf0" loc="69:../../../tos/interfaces/UartByte.nc">
        <documentation loc="61:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f33b7018700" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f33b7018a60" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f33b9215160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7f33b7016b50" loc="79:../../../tos/interfaces/UartByte.nc">
        <documentation loc="71:../../../tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <short>&#10; Interface used by Msp430Uart clients to reconfigure the UART before use&#10; </short>
        <long>&#10; Interface used by Msp430Uart clients to reconfigure the UART before use&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f33b700e4c0" loc="39:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f33b7b6eb50"/></typename>
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f33b7b6e730"/></type-tag>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f33b6f80860" loc="95:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f33b6f7f0e0" loc="105:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f33b8b68020"/>
            <typename><typedef-ref name="error_t" ref="0x7f33b8b601b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f33b6eb7ce0" loc="62:../../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBusy" loc="2:../../../tos/interfaces/SendBusy.nc">
      <function command="" provided="0" name="busy" ref="0x7f33b6e1a1f0" loc="9:../../../tos/interfaces/SendBusy.nc">
        <documentation loc="3:../../../tos/interfaces/SendBusy.nc">
          <short>&#10; Check whether send queue entry is in use&#10;&#10; </short>
          <long>&#10; Check whether send queue entry is in use&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBusy"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f33b8b6e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
