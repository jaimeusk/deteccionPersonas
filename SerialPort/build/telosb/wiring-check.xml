<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="80:TestSerialAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f5243354020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f5242f0d500"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f5242f0d500"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f5242f07280"/></to>
    </wire>
    <wire loc="81:TestSerialAppC.nc">
      <from><interface-ref name="Control" scoped="" ref="0x7f5243365130"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5241e9f5c0"/></to>
    </wire>
    <wire loc="61:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5241e9f5c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5241e328d0"/></to>
    </wire>
    <wire loc="82:TestSerialAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f52432fea80"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5241e9b800"/>
      <arguments>
        <value cst="I:137">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:TestSerialAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f52432f5950"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5241e9c600"/>
      <arguments>
        <value cst="I:137">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:TestSerialAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f52433559a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f524327f370"/></to>
    </wire>
    <wire loc="51:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f524327f370"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5243276b60"/></to>
    </wire>
    <wire loc="85:TestSerialAppC.nc">
      <from><interface-ref name="TimerIniTDMA" scoped="" ref="0x7f5243300060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5241b02060"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5241b02060"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f52420a1610"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:TestSerialAppC.nc">
      <from><interface-ref name="TimerApagaLeds" scoped="" ref="0x7f52432e8680"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5241afcb00"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5241afcb00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f52420a1610"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:TestSerialAppC.nc">
      <from><interface-ref name="TimerFinTDMA" scoped="" ref="0x7f52432e3be0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5241af54e0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5241af54e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f52420a1610"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:TestSerialAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f52432d2180"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5241e9be10"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5241e9be10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5241e3ba40"/></to>
    </wire>
    <wire loc="53:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f524324f600"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5243276560"/></to>
    </wire>
    <wire loc="54:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f524326f1d0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f5243279d80"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f5243279d80"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5242f389e0"/></to>
    </wire>
    <wire loc="55:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f52432754d0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f5243251020"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f5243251020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5242f21020"/></to>
    </wire>
    <wire loc="56:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f52432747f0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f5243250380"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f5243250380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5242f1c630"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f5243039a60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f524324f600"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5242f27c50"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f52431e28a0"/></to>
    </wire>
    <wire loc="737:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f52431e28a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f524308a540"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5242f202f0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f52431df020"/></to>
    </wire>
    <wire loc="738:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f52431df020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5243085b90"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5242f1b7a0"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f52431dd8a0"/></to>
    </wire>
    <wire loc="739:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f52431dd8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f524307f060"/></to>
    </wire>
    <wire loc="693:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f5243233580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f524313ab90"/></to>
    </wire>
    <wire loc="706:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f524321a710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5243102060"/></to>
    </wire>
    <wire loc="844:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f5243190d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f52430f2060"/></to>
    </wire>
    <wire loc="864:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f5243195d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5243054b90"/></to>
    </wire>
    <wire loc="845:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f52431bed50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f52430ed540"/></to>
    </wire>
    <wire loc="711:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f5243215710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f52430f8b90"/></to>
    </wire>
    <wire loc="724:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f52431fb8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f52430c1060"/></to>
    </wire>
    <wire loc="748:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f52431cd8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f524305e060"/></to>
    </wire>
    <wire loc="848:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f52431b9d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f52430e1060"/></to>
    </wire>
    <wire loc="858:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f52431a5d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5243075b90"/></to>
    </wire>
    <wire loc="870:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f5243186d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f524304e060"/></to>
    </wire>
    <wire loc="696:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f524322cd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5243129b90"/></to>
    </wire>
    <wire loc="849:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f52431b6580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f52430dc540"/></to>
    </wire>
    <wire loc="701:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f5243227d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f524311e540"/></to>
    </wire>
    <wire loc="714:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f524320de50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f52430e8b90"/></to>
    </wire>
    <wire loc="727:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f52431f3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f52430b0060"/></to>
    </wire>
    <wire loc="740:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f52431da020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f524307a540"/></to>
    </wire>
    <wire loc="751:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f52431c5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f524304e060"/></to>
    </wire>
    <wire loc="691:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f5243238580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5243144060"/></to>
    </wire>
    <wire loc="704:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f524321f580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f524310e6d0"/></to>
    </wire>
    <wire loc="717:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f5243205710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f52430d7b90"/></to>
    </wire>
    <wire loc="843:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f52431c0580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f52430f2060"/></to>
    </wire>
    <wire loc="861:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f524319d570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5243064b90"/></to>
    </wire>
    <wire loc="868:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f5243188570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f524304e060"/></to>
    </wire>
    <wire loc="854:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f52431ac580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5243090060"/></to>
    </wire>
    <wire loc="722:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f5243200710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f52430cc740"/></to>
    </wire>
    <wire loc="735:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f52431e78a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5243096b90"/></to>
    </wire>
    <wire loc="746:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f52431d28a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f524306a540"/></to>
    </wire>
    <wire loc="862:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f524319bd40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f524305e060"/></to>
    </wire>
    <wire loc="851:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f52431b4d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f52430a0060"/></to>
    </wire>
    <wire loc="694:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f5243231d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5243133060"/></to>
    </wire>
    <wire loc="707:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f5243218e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f52430fd540"/></to>
    </wire>
    <wire loc="744:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f52431d88a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5243075b90"/></to>
    </wire>
    <wire loc="712:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f5243213e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f52430f2060"/></to>
    </wire>
    <wire loc="725:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f52431f8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f52430bc540"/></to>
    </wire>
    <wire loc="749:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f52431ca020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5243059540"/></to>
    </wire>
    <wire loc="853:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f52431afd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5243096b90"/></to>
    </wire>
    <wire loc="689:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f524323b530"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f524314f540"/></to>
    </wire>
    <wire loc="702:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f5243224580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5243119b90"/></to>
    </wire>
    <wire loc="715:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f524320a710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f52430e1060"/></to>
    </wire>
    <wire loc="728:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f52431f18a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f52430ab540"/></to>
    </wire>
    <wire loc="855:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f52431aad50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f52430d7b90"/></to>
    </wire>
    <wire loc="859:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f52431a2570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f524306f060"/></to>
    </wire>
    <wire loc="865:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f5243192570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f524304e060"/></to>
    </wire>
    <wire loc="733:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f52431ec8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f52430a0060"/></to>
    </wire>
    <wire loc="856:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f52431a7580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f52430d1060"/></to>
    </wire>
    <wire loc="692:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f5243236d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f524313f540"/></to>
    </wire>
    <wire loc="705:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f524321de50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5243108b90"/></to>
    </wire>
    <wire loc="718:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f5243203e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f52430d1060"/></to>
    </wire>
    <wire loc="852:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f52431b1580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f524309b540"/></to>
    </wire>
    <wire loc="863:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f5243197570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5243059540"/></to>
    </wire>
    <wire loc="723:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f52431fd020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f52430c7b90"/></to>
    </wire>
    <wire loc="736:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f52431e4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5243090060"/></to>
    </wire>
    <wire loc="747:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f52431cf020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5243064b90"/></to>
    </wire>
    <wire loc="695:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f524322e580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f524312e540"/></to>
    </wire>
    <wire loc="745:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f52431d4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f524306f060"/></to>
    </wire>
    <wire loc="700:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f5243229580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5243123060"/></to>
    </wire>
    <wire loc="713:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f5243210710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f52430ed540"/></to>
    </wire>
    <wire loc="726:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f52431f68a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f52430b6b90"/></to>
    </wire>
    <wire loc="750:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f52431c88a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5243054b90"/></to>
    </wire>
    <wire loc="690:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f524324ad50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f524314ab90"/></to>
    </wire>
    <wire loc="703:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f5243222d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5243113060"/></to>
    </wire>
    <wire loc="716:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f5243208e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f52430dc540"/></to>
    </wire>
    <wire loc="729:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f52431ee020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f52430a6b90"/></to>
    </wire>
    <wire loc="860:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f52431a0d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f524306a540"/></to>
    </wire>
    <wire loc="847:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f524318d560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f52430e8b90"/></to>
    </wire>
    <wire loc="846:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f52431bb580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f52430e8b90"/></to>
    </wire>
    <wire loc="734:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f52431e9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f524309b540"/></to>
    </wire>
    <wire loc="867:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f524318bd40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f5243054b90"/></to>
    </wire>
    <wire loc="871:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f5243183580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f524307a540"/></to>
    </wire>
    <wire loc="842:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f52431c38f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f52430f8b90"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f524304bb40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5243046e40"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7f524303ed70"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7f524303b4d0"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f524303ab80"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f524303c900"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f524303c900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5243009850"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f5243039380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5243021450"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5243009850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5242ff01c0"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f5243001de0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f5242ff0830"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f524348bc80"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f5242fefaf0"/></to>
    </wire>
    <wire loc="73:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5242f0dc00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f52410d9cf0"/></to>
    </wire>
    <wire loc="59:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5242f0dc00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5241e32280"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5242f0dc00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5241f75dd0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5242f0dc00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5241ffdb70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5242f0dc00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f524201e750"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5242f0dc00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f524203b080"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5242f0dc00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f52421a53a0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5242f0dc00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f52422a6620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5242f0dc00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5242393c60"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5242f0dc00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5242d37c70"/></to>
    </wire>
    <wire loc="73:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5242f0dc00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f52413f5020"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5242f0dc00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5242866020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5242f0dc00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5242de7510"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f5242f078f0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f52438101e0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f52438101e0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f52433b5140"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f5242f063a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f524304bb40"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f5242f06aa0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f5242f0dc00"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f5243803940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f52433b4040"/></to>
    </wire>
    <wire loc="56:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f52433af490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f52435e89a0"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5242f0b7a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5242eba080"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5242eba080"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5242e91340"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5242efa7f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5242eb91d0"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5242eb91d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5241f37020"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f5242ef7880"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f5242eb7020"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f5242eb7020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f5241f36df0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5242ef6020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5242eb6c20"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f5242eb6c20"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f5241f33a80"/></to>
    </wire>
    <wire loc="89:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f5242ee6430"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f5242221550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f5242221550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f5242213a80"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f5242ec7430"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f5242eaae70"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f5242eaae70"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f5242e7d080"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5242ef9b20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5242eb83f0"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5242eb83f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5241f36210"/></to>
    </wire>
    <wire loc="85:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5242edc350"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5242eb3c80"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5242eb3c80"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5242e7e020"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5242ef5020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5242eb7650"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5242eb7650"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5241f34470"/></to>
    </wire>
    <wire loc="90:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5242ed3660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f524221d660"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f524221d660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f524220faf0"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5242e91340"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5241f68b80"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f5242eaa020"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f5241f318b0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f5242ea0020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f5241f32ce0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f5242eacdc0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f5242e7f140"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f5242e7f140"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f5242226670"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f5242e7d080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f5241f68080"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5242e7e020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f52422236e0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f5242e970d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f5242e7db70"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f5242e7db70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f5241f54020"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5242ea9e00"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5242e7e9d0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5242e7e9d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5242222a70"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7f5241f280f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5242e8a770"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5241f30860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f5242e89d10"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f5242e89d10"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f5241fd1c90"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5241f2f690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f5242e81a90"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f5242e81a90"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f5241fd0a50"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f5241f2b4d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f524244db20"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f5241f2fce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f5242226670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f5242226670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f5242218d20"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5241f2eb70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f52422220c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f52422220c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5242214640"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f5241f2d610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f5242df0dc0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f5242df0dc0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f5242de6970"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f5241f291f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f5242e76330"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f5242e76330"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f5242e717e0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5241f28d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f524327f370"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5241f68b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f5241f65d90"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5242222a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5242213020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f5241f54020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f5241f51410"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f5241fd1c90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f5241fc6a20"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f5241f68080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f5241f612d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f5242e8e820"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5241fd15e0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5241fd15e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f5241fc6370"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f52422236e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f5242215c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5242e8a770"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5241fd3be0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5241fd3be0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5241fc97b0"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f5242e80a30"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5241fd28e0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5241fd28e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f5241fc74d0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f5242e89020"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f5241fcf170"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f5241fcf170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f5241fc4020"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f5241fd0a50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f5241fc5840"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f5241f65d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5242e78390"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5242e78390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5242e75e70"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5241fce6b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5242023220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5242023220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5242021a10"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5242022020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5241f57350"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5241f57350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f5241f54d70"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5241f54d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5241f6cce0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5241f6cce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f5241f66860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5241f66860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5242e78e80"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5242e78e80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5242e72990"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5241fce020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5241f69980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5241f69980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f5241f65690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5241f65690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5242005aa0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5242005aa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5242000e30"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5242002950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5242e77b40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5242e77b40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f52422aa7c0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f52422aa7c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f52422a4020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5242e70640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5242e01950"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5242e01950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5242de7b80"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f5242e68b50"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f5242dfcbf0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f5242dfcbf0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f5242de4740"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f5242e65760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f52423a46c0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f5242e65760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f52422ad5c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f52422ad5c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f52422a6ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f52423a46c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5242392320"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f5242e5d2a0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f524239f020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f524239f020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5242392bc0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f5242e66060"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f524239fcb0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f524239fcb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f5242391970"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f5242e5b330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f5242226670"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5242e53920"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f52422220c0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f5242e5a420"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f5242040a20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f5242040a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f524203aa20"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f5242e57110"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f5242042aa0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f5242042aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f524286b1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5242e5abf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f524327f370"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f5242e49b70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5243803940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f5242e4aba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5243803940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f5242e4bc20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5243803940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f5242ded0c0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f5242de3b40"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f5242dd8d90"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f5242d34690"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f5242d34690"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f5242d2e5f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f5242dd4060"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f5242ae3690"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f5242ae3690"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5242ad5020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f5242dd3380"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f5242adf020"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f5242adf020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5242ac4020"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f5242dd26a0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f5242add6a0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f5242add6a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5242abab00"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f5242dd00e0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f5242a9f400"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f5242a9f400"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f524293d680"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f5242dbb1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f52424d9e20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f52424d9e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f52428eb4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f5242db92b0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f52424d57b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f52424d57b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f5242db99c0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f52424d4ae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f52424d4ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f5242dbca40"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f52424d6ad0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f52424d6ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5242dbc120"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f52424d3160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f52424d3160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f5242dc0b00"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f52424cb870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f52424cb870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f5242dc73d0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f52424c8880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f52424c8880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f5242dc7c80"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f52424c70a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f52424c70a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5242dc25f0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f52424cfe50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f52424cfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5242dbf020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f52424ce670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f52424ce670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f5242dcc520"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f52424ba500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f52424ba500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f5242dc4a90"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f52424bbce0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f52424bbce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f5242dbf8e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f52424cce50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f52424cce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f5242dbe1c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f52424cee50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f52424cee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f5242dbea70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f52424cde50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f52424cde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f5242db8d90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f52424a6a80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f52424a6a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f52428eb4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f5242db8020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f524247a9e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f524247a9e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f52428eb4d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f5242dc8810"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f524244db20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f5242de0020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f524244cd20"/></to>
    </wire>
    <wire loc="23:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f524244cd20"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f5242432310"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f5242dad820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5243803940"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f5242dae940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5243803940"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5242d37c70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5242d2fd40"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5242d2fd40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f52417071b0"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f5242d2e5f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f5241707a00"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f52417071b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f52416ec1b0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f5241707a00"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f52416e6c90"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f52416ec1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f52416d1a30"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f52416df410"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f52416eca00"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f52416eca00"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f52416d0340"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f52416e2060"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5242b698c0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5242b698c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5242b4ccf0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f52416cc4c0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f52416d6640"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f52416d6640"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f5242d04cd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f52416cba90"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f52416d5c20"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f52416d5c20"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5242cfba40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f52416cada0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f52416d3020"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f52416d3020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f5242cf83f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5242d04cd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f5242ce4cd0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f5242ce4cd0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5242c8e260"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5242cfba40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f5242ce25a0"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f5242ce25a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5242c2b6d0"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f5242cf83f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f5242ce1a20"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f5242ce1a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5242c2aac0"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5242d04cd0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f5242ce4cd0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5242cfba40"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f5242cdcd40"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f5242cdcd40"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5242c1b220"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f5242cf83f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f5242cda160"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f5242cda160"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5242c1a610"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5242d04cd0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f5242ce4cd0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5242cfba40"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f5242cd8020"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f5242cd8020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5242c146d0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f5242cf83f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f5242cd7570"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f5242cd7570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5242c13ac0"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5242d04cd0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f5242ce4cd0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5242cfba40"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f5242cd4410"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f5242cd4410"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5242c0cb30"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f5242cf83f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f5242cd3890"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f5242cd3890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5242c0a020"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5242d04cd0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f5242ce4cd0"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5242cfba40"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f5242cd18c0"/></to>
    </wire>
    <wire loc="175:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f5242cd18c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5242c04220"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f5242cf83f0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f5242cd0d40"/></to>
    </wire>
    <wire loc="176:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f5242cd0d40"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5242c03610"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5242d04cd0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f5242ce4cd0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5242cfba40"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f5242ccea50"/></to>
    </wire>
    <wire loc="182:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f5242ccea50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5242bfc6d0"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f5242cf83f0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f5242ccc020"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f5242ccc020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5242bfbac0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f5242ce7a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5242c33220"/></to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f5242ce8a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5242c39cb0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f5242cd63e0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5242c127a0"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f5242ceebb0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5242c39020"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f5242cccda0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5242bfa7a0"/></to>
    </wire>
    <wire loc="112:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f5242cf2280"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5242c876d0"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f5242cddda0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5242c22cb0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f5242cdd020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5242c22020"/></to>
    </wire>
    <wire loc="146:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f5242cdfa50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5242c24b30"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f5242ce5da0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5242c312f0"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f5242cd2890"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5242c0acb0"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f5242ce5020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5242c32610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f5242cf6a30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5242c953e0"/></to>
    </wire>
    <wire loc="119:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f5242cef730"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f5242c3bb30"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f5242ce9690"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5242c417a0"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f5242cd9020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5242c192f0"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f5242cf1700"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f5242c42ac0"/></to>
    </wire>
    <wire loc="177:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f5242ccfae0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5242c022f0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f5242ce0a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5242c297a0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f5242c932f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5242c94bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f5242c93940"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f5242bf33f0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f5242c92020"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f5242bf3b80"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5242c40610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5242c953e0"/></to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5242c3ec50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5242c94bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5242c38b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5242c953e0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5242c362f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5242c94bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5242c30160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5242c953e0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5242c2e7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5242c94bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f5242c8c100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5242c8da60"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f5242c8c750"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f5242bf2430"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f5242c8cda0"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f5242bf2bc0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5242c28610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5242c8e260"/></to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5242c27c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5242c8da60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5242c21b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5242c8e260"/></to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5242c1f2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5242c8da60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5242c18160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5242c8e260"/></to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5242c177a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5242c8da60"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5242c11610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5242c8e260"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5242c10c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5242c8da60"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5242c09b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5242c8e260"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5242c072f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5242c8da60"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5242c01160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5242c8e260"/></to>
    </wire>
    <wire loc="179:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5242c007a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5242c8da60"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f5242bf9610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5242c8e260"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f5242bf8c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f5242c8da60"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f5242b2e0f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f5242b678e0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f5242b678e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5242b60b80"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f5242b52c50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f5242ce4cd0"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f5242ae29c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5242acf630"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f5242ae1cf0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5242acab00"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f5242ae43e0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5242adba20"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f5242ade370"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f5242abf630"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5242adac50"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f5243233580"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5242ad42f0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7f52431fb8a0"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5242ace7a0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f5243236d50"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5242ac9c60"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f524323b530"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5242ac32f0"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7f52431f18a0"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5242abe7a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f52431fd020"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5242ab8c60"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7f52431f3020"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f5242a9c700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f5242a93c20"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f5242a9e060"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f524292eb70"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5242a81760"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7f5242cdfa50"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7f5242a80a80"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7f5242cddda0"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f5242a7f930"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f52431fd020"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f524293c2f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f5242a6c020"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f5242a6c020"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f5242a553f0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f524292d7a0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f5242a6f3d0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f5242a6f3d0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f5242a5c7a0"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f5242a5f3f0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f5242a483f0"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f5242a69a30"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f5242a52d50"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f5242a65020"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7f5242a4f3f0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f5242a75a30"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f5242a58d50"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f5242a62a30"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f5242a4cd50"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f5242a6b3f0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f5242a54710"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f5242a5e710"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f5242a47710"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f5242a643f0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7f5242a4e710"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f5242a6ed50"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f5242a56020"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f5242a60020"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7f5242a49100"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f5242a6a710"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f5242a53a30"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f5242a67d50"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f5242a50020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f5242a76710"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7f5242a59a30"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f5242a63710"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f5242a4da30"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f52424d5160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f52424c9880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f52424c10a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f52424c80a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f52424b3500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f52424b8500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f52424d4490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f52424be880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f52424b9500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f52424c3880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f52424c50a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f52424d8a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f52428ea350"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f52428ea350"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f52428e1660"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f52424d3e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f52424d2490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f52424bcc80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f52424d2be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f52424b9ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f52424be0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f52424cd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f52424bf0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f52424c1880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f52424bf880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f52424b7ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f52424b8ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f52424c5880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f52424c00a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f52424bace0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f52424c7880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f52424b3ce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f52428e92c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f52424d6480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f52424cf670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f52424cc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f52424c20a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f52424c2880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f52424c90a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f52424d02f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f52424cf020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f52424d37b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f52424bb500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f52424b7500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f52424c30a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f52424c0880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f52424d5e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f52424c60a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f52424d0940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f52424c6880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f52424bc0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f52424b29b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f52428e92c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f52428e92c0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f52428df890"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428deba0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428dca30"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f52428eb4d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f52428e0510"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428db8b0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f52428ceb40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f5242870770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f5242870770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f524286b1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f52428da060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f524284dc40"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f524284dc40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f524147ca00"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f52428d7c70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f524284c8f0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f524284c8f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f524147a020"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f52428ce2e0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f52424fe020"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f52424fe020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f5241479120"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f52428d8a70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f524327f370"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f52428cbbd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5243803940"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f524286b1d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f5242866b70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f5241479120"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f52427e7850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f524147a020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f52427e8110"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f524147ca00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f52427ecd80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f524147b760"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f52414702c0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f52414702c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f52426692c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f52427e8110"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f524276ca10"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f524147a630"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f52427e8790"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f52427e8790"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f524276a060"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f52427e2a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f52414798c0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5241463760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f52427e48e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f52427e3690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5241471640"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5241471640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f524266b020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f52427ddb40"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f524146bc10"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f524146bc10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f524266d4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f52427e48e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f524276c250"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f52427e7850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f524276ac50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f52427ecd80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f524276d470"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f52427683e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f52427e2a40"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f52427695b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f52427e3690"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f5242763480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f52427ddb40"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f5242768a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f5242759020"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f5242759020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f524274e700"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5242763c20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f524327f370"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7f52427612f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5243803940"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f52427502c0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f5242749c20"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f5242755d10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f52427492d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f524271bbb0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f52431c0580"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f52427183e0"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7f52431bed50"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f5242716bb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f52431bb580"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f52427133e0"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7f52431b6580"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f5242711bb0"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7f52431b9d50"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7f5242720d10"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f52425bed40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f524146a440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f524266c3f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f524146aa50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f52425c5020"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f52425c5020"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f52425bed40"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f524146f2b0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f5242759020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5241470a60"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5242669ad0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5242669ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f52425d1e80"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f52426668a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5241463760"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f52426692c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f52425d2a60"/></to>
    </wire>
    <wire loc="81:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f52425d2a60"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f52413f26c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f524266d4d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f5242664d60"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f524266b020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f52425d3ca0"/></to>
    </wire>
    <wire loc="80:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f52425d3ca0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f52413f3850"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7f524266c3f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f5242663710"/></to>
    </wire>
    <wire loc="83:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f52425d1e80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f52413f1a70"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f52425d0790"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f52426668a0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5242651bf0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f52425d1e80"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f5242663d80"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f5242755d10"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f52426515e0"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f52427502c0"/></to>
    </wire>
    <wire loc="82:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f52425d1270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f52413f2e40"/></to>
    </wire>
    <wire loc="84:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f52413f09d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f52425d0790"/></to>
    </wire>
    <wire loc="85:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f52413f02d0"/></from>
      <to><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f52425cf020"/></to>
    </wire>
    <wire loc="87:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f52413ee2b0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f52413f5630"/></to>
    </wire>
    <wire loc="155:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f52413ec480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5243803940"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7f52425b5bb0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f524274e700"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f52425b0700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f52431c0580"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f52425aee40"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f52431bb580"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f5242499c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f52424a4da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f524249db50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f5242497670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f5242490e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f5242497e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f52424832f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f52424852f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f52424a1120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f524248b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f52424862f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f524249bc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f524249ac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f5242491670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f5242493e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f5242496670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f52424a5760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f52428ea350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f52424a0aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f524249f120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f524248aa70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f524249f870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5242486ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f52424a1dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f524248ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f524249a480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f524249b480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f52424a4750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f524248de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f524248f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f524248c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f5242484ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f5242485ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f5242492670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f524248fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f5242488ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f5242494670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f5242483ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f52428e92c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f52424a4100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f524249d370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f5242499480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f5242491e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f5242496e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f5242490670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f5242498670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f52424a3450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f5242498e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f524249e020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f524249ecc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f52424882f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f5242489ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f52424a0450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f52424892f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f52424842f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f5242492e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f524248d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f52424a3aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f52424a1770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f5242494e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f524249e670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f5242493670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f524248be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f52424827a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f52428e92c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f524246dc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f5242477da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5242470b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f524246a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f5242463e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f524246ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f52424562f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f52424592f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f5242475120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f524245e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f524245a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f524246fc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f524246ec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f5242464670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f5242467e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f5242469670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5242478760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f52428ea350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5242474aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f5242473120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f524245da70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f5242473870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f524245aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5242475dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f5242460e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f524246e480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f524246f480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f5242477750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f5242461e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f5242462670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f5242460670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f5242458ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f5242459ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f5242466670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f5242462e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f524245bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f5242468670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f5242456ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f52428e92c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f5242477100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f5242470370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f524246d480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f5242464e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f5242469e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f5242463670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f524246b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f5242476450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f524246be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f5242471020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f5242471cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f524245b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f524245cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5242474450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f524245c2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f52424582f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f5242466e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f5242461670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f5242476aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f5242475770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f5242468e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f5242471670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f5242467670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f524245ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f52424557a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f52428e92c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f524242f880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f5242424020"/></to>
    </wire>
    <wire loc="20:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f5242424020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f524241e140"/></to>
    </wire>
    <wire loc="16:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f524241abd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f5242423c50"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f5242423c50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f5242405150"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7f524241d530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f52423b01b0"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f524240a540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7f524240b590"/></to>
    </wire>
    <wire loc="11:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7f524240b590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f52423b99e0"/></to>
    </wire>
    <wire loc="18:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f5242400950"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f5242407ca0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f5242407ca0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f52423dea90"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f52424059f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7f524240a540"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f52423cd020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f52423c7530"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f52423c7530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f52423c3e50"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f52423bf020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f5242cf6a30"/></to>
    </wire>
    <wire loc="9:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f52423b8c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f524321f580"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f524239b990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f5242390900"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f524239c150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f524238f0f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f524238fae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f5242d34690"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f5242383500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f5242ae43e0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f524237c820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f5242ae3690"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f524237bb40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f5242ade370"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f5242384880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f5242a9c700"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f5242379020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f52422dec30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f52422dec30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f52428eb4d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5242379d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f52422dc8f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f52422dc8f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f52428ea350"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f52423766d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f52422db2f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f52422db2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f5242376de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f52422dacc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f52422dacc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f5242375530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f52422d9370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f52422d9370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5242375c60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f52422d8d00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f52422d8d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f5242377e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f52422d2c60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f52422d2c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f5242378780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f52422b97a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f52422b97a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f52428e92c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5242377550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f52422be2f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f52422be2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f52423733e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f52422d3480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f52422d3480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f52423725e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f52422cfe50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f52422cfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f5242371020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f52422ce670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f52422ce670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f5242373e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f52422d57b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f52422d57b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f52423709c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f52422bcad0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f52422bcad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f5242371890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f52422bd2f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f52422bd2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f5242370130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f52422bdad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f52422bdad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f524236bd40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f52422addf0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f52422addf0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f52422a5550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f524238bd00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f5242226670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f524238abb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f52422220c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f5242389950"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f5242221550"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f524237ebe0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f5242219480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f5242219480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f524220b8b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f524236e6c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f524327f370"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f52422d1c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f52422da020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f52422d4c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f52422c7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f52422cee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f52422ba2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f52422c2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f52422d3c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f52422c8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f52422cbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f52422cd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f52422d7370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f52422c1a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f52422d7ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f52422bead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f52422d8060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f52422c4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f52422d2480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f52422db940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f52422c5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f52422c6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f52422c4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f52422ca670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f52422c6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f52422bfad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f52422cc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f52422baad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f52428e92c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f52422d4490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f52422d1480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f52422c8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f52422cde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f52422c7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f52422cf670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f52422da670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f52422d5160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f52422d5e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f52422bf2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f52422c0ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f52422d86b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f52422c02f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f52422bc2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f52422cae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f52422c5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f52422d99c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f52422cce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f52422cb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f52422c2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f52422a9020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f52422a47c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f524228f150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f524327f370"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f52422a3020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f5242ae3690"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f52422a2380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f5242ae29c0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f52422a16b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f5242ae1cf0"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f524229fa50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f5242a9e060"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f524229e6e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5242090250"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5242090250"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f52428eb4d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f524229d530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f524206d120"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f524206d120"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f52428e92c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f524229cad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f524208cd00"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f524208cd00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f524229c3a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f524208a9c0"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f524208a9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f524229b330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f5242226670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f524229a1e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f52422220c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f5242298d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f5242221550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f524229ab90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f5242df0dc0"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f52422933e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f5242082500"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f5242082500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f5242293cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f5242082ce0"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f5242082ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f5242294b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f52420897b0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f52420897b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f52422916d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f524206e900"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f524206e900"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f5242292590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f5242071900"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f5242071900"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f5242292e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f524206f120"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f524206f120"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5242290020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5242071120"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5242071120"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f52422908b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f524208f990"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f524208f990"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f52422839d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5243803940"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f52421b5a60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5242b698c0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f5242206820"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f52421b6790"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f5242208b80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f524219f610"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f524219f610"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f52420b4a20"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f52421a41d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f52420c28e0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f52420c28e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f5241253bc0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f52421a53a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f524216f020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f524216f020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f52412c29d0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f52420bb020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f52421432f0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f524213e850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f524216f870"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f524216f870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f52412bb5f0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f52420b3d20"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f524218fb70"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f524218fb70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5242186610"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f52412c29d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f52412a5360"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f52412b5d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f52412c1260"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f52412c1260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f52412a5bf0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f52412b79b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f524218fb70"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f52412a2dd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f52412ab020"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f52412ab020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f5242d04cd0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f524129f440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f52412a9760"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f52412a9760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5242cfba40"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f524129e760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f52412a8a80"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f52412a8a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f5242cf83f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f5242184b90"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f5242b678e0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f524213a9c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5243803940"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f524124c180"/></from>
      <to><interface-ref name="TimerFrom" scoped="" ref="0x7f52420bb020"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimeSkew" scoped="" ref="0x7f52412468b0"/></from>
      <to><interface-ref name="TimeSkew" scoped="" ref="0x7f52420b6450"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7f5241247410"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7f524303ed70"/></to>
    </wire>
    <wire loc="153:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f5241245020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5243803940"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f52420aace0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f52420a1610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f52420a1610"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f52421a41d0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f52420832f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f524208e670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f52420872f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f524207a500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f5242081500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f524208d9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f5242076ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5242072900"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f52420862f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f52420852f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f524207cce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f524207d500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f5242081ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f524208f020"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f52428ea350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f524208a370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f5242074120"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f5242089160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f524208c6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f5242076500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f5242086ad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5242087ad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f524208e020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f5242078500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f524207ace0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f5242078ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f524206e120"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f524207dce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f5242079500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f5242072120"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f5242080ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f5242088ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f5242085ad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f524207b500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f5242080500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f524207bce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f5242083cd0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f524208ecc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f5242088490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f5242073900"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f5242073120"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f5242074900"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f524206f900"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f524207c500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f5242079ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f524208d370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f524208c060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f524207f500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f5242089e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f524207fce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f5242075500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f524206ddb0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f52428e92c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f524203e920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f524203b940"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5242044990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f524203b080"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f524201ee60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f5242022020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f524201dae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f524201f690"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f524201f690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f524286b1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f524201c8f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f5242040a20"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f524201b170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f52422220c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f5242002200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f5241ffd570"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5241ffc3f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f5242002950"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5241ffca70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f52422220c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5241fc4d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f5241fce6b0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5241fc3b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f5241fce020"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f5241fc22f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f5242226670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5241fc1170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f52422220c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f5241fc1b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f5241f74410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f5241f95db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5243803940"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f5241f67800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f5241f63580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f5241f63580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f524286b1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5241f4e1c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5242e7e020"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f5241e328d0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f5241e262f0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f5241e9c600"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f5241e3d110"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5241e9b800"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5241e3de70"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5241e971a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5241e3a720"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f5241e99ab0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f5241e3c490"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f5241e32280"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f5241e29c70"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5241e2edc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5241e97b20"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f5241e38120"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5241e30480"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f5241e38d70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5241e31940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f5241e2e4a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7f5241b14a30"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f5241e30480"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f5241cf5830"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f5241e31940"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f5241cf5110"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7f5241cf3760"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f5241e2e4a0"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5241e238e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5241e2edc0"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5241cf1590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5241e2edc0"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5241ce9cc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f5241e2edc0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f5241cf20e0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f5241e1c5c0"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7f5241cf29d0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7f5241e1f130"/></to>
    </wire>
    <wire loc="77:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7f5241e168e0"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7f5241cedb60"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f5241e14060"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5241cc3080"/></to>
    </wire>
    <wire loc="17:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f5241cc3080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f5241b26080"/></to>
    </wire>
    <wire loc="80:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f5241cdfd20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f5241cc3890"/></to>
    </wire>
    <wire loc="13:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f5241cc3890"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f5241b2e440"/></to>
    </wire>
    <wire loc="332:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7f5241dbfe40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5243803940"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7f5241df8d10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5243803940"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7f5241dc1400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5243803940"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f5241dba0c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5243803940"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7f5241cf0c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5243803940"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7f5241cef480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5243803940"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f5241cc0020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f5241b2c440"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f5241b2c440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f5241cac020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f5241b2e440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f5241caf860"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f5241b2b020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f5241b268e0"/></to>
    </wire>
    <wire loc="19:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5241b25020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5241b2f020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5241b2f020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5241cb17a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f5241b2fc70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f524114d020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f524114d020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f5241b6f510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f5241caa450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f5241b2b020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f524113d440"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5241cb0a30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f5241cab1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f524114e340"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f524114e340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5241b70280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f5241ca81d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f524113ec10"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f524113ec10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f5241b71510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5241cb0a30"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5241c3ddc0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f5241cac020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f5241c3b890"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f5241caf860"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f5241c3c6d0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5241cb17a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5241c3d020"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f5241c393e0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f5241caa450"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f5241c3a5b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f5241cab1d0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f5241c345b0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f5241ca81d0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f5241c39a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f5241c24d30"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f5241c24d30"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f5241c1d3c0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5241c33020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f5241b8e7c0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f5241b8e7c0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f5242b678e0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f5241c30120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f524327f370"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f5241c21860"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f5241c18020"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f5241c24500"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f5241c209c0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f5241c188f0"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7f52431b1580"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f5241c14020"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7f52431afd50"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f5241c12890"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7f52431ac580"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f5241c0f020"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7f52431a7580"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f5241c0d890"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7f52431aad50"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f524114c020"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f5241c24d30"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f524114d7c0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5241b6fd20"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5241b6fd20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5241b63060"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5241b6eaf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f524113d440"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f5241b6f510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f5241b66bd0"/></to>
    </wire>
    <wire loc="81:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f5241b66bd0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f52410d43a0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f5241b71510"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f5241b6b230"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5241b70280"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f5241b67e30"/></to>
    </wire>
    <wire loc="80:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f5241b67e30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f52410d5540"/></to>
    </wire>
    <wire loc="83:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5241b63060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f52410d38b0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f5241b6a2f0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f5241c21860"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5241b63950"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5241b6eaf0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5241b69120"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5241b63060"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5241b5ed50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5241b65400"/></to>
    </wire>
    <wire loc="82:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5241b65400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f52410d4b20"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f5241b5e020"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f5241c24500"/></to>
    </wire>
    <wire loc="84:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f52410d27e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5241b63950"/></to>
    </wire>
    <wire loc="85:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f52410d20e0"/></from>
      <to><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f5241b620f0"/></to>
    </wire>
    <wire loc="87:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f52410d1020"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f52410d8330"/></to>
    </wire>
    <wire loc="155:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f52410cf160"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f5243803940"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f524109a470"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f5241b5e020"/></to>
    </wire>
    <wire loc="82:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f524109abd0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f5241b5e780"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5241099270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5241b5ed50"/></to>
    </wire>
    <wire loc="85:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5241099e80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5241b48990"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="TestSerialC" loc="57:TestSerialC.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="37:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; Digital pin i/o abstraction, TI MSP430 processors.</short>
        <long>&#10; Digital pin i/o abstraction, TI MSP430 processors.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @author Joao Goncalves &#60;joao.m.goncalves@ist.utl.pt>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="79(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="79(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="79(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="79(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="79(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="79(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="79(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="79(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="79(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="79(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="79(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="79(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="79(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="79(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="79(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="79(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="79(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="79(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="79(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="79(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="79(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="79(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="79(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="79(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="79(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="79(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="79(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="79(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="79(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="79(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="79(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="79(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="79(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="79(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="79(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="79(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="79(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="79(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="79(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="79(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="79(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="79(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="79(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="79(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="79(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="79(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="79(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="79(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformC" loc="41:../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="35:../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="200:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/x1xxx/McuSleepC.nc" safe="">
      <documentation loc="36:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RealMainP" loc="65:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="45:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="33:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="53:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC" loc="48:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <documentation loc="36:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="41(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="41(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="41(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="41(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="41(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="41(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="41(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="41(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="41(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="41(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="41(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="41(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="47(HplCC2420InterruptsC.CaptureSFDC):../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; The default for GpioCapture is CCIxA.  Other channels are available&#10; (like B) but they need to be hardcoded in another module.  See&#10; tos/platforms/exp5438_2520/hardware/cc2520/P81SfdCaptureC.nc&#10;&#10; Lower levels have been modified to support being able to change&#10; CCIS in the control registers.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="51:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc" safe="">
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="50(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="50(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
        <short>&#10; An HPL abstraction of USART0 on the MSP430.</short>
        <long>&#10; An HPL abstraction of USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="54:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="56(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="96(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243367640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f52433679b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243367640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f52433679b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368640"/>
            <typename><typedef-ref name="TMilli" ref="0x7f52433689b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368640"/>
            <typename><typedef-ref name="TMilli" ref="0x7f52433689b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368640"/>
            <typename><typedef-ref name="TMilli" ref="0x7f52433689b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="55(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368640"/>
            <typename><typedef-ref name="TMilli" ref="0x7f52433689b0"/></typename>
          </type-tag>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC.VT" loc="61(HilTimerMilliC.VirtualizeTimerC.VT):../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <documentation loc="33:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerImplP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5242135530"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368640"/>
            <typename><typedef-ref name="TMilli" ref="0x7f52433689b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):../../../tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:../../../tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:../../../tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:../../../tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):../../../tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:../../../tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
        <short>&#10; An implementation of the UART on USART1 for the MSP430.</short>
        <long>&#10; An implementation of the UART on USART1 for the MSP430.&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire81@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="44(Msp430Uart1P.UartP):../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="36:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
        <short>&#10; An HPL abstraction of USART1 on the MSP430.</short>
        <long>&#10; An HPL abstraction of USART1 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="59:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="56(Msp430UsartShare1P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="96(Msp430UsartShare1P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):../../../tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:../../../tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestSerialAppC.TimerIniTDMA" loc="44(TestSerialAppC.TimerIniTDMA):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestSerialAppC.TimerApagaLeds" loc="44(TestSerialAppC.TimerApagaLeds):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestSerialAppC.TimerFinTDMA" loc="44(TestSerialAppC.TimerFinTDMA):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f524317d7d0" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f524317db80" loc="81:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f524317c020" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f524317c3d0" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f524317c740" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f5242cc7930" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f5242cc7cd0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f5242cc60d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f5242cc6450" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f5242cc67d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f5242cc6b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f5242cc5020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f5242cc53b0" loc="49:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f5242cc5780" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f5242c89c80" loc="42:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f5242c860d0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f5242ba3cb0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f5242ba3cb0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f5242b61a40" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f5242b61a40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f5242b4b570" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f5242b4b570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f5242b4bd40" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f5242b4bd40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f5242b4a160" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f5242b4a160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f5242b4a940" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f5242b4a940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f5242b4ad10" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f5242b48540" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f5242b48540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f5242b28620" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f5242b28620"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f5242b28df0" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f5242b28df0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f5242b27220" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f5242b27220"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f5242b27a00" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f5242b27a00"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f5242b27dd0" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="47:../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; The default for GpioCapture is CCIxA.  Other channels are available&#10; (like B) but they need to be hardcoded in another module.  See&#10; tos/platforms/exp5438_2520/hardware/cc2520/P81SfdCaptureC.nc&#10;&#10; Lower levels have been modified to support being able to change&#10; CCIS in the control registers.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="50:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="56:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f524264c5e0" loc="56:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f52426409b0" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="96:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f5242625cc0" loc="96:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f52423dc020" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f52423dc020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f52423dc7b0" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f52423dc7b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f52421b7d00" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f52421b7d00"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f524216bcc0" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f524216bcc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="55:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5242135530" loc="55:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5242135530"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f5242135880" loc="56:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="VirtualizeTimerImplP" loc="61:../../../tos/lib/timer/VirtualizeTimerImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5242127980" loc="61:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5242127980"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f5242127cd0" loc="62:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:../../../tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:../../../tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
        <short>&#10; An implementation of the UART on USART1 for the MSP430.</short>
        <long>&#10; An implementation of the UART on USART1 for the MSP430.&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire81@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="44:../../../tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="36:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:../../../tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../../../tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Boot" ref="0x7f5243354020" loc="61:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f5243354020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f52433543a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f52432f5950" loc="63:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f52432f5950"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f52432f5cd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f52432f5e60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5243351020"/>
        <function-ref name="cancel" scoped="" ref="0x7f52433511b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5243351340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f52432d2180" loc="67:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f52432d2180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f52432d2500"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f52432d2690"/>
        <function-ref name="getPayload" scoped="" ref="0x7f52432d2820"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f52432d29b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f52432d2b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f52432fea80" loc="62:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f52432fea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f52432fee00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f52433559a0" loc="60:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f52433559a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5243355d20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5243363020"/>
        <function-ref name="led1On" scoped="" ref="0x7f52433631b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5243363340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f52433634d0"/>
        <function-ref name="get" scoped="" ref="0x7f5243363660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f52433637f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5243363e30"/>
        <function-ref name="set" scoped="" ref="0x7f5243363980"/>
        <function-ref name="led0On" scoped="" ref="0x7f5243363b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f5243363ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Control" ref="0x7f5243365130" loc="59:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5243365130"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f52433654b0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5243365640"/>
        <function-ref name="start" scoped="" ref="0x7f52433657d0"/>
        <function-ref name="stop" scoped="" ref="0x7f5243365960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerIniTDMA" ref="0x7f5243300060" loc="64:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerIniTDMA" scoped="" ref="0x7f5243300060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368640"/>
            <typename><typedef-ref name="TMilli" ref="0x7f52433689b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f52432e9630"/>
        <function-ref name="fired" scoped="" ref="0x7f52432f6ac0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f52432eb920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f52432eb4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f52432e8020"/>
        <function-ref name="gett0" scoped="" ref="0x7f52432e9ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f52432eb020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5243300c50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f52432e9020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f52432f6170"/>
        <function-ref name="stop" scoped="" ref="0x7f52432f6640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerApagaLeds" ref="0x7f52432e8680" loc="65:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerApagaLeds" scoped="" ref="0x7f52432e8680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368640"/>
            <typename><typedef-ref name="TMilli" ref="0x7f52433689b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f52432e4c40"/>
        <function-ref name="fired" scoped="" ref="0x7f52432e61e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f52432e4020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f52432e6ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f52432e3590"/>
        <function-ref name="gett0" scoped="" ref="0x7f52432e3110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f52432e6660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f52432e7390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f52432e4630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f52432e7860"/>
        <function-ref name="stop" scoped="" ref="0x7f52432e7d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFinTDMA" ref="0x7f52432e3be0" loc="66:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFinTDMA" scoped="" ref="0x7f52432e3be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368640"/>
            <typename><typedef-ref name="TMilli" ref="0x7f52433689b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f52432de110"/>
        <function-ref name="fired" scoped="" ref="0x7f52432e16a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f52432df4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f52432df020"/>
        <function-ref name="getdt" scoped="" ref="0x7f52432dea10"/>
        <function-ref name="gett0" scoped="" ref="0x7f52432de590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f52432e1b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f52432e2860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f52432dfab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f52432e2d30"/>
        <function-ref name="stop" scoped="" ref="0x7f52432e1220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f524327f370" loc="46:../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f524327f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f524327f6f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f524327f880"/>
        <function-ref name="led1On" scoped="" ref="0x7f524327fa10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f524327fba0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f524327fd30"/>
        <function-ref name="get" scoped="" ref="0x7f524327c020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f524327c1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f524327c7f0"/>
        <function-ref name="set" scoped="" ref="0x7f524327c340"/>
        <function-ref name="led0On" scoped="" ref="0x7f524327c4d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f524327c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f524326f1d0" loc="50:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f524326f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f524326f550"/>
        <function-ref name="isInput" scoped="" ref="0x7f524326f6e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f524326f870"/>
        <function-ref name="isOutput" scoped="" ref="0x7f524326fa00"/>
        <function-ref name="get" scoped="" ref="0x7f524326fb90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f524326fd20"/>
        <function-ref name="set" scoped="" ref="0x7f5243275020"/>
        <function-ref name="clr" scoped="" ref="0x7f52432751b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5243276560" loc="46:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5243276560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f52432768e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f52432754d0" loc="51:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f52432754d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5243275850"/>
        <function-ref name="isInput" scoped="" ref="0x7f52432759e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243275b70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5243275d00"/>
        <function-ref name="get" scoped="" ref="0x7f5243274020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52432741b0"/>
        <function-ref name="set" scoped="" ref="0x7f5243274340"/>
        <function-ref name="clr" scoped="" ref="0x7f52432744d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f5243276b60" loc="47:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5243276b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5243278020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f52432781b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f5243278340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f52432784d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5243278660"/>
        <function-ref name="get" scoped="" ref="0x7f52432787f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5243278980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5243277020"/>
        <function-ref name="set" scoped="" ref="0x7f5243278b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f5243278ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f5243278e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f52432747f0" loc="52:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f52432747f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5243274b70"/>
        <function-ref name="isInput" scoped="" ref="0x7f5243274d00"/>
        <function-ref name="toggle" scoped="" ref="0x7f524326e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f524326e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f524326e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f524326e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f524326e660"/>
        <function-ref name="clr" scoped="" ref="0x7f524326e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f5243279d80" loc="41:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f5243279d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5243252180"/>
        <function-ref name="isInput" scoped="" ref="0x7f5243252310"/>
        <function-ref name="toggle" scoped="" ref="0x7f52432524a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5243252630"/>
        <function-ref name="get" scoped="" ref="0x7f52432527c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5243252950"/>
        <function-ref name="set" scoped="" ref="0x7f5243252ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f5243252c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f5243251020" loc="42:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f5243251020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52432513a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5243251530"/>
        <function-ref name="toggle" scoped="" ref="0x7f52432516c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5243251850"/>
        <function-ref name="get" scoped="" ref="0x7f52432519e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5243251b70"/>
        <function-ref name="set" scoped="" ref="0x7f5243251d00"/>
        <function-ref name="clr" scoped="" ref="0x7f5243250020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f524324f600" loc="44:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f524324f600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f524324f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f5243250380" loc="43:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f5243250380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5243250700"/>
        <function-ref name="isInput" scoped="" ref="0x7f5243250890"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243250a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5243250bb0"/>
        <function-ref name="get" scoped="" ref="0x7f5243250d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f524324f020"/>
        <function-ref name="set" scoped="" ref="0x7f524324f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f524324f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f5243233580" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f5243233580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5243233900"/>
        <function-ref name="isInput" scoped="" ref="0x7f5243233a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243233c20"/>
        <function-ref name="clr" scoped="" ref="0x7f5243231980"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243232020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52432321b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243232340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52432324d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5243232660"/>
        <function-ref name="get" scoped="" ref="0x7f52432327f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5243232980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5243232b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5243232ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5243231020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52432311b0"/>
        <function-ref name="set" scoped="" ref="0x7f5243231340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52432314d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5243233db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243231660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52432317f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f524321a710" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f524321a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f524321aa90"/>
        <function-ref name="isInput" scoped="" ref="0x7f524321ac20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f524321adb0"/>
        <function-ref name="clr" scoped="" ref="0x7f5243218a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f52432191b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5243219340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52432194d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5243219660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52432197f0"/>
        <function-ref name="get" scoped="" ref="0x7f5243219980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5243219b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5243219ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5243219e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5243218120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52432182b0"/>
        <function-ref name="set" scoped="" ref="0x7f5243218440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52432185d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5243219020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243218760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52432188f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f5243190d30" loc="205:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f5243190d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f524318f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f524318f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f524318f400"/>
        <function-ref name="clr" scoped="" ref="0x7f524318d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f524318f720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f524318f8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f524318fa40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f524318fbd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f524318fd60"/>
        <function-ref name="get" scoped="" ref="0x7f524318e020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f524318e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f524318e340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f524318e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f524318e760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f524318e8f0"/>
        <function-ref name="set" scoped="" ref="0x7f524318ea80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f524318ec10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f524318f590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f524318eda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f524318d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f5243195d40" loc="201:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f5243195d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431940e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5243194270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243194400"/>
        <function-ref name="clr" scoped="" ref="0x7f52431921b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243194720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431948b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243194a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5243194bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5243194d60"/>
        <function-ref name="get" scoped="" ref="0x7f5243193020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431931b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5243193340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431934d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5243193760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431938f0"/>
        <function-ref name="set" scoped="" ref="0x7f5243193a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5243193c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5243194590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243193da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5243192020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f52431bed50" loc="183:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f52431bed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431bd100"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431bd290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52431bd420"/>
        <function-ref name="clr" scoped="" ref="0x7f52431bb1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f52431bd740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431bd8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52431bda60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431bdbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431bdd80"/>
        <function-ref name="get" scoped="" ref="0x7f52431bc020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431bc1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431bc340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431bc4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431bc760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431bc8f0"/>
        <function-ref name="set" scoped="" ref="0x7f52431bca80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431bcc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431bd5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52431bcda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431bb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f5243215710" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f5243215710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5243215a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5243215c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243215db0"/>
        <function-ref name="clr" scoped="" ref="0x7f5243213a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f52432141b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5243214340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52432144d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5243214660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52432147f0"/>
        <function-ref name="get" scoped="" ref="0x7f5243214980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5243214b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5243214ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5243214e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5243213120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52432132b0"/>
        <function-ref name="set" scoped="" ref="0x7f5243213440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52432135d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5243214020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243213760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52432138f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f52431fb8a0" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f52431fb8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431fbc20"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431fbdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52431fa020"/>
        <function-ref name="clr" scoped="" ref="0x7f52431f9c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f52431fa340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431fa4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52431fa660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431fa7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431fa980"/>
        <function-ref name="get" scoped="" ref="0x7f52431fab10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431faca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431fae30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431f9020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431f92b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431f9440"/>
        <function-ref name="set" scoped="" ref="0x7f52431f95d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431f9760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431fa1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52431f98f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431f9a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f52431e28a0" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f52431e28a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431e2c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431e2db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52431e1020"/>
        <function-ref name="clr" scoped="" ref="0x7f52431e0c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f52431e1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431e14d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52431e1660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431e17f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431e1980"/>
        <function-ref name="get" scoped="" ref="0x7f52431e1b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431e1ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431e1e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431e0020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431e02b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431e0440"/>
        <function-ref name="set" scoped="" ref="0x7f52431e05d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431e0760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431e11b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52431e08f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431e0a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f52431cd8a0" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f52431cd8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431cdc20"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431cddb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52431cc020"/>
        <function-ref name="clr" scoped="" ref="0x7f52431cbc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f52431cc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431cc4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52431cc660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431cc7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431cc980"/>
        <function-ref name="get" scoped="" ref="0x7f52431ccb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431ccca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431cce30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431cb020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431cb2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431cb440"/>
        <function-ref name="set" scoped="" ref="0x7f52431cb5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431cb760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431cc1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52431cb8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431cba80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f52431b9d50" loc="185:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f52431b9d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431b8100"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431b8290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52431b8420"/>
        <function-ref name="clr" scoped="" ref="0x7f52431b61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f52431b8740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431b88d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52431b8a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431b8bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431b8d80"/>
        <function-ref name="get" scoped="" ref="0x7f52431b7020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431b71b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431b7340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431b74d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431b7760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431b78f0"/>
        <function-ref name="set" scoped="" ref="0x7f52431b7a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431b7c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431b85b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52431b7da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431b6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f52431a5d40" loc="195:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f52431a5d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431a40e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431a4270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52431a4400"/>
        <function-ref name="clr" scoped="" ref="0x7f52431a21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f52431a4720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431a48b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52431a4a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431a4bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431a4d60"/>
        <function-ref name="get" scoped="" ref="0x7f52431a3020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431a31b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431a3340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431a34d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431a3760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431a38f0"/>
        <function-ref name="set" scoped="" ref="0x7f52431a3a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431a3c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431a4590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52431a3da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431a2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f5243186d50" loc="211:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f5243186d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5243185100"/>
        <function-ref name="isInput" scoped="" ref="0x7f5243185290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243185420"/>
        <function-ref name="clr" scoped="" ref="0x7f52431831b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243185740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431858d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243185a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5243185bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5243185d80"/>
        <function-ref name="get" scoped="" ref="0x7f5243184020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431841b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5243184340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431844d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5243184760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431848f0"/>
        <function-ref name="set" scoped="" ref="0x7f5243184a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5243184c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431855b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243184da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5243183020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f524322cd50" loc="57:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f524322cd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f524322b100"/>
        <function-ref name="isInput" scoped="" ref="0x7f524322b290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f524322b420"/>
        <function-ref name="clr" scoped="" ref="0x7f52432291b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f524322b740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f524322b8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f524322ba60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f524322bbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f524322bd80"/>
        <function-ref name="get" scoped="" ref="0x7f524322a020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f524322a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f524322a340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f524322a4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f524322a760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f524322a8f0"/>
        <function-ref name="set" scoped="" ref="0x7f524322aa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f524322ac10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f524322b5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f524322ada0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5243229020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f52431b6580" loc="186:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f52431b6580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431b6900"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431b6a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52431b6c20"/>
        <function-ref name="clr" scoped="" ref="0x7f52431b4980"/>
        <function-ref name="toggle" scoped="" ref="0x7f52431b5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431b51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52431b5340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431b54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431b5660"/>
        <function-ref name="get" scoped="" ref="0x7f52431b57f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431b5980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431b5b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431b5ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431b4020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431b41b0"/>
        <function-ref name="set" scoped="" ref="0x7f52431b4340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431b44d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431b6db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52431b4660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431b47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f5243227d50" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f5243227d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5243226100"/>
        <function-ref name="isInput" scoped="" ref="0x7f5243226290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243226420"/>
        <function-ref name="clr" scoped="" ref="0x7f52432241b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243226740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52432268d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243226a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5243226bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5243226d80"/>
        <function-ref name="get" scoped="" ref="0x7f5243225020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52432251b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5243225340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52432254d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5243225760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52432258f0"/>
        <function-ref name="set" scoped="" ref="0x7f5243225a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5243225c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52432265b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243225da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5243224020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f524320de50" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f524320de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f524320c210"/>
        <function-ref name="isInput" scoped="" ref="0x7f524320c3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f524320c530"/>
        <function-ref name="clr" scoped="" ref="0x7f524320a340"/>
        <function-ref name="toggle" scoped="" ref="0x7f524320c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f524320c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f524320cb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f524320cd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f524320b020"/>
        <function-ref name="get" scoped="" ref="0x7f524320b1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f524320b340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f524320b4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f524320b660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f524320b8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f524320ba80"/>
        <function-ref name="set" scoped="" ref="0x7f524320bc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f524320bda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f524320c6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f524320a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f524320a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f52431f3020" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f52431f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431f33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431f3530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52431f36c0"/>
        <function-ref name="clr" scoped="" ref="0x7f52431f14d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f52431f39e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431f3b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52431f3d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431f2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431f21b0"/>
        <function-ref name="get" scoped="" ref="0x7f52431f2340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431f24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431f2660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431f27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431f2a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431f2c10"/>
        <function-ref name="set" scoped="" ref="0x7f52431f2da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431f1020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431f3850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52431f11b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431f1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f52431da020" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f52431da020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431da3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431da530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52431da6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f52431d84d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f52431da9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431dab70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52431dad00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431d9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431d91b0"/>
        <function-ref name="get" scoped="" ref="0x7f52431d9340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431d94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431d9660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431d97f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431d9a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431d9c10"/>
        <function-ref name="set" scoped="" ref="0x7f52431d9da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431d8020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431da850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52431d81b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431d8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f52431c5020" loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f52431c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431c53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431c5530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52431c56c0"/>
        <function-ref name="clr" scoped="" ref="0x7f52431c34d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f52431c59e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431c5b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52431c5d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431c4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431c41b0"/>
        <function-ref name="get" scoped="" ref="0x7f52431c4340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431c44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431c4660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431c47f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431c4a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431c4c10"/>
        <function-ref name="set" scoped="" ref="0x7f52431c4da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431c3020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431c5850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52431c31b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431c3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f5243238580" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f5243238580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5243238900"/>
        <function-ref name="isInput" scoped="" ref="0x7f5243238a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243238c20"/>
        <function-ref name="clr" scoped="" ref="0x7f5243236980"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243237020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52432371b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243237340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52432374d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5243237660"/>
        <function-ref name="get" scoped="" ref="0x7f52432377f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5243237980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5243237b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5243237ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5243236020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52432361b0"/>
        <function-ref name="set" scoped="" ref="0x7f5243236340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52432364d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5243238db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243236660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52432367f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f524321f580" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f524321f580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f524321fa00"/>
        <function-ref name="isInput" scoped="" ref="0x7f524321fb90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f524321fd20"/>
        <function-ref name="clr" scoped="" ref="0x7f524321da80"/>
        <function-ref name="toggle" scoped="" ref="0x7f524321e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f524321e340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f524321e4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f524321e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f524321e7f0"/>
        <function-ref name="get" scoped="" ref="0x7f524321e980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f524321eb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f524321eca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f524321ee30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f524321d120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f524321d2b0"/>
        <function-ref name="set" scoped="" ref="0x7f524321d440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f524321d5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f524321e020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f524321d760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f524321d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f5243205710" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f5243205710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5243205a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5243205c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243205db0"/>
        <function-ref name="clr" scoped="" ref="0x7f5243203a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f52432041b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5243204340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52432044d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5243204660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52432047f0"/>
        <function-ref name="get" scoped="" ref="0x7f5243204980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5243204b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5243204ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5243204e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5243203120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52432032b0"/>
        <function-ref name="set" scoped="" ref="0x7f5243203440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52432035d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5243204020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243203760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52432038f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f52431c0580" loc="182:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f52431c0580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431c0900"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431c0a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52431c0c20"/>
        <function-ref name="clr" scoped="" ref="0x7f52431be980"/>
        <function-ref name="toggle" scoped="" ref="0x7f52431bf020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431bf1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52431bf340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431bf4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431bf660"/>
        <function-ref name="get" scoped="" ref="0x7f52431bf7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431bf980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431bfb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431bfca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431be020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431be1b0"/>
        <function-ref name="set" scoped="" ref="0x7f52431be340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431be4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431c0db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52431be660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431be7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f524319d570" loc="198:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f524319d570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f524319d8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f524319da80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f524319dc10"/>
        <function-ref name="clr" scoped="" ref="0x7f524319b980"/>
        <function-ref name="toggle" scoped="" ref="0x7f524319c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f524319c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f524319c340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f524319c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f524319c660"/>
        <function-ref name="get" scoped="" ref="0x7f524319c7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f524319c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f524319cb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f524319cca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f524319b020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f524319b1b0"/>
        <function-ref name="set" scoped="" ref="0x7f524319b340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f524319b4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f524319dda0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f524319b660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f524319b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f5243188570" loc="209:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f5243188570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431888f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5243188a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243188c10"/>
        <function-ref name="clr" scoped="" ref="0x7f5243186980"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243187020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431871b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243187340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431874d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5243187660"/>
        <function-ref name="get" scoped="" ref="0x7f52431877f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5243187980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5243187b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5243187ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5243186020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431861b0"/>
        <function-ref name="set" scoped="" ref="0x7f5243186340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431864d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5243188da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243186660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431867f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f52431ac580" loc="191:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f52431ac580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431ac900"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431aca90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52431acc20"/>
        <function-ref name="clr" scoped="" ref="0x7f52431aa980"/>
        <function-ref name="toggle" scoped="" ref="0x7f52431ab020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431ab1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52431ab340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431ab4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431ab660"/>
        <function-ref name="get" scoped="" ref="0x7f52431ab7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431ab980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431abb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431abca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431aa020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431aa1b0"/>
        <function-ref name="set" scoped="" ref="0x7f52431aa340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431aa4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431acdb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52431aa660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431aa7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f5243200710" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f5243200710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5243200c90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5243200e20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52431ff020"/>
        <function-ref name="clr" scoped="" ref="0x7f52431fec10"/>
        <function-ref name="toggle" scoped="" ref="0x7f52431ff340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431ff4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52431ff660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431ff7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431ff980"/>
        <function-ref name="get" scoped="" ref="0x7f52431ffb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431ffca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431ffe30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431fe020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431fe2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431fe440"/>
        <function-ref name="set" scoped="" ref="0x7f52431fe5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431fe760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431ff1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52431fe8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431fea80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f52431e78a0" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f52431e78a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431e7c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431e7db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52431e6020"/>
        <function-ref name="clr" scoped="" ref="0x7f52431e5c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f52431e6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431e64d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52431e6660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431e67f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431e6980"/>
        <function-ref name="get" scoped="" ref="0x7f52431e6b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431e6ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431e6e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431e5020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431e52b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431e5440"/>
        <function-ref name="set" scoped="" ref="0x7f52431e55d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431e5760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431e61b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52431e58f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431e5a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f52431d28a0" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f52431d28a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431d2c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431d2db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52431d1020"/>
        <function-ref name="clr" scoped="" ref="0x7f52431d0c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f52431d1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431d14d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52431d1660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431d17f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431d1980"/>
        <function-ref name="get" scoped="" ref="0x7f52431d1b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431d1ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431d1e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431d0020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431d02b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431d0440"/>
        <function-ref name="set" scoped="" ref="0x7f52431d05d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431d0760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431d11b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52431d08f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431d0a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f524319bd40" loc="199:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f524319bd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431990e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5243199270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243199400"/>
        <function-ref name="clr" scoped="" ref="0x7f52431971b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243199720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431998b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243199a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5243199bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5243199d60"/>
        <function-ref name="get" scoped="" ref="0x7f5243198020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431981b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5243198340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431984d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5243198760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431988f0"/>
        <function-ref name="set" scoped="" ref="0x7f5243198a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5243198c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5243199590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243198da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5243197020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f52431b4d40" loc="188:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f52431b4d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431b30e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431b3270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52431b3400"/>
        <function-ref name="clr" scoped="" ref="0x7f52431b11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f52431b3720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431b38b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52431b3a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431b3bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431b3d60"/>
        <function-ref name="get" scoped="" ref="0x7f52431b2020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431b21b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431b2340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431b24d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431b2760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431b28f0"/>
        <function-ref name="set" scoped="" ref="0x7f52431b2a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431b2c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431b3590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52431b2da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431b1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f5243231d50" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f5243231d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5243230100"/>
        <function-ref name="isInput" scoped="" ref="0x7f5243230290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243230420"/>
        <function-ref name="clr" scoped="" ref="0x7f524322e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243230740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52432308d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243230a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5243230bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5243230d80"/>
        <function-ref name="get" scoped="" ref="0x7f524322f020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f524322f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f524322f340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f524322f4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f524322f760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f524322f8f0"/>
        <function-ref name="set" scoped="" ref="0x7f524322fa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f524322fc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52432305b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f524322fda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f524322e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f5243218e50" loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f5243218e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5243217210"/>
        <function-ref name="isInput" scoped="" ref="0x7f52432173a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243217530"/>
        <function-ref name="clr" scoped="" ref="0x7f5243215340"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243217850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52432179e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243217b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5243217d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5243216020"/>
        <function-ref name="get" scoped="" ref="0x7f52432161b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5243216340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52432164d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5243216660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52432168f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5243216a80"/>
        <function-ref name="set" scoped="" ref="0x7f5243216c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5243216da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52432176c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243215020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52432151b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f52431d88a0" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f52431d88a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431d8c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431d8db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52431d7020"/>
        <function-ref name="clr" scoped="" ref="0x7f52431d6c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f52431d7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431d74d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52431d7660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431d77f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431d7980"/>
        <function-ref name="get" scoped="" ref="0x7f52431d7b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431d7ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431d7e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431d6020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431d62b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431d6440"/>
        <function-ref name="set" scoped="" ref="0x7f52431d65d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431d6760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431d71b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52431d68f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431d6a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f5243213e50" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f5243213e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5243212210"/>
        <function-ref name="isInput" scoped="" ref="0x7f52432123a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243212530"/>
        <function-ref name="clr" scoped="" ref="0x7f5243210340"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243212850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52432129e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243212b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5243212d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5243211020"/>
        <function-ref name="get" scoped="" ref="0x7f52432111b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5243211340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52432114d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5243211660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52432118f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5243211a80"/>
        <function-ref name="set" scoped="" ref="0x7f5243211c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5243211da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52432126c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243210020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52432101b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f52431f8020" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f52431f8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431f83a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431f8530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52431f86c0"/>
        <function-ref name="clr" scoped="" ref="0x7f52431f64d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f52431f89e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431f8b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52431f8d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431f7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431f71b0"/>
        <function-ref name="get" scoped="" ref="0x7f52431f7340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431f74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431f7660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431f77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431f7a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431f7c10"/>
        <function-ref name="set" scoped="" ref="0x7f52431f7da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431f6020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431f8850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52431f61b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431f6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f52431df020" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f52431df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431df3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431df530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52431df6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f52431dd4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f52431df9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431dfb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52431dfd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431de020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431de1b0"/>
        <function-ref name="get" scoped="" ref="0x7f52431de340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431de4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431de660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431de7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431dea80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431dec10"/>
        <function-ref name="set" scoped="" ref="0x7f52431deda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431dd020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431df850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52431dd1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431dd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f52431ca020" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f52431ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431ca3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431ca530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52431ca6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f52431c84d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f52431ca9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431cab70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52431cad00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431c9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431c91b0"/>
        <function-ref name="get" scoped="" ref="0x7f52431c9340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431c94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431c9660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431c97f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431c9a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431c9c10"/>
        <function-ref name="set" scoped="" ref="0x7f52431c9da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431c8020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431ca850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52431c81b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431c8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f52431afd50" loc="190:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f52431afd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431ae100"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431ae290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52431ae420"/>
        <function-ref name="clr" scoped="" ref="0x7f52431ac1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f52431ae740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431ae8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52431aea60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431aebf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431aed80"/>
        <function-ref name="get" scoped="" ref="0x7f52431ad020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431ad1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431ad340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431ad4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431ad760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431ad8f0"/>
        <function-ref name="set" scoped="" ref="0x7f52431ada80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431adc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431ae5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52431adda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f524323b530" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f524323b530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f524323b8b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f524323ba40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f524323bbd0"/>
        <function-ref name="clr" scoped="" ref="0x7f524324a980"/>
        <function-ref name="toggle" scoped="" ref="0x7f524324b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f524324b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f524324b340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f524324b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f524324b660"/>
        <function-ref name="get" scoped="" ref="0x7f524324b7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f524324b980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f524324bb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f524324bca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f524324a020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f524324a1b0"/>
        <function-ref name="set" scoped="" ref="0x7f524324a340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f524324a4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f524323bd60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f524324a660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f524324a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f5243224580" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f5243224580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5243224900"/>
        <function-ref name="isInput" scoped="" ref="0x7f5243224a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243224c20"/>
        <function-ref name="clr" scoped="" ref="0x7f5243222980"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243223020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52432231b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243223340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52432234d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5243223660"/>
        <function-ref name="get" scoped="" ref="0x7f52432237f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5243223980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5243223b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5243223ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5243222020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52432221b0"/>
        <function-ref name="set" scoped="" ref="0x7f5243222340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52432224d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5243224db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243222660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52432227f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f524320a710" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f524320a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f524320aa90"/>
        <function-ref name="isInput" scoped="" ref="0x7f524320ac20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f524320adb0"/>
        <function-ref name="clr" scoped="" ref="0x7f5243208a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f52432091b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5243209340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52432094d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5243209660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52432097f0"/>
        <function-ref name="get" scoped="" ref="0x7f5243209980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5243209b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5243209ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5243209e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5243208120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52432082b0"/>
        <function-ref name="set" scoped="" ref="0x7f5243208440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52432085d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5243209020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243208760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52432088f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f52431f18a0" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f52431f18a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431f1c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431f1db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52431f0020"/>
        <function-ref name="clr" scoped="" ref="0x7f52431efc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f52431f0340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431f04d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52431f0660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431f07f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431f0980"/>
        <function-ref name="get" scoped="" ref="0x7f52431f0b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431f0ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431f0e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431ef020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431ef2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431ef440"/>
        <function-ref name="set" scoped="" ref="0x7f52431ef5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431ef760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431f01b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52431ef8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431efa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f52431aad50" loc="192:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f52431aad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431a9100"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431a9290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52431a9420"/>
        <function-ref name="clr" scoped="" ref="0x7f52431a71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f52431a9740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431a98d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52431a9a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431a9bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431a9d80"/>
        <function-ref name="get" scoped="" ref="0x7f52431a8020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431a81b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431a8340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431a84d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431a8760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431a88f0"/>
        <function-ref name="set" scoped="" ref="0x7f52431a8a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431a8c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431a95b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52431a8da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f52431a2570" loc="196:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f52431a2570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431a28f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431a2a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52431a2c10"/>
        <function-ref name="clr" scoped="" ref="0x7f52431a0980"/>
        <function-ref name="toggle" scoped="" ref="0x7f52431a1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431a11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52431a1340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431a14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431a1660"/>
        <function-ref name="get" scoped="" ref="0x7f52431a17f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431a1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431a1b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431a1ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431a0020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431a01b0"/>
        <function-ref name="set" scoped="" ref="0x7f52431a0340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431a04d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431a2da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52431a0660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431a07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f5243192570" loc="202:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f5243192570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431928f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5243192a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243192c10"/>
        <function-ref name="clr" scoped="" ref="0x7f5243190980"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243191020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431911b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243191340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431914d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5243191660"/>
        <function-ref name="get" scoped="" ref="0x7f52431917f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5243191980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5243191b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5243191ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5243190020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431901b0"/>
        <function-ref name="set" scoped="" ref="0x7f5243190340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431904d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5243192da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243190660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431907f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f52431ec8a0" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f52431ec8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431ecc20"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431ecdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52431eb020"/>
        <function-ref name="clr" scoped="" ref="0x7f52431eac10"/>
        <function-ref name="toggle" scoped="" ref="0x7f52431eb340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431eb4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52431eb660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431eb7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431eb980"/>
        <function-ref name="get" scoped="" ref="0x7f52431ebb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431ebca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431ebe30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431ea020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431ea2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431ea440"/>
        <function-ref name="set" scoped="" ref="0x7f52431ea5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431ea760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431eb1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52431ea8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431eaa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f52431a7580" loc="193:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f52431a7580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431a7900"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431a7a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52431a7c20"/>
        <function-ref name="clr" scoped="" ref="0x7f52431a5980"/>
        <function-ref name="toggle" scoped="" ref="0x7f52431a6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431a61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52431a6340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431a64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431a6660"/>
        <function-ref name="get" scoped="" ref="0x7f52431a67f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431a6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431a6b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431a6ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431a5020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431a51b0"/>
        <function-ref name="set" scoped="" ref="0x7f52431a5340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431a54d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431a7db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52431a5660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431a57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f5243236d50" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f5243236d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5243235100"/>
        <function-ref name="isInput" scoped="" ref="0x7f5243235290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243235420"/>
        <function-ref name="clr" scoped="" ref="0x7f52432331b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243235740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52432358d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243235a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5243235bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5243235d80"/>
        <function-ref name="get" scoped="" ref="0x7f5243234020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52432341b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5243234340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52432344d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5243234760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52432348f0"/>
        <function-ref name="set" scoped="" ref="0x7f5243234a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5243234c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52432355b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243234da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5243233020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f524321de50" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f524321de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f524321c210"/>
        <function-ref name="isInput" scoped="" ref="0x7f524321c3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f524321c530"/>
        <function-ref name="clr" scoped="" ref="0x7f524321a340"/>
        <function-ref name="toggle" scoped="" ref="0x7f524321c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f524321c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f524321cb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f524321cd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f524321b020"/>
        <function-ref name="get" scoped="" ref="0x7f524321b1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f524321b340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f524321b4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f524321b660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f524321b8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f524321ba80"/>
        <function-ref name="set" scoped="" ref="0x7f524321bc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f524321bda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f524321c6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f524321a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f524321a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f5243203e50" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f5243203e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5243202210"/>
        <function-ref name="isInput" scoped="" ref="0x7f52432023a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243202530"/>
        <function-ref name="clr" scoped="" ref="0x7f5243200340"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243202850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52432029e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243202b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5243202d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5243201020"/>
        <function-ref name="get" scoped="" ref="0x7f52432011b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5243201340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52432014d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5243201660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52432018f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5243201a80"/>
        <function-ref name="set" scoped="" ref="0x7f5243201c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5243201da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52432026c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243200020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52432001b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f52431b1580" loc="189:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f52431b1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431b1900"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431b1a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52431b1c20"/>
        <function-ref name="clr" scoped="" ref="0x7f52431af980"/>
        <function-ref name="toggle" scoped="" ref="0x7f52431b0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431b01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52431b0340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431b04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431b0660"/>
        <function-ref name="get" scoped="" ref="0x7f52431b07f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431b0980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431b0b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431b0ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431af020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431af1b0"/>
        <function-ref name="set" scoped="" ref="0x7f52431af340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431af4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431b1db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52431af660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431af7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f5243197570" loc="200:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f5243197570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431978f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5243197a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243197c10"/>
        <function-ref name="clr" scoped="" ref="0x7f5243195980"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243196020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431961b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243196340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431964d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5243196660"/>
        <function-ref name="get" scoped="" ref="0x7f52431967f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5243196980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5243196b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5243196ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5243195020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431951b0"/>
        <function-ref name="set" scoped="" ref="0x7f5243195340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431954d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5243197da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243195660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431957f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f52431fd020" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f52431fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431fd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431fd530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52431fd6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f52431fb4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f52431fd9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431fdb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52431fdd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431fc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431fc1b0"/>
        <function-ref name="get" scoped="" ref="0x7f52431fc340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431fc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431fc660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431fc7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431fca80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431fcc10"/>
        <function-ref name="set" scoped="" ref="0x7f52431fcda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431fb020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431fd850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52431fb1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431fb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f52431e4020" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f52431e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431e43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431e4530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52431e46c0"/>
        <function-ref name="clr" scoped="" ref="0x7f52431e24d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f52431e49e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431e4b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52431e4d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431e3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431e31b0"/>
        <function-ref name="get" scoped="" ref="0x7f52431e3340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431e34d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431e3660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431e37f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431e3a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431e3c10"/>
        <function-ref name="set" scoped="" ref="0x7f52431e3da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431e2020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431e4850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52431e21b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431e2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f52431cf020" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f52431cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431cf3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431cf530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52431cf6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f52431cd4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f52431cf9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431cfb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52431cfd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431ce020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431ce1b0"/>
        <function-ref name="get" scoped="" ref="0x7f52431ce340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431ce4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431ce660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431ce7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431cea80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431cec10"/>
        <function-ref name="set" scoped="" ref="0x7f52431ceda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431cd020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431cf850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52431cd1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431cd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f524322e580" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f524322e580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f524322e900"/>
        <function-ref name="isInput" scoped="" ref="0x7f524322ea90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f524322ec20"/>
        <function-ref name="clr" scoped="" ref="0x7f524322c980"/>
        <function-ref name="toggle" scoped="" ref="0x7f524322d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f524322d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f524322d340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f524322d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f524322d660"/>
        <function-ref name="get" scoped="" ref="0x7f524322d7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f524322d980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f524322db10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f524322dca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f524322c020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f524322c1b0"/>
        <function-ref name="set" scoped="" ref="0x7f524322c340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f524322c4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f524322edb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f524322c660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f524322c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f52431d4020" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f52431d4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431d43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431d4530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52431d46c0"/>
        <function-ref name="clr" scoped="" ref="0x7f52431d24d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f52431d49e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431d4b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52431d4d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431d3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431d31b0"/>
        <function-ref name="get" scoped="" ref="0x7f52431d3340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431d34d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431d3660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431d37f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431d3a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431d3c10"/>
        <function-ref name="set" scoped="" ref="0x7f52431d3da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431d2020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431d4850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52431d21b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431d2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f5243229580" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f5243229580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5243229900"/>
        <function-ref name="isInput" scoped="" ref="0x7f5243229a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243229c20"/>
        <function-ref name="clr" scoped="" ref="0x7f5243227980"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243228020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52432281b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243228340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52432284d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5243228660"/>
        <function-ref name="get" scoped="" ref="0x7f52432287f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5243228980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5243228b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5243228ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5243227020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52432271b0"/>
        <function-ref name="set" scoped="" ref="0x7f5243227340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52432274d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5243229db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243227660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52432277f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f5243210710" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f5243210710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5243210a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f5243210c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243210db0"/>
        <function-ref name="clr" scoped="" ref="0x7f524320da80"/>
        <function-ref name="toggle" scoped="" ref="0x7f524320e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f524320e340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f524320e4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f524320e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f524320e7f0"/>
        <function-ref name="get" scoped="" ref="0x7f524320e980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f524320eb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f524320eca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f524320ee30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f524320d120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f524320d2b0"/>
        <function-ref name="set" scoped="" ref="0x7f524320d440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f524320d5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f524320e020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f524320d760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f524320d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f52431f68a0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f52431f68a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431f6c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431f6db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52431f5020"/>
        <function-ref name="clr" scoped="" ref="0x7f52431f4c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f52431f5340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431f54d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52431f5660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431f57f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431f5980"/>
        <function-ref name="get" scoped="" ref="0x7f52431f5b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431f5ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431f5e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431f4020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431f42b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431f4440"/>
        <function-ref name="set" scoped="" ref="0x7f52431f45d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431f4760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431f51b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52431f48f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431f4a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f52431dd8a0" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f52431dd8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431ddc20"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431dddb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52431dc020"/>
        <function-ref name="clr" scoped="" ref="0x7f52431dbc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f52431dc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431dc4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52431dc660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431dc7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431dc980"/>
        <function-ref name="get" scoped="" ref="0x7f52431dcb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431dcca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431dce30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431db020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431db2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431db440"/>
        <function-ref name="set" scoped="" ref="0x7f52431db5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431db760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431dc1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52431db8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431dba80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f52431c88a0" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f52431c88a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431c8c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431c8db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52431c7020"/>
        <function-ref name="clr" scoped="" ref="0x7f52431c6c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f52431c7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431c74d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52431c7660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431c77f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431c7980"/>
        <function-ref name="get" scoped="" ref="0x7f52431c7b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431c7ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431c7e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431c6020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431c62b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431c6440"/>
        <function-ref name="set" scoped="" ref="0x7f52431c65d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431c6760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431c71b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52431c68f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431c6a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f524324ad50" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f524324ad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f524323a100"/>
        <function-ref name="isInput" scoped="" ref="0x7f524323a290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f524323a420"/>
        <function-ref name="clr" scoped="" ref="0x7f52432381b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f524323a740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f524323a8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f524323aa60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f524323abf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f524323ad80"/>
        <function-ref name="get" scoped="" ref="0x7f5243239020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52432391b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5243239340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52432394d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5243239760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52432398f0"/>
        <function-ref name="set" scoped="" ref="0x7f5243239a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5243239c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f524323a5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243239da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5243238020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f5243222d50" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f5243222d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5243221100"/>
        <function-ref name="isInput" scoped="" ref="0x7f5243221290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243221420"/>
        <function-ref name="clr" scoped="" ref="0x7f524321f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243221740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52432218d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243221a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5243221bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5243221d80"/>
        <function-ref name="get" scoped="" ref="0x7f5243220020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52432201b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5243220340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52432204d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5243220760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52432208f0"/>
        <function-ref name="set" scoped="" ref="0x7f5243220a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5243220c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52432215b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243220da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f524321f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f5243208e50" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f5243208e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5243207210"/>
        <function-ref name="isInput" scoped="" ref="0x7f52432073a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243207530"/>
        <function-ref name="clr" scoped="" ref="0x7f5243205340"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243207850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52432079e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243207b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5243207d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5243206020"/>
        <function-ref name="get" scoped="" ref="0x7f52432061b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5243206340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52432064d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5243206660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52432068f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5243206a80"/>
        <function-ref name="set" scoped="" ref="0x7f5243206c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5243206da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52432076c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243205020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52432051b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f52431ee020" loc="90:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f52431ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431ee3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431ee530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52431ee6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f52431ec4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f52431ee9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431eeb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52431eed00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431ed020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431ed1b0"/>
        <function-ref name="get" scoped="" ref="0x7f52431ed340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431ed4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431ed660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431ed7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431eda80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431edc10"/>
        <function-ref name="set" scoped="" ref="0x7f52431edda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431ec020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431ee850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52431ec1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431ec340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f52431a0d40" loc="197:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f52431a0d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f524319f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f524319f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f524319f400"/>
        <function-ref name="clr" scoped="" ref="0x7f524319d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f524319f720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f524319f8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f524319fa40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f524319fbd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f524319fd60"/>
        <function-ref name="get" scoped="" ref="0x7f524319e020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f524319e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f524319e340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f524319e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f524319e760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f524319e8f0"/>
        <function-ref name="set" scoped="" ref="0x7f524319ea80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f524319ec10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f524319f590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f524319eda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f524319d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f524318d560" loc="206:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f524318d560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f524318d8e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f524318da70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f524318dc00"/>
        <function-ref name="clr" scoped="" ref="0x7f524318b980"/>
        <function-ref name="toggle" scoped="" ref="0x7f524318c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f524318c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f524318c340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f524318c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f524318c660"/>
        <function-ref name="get" scoped="" ref="0x7f524318c7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f524318c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f524318cb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f524318cca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f524318b020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f524318b1b0"/>
        <function-ref name="set" scoped="" ref="0x7f524318b340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f524318b4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f524318dd90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f524318b660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f524318b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f52431bb580" loc="184:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f52431bb580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431bb900"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431bba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52431bbc20"/>
        <function-ref name="clr" scoped="" ref="0x7f52431b9980"/>
        <function-ref name="toggle" scoped="" ref="0x7f52431ba020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431ba1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52431ba340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431ba4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431ba660"/>
        <function-ref name="get" scoped="" ref="0x7f52431ba7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431ba980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431bab10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431baca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431b9020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431b91b0"/>
        <function-ref name="set" scoped="" ref="0x7f52431b9340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431b94d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431bbdb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52431b9660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431b97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f52431e9020" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f52431e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431e93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431e9530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52431e96c0"/>
        <function-ref name="clr" scoped="" ref="0x7f52431e74d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f52431e99e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431e9b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52431e9d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431e8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431e81b0"/>
        <function-ref name="get" scoped="" ref="0x7f52431e8340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431e84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431e8660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431e87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431e8a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431e8c10"/>
        <function-ref name="set" scoped="" ref="0x7f52431e8da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431e7020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431e9850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52431e71b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431e7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f524318bd40" loc="208:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f524318bd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f524318a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f524318a270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f524318a400"/>
        <function-ref name="clr" scoped="" ref="0x7f52431881b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f524318a720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f524318a8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f524318aa40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f524318abd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f524318ad60"/>
        <function-ref name="get" scoped="" ref="0x7f5243189020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431891b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5243189340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431894d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5243189760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431898f0"/>
        <function-ref name="set" scoped="" ref="0x7f5243189a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5243189c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f524318a590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243189da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5243188020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f5243183580" loc="212:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f5243183580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5243183900"/>
        <function-ref name="isInput" scoped="" ref="0x7f5243183a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243183c20"/>
        <function-ref name="clr" scoped="" ref="0x7f5243181980"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243182020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431821b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243182340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431824d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5243182660"/>
        <function-ref name="get" scoped="" ref="0x7f52431827f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5243182980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5243182b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5243182ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5243181020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431811b0"/>
        <function-ref name="set" scoped="" ref="0x7f5243181340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431814d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5243183db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243181660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431817f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f52431c38f0" loc="181:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f52431c38f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431c20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431c2230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52431c23c0"/>
        <function-ref name="clr" scoped="" ref="0x7f52431c01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f52431c26e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431c2870"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52431c2a00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52431c2b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431c2d20"/>
        <function-ref name="get" scoped="" ref="0x7f52431c1020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431c11b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431c1340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431c14d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431c1760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52431c18f0"/>
        <function-ref name="set" scoped="" ref="0x7f52431c1a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52431c1c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431c2550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52431c1da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431c0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f524314f540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f524314f540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f524314f8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f524314fa50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f524314fbe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f524314d980"/>
        <function-ref name="toggle" scoped="" ref="0x7f524314e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f524314e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f524314e340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f524314e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f524314e660"/>
        <function-ref name="get" scoped="" ref="0x7f524314e7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f524314e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f524314eb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f524314eca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f524314d020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f524314d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f524314d340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f524314d4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f524314d660"/>
        <function-ref name="clr" scoped="" ref="0x7f524314fd70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f524314d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f524314ab90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f524314ab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5243149020"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431491b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243149340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5243147020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243149660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431497f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243149980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5243149b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5243149ca0"/>
        <function-ref name="get" scoped="" ref="0x7f5243149e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5243148020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431481b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5243148340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431485d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5243148760"/>
        <function-ref name="set" scoped="" ref="0x7f52431488f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5243148a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5243148c10"/>
        <function-ref name="clr" scoped="" ref="0x7f52431494d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243148da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5243144060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5243144060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431443e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5243144570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243144700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431424d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243144a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5243144bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243144d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5243143020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431431b0"/>
        <function-ref name="get" scoped="" ref="0x7f5243143340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431434d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5243143660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431437f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5243143a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5243143c10"/>
        <function-ref name="set" scoped="" ref="0x7f5243143da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5243142020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431421b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5243144890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243142340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f524313f540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f524313f540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f524313f8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f524313fa50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f524313fbe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f524313d980"/>
        <function-ref name="toggle" scoped="" ref="0x7f524313e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f524313e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f524313e340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f524313e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f524313e660"/>
        <function-ref name="get" scoped="" ref="0x7f524313e7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f524313e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f524313eb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f524313eca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f524313d020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f524313d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f524313d340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f524313d4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f524313d660"/>
        <function-ref name="clr" scoped="" ref="0x7f524313fd70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f524313d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f524313ab90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f524313ab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5243138020"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431381b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243138340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5243136020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243138660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431387f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243138980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5243138b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5243138ca0"/>
        <function-ref name="get" scoped="" ref="0x7f5243138e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5243137020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431371b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5243137340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431375d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5243137760"/>
        <function-ref name="set" scoped="" ref="0x7f52431378f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5243137a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5243137c10"/>
        <function-ref name="clr" scoped="" ref="0x7f52431384d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243137da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5243133060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5243133060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431333e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5243133570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243133700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431314d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243133a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5243133bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243133d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5243132020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431321b0"/>
        <function-ref name="get" scoped="" ref="0x7f5243132340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431324d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5243132660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431327f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5243132a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5243132c10"/>
        <function-ref name="set" scoped="" ref="0x7f5243132da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5243131020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431311b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5243133890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243131340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f524312e540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f524312e540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f524312e8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f524312ea50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f524312ebe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f524312c980"/>
        <function-ref name="toggle" scoped="" ref="0x7f524312d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f524312d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f524312d340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f524312d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f524312d660"/>
        <function-ref name="get" scoped="" ref="0x7f524312d7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f524312d980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f524312db10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f524312dca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f524312c020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f524312c1b0"/>
        <function-ref name="set" scoped="" ref="0x7f524312c340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f524312c4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f524312c660"/>
        <function-ref name="clr" scoped="" ref="0x7f524312ed70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f524312c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5243129b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5243129b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5243128020"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431281b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243128340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5243126020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243128660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431287f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243128980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5243128b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5243128ca0"/>
        <function-ref name="get" scoped="" ref="0x7f5243128e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5243127020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431271b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5243127340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431275d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5243127760"/>
        <function-ref name="set" scoped="" ref="0x7f52431278f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5243127a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5243127c10"/>
        <function-ref name="clr" scoped="" ref="0x7f52431284d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243127da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5243123060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5243123060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431233e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5243123570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243123700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431214d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243123a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5243123bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243123d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5243122020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431221b0"/>
        <function-ref name="get" scoped="" ref="0x7f5243122340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431224d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5243122660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431227f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5243122a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5243122c10"/>
        <function-ref name="set" scoped="" ref="0x7f5243122da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5243121020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431211b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5243123890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243121340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f524311e540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f524311e540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f524311e8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f524311ea50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f524311ebe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f524311c980"/>
        <function-ref name="toggle" scoped="" ref="0x7f524311d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f524311d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f524311d340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f524311d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f524311d660"/>
        <function-ref name="get" scoped="" ref="0x7f524311d7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f524311d980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f524311db10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f524311dca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f524311c020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f524311c1b0"/>
        <function-ref name="set" scoped="" ref="0x7f524311c340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f524311c4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f524311c660"/>
        <function-ref name="clr" scoped="" ref="0x7f524311ed70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f524311c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5243119b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5243119b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5243118020"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431181b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243118340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5243116020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243118660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431187f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243118980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5243118b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5243118ca0"/>
        <function-ref name="get" scoped="" ref="0x7f5243118e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5243117020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431171b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5243117340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431175d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5243117760"/>
        <function-ref name="set" scoped="" ref="0x7f52431178f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5243117a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5243117c10"/>
        <function-ref name="clr" scoped="" ref="0x7f52431184d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243117da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5243113060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5243113060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431133e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5243113570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243113700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431114d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243113a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5243113bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243113d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5243112020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431121b0"/>
        <function-ref name="get" scoped="" ref="0x7f5243112340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431124d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5243112660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431127f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5243112a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5243112c10"/>
        <function-ref name="set" scoped="" ref="0x7f5243112da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5243111020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431111b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5243113890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243111340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f524310e6d0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f524310e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f524310ea50"/>
        <function-ref name="isInput" scoped="" ref="0x7f524310ebe0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f524310ed70"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f524310ba80"/>
        <function-ref name="toggle" scoped="" ref="0x7f524310c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f524310c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f524310c4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f524310c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f524310c7f0"/>
        <function-ref name="get" scoped="" ref="0x7f524310c980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f524310cb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f524310cca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f524310ce30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f524310b120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f524310b2b0"/>
        <function-ref name="set" scoped="" ref="0x7f524310b440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f524310b5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f524310b760"/>
        <function-ref name="clr" scoped="" ref="0x7f524310c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f524310b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5243108b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5243108b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5243107020"/>
        <function-ref name="isInput" scoped="" ref="0x7f52431071b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243107340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5243105020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243107660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52431077f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243107980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5243107b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5243107ca0"/>
        <function-ref name="get" scoped="" ref="0x7f5243107e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5243106020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52431061b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5243106340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52431065d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5243106760"/>
        <function-ref name="set" scoped="" ref="0x7f52431068f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5243106a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5243106c10"/>
        <function-ref name="clr" scoped="" ref="0x7f52431074d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243106da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5243102060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5243102060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52431023e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5243102570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243102700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52431004d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243102a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5243102bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243102d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5243101020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52431011b0"/>
        <function-ref name="get" scoped="" ref="0x7f5243101340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52431014d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5243101660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52431017f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5243101a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5243101c10"/>
        <function-ref name="set" scoped="" ref="0x7f5243101da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5243100020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52431001b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5243102890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243100340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f52430fd540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f52430fd540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52430fd8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f52430fda50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52430fdbe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52430fb980"/>
        <function-ref name="toggle" scoped="" ref="0x7f52430fc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52430fc1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52430fc340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52430fc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52430fc660"/>
        <function-ref name="get" scoped="" ref="0x7f52430fc7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52430fc980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52430fcb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52430fcca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52430fb020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52430fb1b0"/>
        <function-ref name="set" scoped="" ref="0x7f52430fb340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52430fb4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52430fb660"/>
        <function-ref name="clr" scoped="" ref="0x7f52430fdd70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52430fb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f52430f8b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f52430f8b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52430f7020"/>
        <function-ref name="isInput" scoped="" ref="0x7f52430f71b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52430f7340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52430f5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f52430f7660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52430f77f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52430f7980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52430f7b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52430f7ca0"/>
        <function-ref name="get" scoped="" ref="0x7f52430f7e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52430f6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52430f61b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52430f6340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52430f65d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52430f6760"/>
        <function-ref name="set" scoped="" ref="0x7f52430f68f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52430f6a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52430f6c10"/>
        <function-ref name="clr" scoped="" ref="0x7f52430f74d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52430f6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f52430f2060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f52430f2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52430f23e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f52430f2570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52430f2700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52430f04d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f52430f2a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52430f2bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52430f2d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52430f1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52430f11b0"/>
        <function-ref name="get" scoped="" ref="0x7f52430f1340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52430f14d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52430f1660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52430f17f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52430f1a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52430f1c10"/>
        <function-ref name="set" scoped="" ref="0x7f52430f1da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52430f0020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52430f01b0"/>
        <function-ref name="clr" scoped="" ref="0x7f52430f2890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52430f0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f52430ed540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f52430ed540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52430ed8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f52430eda50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52430edbe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52430eb980"/>
        <function-ref name="toggle" scoped="" ref="0x7f52430ec020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52430ec1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52430ec340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52430ec4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52430ec660"/>
        <function-ref name="get" scoped="" ref="0x7f52430ec7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52430ec980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52430ecb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52430ecca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52430eb020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52430eb1b0"/>
        <function-ref name="set" scoped="" ref="0x7f52430eb340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52430eb4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52430eb660"/>
        <function-ref name="clr" scoped="" ref="0x7f52430edd70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52430eb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f52430e8b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f52430e8b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52430e7020"/>
        <function-ref name="isInput" scoped="" ref="0x7f52430e71b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52430e7340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52430e5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f52430e7660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52430e77f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52430e7980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52430e7b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52430e7ca0"/>
        <function-ref name="get" scoped="" ref="0x7f52430e7e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52430e6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52430e61b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52430e6340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52430e65d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52430e6760"/>
        <function-ref name="set" scoped="" ref="0x7f52430e68f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52430e6a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52430e6c10"/>
        <function-ref name="clr" scoped="" ref="0x7f52430e74d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52430e6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f52430e1060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f52430e1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52430e13e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f52430e1570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52430e1700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52430df4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f52430e1a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52430e1bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52430e1d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52430e0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52430e01b0"/>
        <function-ref name="get" scoped="" ref="0x7f52430e0340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52430e04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52430e0660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52430e07f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52430e0a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52430e0c10"/>
        <function-ref name="set" scoped="" ref="0x7f52430e0da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52430df020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52430df1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f52430e1890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52430df340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f52430dc540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f52430dc540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52430dc8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f52430dca50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52430dcbe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52430da980"/>
        <function-ref name="toggle" scoped="" ref="0x7f52430db020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52430db1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52430db340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52430db4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52430db660"/>
        <function-ref name="get" scoped="" ref="0x7f52430db7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52430db980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52430dbb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52430dbca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52430da020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52430da1b0"/>
        <function-ref name="set" scoped="" ref="0x7f52430da340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52430da4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52430da660"/>
        <function-ref name="clr" scoped="" ref="0x7f52430dcd70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52430da7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f52430d7b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f52430d7b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52430d6020"/>
        <function-ref name="isInput" scoped="" ref="0x7f52430d61b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52430d6340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52430d4020"/>
        <function-ref name="toggle" scoped="" ref="0x7f52430d6660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52430d67f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52430d6980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52430d6b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52430d6ca0"/>
        <function-ref name="get" scoped="" ref="0x7f52430d6e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52430d5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52430d51b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52430d5340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52430d55d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52430d5760"/>
        <function-ref name="set" scoped="" ref="0x7f52430d58f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52430d5a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52430d5c10"/>
        <function-ref name="clr" scoped="" ref="0x7f52430d64d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52430d5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f52430d1060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f52430d1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52430d13e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f52430d1570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52430d1700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52430cf4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f52430d1a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52430d1bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52430d1d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52430d0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52430d01b0"/>
        <function-ref name="get" scoped="" ref="0x7f52430d0340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52430d04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52430d0660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52430d07f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52430d0a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52430d0c10"/>
        <function-ref name="set" scoped="" ref="0x7f52430d0da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52430cf020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52430cf1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f52430d1890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52430cf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f52430cc740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f52430cc740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52430ccac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f52430ccc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52430ccde0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52430caa80"/>
        <function-ref name="toggle" scoped="" ref="0x7f52430cb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52430cb340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52430cb4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52430cb660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52430cb7f0"/>
        <function-ref name="get" scoped="" ref="0x7f52430cb980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52430cbb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52430cbca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52430cbe30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52430ca120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52430ca2b0"/>
        <function-ref name="set" scoped="" ref="0x7f52430ca440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52430ca5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52430ca760"/>
        <function-ref name="clr" scoped="" ref="0x7f52430cb020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52430ca8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f52430c7b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f52430c7b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52430c6020"/>
        <function-ref name="isInput" scoped="" ref="0x7f52430c61b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52430c6340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52430c4020"/>
        <function-ref name="toggle" scoped="" ref="0x7f52430c6660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52430c67f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52430c6980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52430c6b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52430c6ca0"/>
        <function-ref name="get" scoped="" ref="0x7f52430c6e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52430c5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52430c51b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52430c5340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52430c55d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52430c5760"/>
        <function-ref name="set" scoped="" ref="0x7f52430c58f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52430c5a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52430c5c10"/>
        <function-ref name="clr" scoped="" ref="0x7f52430c64d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52430c5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f52430c1060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f52430c1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52430c13e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f52430c1570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52430c1700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52430bf4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f52430c1a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52430c1bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52430c1d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52430c0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52430c01b0"/>
        <function-ref name="get" scoped="" ref="0x7f52430c0340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52430c04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52430c0660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52430c07f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52430c0a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52430c0c10"/>
        <function-ref name="set" scoped="" ref="0x7f52430c0da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52430bf020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52430bf1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f52430c1890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52430bf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f52430bc540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f52430bc540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52430bc8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f52430bca50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52430bcbe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52430b9980"/>
        <function-ref name="toggle" scoped="" ref="0x7f52430ba020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52430ba1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52430ba340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52430ba4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52430ba660"/>
        <function-ref name="get" scoped="" ref="0x7f52430ba7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52430ba980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52430bab10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52430baca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52430b9020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52430b91b0"/>
        <function-ref name="set" scoped="" ref="0x7f52430b9340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52430b94d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52430b9660"/>
        <function-ref name="clr" scoped="" ref="0x7f52430bcd70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52430b97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f52430b6b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f52430b6b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52430b5020"/>
        <function-ref name="isInput" scoped="" ref="0x7f52430b51b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52430b5340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52430b3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f52430b5660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52430b57f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52430b5980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52430b5b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52430b5ca0"/>
        <function-ref name="get" scoped="" ref="0x7f52430b5e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52430b4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52430b41b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52430b4340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52430b45d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52430b4760"/>
        <function-ref name="set" scoped="" ref="0x7f52430b48f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52430b4a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52430b4c10"/>
        <function-ref name="clr" scoped="" ref="0x7f52430b54d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52430b4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f52430b0060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f52430b0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52430b03e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f52430b0570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52430b0700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52430ae4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f52430b0a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52430b0bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52430b0d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52430af020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52430af1b0"/>
        <function-ref name="get" scoped="" ref="0x7f52430af340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52430af4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52430af660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52430af7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52430afa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52430afc10"/>
        <function-ref name="set" scoped="" ref="0x7f52430afda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52430ae020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52430ae1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f52430b0890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52430ae340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f52430ab540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f52430ab540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52430ab8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f52430aba50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52430abbe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52430a9980"/>
        <function-ref name="toggle" scoped="" ref="0x7f52430aa020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52430aa1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52430aa340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52430aa4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52430aa660"/>
        <function-ref name="get" scoped="" ref="0x7f52430aa7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52430aa980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52430aab10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52430aaca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52430a9020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52430a91b0"/>
        <function-ref name="set" scoped="" ref="0x7f52430a9340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52430a94d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52430a9660"/>
        <function-ref name="clr" scoped="" ref="0x7f52430abd70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52430a97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f52430a6b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f52430a6b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52430a5020"/>
        <function-ref name="isInput" scoped="" ref="0x7f52430a51b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52430a5340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52430a3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f52430a5660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52430a57f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52430a5980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52430a5b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52430a5ca0"/>
        <function-ref name="get" scoped="" ref="0x7f52430a5e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52430a4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52430a41b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52430a4340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52430a45d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52430a4760"/>
        <function-ref name="set" scoped="" ref="0x7f52430a48f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52430a4a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52430a4c10"/>
        <function-ref name="clr" scoped="" ref="0x7f52430a54d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52430a4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f52430a0060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f52430a0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52430a03e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f52430a0570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52430a0700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f524309e4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f52430a0a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52430a0bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52430a0d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f524309f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f524309f1b0"/>
        <function-ref name="get" scoped="" ref="0x7f524309f340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f524309f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f524309f660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f524309f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f524309fa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f524309fc10"/>
        <function-ref name="set" scoped="" ref="0x7f524309fda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f524309e020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f524309e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f52430a0890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f524309e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f524309b540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f524309b540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f524309b8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f524309ba50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f524309bbe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5243099980"/>
        <function-ref name="toggle" scoped="" ref="0x7f524309a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f524309a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f524309a340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f524309a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f524309a660"/>
        <function-ref name="get" scoped="" ref="0x7f524309a7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f524309a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f524309ab10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f524309aca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5243099020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52430991b0"/>
        <function-ref name="set" scoped="" ref="0x7f5243099340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52430994d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5243099660"/>
        <function-ref name="clr" scoped="" ref="0x7f524309bd70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52430997f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5243096b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5243096b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5243095020"/>
        <function-ref name="isInput" scoped="" ref="0x7f52430951b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243095340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5243093020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243095660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52430957f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243095980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5243095b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5243095ca0"/>
        <function-ref name="get" scoped="" ref="0x7f5243095e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5243094020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52430941b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5243094340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52430945d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5243094760"/>
        <function-ref name="set" scoped="" ref="0x7f52430948f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5243094a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5243094c10"/>
        <function-ref name="clr" scoped="" ref="0x7f52430954d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243094da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5243090060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5243090060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52430903e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5243090570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243090700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f524308d4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243090a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5243090bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243090d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f524308e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f524308e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f524308e340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f524308e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f524308e660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f524308e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f524308ea80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f524308ec10"/>
        <function-ref name="set" scoped="" ref="0x7f524308eda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f524308d020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f524308d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5243090890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f524308d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f524308a540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f524308a540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f524308a8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f524308aa50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f524308abe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5243088980"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243089020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52430891b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243089340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52430894d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5243089660"/>
        <function-ref name="get" scoped="" ref="0x7f52430897f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5243089980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5243089b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5243089ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5243088020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52430881b0"/>
        <function-ref name="set" scoped="" ref="0x7f5243088340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52430884d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5243088660"/>
        <function-ref name="clr" scoped="" ref="0x7f524308ad70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52430887f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5243085b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5243085b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5243084020"/>
        <function-ref name="isInput" scoped="" ref="0x7f52430841b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243084340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5243082020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243084660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52430847f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243084980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5243084b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5243084ca0"/>
        <function-ref name="get" scoped="" ref="0x7f5243084e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5243083020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52430831b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5243083340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52430835d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5243083760"/>
        <function-ref name="set" scoped="" ref="0x7f52430838f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5243083a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5243083c10"/>
        <function-ref name="clr" scoped="" ref="0x7f52430844d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243083da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f524307f060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f524307f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f524307f3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f524307f570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f524307f700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f524307d4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f524307fa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f524307fbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f524307fd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f524307e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f524307e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f524307e340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f524307e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f524307e660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f524307e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f524307ea80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f524307ec10"/>
        <function-ref name="set" scoped="" ref="0x7f524307eda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f524307d020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f524307d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f524307f890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f524307d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f524307a540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f524307a540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f524307a8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f524307aa50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f524307abe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5243078980"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243079020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52430791b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243079340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52430794d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5243079660"/>
        <function-ref name="get" scoped="" ref="0x7f52430797f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5243079980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5243079b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5243079ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5243078020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52430781b0"/>
        <function-ref name="set" scoped="" ref="0x7f5243078340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52430784d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5243078660"/>
        <function-ref name="clr" scoped="" ref="0x7f524307ad70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52430787f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5243075b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5243075b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5243074020"/>
        <function-ref name="isInput" scoped="" ref="0x7f52430741b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243074340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5243072020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243074660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52430747f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243074980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5243074b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5243074ca0"/>
        <function-ref name="get" scoped="" ref="0x7f5243074e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5243073020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52430731b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5243073340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52430735d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5243073760"/>
        <function-ref name="set" scoped="" ref="0x7f52430738f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5243073a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5243073c10"/>
        <function-ref name="clr" scoped="" ref="0x7f52430744d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243073da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f524306f060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f524306f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f524306f3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f524306f570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f524306f700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f524306d4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f524306fa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f524306fbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f524306fd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f524306e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f524306e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f524306e340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f524306e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f524306e660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f524306e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f524306ea80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f524306ec10"/>
        <function-ref name="set" scoped="" ref="0x7f524306eda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f524306d020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f524306d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f524306f890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f524306d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f524306a540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f524306a540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f524306a8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f524306aa50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f524306abe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5243068980"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243069020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52430691b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243069340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52430694d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5243069660"/>
        <function-ref name="get" scoped="" ref="0x7f52430697f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5243069980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5243069b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5243069ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5243068020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52430681b0"/>
        <function-ref name="set" scoped="" ref="0x7f5243068340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52430684d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5243068660"/>
        <function-ref name="clr" scoped="" ref="0x7f524306ad70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52430687f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5243064b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5243064b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5243063020"/>
        <function-ref name="isInput" scoped="" ref="0x7f52430631b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243063340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5243061020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243063660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52430637f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243063980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5243063b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5243063ca0"/>
        <function-ref name="get" scoped="" ref="0x7f5243063e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5243062020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52430621b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5243062340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52430625d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5243062760"/>
        <function-ref name="set" scoped="" ref="0x7f52430628f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5243062a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5243062c10"/>
        <function-ref name="clr" scoped="" ref="0x7f52430634d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243062da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f524305e060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f524305e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f524305e3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f524305e570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f524305e700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f524305c4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f524305ea20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f524305ebb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f524305ed40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f524305d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f524305d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f524305d340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f524305d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f524305d660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f524305d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f524305da80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f524305dc10"/>
        <function-ref name="set" scoped="" ref="0x7f524305dda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f524305c020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f524305c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f524305e890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f524305c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5243059540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5243059540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52430598c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5243059a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243059be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5243057980"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243058020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52430581b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243058340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52430584d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5243058660"/>
        <function-ref name="get" scoped="" ref="0x7f52430587f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5243058980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5243058b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5243058ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5243057020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52430571b0"/>
        <function-ref name="set" scoped="" ref="0x7f5243057340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52430574d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5243057660"/>
        <function-ref name="clr" scoped="" ref="0x7f5243059d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52430577f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f5243054b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f5243054b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5243053020"/>
        <function-ref name="isInput" scoped="" ref="0x7f52430531b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5243053340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5243051020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5243053660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52430537f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5243053980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5243053b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5243053ca0"/>
        <function-ref name="get" scoped="" ref="0x7f5243053e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5243052020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52430521b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5243052340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52430525d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5243052760"/>
        <function-ref name="set" scoped="" ref="0x7f52430528f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5243052a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5243052c10"/>
        <function-ref name="clr" scoped="" ref="0x7f52430534d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5243052da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f524304e060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f524304e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f524304e3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f524304e570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f524304e700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f524304c4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f524304ea20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f524304ebb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f524304ed40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f524304d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f524304d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f524304d340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f524304d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f524304d660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f524304d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f524304da80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f524304dc10"/>
        <function-ref name="set" scoped="" ref="0x7f524304dda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f524304c020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f524304c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f524304e890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f524304c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f524304bb40" loc="42:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f524304bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5243048020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7f524303ed70" loc="43:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f524303ed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7f5243047e00"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7f5243046020"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f52430474a0"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f5243047630"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7f52430477c0"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f5243047950"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f5243047ae0"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f5243047c70"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f5243047180"/>
        <function-ref name="node_id" scoped="" ref="0x7f5243047310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f5243039380" loc="7:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f5243039380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5243039700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5243046e40" loc="4:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5243046e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f524303b1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f524303ab80" loc="6:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f524303ab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5243039020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f5243039a60" loc="8:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f5243039a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5243039de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7f524303b4d0" loc="5:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f524303b4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7f524303a660"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7f524303a7f0"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f524303bb70"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f524303bd00"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7f524303a020"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f524303a1b0"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f524303a340"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f524303a4d0"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f524303b850"/>
        <function-ref name="node_id" scoped="" ref="0x7f524303b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5243021450" loc="2:../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5243021450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f52430217d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f524303c900" loc="39:../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f524303c900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f524303cc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f5243001de0" loc="40:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f5243001de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f5243005c70"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f5243005310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f52430054a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f5243005630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f5243005180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f52430057c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f5243005950"/>
        <function-ref name="initClocks" scoped="" ref="0x7f5243005ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5243009850" loc="39:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5243009850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5243009bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f5242ff0830" loc="203:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f5242ff0830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f5242fef7f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f5242ff0d40"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f5242fef020"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f5242fef1b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f5242ff0bb0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f5242fef340"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f5242fef4d0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f5242fef660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f5242fefaf0" loc="204:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f5242fefaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f5242fefe70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5242ff01c0" loc="202:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5242ff01c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5242ff0540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f524348bc80" loc="55:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f524348bc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f52436660a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f52435e89a0" loc="51:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f52435e89a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f52435e8d20"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f5243703020"/>
        <function-ref name="sleep" scoped="" ref="0x7f52437031b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f52435293d0" loc="52:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f52435293d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f5243529750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f52430078b0" loc="39:../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f52430078b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f5242fba7f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f5243007dc0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f5242fba020"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f5242fba1b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f5243007c30"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f5242fba340"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f5242fba4d0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f5242fba660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5242f27c50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5242f27c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5242f25020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5242f251b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5242f25340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5242f23020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5242f25660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5242f257f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5242f25980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5242f25b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5242f25ca0"/>
        <function-ref name="get" scoped="" ref="0x7f5242f25e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5242f24020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5242f241b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5242f24340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5242f245d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5242f24760"/>
        <function-ref name="set" scoped="" ref="0x7f5242f248f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5242f24a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5242f24c10"/>
        <function-ref name="clr" scoped="" ref="0x7f5242f254d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5242f24da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5242f389e0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5242f389e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5242f38d60"/>
        <function-ref name="isInput" scoped="" ref="0x7f5242f27020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5242f271b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5242f27340"/>
        <function-ref name="get" scoped="" ref="0x7f5242f274d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5242f27660"/>
        <function-ref name="set" scoped="" ref="0x7f5242f277f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5242f27980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5242f202f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5242f202f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5242f20670"/>
        <function-ref name="isInput" scoped="" ref="0x7f5242f20800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5242f20990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5242f1e660"/>
        <function-ref name="toggle" scoped="" ref="0x7f5242f20cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5242f20e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5242f1f020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5242f1f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5242f1f340"/>
        <function-ref name="get" scoped="" ref="0x7f5242f1f4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5242f1f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5242f1f7f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5242f1f980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5242f1fc10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5242f1fda0"/>
        <function-ref name="set" scoped="" ref="0x7f5242f1e020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5242f1e1b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5242f1e340"/>
        <function-ref name="clr" scoped="" ref="0x7f5242f20b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5242f1e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5242f21020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5242f21020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5242f213a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5242f21530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5242f216c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5242f21850"/>
        <function-ref name="get" scoped="" ref="0x7f5242f219e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5242f21b70"/>
        <function-ref name="set" scoped="" ref="0x7f5242f21d00"/>
        <function-ref name="clr" scoped="" ref="0x7f5242f20020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5242f1b7a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5242f1b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5242f1bb20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5242f1bcb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5242f1be40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5242f19a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f5242f1a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5242f1a340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5242f1a4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5242f1a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5242f1a7f0"/>
        <function-ref name="get" scoped="" ref="0x7f5242f1a980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5242f1ab10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5242f1aca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5242f1ae30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5242f19120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5242f192b0"/>
        <function-ref name="set" scoped="" ref="0x7f5242f19440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5242f195d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5242f19760"/>
        <function-ref name="clr" scoped="" ref="0x7f5242f1a020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5242f198f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5242f1c630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5242f1c630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5242f1c9b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5242f1cb40"/>
        <function-ref name="toggle" scoped="" ref="0x7f5242f1ccd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5242f1ce60"/>
        <function-ref name="get" scoped="" ref="0x7f5242f1b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5242f1b1b0"/>
        <function-ref name="set" scoped="" ref="0x7f5242f1b340"/>
        <function-ref name="clr" scoped="" ref="0x7f5242f1b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f5242f0dc00" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f5242f0dc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5242f0a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f5242f0d500" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f5242f0d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f5242f0d880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f5242f06aa0" loc="69:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f5242f06aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5242f06e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f5242f07280" loc="66:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f5242f07280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f5242f07600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f5242f063a0" loc="68:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f5242f063a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5242f06720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f5242f078f0" loc="67:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f5242f078f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5242f07c70"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f5242f07e00"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f5242f06020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f5243803940" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f5243803940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5243803cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f5243803e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f52438101e0" loc="46:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f52438101e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5243810560"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f52438106f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f5243810880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f52433b4040" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f52433b4040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f52433b43c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f52433b4550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f52433af490" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f52433af490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f52433af810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f52433af9a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f52433afb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f52433b5140" loc="54:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f52433b5140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f52433b54c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f52433b5650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f52433b57e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5242f0b7a0" loc="61:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f5242f0b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5242f0bb20"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5242f0bcb0"/>
        <function-ref name="start" scoped="" ref="0x7f5242f0be40"/>
        <function-ref name="stop" scoped="" ref="0x7f5242efa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5242efa7f0" loc="63:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f5242efa7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5243314210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5242efab70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5242efad00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5242ef9020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5242ef91b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5242ef9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f5242ef7880" loc="65:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f5242ef7880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5243314210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5242ef7c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5242ef6020" loc="67:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f5242ef6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242ef63a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5242ef6530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5242ef66c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5242ef6850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5242ef69e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f5242ee6430" loc="70:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f5242ee6430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5242ee2b00"/>
        <function-ref name="clear" scoped="" ref="0x7f5242ed52a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f5242ee23d0"/>
        <function-ref name="set" scoped="" ref="0x7f5242ed59d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f5242ec7430" loc="72:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f5242ec7430"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f5242ec77b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f5242ec7940"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f5242ec7ad0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f5242ec7c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5242ef9b20" loc="64:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5242ef9b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5243314210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5242ef7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f5242edc350" loc="69:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5242edc350"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5242edc6d0"/>
        <function-ref name="noAck" scoped="" ref="0x7f5242edc860"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5242edc9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5242ef5020" loc="68:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f5242ef5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5242ef53a0"/>
        <function-ref name="source" scoped="" ref="0x7f5242ef5530"/>
        <function-ref name="address" scoped="" ref="0x7f5242ef56c0"/>
        <function-ref name="destination" scoped="" ref="0x7f5242ef5850"/>
        <function-ref name="setSource" scoped="" ref="0x7f5242ef59e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5242ef5b70"/>
        <function-ref name="type" scoped="" ref="0x7f5242ef5d00"/>
        <function-ref name="setType" scoped="" ref="0x7f5242ef4020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5242ef41b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5242ef4340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5242ef44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f5242ed3660" loc="71:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f5242ed3660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368640"/>
            <typename><typedef-ref name="TMilli" ref="0x7f52433689b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5242ed2ce0"/>
        <function-ref name="clear" scoped="" ref="0x7f5242ed1460"/>
        <function-ref name="isValid" scoped="" ref="0x7f5242ed25b0"/>
        <function-ref name="set" scoped="" ref="0x7f5242ed1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5242eba080" loc="55:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f5242eba080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5242eba400"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5242eba590"/>
        <function-ref name="start" scoped="" ref="0x7f5242eba720"/>
        <function-ref name="stop" scoped="" ref="0x7f5242eba8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f5242eaa020" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f5242eaa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5243314210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f5242eaa3a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f5242eaa530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f5242eaa6c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f5242eaa850"/>
        <function-ref name="setCca" scoped="" ref="0x7f5242eaa9e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f5242eaab70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f5242ea0020" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f5242ea0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5243314210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f5242ea04a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5242eb6c20" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f5242eb6c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242eb4020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5242eb41b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5242eb4340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5242eb44d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5242eb4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5242eb91d0" loc="56:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f5242eb91d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5243314210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5242eb9550"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5242eb96e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5242eb9870"/>
        <function-ref name="cancel" scoped="" ref="0x7f5242eb9a00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5242eb9b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f5242eb7020" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f5242eb7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5243314210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5242eb73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f5242eacdc0" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f5242eacdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f5242eb3180"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f5242eb3310"/>
        <function-ref name="getRssi" scoped="" ref="0x7f5242eb34a0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f5242eb3630"/>
        <function-ref name="getPower" scoped="" ref="0x7f5242eb37c0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f5242eb3950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f5242eaae70" loc="65:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f5242eaae70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f5242ea8220"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f5242ea83b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f5242ea8540"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f5242ea86d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5242eb83f0" loc="57:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5242eb83f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5243314210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5242eb8770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f5242eb3c80" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5242eb3c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5242eb20a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f5242eb2230"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5242eb23c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f5242e970d0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f5242e970d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f5242e97450"/>
        <function-ref name="setRetries" scoped="" ref="0x7f5242e975e0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f5242e97770"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f5242e97900"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f5242e97a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5242eb7650" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f5242eb7650"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5242eb79d0"/>
        <function-ref name="source" scoped="" ref="0x7f5242eb7b60"/>
        <function-ref name="address" scoped="" ref="0x7f5242eb7cf0"/>
        <function-ref name="destination" scoped="" ref="0x7f5242eb7e80"/>
        <function-ref name="setSource" scoped="" ref="0x7f5242eb6030"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5242eb61c0"/>
        <function-ref name="type" scoped="" ref="0x7f5242eb6350"/>
        <function-ref name="setType" scoped="" ref="0x7f5242eb64e0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5242eb6670"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5242eb6800"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5242eb6990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f5242ea9e00" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5242ea9e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f5242eab1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5242e91340" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f5242e91340"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5242e916c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5242e91850"/>
        <function-ref name="start" scoped="" ref="0x7f5242e919e0"/>
        <function-ref name="stop" scoped="" ref="0x7f5242e91b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f5242e7e9d0" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5242e7e9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f5242e7ed50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f5242e7db70" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f5242e7db70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f5242e7b020"/>
        <function-ref name="setRetries" scoped="" ref="0x7f5242e7b1b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f5242e7b340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f5242e7b4d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f5242e7b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f5242e7f140" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f5242e7f140"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f5242e7f4c0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f5242e7f650"/>
        <function-ref name="getRssi" scoped="" ref="0x7f5242e7f7e0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f5242e7f970"/>
        <function-ref name="getPower" scoped="" ref="0x7f5242e7fb00"/>
        <function-ref name="getLqi" scoped="" ref="0x7f5242e7fc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f5242e89d10" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f5242e89d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5242e810e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5242e81270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5242e81400"/>
        <function-ref name="cancel" scoped="" ref="0x7f5242e81590"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5242e81720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f5242e7d080" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f5242e7d080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f5242e7d400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f5242e7d590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f5242e7d720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f5242e7d8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f5242e8e820" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f5242e8e820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5242e8eba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f5242e7e020" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5242e7e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5242e7e3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f5242e7e530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5242e7e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5242e8a770" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5242e8a770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5242e8aaf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5242e8ac80"/>
        <function-ref name="request" scoped="" ref="0x7f5242e8ae10"/>
        <function-ref name="granted" scoped="" ref="0x7f5242e8f020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5242e8f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f5242e80a30" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f5242e80a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5242e80db0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5242e8e020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5242e8e1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5242e8e340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5242e8e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f5242e89020" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f5242e89020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242e893a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5242e89530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5242e896c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5242e89850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5242e899e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f5242e81a90" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f5242e81a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5242e81e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5242e78390" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f5242e78390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5242e78710"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5242e788a0"/>
        <function-ref name="start" scoped="" ref="0x7f5242e78a30"/>
        <function-ref name="stop" scoped="" ref="0x7f5242e78bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f5242e76330" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f5242e76330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f5242e766b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f5242e76840"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f5242e769d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f5242e76b60"/>
        <function-ref name="setCca" scoped="" ref="0x7f5242e76cf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f5242e76e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5242e78e80" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5242e78e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5242e77220"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5242e773b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5242e77540"/>
        <function-ref name="cancel" scoped="" ref="0x7f5242e776d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5242e77860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5242e77b40" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5242e77b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5242e76020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5242e75e70" loc="39:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f5242e75e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5242e72220"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5242e723b0"/>
        <function-ref name="start" scoped="" ref="0x7f5242e72540"/>
        <function-ref name="stop" scoped="" ref="0x7f5242e726d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f5242e717e0" loc="41:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f5242e717e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f5242e71b60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f5242e71cf0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f5242e71e80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f5242e70030"/>
        <function-ref name="setCca" scoped="" ref="0x7f5242e701c0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f5242e70350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f5242e66060" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f5242e66060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f5242e663e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f5242e66570"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f5242e66700"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f5242e66890"/>
        <function-ref name="setCca" scoped="" ref="0x7f5242e66a20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f5242e66bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f5242e5b330" loc="50:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f5242e5b330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f5242e5b6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f5242e5b840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f5242e5b9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f5242e5bb60"/>
        <function-ref name="getPower" scoped="" ref="0x7f5242e5bcf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f5242e5be80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f5242e5d2a0" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f5242e5d2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5242e5d620"/>
        <function-ref name="cancel" scoped="" ref="0x7f5242e5d7b0"/>
        <function-ref name="modify" scoped="" ref="0x7f5242e5d940"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5242e5dad0"/>
        <function-ref name="resend" scoped="" ref="0x7f5242e5dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5242e72990" loc="40:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5242e72990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5242e72d10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5242e71020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5242e711b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5242e71340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5242e714d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f5242e5a420" loc="48:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f5242e5a420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f5242e5a7a0"/>
        <function-ref name="rand32" scoped="" ref="0x7f5242e5a930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f5242e65760" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f5242e65760"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5242e65ae0"/>
        <function-ref name="stop" scoped="" ref="0x7f5242e65c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f5242e53920" loc="51:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5242e53920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f5242e53ca0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f5242e53e30"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f5242e58020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f5242e68b50" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f5242e68b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f5242e6e020"/>
        <function-ref name="rfOff" scoped="" ref="0x7f5242e6e1b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f5242e6e340"/>
        <function-ref name="startVReg" scoped="" ref="0x7f5242e6e4d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f5242e6e660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f5242e6e7f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f5242e6e980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f5242e6eb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5242e5abf0" loc="49:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5242e5abf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5242e5c020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5242e5c1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f5242e5c340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5242e5c4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5242e5c660"/>
        <function-ref name="get" scoped="" ref="0x7f5242e5c7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5242e5c980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5242e5b020"/>
        <function-ref name="set" scoped="" ref="0x7f5242e5cb10"/>
        <function-ref name="led0On" scoped="" ref="0x7f5242e5cca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f5242e5ce30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f5242e70640" loc="43:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5242e70640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5242e709c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5242e70b50"/>
        <function-ref name="request" scoped="" ref="0x7f5242e70ce0"/>
        <function-ref name="granted" scoped="" ref="0x7f5242e70e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5242e6f030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f5242e57110" loc="52:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7f5242e57110"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f5242e57590"/>
        <function-ref name="toIdle" scoped="" ref="0x7f5242e57720"/>
        <function-ref name="isState" scoped="" ref="0x7f5242e578b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f5242e57a40"/>
        <function-ref name="requestState" scoped="" ref="0x7f5242e57bd0"/>
        <function-ref name="forceState" scoped="" ref="0x7f5242e57d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f5242e49b70" loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7f5242e49b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5242e48020"/>
        <function-ref name="runTask" scoped="" ref="0x7f5242e481b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f5242e4aba0" loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7f5242e4aba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5242e49020"/>
        <function-ref name="runTask" scoped="" ref="0x7f5242e491b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f5242e4bc20" loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7f5242e4bc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5242e4a020"/>
        <function-ref name="runTask" scoped="" ref="0x7f5242e4a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f5242df0dc0" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f5242df0dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f5242dfd180"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f5242dfd310"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f5242dfd4a0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f5242dfd630"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f5242dfd7c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f5242dfd950"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5242dfdae0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f5242dfdc70"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f5242dfde00"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f5242dfc020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f5242dfc1b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f5242dfc340"/>
        <function-ref name="sync" scoped="" ref="0x7f5242dfc4d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5242dfc760"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f5242dfc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f5242ded0c0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f5242ded0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242dedcb0"/>
        <function-ref name="readDone" scoped="" ref="0x7f5242dec170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f5242dfcbf0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f5242dfcbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f5242def020"/>
        <function-ref name="rfOff" scoped="" ref="0x7f5242def1b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f5242def340"/>
        <function-ref name="startVReg" scoped="" ref="0x7f5242def4d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f5242def660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f5242def7f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f5242def980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f5242defb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5242e01950" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5242e01950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5242e01cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5242e01e60"/>
        <function-ref name="request" scoped="" ref="0x7f5242dfe020"/>
        <function-ref name="granted" scoped="" ref="0x7f5242dfe1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5242dfe340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f5242de6970" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f5242de6970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f5242de6cf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f5242de6e80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f5242de5030"/>
        <function-ref name="syncDone" scoped="" ref="0x7f5242de51c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f5242de5350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f5242de54e0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5242de5670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f5242de5800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f5242de5990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f5242de5b20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f5242de5cb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f5242de5e40"/>
        <function-ref name="sync" scoped="" ref="0x7f5242de4020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5242de42b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f5242de4440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f5242dbf8e0" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f5242dbf8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242dbfc60"/>
        <function-ref name="write" scoped="" ref="0x7f5242dbfdf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f5242de0020" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f5242de0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f5242de03a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f5242dd8d90" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7f5242dd8d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5242dd6670"/>
        <function-ref name="fired" scoped="" ref="0x7f5242dd75d0"/>
        <function-ref name="startAt" scoped="" ref="0x7f5242dd6020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5242dd7a90"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5242dd6b30"/>
        <function-ref name="start" scoped="" ref="0x7f5242ddebc0"/>
        <function-ref name="stop" scoped="" ref="0x7f5242dd7110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f5242dc25f0" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5242dc25f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242dc2970"/>
        <function-ref name="write" scoped="" ref="0x7f5242dc2b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f5242dd3380" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f5242dd3380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5242dd3700"/>
        <function-ref name="isInput" scoped="" ref="0x7f5242dd3890"/>
        <function-ref name="toggle" scoped="" ref="0x7f5242dd3a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5242dd3bb0"/>
        <function-ref name="get" scoped="" ref="0x7f5242dd3d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5242dd2020"/>
        <function-ref name="set" scoped="" ref="0x7f5242dd21b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5242dd2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f5242de3b40" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f5242de3b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242de2750"/>
        <function-ref name="readDone" scoped="" ref="0x7f5242de2bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f5242dad820" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7f5242dad820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5242dadba0"/>
        <function-ref name="runTask" scoped="" ref="0x7f5242dadd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f5242dbe1c0" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f5242dbe1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242dbe540"/>
        <function-ref name="write" scoped="" ref="0x7f5242dbe6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f5242dbea70" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f5242dbea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242dbedf0"/>
        <function-ref name="write" scoped="" ref="0x7f5242dbd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f5242dc73d0" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f5242dc73d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242dc7750"/>
        <function-ref name="write" scoped="" ref="0x7f5242dc78e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f5242dc8810" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f5242dc8810"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f5242dc8b90"/>
        <function-ref name="changed" scoped="" ref="0x7f5242dc8d20"/>
        <function-ref name="amGroup" scoped="" ref="0x7f5242dcf020"/>
        <function-ref name="setAddress" scoped="" ref="0x7f5242dcf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f5242dd4060" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f5242dd4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5242dd43e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5242dd4570"/>
        <function-ref name="toggle" scoped="" ref="0x7f5242dd4700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5242dd4890"/>
        <function-ref name="get" scoped="" ref="0x7f5242dd4a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5242dd4bb0"/>
        <function-ref name="set" scoped="" ref="0x7f5242dd4d40"/>
        <function-ref name="clr" scoped="" ref="0x7f5242dd3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f5242dbc120" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5242dbc120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5242dbc6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f5242dd26a0" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f5242dd26a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5242dd2a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5242dd2bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5242dd2d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5242dd1020"/>
        <function-ref name="get" scoped="" ref="0x7f5242dd11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5242dd1340"/>
        <function-ref name="set" scoped="" ref="0x7f5242dd14d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5242dd1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5242de7510" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5242de7510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5242de7890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f5242dbf020" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5242dbf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242dbf3a0"/>
        <function-ref name="write" scoped="" ref="0x7f5242dbf530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f5242dbca40" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f5242dbca40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5242dbcdc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f5242dbb1d0" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f5242dbb1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5242dbb550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5242dbb6e0"/>
        <function-ref name="request" scoped="" ref="0x7f5242dbb870"/>
        <function-ref name="granted" scoped="" ref="0x7f5242dbba00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5242dbbb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f5242db8d90" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7f5242db8d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5242db7180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5242db7310"/>
        <function-ref name="request" scoped="" ref="0x7f5242db74a0"/>
        <function-ref name="granted" scoped="" ref="0x7f5242db7630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5242db77c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f5242de4740" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f5242de4740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f5242de4ac0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f5242de4c50"/>
        <function-ref name="rxOn" scoped="" ref="0x7f5242de4de0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f5242de3020"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f5242de31b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f5242de3340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f5242de34d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f5242de3660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f5242dc7c80" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f5242dc7c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242dc20a0"/>
        <function-ref name="write" scoped="" ref="0x7f5242dc2230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f5242dc0b00" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f5242dc0b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242dc0e80"/>
        <function-ref name="write" scoped="" ref="0x7f5242dc7030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f5242db92b0" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f5242db92b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5242db9630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5242db7a80" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5242db7a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5242db7e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5242db6020"/>
        <function-ref name="led1On" scoped="" ref="0x7f5242db61b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5242db6340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5242db64d0"/>
        <function-ref name="get" scoped="" ref="0x7f5242db6660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5242db67f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5242db6e30"/>
        <function-ref name="set" scoped="" ref="0x7f5242db6980"/>
        <function-ref name="led0On" scoped="" ref="0x7f5242db6b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f5242db6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f5242dae940" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7f5242dae940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5242daecc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f5242daee50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5242de7b80" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5242de7b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5242de6020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5242de61b0"/>
        <function-ref name="request" scoped="" ref="0x7f5242de6340"/>
        <function-ref name="granted" scoped="" ref="0x7f5242de64d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5242de6660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f5242dcc520" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f5242dcc520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242dcc8a0"/>
        <function-ref name="write" scoped="" ref="0x7f5242dcca30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f5242dc4a90" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f5242dc4a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242dcc020"/>
        <function-ref name="write" scoped="" ref="0x7f5242dcc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f5242dd00e0" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f5242dd00e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5242dd0460"/>
        <function-ref name="disable" scoped="" ref="0x7f5242dd05f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f5242dd0780"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f5242dd0910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f5242db8020" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7f5242db8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5242db83a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5242db8530"/>
        <function-ref name="request" scoped="" ref="0x7f5242db86c0"/>
        <function-ref name="granted" scoped="" ref="0x7f5242db8850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5242db89e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f5242db99c0" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f5242db99c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5242db9d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5242d37c70" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5242d37c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5242d34020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f5242d34690" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f5242d34690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5242d30020"/>
        <function-ref name="fired" scoped="" ref="0x7f5242d31020"/>
        <function-ref name="startAt" scoped="" ref="0x7f5242d319a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5242d314e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5242d304e0"/>
        <function-ref name="start" scoped="" ref="0x7f5242d335b0"/>
        <function-ref name="stop" scoped="" ref="0x7f5242d33ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5242d2fd40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5242d2fd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5242d2e0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f5242d2e5f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f5242d2e5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5242ae9e50"/>
        <function-ref name="fired" scoped="" ref="0x7f5242aeae00"/>
        <function-ref name="startAt" scoped="" ref="0x7f5242ae9800"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5242ae9340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5242ae7340"/>
        <function-ref name="start" scoped="" ref="0x7f5242aea430"/>
        <function-ref name="stop" scoped="" ref="0x7f5242aea940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f5241707a00" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f5241707a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f52417032a0"/>
        <function-ref name="fired" scoped="" ref="0x7f52417042a0"/>
        <function-ref name="startAt" scoped="" ref="0x7f5241704c20"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5241704760"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f5241703760"/>
        <function-ref name="start" scoped="" ref="0x7f5241706890"/>
        <function-ref name="stop" scoped="" ref="0x7f5241706da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f52417071b0" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f52417071b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5241707530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f52416eca00" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f52416eca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f52416e92a0"/>
        <function-ref name="fired" scoped="" ref="0x7f52416ea2a0"/>
        <function-ref name="startAt" scoped="" ref="0x7f52416eac20"/>
        <function-ref name="isRunning" scoped="" ref="0x7f52416ea760"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f52416e9760"/>
        <function-ref name="start" scoped="" ref="0x7f52416eb890"/>
        <function-ref name="stop" scoped="" ref="0x7f52416ebda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f52416ec1b0" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f52416ec1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f52416ec530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f52416d3020" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f52416d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f52416d33a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f52416d3530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f52416d36c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f52416d3850"/>
        <function-ref name="fired" scoped="" ref="0x7f52416d39e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f52416d6640" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f52416d6640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f52416d69c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f52416d6b50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f52416d6ce0"/>
        <function-ref name="get" scoped="" ref="0x7f52416d6e70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f52416d5030"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f52416d51c0"/>
        <function-ref name="getMode" scoped="" ref="0x7f52416d5350"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f52416d54e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f52416d5670"/>
        <function-ref name="setMode" scoped="" ref="0x7f52416d5800"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f52416d5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f52416d5c20" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f52416d5c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f52416d4020"/>
        <function-ref name="getControl" scoped="" ref="0x7f52416d41b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f52416d4340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f52416d44d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f52416d4660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f52416d47f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f52416d4980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f52416d4b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f52416d4ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f5242cf83f0" loc="52:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f5242cf83f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242cf8770"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5242cf8900"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5242cf8a90"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5242cf8c20"/>
        <function-ref name="fired" scoped="" ref="0x7f5242cf8db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f5242d04cd0" loc="50:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f5242d04cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242cfc0a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5242cfc230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5242cfc3c0"/>
        <function-ref name="get" scoped="" ref="0x7f5242cfc550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5242cfc6e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242cfc870"/>
        <function-ref name="getMode" scoped="" ref="0x7f5242cfca00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242cfcb90"/>
        <function-ref name="overflow" scoped="" ref="0x7f5242cfcd20"/>
        <function-ref name="setMode" scoped="" ref="0x7f5242cfb020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5242cfb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f5242cfba40" loc="51:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5242cfba40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5242cfbdc0"/>
        <function-ref name="getControl" scoped="" ref="0x7f5242cf9020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5242cf91b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5242cf9340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5242cf94d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5242cf9660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5242cf97f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5242cf9980"/>
        <function-ref name="setControl" scoped="" ref="0x7f5242cf9b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f5242ce7a50" loc="56:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f5242ce7a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5242ce7dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f5242ce6020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5242ce61b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5242ce6340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5242ce64d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5242ce6660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5242ce67f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5242ce6980"/>
        <function-ref name="setControl" scoped="" ref="0x7f5242ce6b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f5242ce25a0" loc="61:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f5242ce25a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5242ce2920"/>
        <function-ref name="getControl" scoped="" ref="0x7f5242ce2ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5242ce2c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5242ce2dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5242ce1020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5242ce11b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5242ce1340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5242ce14d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f5242ce1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f5242ce8a20" loc="55:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f5242ce8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242ce8da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5242ce7020"/>
        <function-ref name="captured" scoped="" ref="0x7f5242ce71b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242ce7340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242ce74d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5242ce7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f5242cd63e0" loc="73:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f5242cd63e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242cd6760"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5242cd68f0"/>
        <function-ref name="captured" scoped="" ref="0x7f5242cd6a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242cd6c10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242cd6da0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5242cd4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f5242ceebb0" loc="54:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f5242ceebb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242ce8020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5242ce81b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5242ce8340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5242ce84d0"/>
        <function-ref name="fired" scoped="" ref="0x7f5242ce8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f5242cd7570" loc="72:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f5242cd7570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242cd78f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5242cd7a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5242cd7c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5242cd7da0"/>
        <function-ref name="fired" scoped="" ref="0x7f5242cd6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f5242cccda0" loc="82:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f5242cccda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242ccb180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5242ccb310"/>
        <function-ref name="captured" scoped="" ref="0x7f5242ccb4a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242ccb630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242ccb7c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5242ccb950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f5242cd4410" loc="74:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f5242cd4410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5242cd4790"/>
        <function-ref name="getControl" scoped="" ref="0x7f5242cd4920"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5242cd4ab0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5242cd4c40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5242cd4dd0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5242cd3020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5242cd31b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5242cd3340"/>
        <function-ref name="setControl" scoped="" ref="0x7f5242cd34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f5242cf2280" loc="50:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f5242cf2280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5242cf2600"/>
        <function-ref name="getControl" scoped="" ref="0x7f5242cf2790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5242cf2920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5242cf2ab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5242cf2c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5242cf2dd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5242cf1020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5242cf11b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f5242cf1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f5242cddda0" loc="66:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f5242cddda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242cdc180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5242cdc310"/>
        <function-ref name="captured" scoped="" ref="0x7f5242cdc4a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242cdc630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242cdc7c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5242cdc950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f5242cdd020" loc="65:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f5242cdd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242cdd3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5242cdd530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5242cdd6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5242cdd850"/>
        <function-ref name="fired" scoped="" ref="0x7f5242cdd9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f5242cdfa50" loc="64:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f5242cdfa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5242cdfdd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f5242cde020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5242cde1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5242cde340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5242cde4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5242cde660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5242cde7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5242cde980"/>
        <function-ref name="setControl" scoped="" ref="0x7f5242cdeb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f5242ce5da0" loc="58:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f5242ce5da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242ce4180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5242ce4310"/>
        <function-ref name="captured" scoped="" ref="0x7f5242ce44a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242ce4630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242ce47c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5242ce4950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f5242cd2890" loc="76:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f5242cd2890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242cd2c10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5242cd2da0"/>
        <function-ref name="captured" scoped="" ref="0x7f5242cd1020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242cd11b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242cd1340"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5242cd14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f5242cdcd40" loc="67:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f5242cdcd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5242cdb0e0"/>
        <function-ref name="getControl" scoped="" ref="0x7f5242cdb270"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5242cdb400"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5242cdb590"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5242cdb720"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5242cdb8b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5242cdba40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5242cdbbd0"/>
        <function-ref name="setControl" scoped="" ref="0x7f5242cdbd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f5242ce5020" loc="57:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f5242ce5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242ce53a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5242ce5530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5242ce56c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5242ce5850"/>
        <function-ref name="fired" scoped="" ref="0x7f5242ce59e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f5242cf6a30" loc="49:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f5242cf6a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242cf6db0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5242cf3020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5242cf31b0"/>
        <function-ref name="get" scoped="" ref="0x7f5242cf3340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5242cf34d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242cf3660"/>
        <function-ref name="getMode" scoped="" ref="0x7f5242cf37f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242cf3980"/>
        <function-ref name="overflow" scoped="" ref="0x7f5242cf3b10"/>
        <function-ref name="setMode" scoped="" ref="0x7f5242cf3ca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5242cf3e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f5242cd3890" loc="75:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f5242cd3890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242cd3e10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5242cd2020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5242cd21b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5242cd2340"/>
        <function-ref name="fired" scoped="" ref="0x7f5242cd24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f5242cef730" loc="53:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f5242cef730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5242cefab0"/>
        <function-ref name="getControl" scoped="" ref="0x7f5242cefc40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5242cefdd0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5242cee020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5242cee1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5242cee340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5242cee4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5242cee660"/>
        <function-ref name="setControl" scoped="" ref="0x7f5242cee7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f5242cd18c0" loc="77:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f5242cd18c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5242cd1c40"/>
        <function-ref name="getControl" scoped="" ref="0x7f5242cd1dd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5242cd0020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5242cd01b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5242cd0340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5242cd04d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5242cd0660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5242cd07f0"/>
        <function-ref name="setControl" scoped="" ref="0x7f5242cd0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f5242ce9690" loc="52:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f5242ce9690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242ce9a10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5242ce9ba0"/>
        <function-ref name="captured" scoped="" ref="0x7f5242ce9d30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242cef020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242cef1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5242cef340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f5242cd9020" loc="69:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f5242cd9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242cd93a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5242cd9530"/>
        <function-ref name="captured" scoped="" ref="0x7f5242cd96c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242cd9850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242cd99e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5242cd9b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f5242cf1700" loc="51:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f5242cf1700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242cf1a80"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5242cf1c10"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5242cf1da0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5242cf0020"/>
        <function-ref name="fired" scoped="" ref="0x7f5242cf01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f5242cda160" loc="68:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f5242cda160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242cda4e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5242cda670"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5242cda800"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5242cda990"/>
        <function-ref name="fired" scoped="" ref="0x7f5242cdab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f5242ccfae0" loc="79:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f5242ccfae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242ccfe60"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5242cce020"/>
        <function-ref name="captured" scoped="" ref="0x7f5242cce1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242cce340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242cce4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5242cce660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f5242cd8020" loc="71:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f5242cd8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5242cd83a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f5242cd8530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5242cd86c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5242cd8850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5242cd89e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5242cd8b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5242cd8d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5242cd7020"/>
        <function-ref name="setControl" scoped="" ref="0x7f5242cd71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f5242ce4cd0" loc="60:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f5242ce4cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242ce30a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5242ce3230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5242ce33c0"/>
        <function-ref name="get" scoped="" ref="0x7f5242ce3550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5242ce36e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242ce3870"/>
        <function-ref name="getMode" scoped="" ref="0x7f5242ce3a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242ce3b90"/>
        <function-ref name="overflow" scoped="" ref="0x7f5242ce3d20"/>
        <function-ref name="setMode" scoped="" ref="0x7f5242ce2020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5242ce21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f5242ce0a20" loc="63:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f5242ce0a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242ce0da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5242cdf020"/>
        <function-ref name="captured" scoped="" ref="0x7f5242cdf1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242cdf340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242cdf4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5242cdf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f5242cd0d40" loc="78:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f5242cd0d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242ccf0e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5242ccf270"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5242ccf400"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5242ccf590"/>
        <function-ref name="fired" scoped="" ref="0x7f5242ccf720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f5242ccc020" loc="81:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f5242ccc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242ccc3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5242ccc530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5242ccc6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5242ccc850"/>
        <function-ref name="fired" scoped="" ref="0x7f5242ccc9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f5242ce1a20" loc="62:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f5242ce1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242ce0020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5242ce01b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5242ce0340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5242ce04d0"/>
        <function-ref name="fired" scoped="" ref="0x7f5242ce0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f5242ccea50" loc="80:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f5242ccea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5242ccedd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f5242ccd020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5242ccd1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5242ccd340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5242ccd4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5242ccd660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5242ccd7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5242ccd980"/>
        <function-ref name="setControl" scoped="" ref="0x7f5242ccdb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f5242c93940" loc="55:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f5242c93940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5242c93cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f5242c932f0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f5242c932f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5242c93670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f5242c92020" loc="56:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f5242c92020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5242c923a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f5242c94bf0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5242c94bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5242c93020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5242c953e0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5242c953e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242c95760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5242c958f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5242c95a80"/>
        <function-ref name="get" scoped="" ref="0x7f5242c95c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5242c95da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242c94020"/>
        <function-ref name="getMode" scoped="" ref="0x7f5242c941b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242c94340"/>
        <function-ref name="overflow" scoped="" ref="0x7f5242c944d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f5242c94660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5242c947f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f5242c8c750" loc="55:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f5242c8c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5242c8cad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f5242c8c100" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f5242c8c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5242c8c480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f5242c8cda0" loc="56:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f5242c8cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5242c8a180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f5242c8da60" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5242c8da60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5242c8de00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5242c8e260" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5242c8e260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242c8e5e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5242c8e770"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5242c8e900"/>
        <function-ref name="get" scoped="" ref="0x7f5242c8ea90"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5242c8ec20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242c8edb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5242c8d020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242c8d1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5242c8d340"/>
        <function-ref name="setMode" scoped="" ref="0x7f5242c8d4d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5242c8d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5242c417a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5242c417a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242c41b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5242c41cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f5242c41e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242c40020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242c401b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5242c40340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5242c876d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5242c876d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5242c87a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f5242c87be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5242c87d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5242c42020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5242c421b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5242c42340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5242c424d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5242c42660"/>
        <function-ref name="setControl" scoped="" ref="0x7f5242c427f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5242c3ec50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5242c3ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5242c3d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5242c42ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5242c42ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242c42e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5242c41020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5242c411b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5242c41340"/>
        <function-ref name="fired" scoped="" ref="0x7f5242c414d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5242c40610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5242c40610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242c40990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5242c40b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5242c40cb0"/>
        <function-ref name="get" scoped="" ref="0x7f5242c40e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5242c3e020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242c3e1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5242c3e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242c3e4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5242c3e660"/>
        <function-ref name="setMode" scoped="" ref="0x7f5242c3e7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5242c3e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5242c39cb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5242c39cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242c380a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5242c38230"/>
        <function-ref name="captured" scoped="" ref="0x7f5242c383c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242c38550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242c386e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5242c38870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5242c3bb30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5242c3bb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5242c3a020"/>
        <function-ref name="getControl" scoped="" ref="0x7f5242c3a1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5242c3a340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5242c3a4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5242c3a660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5242c3a7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5242c3a980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5242c3ab10"/>
        <function-ref name="setControl" scoped="" ref="0x7f5242c3aca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5242c362f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5242c362f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5242c36670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5242c39020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5242c39020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242c393a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5242c39530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5242c396c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5242c39850"/>
        <function-ref name="fired" scoped="" ref="0x7f5242c399e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5242c38b40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5242c38b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242c37020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5242c371b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5242c37340"/>
        <function-ref name="get" scoped="" ref="0x7f5242c374d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5242c37660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242c377f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5242c37980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242c37b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f5242c37ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f5242c37e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5242c36020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5242c312f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5242c312f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242c31670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5242c31800"/>
        <function-ref name="captured" scoped="" ref="0x7f5242c31990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242c31b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242c31cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5242c31e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5242c33220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5242c33220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5242c335a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f5242c33730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5242c338c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5242c33a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5242c33be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5242c33d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5242c32020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5242c321b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f5242c32340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5242c2e7a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5242c2e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5242c2eb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5242c32610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5242c32610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242c32990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5242c32b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5242c32cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5242c32e40"/>
        <function-ref name="fired" scoped="" ref="0x7f5242c31020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5242c30160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5242c30160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242c304e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5242c30670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5242c30800"/>
        <function-ref name="get" scoped="" ref="0x7f5242c30990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5242c30b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242c30cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5242c30e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242c2e020"/>
        <function-ref name="overflow" scoped="" ref="0x7f5242c2e1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f5242c2e340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5242c2e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5242c297a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5242c297a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242c29b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5242c29cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f5242c29e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242c28020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242c281b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5242c28340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5242c2b6d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5242c2b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5242c2ba50"/>
        <function-ref name="getControl" scoped="" ref="0x7f5242c2bbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5242c2bd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5242c2a020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5242c2a1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5242c2a340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5242c2a4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5242c2a660"/>
        <function-ref name="setControl" scoped="" ref="0x7f5242c2a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5242c27c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5242c27c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5242c26020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5242c2aac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5242c2aac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242c2ae40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5242c29020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5242c291b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5242c29340"/>
        <function-ref name="fired" scoped="" ref="0x7f5242c294d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5242c28610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5242c28610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242c28990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5242c28b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5242c28cb0"/>
        <function-ref name="get" scoped="" ref="0x7f5242c28e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5242c27020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242c271b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5242c27340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242c274d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5242c27660"/>
        <function-ref name="setMode" scoped="" ref="0x7f5242c277f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5242c27980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5242c22cb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5242c22cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242c210a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5242c21230"/>
        <function-ref name="captured" scoped="" ref="0x7f5242c213c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242c21550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242c216e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5242c21870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5242c24b30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5242c24b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5242c23020"/>
        <function-ref name="getControl" scoped="" ref="0x7f5242c231b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5242c23340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5242c234d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5242c23660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5242c237f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5242c23980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5242c23b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f5242c23ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5242c1f2f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5242c1f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5242c1f670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5242c22020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5242c22020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242c223a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5242c22530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5242c226c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5242c22850"/>
        <function-ref name="fired" scoped="" ref="0x7f5242c229e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5242c21b40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5242c21b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242c20020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5242c201b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5242c20340"/>
        <function-ref name="get" scoped="" ref="0x7f5242c204d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5242c20660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242c207f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5242c20980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242c20b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f5242c20ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f5242c20e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5242c1f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5242c192f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5242c192f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242c19670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5242c19800"/>
        <function-ref name="captured" scoped="" ref="0x7f5242c19990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242c19b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242c19cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5242c19e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5242c1b220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5242c1b220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5242c1b5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f5242c1b730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5242c1b8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5242c1ba50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5242c1bbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5242c1bd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5242c1a020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5242c1a1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f5242c1a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5242c177a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5242c177a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5242c17b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5242c1a610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5242c1a610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242c1a990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5242c1ab20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5242c1acb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5242c1ae40"/>
        <function-ref name="fired" scoped="" ref="0x7f5242c19020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5242c18160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5242c18160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242c184e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5242c18670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5242c18800"/>
        <function-ref name="get" scoped="" ref="0x7f5242c18990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5242c18b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242c18cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5242c18e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242c17020"/>
        <function-ref name="overflow" scoped="" ref="0x7f5242c171b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f5242c17340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5242c174d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5242c127a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5242c127a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242c12b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5242c12cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f5242c12e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242c11020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242c111b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5242c11340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5242c146d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5242c146d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5242c14a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f5242c14be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5242c14d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5242c13020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5242c131b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5242c13340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5242c134d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5242c13660"/>
        <function-ref name="setControl" scoped="" ref="0x7f5242c137f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5242c10c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5242c10c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5242c0e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5242c13ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5242c13ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242c13e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5242c12020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5242c121b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5242c12340"/>
        <function-ref name="fired" scoped="" ref="0x7f5242c124d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5242c11610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5242c11610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242c11990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5242c11b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5242c11cb0"/>
        <function-ref name="get" scoped="" ref="0x7f5242c11e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5242c10020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242c101b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5242c10340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242c104d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5242c10660"/>
        <function-ref name="setMode" scoped="" ref="0x7f5242c107f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5242c10980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5242c0acb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5242c0acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242c090a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5242c09230"/>
        <function-ref name="captured" scoped="" ref="0x7f5242c093c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242c09550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242c096e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5242c09870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5242c0cb30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5242c0cb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5242c0b020"/>
        <function-ref name="getControl" scoped="" ref="0x7f5242c0b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5242c0b340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5242c0b4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5242c0b660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5242c0b7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5242c0b980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5242c0bb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f5242c0bca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5242c072f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5242c072f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5242c07670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5242c0a020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5242c0a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242c0a3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5242c0a530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5242c0a6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5242c0a850"/>
        <function-ref name="fired" scoped="" ref="0x7f5242c0a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5242c09b40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5242c09b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242c08020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5242c081b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5242c08340"/>
        <function-ref name="get" scoped="" ref="0x7f5242c084d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5242c08660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242c087f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5242c08980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242c08b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f5242c08ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f5242c08e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5242c07020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5242c022f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5242c022f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242c02670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5242c02800"/>
        <function-ref name="captured" scoped="" ref="0x7f5242c02990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242c02b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242c02cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5242c02e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5242c04220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5242c04220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5242c045a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f5242c04730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5242c048c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5242c04a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5242c04be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5242c04d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5242c03020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5242c031b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f5242c03340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5242c007a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5242c007a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5242c00b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5242c03610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5242c03610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242c03990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5242c03b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5242c03cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5242c03e40"/>
        <function-ref name="fired" scoped="" ref="0x7f5242c02020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5242c01160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5242c01160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242c014e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5242c01670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5242c01800"/>
        <function-ref name="get" scoped="" ref="0x7f5242c01990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5242c01b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242c01cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5242c01e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242c00020"/>
        <function-ref name="overflow" scoped="" ref="0x7f5242c001b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f5242c00340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5242c004d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5242bfa7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5242bfa7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242bfab20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5242bfacb0"/>
        <function-ref name="captured" scoped="" ref="0x7f5242bfae40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242bf9020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242bf91b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5242bf9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f5242bfc6d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f5242bfc6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5242bfca50"/>
        <function-ref name="getControl" scoped="" ref="0x7f5242bfcbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5242bfcd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5242bfb020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5242bfb1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5242bfb340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5242bfb4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5242bfb660"/>
        <function-ref name="setControl" scoped="" ref="0x7f5242bfb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f5242bf8c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f5242bf8c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5242bf7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f5242bfbac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f5242bfbac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242bfbe40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f5242bfa020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f5242bfa1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f5242bfa340"/>
        <function-ref name="fired" scoped="" ref="0x7f5242bfa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f5242bf9610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5242bf9610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242bf9990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5242bf9b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5242bf9cb0"/>
        <function-ref name="get" scoped="" ref="0x7f5242bf9e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5242bf8020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242bf81b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5242bf8340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242bf84d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5242bf8660"/>
        <function-ref name="setMode" scoped="" ref="0x7f5242bf87f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5242bf8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f5242bf2bc0" loc="7:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f5242bf2bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5242bf1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f5242bf33f0" loc="4:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f5242bf33f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5242bf3770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f5242bf3b80" loc="5:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f5242bf3b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5242bf2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f5242bf2430" loc="6:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f5242bf2430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5242bf27b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f52416cada0" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f52416cada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f52416c9180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f52416c9310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f52416c94a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f52416c9630"/>
        <function-ref name="fired" scoped="" ref="0x7f52416c97c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f52416cc4c0" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f52416cc4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f52416cc840"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f52416cc9d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f52416ccb60"/>
        <function-ref name="get" scoped="" ref="0x7f52416cccf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f52416cce80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f52416cb030"/>
        <function-ref name="getMode" scoped="" ref="0x7f52416cb1c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f52416cb350"/>
        <function-ref name="overflow" scoped="" ref="0x7f52416cb4e0"/>
        <function-ref name="setMode" scoped="" ref="0x7f52416cb670"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f52416cb800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f52416d0340" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f52416d0340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f52416cdba0"/>
        <function-ref name="fired" scoped="" ref="0x7f52416cfb80"/>
        <function-ref name="startAt" scoped="" ref="0x7f52416cd550"/>
        <function-ref name="isRunning" scoped="" ref="0x7f52416cd090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f52416cc090"/>
        <function-ref name="start" scoped="" ref="0x7f52416cf1b0"/>
        <function-ref name="stop" scoped="" ref="0x7f52416cf6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f52416d1a30" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f52416d1a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f52416d1db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f52416cba90" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f52416cba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f52416cbe10"/>
        <function-ref name="getControl" scoped="" ref="0x7f52416ca020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f52416ca1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f52416ca340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f52416ca4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f52416ca660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f52416ca7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f52416ca980"/>
        <function-ref name="setControl" scoped="" ref="0x7f52416cab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f5242b698c0" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5242b698c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5242b6d700"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242b6c0d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242b6dbc0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5242b6c590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f5242b678e0" loc="43:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f5242b678e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5242b64780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242b62150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242b64c40"/>
        <function-ref name="overflow" scoped="" ref="0x7f5242b62610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f5242b52c50" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f5242b52c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242b50020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5242b501b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5242b50340"/>
        <function-ref name="get" scoped="" ref="0x7f5242b504d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5242b50660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242b507f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5242b50980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242b50b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f5242b50ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f5242b50e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f5242b4f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f5242b60b80" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5242b60b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5242b5f9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242b52360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242b5fe70"/>
        <function-ref name="overflow" scoped="" ref="0x7f5242b52820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f5242b2e0f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f5242b2e0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5242b2d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242b2d9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242b2d4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5242b2de60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f5242b4ccf0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5242b4ccf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5242b31b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242b2f550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242b2f090"/>
        <function-ref name="overflow" scoped="" ref="0x7f5242b2fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f52416e6c90" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f52416e6c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f52416e34e0"/>
        <function-ref name="fired" scoped="" ref="0x7f52416e44e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f52416e4e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f52416e49a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f52416e39a0"/>
        <function-ref name="start" scoped="" ref="0x7f52416e5ac0"/>
        <function-ref name="stop" scoped="" ref="0x7f52416e4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f52416df410" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f52416df410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f52416ddc20"/>
        <function-ref name="fired" scoped="" ref="0x7f52416dec20"/>
        <function-ref name="startAt" scoped="" ref="0x7f52416dd5d0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f52416dd110"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f52416dc110"/>
        <function-ref name="start" scoped="" ref="0x7f52416de250"/>
        <function-ref name="stop" scoped="" ref="0x7f52416de760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f52416e2060" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f52416e2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f52416e2e70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f52416e1820"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f52416e1360"/>
        <function-ref name="overflow" scoped="" ref="0x7f52416e1ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f5242ae29c0" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f5242ae29c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5242ae2d40"/>
        <function-ref name="isInput" scoped="" ref="0x7f5242ae1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5242ae11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5242ae1340"/>
        <function-ref name="get" scoped="" ref="0x7f5242ae14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5242ae1660"/>
        <function-ref name="set" scoped="" ref="0x7f5242ae17f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5242ae1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f5242ae1cf0" loc="45:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f5242ae1cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5242ae00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5242ae0230"/>
        <function-ref name="toggle" scoped="" ref="0x7f5242ae03c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5242ae0550"/>
        <function-ref name="get" scoped="" ref="0x7f5242ae06e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5242ae0870"/>
        <function-ref name="set" scoped="" ref="0x7f5242ae0a00"/>
        <function-ref name="clr" scoped="" ref="0x7f5242ae0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f5242adf020" loc="46:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f5242adf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5242adf3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5242adf530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5242adf6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5242adf850"/>
        <function-ref name="get" scoped="" ref="0x7f5242adf9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5242adfb70"/>
        <function-ref name="set" scoped="" ref="0x7f5242adfd00"/>
        <function-ref name="clr" scoped="" ref="0x7f5242ade020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f5242ae3690" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f5242ae3690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5242ae3a10"/>
        <function-ref name="isInput" scoped="" ref="0x7f5242ae3ba0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5242ae3d30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5242ae2020"/>
        <function-ref name="get" scoped="" ref="0x7f5242ae21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5242ae2340"/>
        <function-ref name="set" scoped="" ref="0x7f5242ae24d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5242ae2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f5242add6a0" loc="48:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f5242add6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5242adda20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5242addbb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5242addd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5242adc020"/>
        <function-ref name="get" scoped="" ref="0x7f5242adc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5242adc340"/>
        <function-ref name="set" scoped="" ref="0x7f5242adc4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f5242adc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f5242ae43e0" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f5242ae43e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5242ae4760"/>
        <function-ref name="isInput" scoped="" ref="0x7f5242ae48f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5242ae4a80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5242ae4c10"/>
        <function-ref name="get" scoped="" ref="0x7f5242ae4da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5242ae3020"/>
        <function-ref name="set" scoped="" ref="0x7f5242ae31b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5242ae3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f5242ade370" loc="47:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f5242ade370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5242ade6f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5242ade880"/>
        <function-ref name="toggle" scoped="" ref="0x7f5242adea10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5242adeba0"/>
        <function-ref name="get" scoped="" ref="0x7f5242aded30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5242add020"/>
        <function-ref name="set" scoped="" ref="0x7f5242add1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f5242add340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5242adac50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5242adac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5242ad9020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5242ad91b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5242ad9340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5242ad7020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5242ad9660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5242ad97f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5242ad9980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5242ad9b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5242ad9ca0"/>
        <function-ref name="get" scoped="" ref="0x7f5242ad9e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5242ad8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5242ad81b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5242ad8340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5242ad85d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5242ad8760"/>
        <function-ref name="set" scoped="" ref="0x7f5242ad88f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5242ad8a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5242ad8c10"/>
        <function-ref name="clr" scoped="" ref="0x7f5242ad94d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5242ad8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5242adba20" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5242adba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5242adbda0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5242ada020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5242ada1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5242ada340"/>
        <function-ref name="get" scoped="" ref="0x7f5242ada4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5242ada660"/>
        <function-ref name="set" scoped="" ref="0x7f5242ada7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5242ada980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5242ad42f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5242ad42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5242ad4670"/>
        <function-ref name="isInput" scoped="" ref="0x7f5242ad4800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5242ad4990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5242ad1660"/>
        <function-ref name="toggle" scoped="" ref="0x7f5242ad4cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5242ad4e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5242ad2020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5242ad21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5242ad2340"/>
        <function-ref name="get" scoped="" ref="0x7f5242ad24d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5242ad2660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5242ad27f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5242ad2980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5242ad2c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5242ad2da0"/>
        <function-ref name="set" scoped="" ref="0x7f5242ad1020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5242ad11b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5242ad1340"/>
        <function-ref name="clr" scoped="" ref="0x7f5242ad4b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5242ad14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5242ad5020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5242ad5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5242ad53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5242ad5530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5242ad56c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5242ad5850"/>
        <function-ref name="get" scoped="" ref="0x7f5242ad59e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5242ad5b70"/>
        <function-ref name="set" scoped="" ref="0x7f5242ad5d00"/>
        <function-ref name="clr" scoped="" ref="0x7f5242ad4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5242ace7a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5242ace7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5242aceb20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5242acecb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5242acee40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5242acca80"/>
        <function-ref name="toggle" scoped="" ref="0x7f5242acd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5242acd340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5242acd4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5242acd660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5242acd7f0"/>
        <function-ref name="get" scoped="" ref="0x7f5242acd980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5242acdb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5242acdca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5242acde30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5242acc120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5242acc2b0"/>
        <function-ref name="set" scoped="" ref="0x7f5242acc440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5242acc5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5242acc760"/>
        <function-ref name="clr" scoped="" ref="0x7f5242acd020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5242acc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5242acf630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5242acf630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5242acf9b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5242acfb40"/>
        <function-ref name="toggle" scoped="" ref="0x7f5242acfcd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5242acfe60"/>
        <function-ref name="get" scoped="" ref="0x7f5242ace020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5242ace1b0"/>
        <function-ref name="set" scoped="" ref="0x7f5242ace340"/>
        <function-ref name="clr" scoped="" ref="0x7f5242ace4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5242ac9c60" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5242ac9c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5242ac8020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5242ac81b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5242ac8340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5242ac6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5242ac8660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5242ac87f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5242ac8980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5242ac8b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5242ac8ca0"/>
        <function-ref name="get" scoped="" ref="0x7f5242ac8e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5242ac7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5242ac71b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5242ac7340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5242ac75d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5242ac7760"/>
        <function-ref name="set" scoped="" ref="0x7f5242ac78f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5242ac7a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5242ac7c10"/>
        <function-ref name="clr" scoped="" ref="0x7f5242ac84d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5242ac7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5242acab00" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5242acab00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5242acae80"/>
        <function-ref name="isInput" scoped="" ref="0x7f5242ac9030"/>
        <function-ref name="toggle" scoped="" ref="0x7f5242ac91c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5242ac9350"/>
        <function-ref name="get" scoped="" ref="0x7f5242ac94e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5242ac9670"/>
        <function-ref name="set" scoped="" ref="0x7f5242ac9800"/>
        <function-ref name="clr" scoped="" ref="0x7f5242ac9990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5242ac32f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5242ac32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5242ac3670"/>
        <function-ref name="isInput" scoped="" ref="0x7f5242ac3800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5242ac3990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5242ac1660"/>
        <function-ref name="toggle" scoped="" ref="0x7f5242ac3cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5242ac3e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5242ac2020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5242ac21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5242ac2340"/>
        <function-ref name="get" scoped="" ref="0x7f5242ac24d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5242ac2660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5242ac27f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5242ac2980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5242ac2c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5242ac2da0"/>
        <function-ref name="set" scoped="" ref="0x7f5242ac1020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5242ac11b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5242ac1340"/>
        <function-ref name="clr" scoped="" ref="0x7f5242ac3b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5242ac14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5242ac4020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5242ac4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5242ac43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5242ac4530"/>
        <function-ref name="toggle" scoped="" ref="0x7f5242ac46c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5242ac4850"/>
        <function-ref name="get" scoped="" ref="0x7f5242ac49e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5242ac4b70"/>
        <function-ref name="set" scoped="" ref="0x7f5242ac4d00"/>
        <function-ref name="clr" scoped="" ref="0x7f5242ac3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5242abe7a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5242abe7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5242abeb20"/>
        <function-ref name="isInput" scoped="" ref="0x7f5242abecb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5242abee40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5242abca80"/>
        <function-ref name="toggle" scoped="" ref="0x7f5242abd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5242abd340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5242abd4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5242abd660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5242abd7f0"/>
        <function-ref name="get" scoped="" ref="0x7f5242abd980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5242abdb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5242abdca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5242abde30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5242abc120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5242abc2b0"/>
        <function-ref name="set" scoped="" ref="0x7f5242abc440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5242abc5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5242abc760"/>
        <function-ref name="clr" scoped="" ref="0x7f5242abd020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5242abc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5242abf630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5242abf630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5242abf9b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5242abfb40"/>
        <function-ref name="toggle" scoped="" ref="0x7f5242abfcd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5242abfe60"/>
        <function-ref name="get" scoped="" ref="0x7f5242abe020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5242abe1b0"/>
        <function-ref name="set" scoped="" ref="0x7f5242abe340"/>
        <function-ref name="clr" scoped="" ref="0x7f5242abe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f5242ab8c60" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f5242ab8c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5242ab7020"/>
        <function-ref name="isInput" scoped="" ref="0x7f5242ab71b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5242ab7340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5242ab5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5242ab7660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5242ab77f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5242ab7980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5242ab7b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5242ab7ca0"/>
        <function-ref name="get" scoped="" ref="0x7f5242ab7e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5242ab6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5242ab61b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5242ab6340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5242ab65d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5242ab6760"/>
        <function-ref name="set" scoped="" ref="0x7f5242ab68f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5242ab6a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5242ab6c10"/>
        <function-ref name="clr" scoped="" ref="0x7f5242ab74d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5242ab6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f5242abab00" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5242abab00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5242abae80"/>
        <function-ref name="isInput" scoped="" ref="0x7f5242ab8030"/>
        <function-ref name="toggle" scoped="" ref="0x7f5242ab81c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5242ab8350"/>
        <function-ref name="get" scoped="" ref="0x7f5242ab84e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5242ab8670"/>
        <function-ref name="set" scoped="" ref="0x7f5242ab8800"/>
        <function-ref name="clr" scoped="" ref="0x7f5242ab8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f5242a9c700" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f5242a9c700"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f5242a9ca80"/>
        <function-ref name="disable" scoped="" ref="0x7f5242a9cc10"/>
        <function-ref name="captured" scoped="" ref="0x7f5242a9cda0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f5242a9f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f5242a9f400" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f5242a9f400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5242a9f780"/>
        <function-ref name="disable" scoped="" ref="0x7f5242a9f910"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f5242a9faa0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f5242a9fc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f5242a9e060" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f5242a9e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5242a9e3e0"/>
        <function-ref name="disable" scoped="" ref="0x7f5242a9e570"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f5242a9e700"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f5242a9e890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7f5242a80a80" loc="50:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7f5242a80a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f5242a80e00"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f5242a7f020"/>
        <function-ref name="captured" scoped="" ref="0x7f5242a7f1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242a7f340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242a7f4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f5242a7f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f5242a93c20" loc="48:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f5242a93c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f5242a81020"/>
        <function-ref name="disable" scoped="" ref="0x7f5242a811b0"/>
        <function-ref name="captured" scoped="" ref="0x7f5242a81340"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f5242a814d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f5242a81760" loc="49:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f5242a81760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f5242a81ae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f5242a81c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f5242a81e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f5242a80020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f5242a801b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f5242a80340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f5242a804d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f5242a80660"/>
        <function-ref name="setControl" scoped="" ref="0x7f5242a807f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f5242a7f930" loc="51:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f5242a7f930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5242a7fcb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5242a7fe40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5242a7e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5242a7dc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f5242a7e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5242a7e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5242a7e660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5242a7e7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5242a7e980"/>
        <function-ref name="get" scoped="" ref="0x7f5242a7eb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5242a7eca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5242a7ee30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5242a7d020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5242a7d2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5242a7d440"/>
        <function-ref name="set" scoped="" ref="0x7f5242a7d5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5242a7d760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5242a7d8f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5242a7e1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5242a7da80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f5242a6c020" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f5242a6c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242a6c3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f5242a6c530"/>
        <function-ref name="disable" scoped="" ref="0x7f5242a6c6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f5242a6c850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f5242a6c9e0"/>
        <function-ref name="enable" scoped="" ref="0x7f5242a6cb70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f5242a6cd00"/>
        <function-ref name="getValue" scoped="" ref="0x7f5242a6b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f5242a5f3f0" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f5242a5f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242a5f770"/>
        <function-ref name="fired" scoped="" ref="0x7f5242a5f900"/>
        <function-ref name="disable" scoped="" ref="0x7f5242a5fa90"/>
        <function-ref name="edge" scoped="" ref="0x7f5242a5fc20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f5242a5fdb0"/>
        <function-ref name="enable" scoped="" ref="0x7f5242a5e020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f5242a5e1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5242a5e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f5242a69a30" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f5242a69a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242a69db0"/>
        <function-ref name="fired" scoped="" ref="0x7f5242a67020"/>
        <function-ref name="disable" scoped="" ref="0x7f5242a671b0"/>
        <function-ref name="edge" scoped="" ref="0x7f5242a67340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f5242a674d0"/>
        <function-ref name="enable" scoped="" ref="0x7f5242a67660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f5242a677f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5242a67980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f5242a65020" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f5242a65020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242a653a0"/>
        <function-ref name="fired" scoped="" ref="0x7f5242a65530"/>
        <function-ref name="disable" scoped="" ref="0x7f5242a656c0"/>
        <function-ref name="edge" scoped="" ref="0x7f5242a65850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f5242a659e0"/>
        <function-ref name="enable" scoped="" ref="0x7f5242a65b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f5242a65d00"/>
        <function-ref name="getValue" scoped="" ref="0x7f5242a64020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f5242a75a30" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f5242a75a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242a75db0"/>
        <function-ref name="fired" scoped="" ref="0x7f5242a6e020"/>
        <function-ref name="disable" scoped="" ref="0x7f5242a6e1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f5242a6e340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f5242a6e4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f5242a6e660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f5242a6e7f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5242a6e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f5242a62a30" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f5242a62a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242a61020"/>
        <function-ref name="fired" scoped="" ref="0x7f5242a611b0"/>
        <function-ref name="disable" scoped="" ref="0x7f5242a61340"/>
        <function-ref name="edge" scoped="" ref="0x7f5242a614d0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f5242a61660"/>
        <function-ref name="enable" scoped="" ref="0x7f5242a617f0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f5242a61980"/>
        <function-ref name="getValue" scoped="" ref="0x7f5242a61b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f5242a6b3f0" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f5242a6b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242a6b770"/>
        <function-ref name="fired" scoped="" ref="0x7f5242a6b900"/>
        <function-ref name="disable" scoped="" ref="0x7f5242a6ba90"/>
        <function-ref name="edge" scoped="" ref="0x7f5242a6bc20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f5242a6bdb0"/>
        <function-ref name="enable" scoped="" ref="0x7f5242a6a020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f5242a6a1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5242a6a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f5242a5e710" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f5242a5e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242a5ea90"/>
        <function-ref name="fired" scoped="" ref="0x7f5242a5ec20"/>
        <function-ref name="disable" scoped="" ref="0x7f5242a5edb0"/>
        <function-ref name="edge" scoped="" ref="0x7f5242a5d020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f5242a5d1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f5242a5d340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f5242a5d4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5242a5d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f5242a6f3d0" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f5242a6f3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242a6f750"/>
        <function-ref name="fired" scoped="" ref="0x7f5242a6f8e0"/>
        <function-ref name="disable" scoped="" ref="0x7f5242a6fa70"/>
        <function-ref name="edge" scoped="" ref="0x7f5242a6fc00"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f5242a6fd90"/>
        <function-ref name="enable" scoped="" ref="0x7f5242a76020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f5242a761b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5242a76340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f5242a643f0" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f5242a643f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242a64770"/>
        <function-ref name="fired" scoped="" ref="0x7f5242a64900"/>
        <function-ref name="disable" scoped="" ref="0x7f5242a64a90"/>
        <function-ref name="edge" scoped="" ref="0x7f5242a64c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f5242a64db0"/>
        <function-ref name="enable" scoped="" ref="0x7f5242a63020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f5242a631b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5242a63340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f5242a6ed50" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f5242a6ed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242a6d100"/>
        <function-ref name="fired" scoped="" ref="0x7f5242a6d290"/>
        <function-ref name="disable" scoped="" ref="0x7f5242a6d420"/>
        <function-ref name="edge" scoped="" ref="0x7f5242a6d5b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f5242a6d740"/>
        <function-ref name="enable" scoped="" ref="0x7f5242a6d8d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f5242a6da60"/>
        <function-ref name="getValue" scoped="" ref="0x7f5242a6dbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f5242a60020" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f5242a60020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242a603a0"/>
        <function-ref name="fired" scoped="" ref="0x7f5242a60530"/>
        <function-ref name="disable" scoped="" ref="0x7f5242a606c0"/>
        <function-ref name="edge" scoped="" ref="0x7f5242a60850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f5242a609e0"/>
        <function-ref name="enable" scoped="" ref="0x7f5242a60b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f5242a60d00"/>
        <function-ref name="getValue" scoped="" ref="0x7f5242a5f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f5242a6a710" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f5242a6a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242a6aa90"/>
        <function-ref name="fired" scoped="" ref="0x7f5242a6ac20"/>
        <function-ref name="disable" scoped="" ref="0x7f5242a6adb0"/>
        <function-ref name="edge" scoped="" ref="0x7f5242a69020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f5242a691b0"/>
        <function-ref name="enable" scoped="" ref="0x7f5242a69340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f5242a694d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5242a69660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f5242a67d50" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f5242a67d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242a66100"/>
        <function-ref name="fired" scoped="" ref="0x7f5242a66290"/>
        <function-ref name="disable" scoped="" ref="0x7f5242a66420"/>
        <function-ref name="edge" scoped="" ref="0x7f5242a665b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f5242a66740"/>
        <function-ref name="enable" scoped="" ref="0x7f5242a668d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f5242a66a60"/>
        <function-ref name="getValue" scoped="" ref="0x7f5242a66bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f5242a76710" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f5242a76710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242a76a90"/>
        <function-ref name="fired" scoped="" ref="0x7f5242a76c20"/>
        <function-ref name="disable" scoped="" ref="0x7f5242a76db0"/>
        <function-ref name="edge" scoped="" ref="0x7f5242a75020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f5242a751b0"/>
        <function-ref name="enable" scoped="" ref="0x7f5242a75340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f5242a754d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5242a75660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f5242a63710" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f5242a63710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242a63a90"/>
        <function-ref name="fired" scoped="" ref="0x7f5242a63c20"/>
        <function-ref name="disable" scoped="" ref="0x7f5242a63db0"/>
        <function-ref name="edge" scoped="" ref="0x7f5242a62020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f5242a621b0"/>
        <function-ref name="enable" scoped="" ref="0x7f5242a62340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f5242a624d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5242a62660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f5242a553f0" loc="58:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f5242a553f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242a55770"/>
        <function-ref name="fired" scoped="" ref="0x7f5242a55900"/>
        <function-ref name="disable" scoped="" ref="0x7f5242a55a90"/>
        <function-ref name="edge" scoped="" ref="0x7f5242a55c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f5242a55db0"/>
        <function-ref name="enable" scoped="" ref="0x7f5242a54020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f5242a541b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5242a54340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f5242a483f0" loc="70:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f5242a483f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242a48770"/>
        <function-ref name="fired" scoped="" ref="0x7f5242a48900"/>
        <function-ref name="disable" scoped="" ref="0x7f5242a48a90"/>
        <function-ref name="edge" scoped="" ref="0x7f5242a48c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f5242a48db0"/>
        <function-ref name="enable" scoped="" ref="0x7f5242a47020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f5242a471b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5242a47340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f5242a52d50" loc="61:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f5242a52d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242a51100"/>
        <function-ref name="fired" scoped="" ref="0x7f5242a51290"/>
        <function-ref name="disable" scoped="" ref="0x7f5242a51420"/>
        <function-ref name="edge" scoped="" ref="0x7f5242a515b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f5242a51740"/>
        <function-ref name="enable" scoped="" ref="0x7f5242a518d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f5242a51a60"/>
        <function-ref name="getValue" scoped="" ref="0x7f5242a51bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f5242a4f3f0" loc="65:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f5242a4f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242a4f770"/>
        <function-ref name="fired" scoped="" ref="0x7f5242a4f900"/>
        <function-ref name="disable" scoped="" ref="0x7f5242a4fa90"/>
        <function-ref name="edge" scoped="" ref="0x7f5242a4fc20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f5242a4fdb0"/>
        <function-ref name="enable" scoped="" ref="0x7f5242a4e020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f5242a4e1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5242a4e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f5242a58d50" loc="56:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f5242a58d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242a57100"/>
        <function-ref name="fired" scoped="" ref="0x7f5242a57290"/>
        <function-ref name="disable" scoped="" ref="0x7f5242a57420"/>
        <function-ref name="edge" scoped="" ref="0x7f5242a575b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f5242a57740"/>
        <function-ref name="enable" scoped="" ref="0x7f5242a578d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f5242a57a60"/>
        <function-ref name="getValue" scoped="" ref="0x7f5242a57bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f5242a4cd50" loc="68:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f5242a4cd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242a4b210"/>
        <function-ref name="fired" scoped="" ref="0x7f5242a4b3a0"/>
        <function-ref name="disable" scoped="" ref="0x7f5242a4b530"/>
        <function-ref name="edge" scoped="" ref="0x7f5242a4b6c0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f5242a4b850"/>
        <function-ref name="enable" scoped="" ref="0x7f5242a4b9e0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f5242a4bb70"/>
        <function-ref name="getValue" scoped="" ref="0x7f5242a4bd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f5242a54710" loc="59:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f5242a54710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242a54a90"/>
        <function-ref name="fired" scoped="" ref="0x7f5242a54c20"/>
        <function-ref name="disable" scoped="" ref="0x7f5242a54db0"/>
        <function-ref name="edge" scoped="" ref="0x7f5242a53020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f5242a531b0"/>
        <function-ref name="enable" scoped="" ref="0x7f5242a53340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f5242a534d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5242a53660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f5242a47710" loc="71:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f5242a47710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242a47a90"/>
        <function-ref name="fired" scoped="" ref="0x7f5242a47c20"/>
        <function-ref name="disable" scoped="" ref="0x7f5242a47db0"/>
        <function-ref name="edge" scoped="" ref="0x7f5242a46020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f5242a461b0"/>
        <function-ref name="enable" scoped="" ref="0x7f5242a46340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f5242a464d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5242a46660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f5242a5c7a0" loc="54:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f5242a5c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242a5cb20"/>
        <function-ref name="fired" scoped="" ref="0x7f5242a5ccb0"/>
        <function-ref name="disable" scoped="" ref="0x7f5242a5ce40"/>
        <function-ref name="edge" scoped="" ref="0x7f5242a59020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f5242a591b0"/>
        <function-ref name="enable" scoped="" ref="0x7f5242a59340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f5242a594d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5242a59660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f5242a4e710" loc="66:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f5242a4e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242a4ea90"/>
        <function-ref name="fired" scoped="" ref="0x7f5242a4ec20"/>
        <function-ref name="disable" scoped="" ref="0x7f5242a4edb0"/>
        <function-ref name="edge" scoped="" ref="0x7f5242a4d020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f5242a4d1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f5242a4d340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f5242a4d4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5242a4d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f5242a56020" loc="57:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f5242a56020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242a563a0"/>
        <function-ref name="fired" scoped="" ref="0x7f5242a56530"/>
        <function-ref name="disable" scoped="" ref="0x7f5242a566c0"/>
        <function-ref name="edge" scoped="" ref="0x7f5242a56850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f5242a569e0"/>
        <function-ref name="enable" scoped="" ref="0x7f5242a56b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f5242a56d00"/>
        <function-ref name="getValue" scoped="" ref="0x7f5242a55020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f5242a49100" loc="69:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f5242a49100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242a49480"/>
        <function-ref name="fired" scoped="" ref="0x7f5242a49610"/>
        <function-ref name="disable" scoped="" ref="0x7f5242a497a0"/>
        <function-ref name="edge" scoped="" ref="0x7f5242a49930"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f5242a49ac0"/>
        <function-ref name="enable" scoped="" ref="0x7f5242a49c50"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f5242a49de0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5242a48020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f5242a53a30" loc="60:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f5242a53a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242a53db0"/>
        <function-ref name="fired" scoped="" ref="0x7f5242a52020"/>
        <function-ref name="disable" scoped="" ref="0x7f5242a521b0"/>
        <function-ref name="edge" scoped="" ref="0x7f5242a52340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f5242a524d0"/>
        <function-ref name="enable" scoped="" ref="0x7f5242a52660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f5242a527f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5242a52980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f5242a50020" loc="64:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f5242a50020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242a503a0"/>
        <function-ref name="fired" scoped="" ref="0x7f5242a50530"/>
        <function-ref name="disable" scoped="" ref="0x7f5242a506c0"/>
        <function-ref name="edge" scoped="" ref="0x7f5242a50850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f5242a509e0"/>
        <function-ref name="enable" scoped="" ref="0x7f5242a50b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f5242a50d00"/>
        <function-ref name="getValue" scoped="" ref="0x7f5242a4f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f5242a59a30" loc="55:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f5242a59a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242a59db0"/>
        <function-ref name="fired" scoped="" ref="0x7f5242a58020"/>
        <function-ref name="disable" scoped="" ref="0x7f5242a581b0"/>
        <function-ref name="edge" scoped="" ref="0x7f5242a58340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f5242a584d0"/>
        <function-ref name="enable" scoped="" ref="0x7f5242a58660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f5242a587f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5242a58980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f5242a4da30" loc="67:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f5242a4da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5242a4ddb0"/>
        <function-ref name="fired" scoped="" ref="0x7f5242a4c020"/>
        <function-ref name="disable" scoped="" ref="0x7f5242a4c1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f5242a4c340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f5242a4c4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f5242a4c660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f5242a4c7f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f5242a4c980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f524293c2f0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f524293c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f524293c670"/>
        <function-ref name="fired" scoped="" ref="0x7f524293c800"/>
        <function-ref name="disable" scoped="" ref="0x7f524293c990"/>
        <function-ref name="edge" scoped="" ref="0x7f524293cb20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f524293ccb0"/>
        <function-ref name="enable" scoped="" ref="0x7f524293ce40"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f5242930020"/>
        <function-ref name="getValue" scoped="" ref="0x7f52429301b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f524293d680" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f524293d680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f524293da00"/>
        <function-ref name="disable" scoped="" ref="0x7f524293db90"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f524293dd20"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f524293c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f524292d7a0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f524292d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f524292db20"/>
        <function-ref name="fired" scoped="" ref="0x7f524292dcb0"/>
        <function-ref name="disable" scoped="" ref="0x7f524292de40"/>
        <function-ref name="edge" scoped="" ref="0x7f524292c020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f524292c1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f524292c340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f524292c4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f524292c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f524292eb70" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f524292eb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f524292d020"/>
        <function-ref name="disable" scoped="" ref="0x7f524292d1b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f524292d340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f524292d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f52424cce50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f52424cce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424cb410"/>
        <function-ref name="write" scoped="" ref="0x7f52424cb5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f52424d5160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f52424d5160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52424d54e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f52424cfe50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f52424cfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424ce210"/>
        <function-ref name="write" scoped="" ref="0x7f52424ce3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f52424c9880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f52424c9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424c9c00"/>
        <function-ref name="write" scoped="" ref="0x7f52424c9d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f52424c10a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f52424c10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424c1420"/>
        <function-ref name="write" scoped="" ref="0x7f52424c15b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f52424c80a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f52424c80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424c8420"/>
        <function-ref name="write" scoped="" ref="0x7f52424c85b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f52424b3500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f52424b3500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424b3880"/>
        <function-ref name="write" scoped="" ref="0x7f52424b3a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f52424b8500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f52424b8500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424b8880"/>
        <function-ref name="write" scoped="" ref="0x7f52424b8a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f52424d4490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f52424d4490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52424d4810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f52424be880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f52424be880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424bec00"/>
        <function-ref name="write" scoped="" ref="0x7f52424bed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f52424b9500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f52424b9500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424b9880"/>
        <function-ref name="write" scoped="" ref="0x7f52424b9a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f52424cee50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f52424cee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424cd210"/>
        <function-ref name="write" scoped="" ref="0x7f52424cd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f52424cde50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f52424cde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424cc210"/>
        <function-ref name="write" scoped="" ref="0x7f52424cc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f52424c3880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f52424c3880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424c3c00"/>
        <function-ref name="write" scoped="" ref="0x7f52424c3d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f52424c50a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f52424c50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424c5420"/>
        <function-ref name="write" scoped="" ref="0x7f52424c55b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f52424c8880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f52424c8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424c8c00"/>
        <function-ref name="write" scoped="" ref="0x7f52424c8d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f52424d8a90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f52424d8a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f52424d8e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f52424d6020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f52424d61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f52424d3e00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f52424d3e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52424d21c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f52424d2490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f52424d2490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52424d2910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f52424bcc80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f52424bcc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424bb0a0"/>
        <function-ref name="write" scoped="" ref="0x7f52424bb230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f52424d2be0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f52424d2be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52424d0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f52424b9ce0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f52424b9ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424b80a0"/>
        <function-ref name="write" scoped="" ref="0x7f52424b8230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f52424d3160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f52424d3160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52424d34e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f52424be0a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f52424be0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424be420"/>
        <function-ref name="write" scoped="" ref="0x7f52424be5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f52424cd670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f52424cd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424cd9f0"/>
        <function-ref name="write" scoped="" ref="0x7f52424cdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f52424ce670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f52424ce670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424ce9f0"/>
        <function-ref name="write" scoped="" ref="0x7f52424ceb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f52424d6ad0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f52424d6ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52424d6e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f52424bf0a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f52424bf0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424bf420"/>
        <function-ref name="write" scoped="" ref="0x7f52424bf5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f52424c1880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f52424c1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424c1c00"/>
        <function-ref name="write" scoped="" ref="0x7f52424c1d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f52424bf880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f52424bf880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424bfc00"/>
        <function-ref name="write" scoped="" ref="0x7f52424bfd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f52424b7ce0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f52424b7ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424b30a0"/>
        <function-ref name="write" scoped="" ref="0x7f52424b3230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f52424b8ce0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f52424b8ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424b70a0"/>
        <function-ref name="write" scoped="" ref="0x7f52424b7230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f52424c5880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f52424c5880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424c5c00"/>
        <function-ref name="write" scoped="" ref="0x7f52424c5d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f52424c00a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f52424c00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424c0420"/>
        <function-ref name="write" scoped="" ref="0x7f52424c05b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f52424bace0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f52424bace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424b90a0"/>
        <function-ref name="write" scoped="" ref="0x7f52424b9230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f52424c7880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f52424c7880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424c7c00"/>
        <function-ref name="write" scoped="" ref="0x7f52424c7d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f52424b3ce0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f52424b3ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f52424b20a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f52424b2230"/>
        <function-ref name="write" scoped="" ref="0x7f52424b23c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f52424b2550"/>
        <function-ref name="readDone" scoped="" ref="0x7f52424b26e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f52424d6480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f52424d6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52424d6800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f52424cf670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f52424cf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424cf9f0"/>
        <function-ref name="write" scoped="" ref="0x7f52424cfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f52424cc670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f52424cc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424cc9f0"/>
        <function-ref name="write" scoped="" ref="0x7f52424ccb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f52424c20a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f52424c20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424c2420"/>
        <function-ref name="write" scoped="" ref="0x7f52424c25b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f52424c70a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f52424c70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424c7420"/>
        <function-ref name="write" scoped="" ref="0x7f52424c75b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f52424c2880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f52424c2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424c2c00"/>
        <function-ref name="write" scoped="" ref="0x7f52424c2d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f52424cb870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f52424cb870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424cbbf0"/>
        <function-ref name="write" scoped="" ref="0x7f52424cbd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f52424d57b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f52424d57b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52424d5b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f52424c90a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f52424c90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424c9420"/>
        <function-ref name="write" scoped="" ref="0x7f52424c95b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f52424d9e20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f52424d9e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f52424d81c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f52424d8350"/>
        <function-ref name="request" scoped="" ref="0x7f52424d84e0"/>
        <function-ref name="granted" scoped="" ref="0x7f52424d8670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f52424d8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f52424d02f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f52424d02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52424d0670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f52424cf020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f52424cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52424cf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f52424ba500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f52424ba500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424ba880"/>
        <function-ref name="write" scoped="" ref="0x7f52424baa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f52424bbce0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f52424bbce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424ba0a0"/>
        <function-ref name="write" scoped="" ref="0x7f52424ba230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f52424d37b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f52424d37b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52424d3b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f52424bb500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f52424bb500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424bb880"/>
        <function-ref name="write" scoped="" ref="0x7f52424bba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f52424b7500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f52424b7500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424b7880"/>
        <function-ref name="write" scoped="" ref="0x7f52424b7a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f52424c30a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f52424c30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424c3420"/>
        <function-ref name="write" scoped="" ref="0x7f52424c35b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f52424c0880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f52424c0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424c0c00"/>
        <function-ref name="write" scoped="" ref="0x7f52424c0d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f52424d5e00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f52424d5e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52424d41c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f52424d4ae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f52424d4ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52424d4e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f52424c60a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f52424c60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424c6420"/>
        <function-ref name="write" scoped="" ref="0x7f52424c65b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f52424d0940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f52424d0940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52424d0cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f52424c6880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f52424c6880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424c6c00"/>
        <function-ref name="write" scoped="" ref="0x7f52424c6d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f52424bc0a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f52424bc0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424bc820"/>
        <function-ref name="write" scoped="" ref="0x7f52424bc9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f52424b29b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f52424b29b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f52424b2d30"/>
        <function-ref name="writeDone" scoped="" ref="0x7f52424b1020"/>
        <function-ref name="write" scoped="" ref="0x7f52424b11b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f52424b1340"/>
        <function-ref name="readDone" scoped="" ref="0x7f52424b14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f52428e92c0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f52428e92c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f52428e9640"/>
        <function-ref name="writeDone" scoped="" ref="0x7f52428e97d0"/>
        <function-ref name="write" scoped="" ref="0x7f52428e9960"/>
        <function-ref name="beginRead" scoped="" ref="0x7f52428e9af0"/>
        <function-ref name="readDone" scoped="" ref="0x7f52428e9c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f52428ea350" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f52428ea350"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f52428ea6d0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f52428ea860"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f52428ea9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f52428e7540" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f52428e7540"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52428e78c0"/>
        <function-ref name="write" scoped="" ref="0x7f52428e7a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f52428e6370" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f52428e6370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52428e66f0"/>
        <function-ref name="write" scoped="" ref="0x7f52428e6880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f52428eb4d0" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f52428eb4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f52428eb850"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f52428eb9e0"/>
        <function-ref name="request" scoped="" ref="0x7f52428ebb70"/>
        <function-ref name="granted" scoped="" ref="0x7f52428ebd00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f52428ea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f52428e51d0" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f52428e51d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52428e5550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f52428ce2e0" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f52428ce2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f52428ce660"/>
        <function-ref name="sendDone" scoped="" ref="0x7f52428ce7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f52428df890" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f52428df890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f52428dfc10"/>
        <function-ref name="writeDone" scoped="" ref="0x7f52428dfda0"/>
        <function-ref name="write" scoped="" ref="0x7f52428de020"/>
        <function-ref name="beginRead" scoped="" ref="0x7f52428de1b0"/>
        <function-ref name="readDone" scoped="" ref="0x7f52428de340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f52428e1660" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f52428e1660"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f52428e19e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f52428e1b70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f52428e1d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f52428d7c70" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f52428d7c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f52428d9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f52428ceb40" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7f52428ceb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f52428d8020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f52428d81b0"/>
        <function-ref name="isState" scoped="" ref="0x7f52428d8340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f52428d84d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f52428d8660"/>
        <function-ref name="forceState" scoped="" ref="0x7f52428d87f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f52428da060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f52428da060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f52428da3e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f52428da570"/>
        <function-ref name="request" scoped="" ref="0x7f52428da700"/>
        <function-ref name="granted" scoped="" ref="0x7f52428da890"/>
        <function-ref name="isOwner" scoped="" ref="0x7f52428daa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f52428deba0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f52428deba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52428dc020"/>
        <function-ref name="write" scoped="" ref="0x7f52428dc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f52428dca30" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f52428dca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52428dcdb0"/>
        <function-ref name="write" scoped="" ref="0x7f52428db020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f52428d8a70" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f52428d8a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f52428d8df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f52428d6020"/>
        <function-ref name="led1On" scoped="" ref="0x7f52428d61b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f52428d6340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f52428d64d0"/>
        <function-ref name="get" scoped="" ref="0x7f52428d6660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f52428d67f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f52428d6e30"/>
        <function-ref name="set" scoped="" ref="0x7f52428d6980"/>
        <function-ref name="led0On" scoped="" ref="0x7f52428d6b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f52428d6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f52428e0510" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f52428e0510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f52428e0890"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f52428e0a20"/>
        <function-ref name="request" scoped="" ref="0x7f52428e0bb0"/>
        <function-ref name="granted" scoped="" ref="0x7f52428e0d40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f52428df020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f52428cbbd0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7f52428cbbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f52428c9020"/>
        <function-ref name="runTask" scoped="" ref="0x7f52428c91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f52428db8b0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f52428db8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52428dbc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f5242870770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f5242870770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f5242870af0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f5242870c80"/>
        <function-ref name="isState" scoped="" ref="0x7f5242870e10"/>
        <function-ref name="isIdle" scoped="" ref="0x7f5242867020"/>
        <function-ref name="requestState" scoped="" ref="0x7f52428671b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f5242867340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f524286b1d0" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f524286b1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f524286b550"/>
        <function-ref name="toIdle" scoped="" ref="0x7f524286b6e0"/>
        <function-ref name="isState" scoped="" ref="0x7f524286b870"/>
        <function-ref name="isIdle" scoped="" ref="0x7f524286ba00"/>
        <function-ref name="requestState" scoped="" ref="0x7f524286bb90"/>
        <function-ref name="forceState" scoped="" ref="0x7f524286bd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5242866020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5242866020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f52428663a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f5242866b70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f5242866b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f5242865020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f52428651b0"/>
        <function-ref name="isState" scoped="" ref="0x7f5242865340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f52428654d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f5242865660"/>
        <function-ref name="forceState" scoped="" ref="0x7f52428657f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f52424fe020" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f52424fe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f52424fe3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f52424fe530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f524284c8f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f524284c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f524284cc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f524284dc40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f524284dc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f524284c020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f524284c1b0"/>
        <function-ref name="request" scoped="" ref="0x7f524284c340"/>
        <function-ref name="granted" scoped="" ref="0x7f524284c4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f524284c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f524147b760" loc="82:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f524147b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f524147bae0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f524147bc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f5241479120" loc="87:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f5241479120"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f52414794a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5241479630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f52414798c0" loc="89:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f52414798c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f5241479c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f524147a020" loc="83:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f524147a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f524147a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f524147ca00" loc="81:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f524147ca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f524147cd80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f524147b020"/>
        <function-ref name="request" scoped="" ref="0x7f524147b1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f524147b340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f524147b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f524147a630" loc="85:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f524147a630"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f524147a9b0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f524147ab40"/>
        <function-ref name="splitRead" scoped="" ref="0x7f524147acd0"/>
        <function-ref name="write" scoped="" ref="0x7f524147ae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f52427e48e0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f52427e48e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f52427e4c60"/>
        <function-ref name="configure" scoped="" ref="0x7f52427e4df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f52427e7850" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f52427e7850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f52427e7bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f52427e7d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f52427e2a40" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f52427e2a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f52427e2dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f52427e8110" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f52427e8110"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f52427e8490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f52427e3690" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f52427e3690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f52427e3a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f52427e3ba0"/>
        <function-ref name="request" scoped="" ref="0x7f52427e3d30"/>
        <function-ref name="granted" scoped="" ref="0x7f52427e2020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f52427e21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f52427ecd80" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f52427ecd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f52427e9180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f52427e9310"/>
        <function-ref name="request" scoped="" ref="0x7f52427e94a0"/>
        <function-ref name="granted" scoped="" ref="0x7f52427e9630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f52427e97c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f52427e8790" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f52427e8790"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f52427e8b10"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f52427e8ca0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f52427e8e30"/>
        <function-ref name="write" scoped="" ref="0x7f52427e7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f52427ddb40" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f52427ddb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f52427df020"/>
        <function-ref name="txDone" scoped="" ref="0x7f52427df1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f524276c250" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f524276c250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f524276c5f0"/>
        <function-ref name="configure" scoped="" ref="0x7f524276c780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f524276ac50" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f524276ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5242769020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f52427691b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f52427683e0" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f52427683e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f5242768780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f524276ca10" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f524276ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f524276cd90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f5242768a50" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f5242768a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f5242768dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f5242767020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f52427671b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f5242767340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f52427674d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f5242767660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f52427677f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f5242767980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f5242767b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f5242767ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f5242767e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f5242766020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f52427661b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f5242766440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f52427665d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f5242766760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f52427668f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f5242766a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f5242766c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f5242766da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f5242765020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f52427651b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f5242765340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f52427654d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5242765660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f52427659f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f5242765b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f5242765d10"/>
        <function-ref name="tx" scoped="" ref="0x7f5242764020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f52427641b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f5242764340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f52427644d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f5242764660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f52427647f0"/>
        <function-ref name="rx" scoped="" ref="0x7f5242764980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f5242764b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f5242764ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f5242764e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f5242763020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f52427631b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5242763c20" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5242763c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5242762020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f52427621b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f5242762340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f52427624d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5242762660"/>
        <function-ref name="get" scoped="" ref="0x7f52427627f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5242762980"/>
        <function-ref name="led2On" scoped="" ref="0x7f5242761020"/>
        <function-ref name="set" scoped="" ref="0x7f5242762ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5242762b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f5242762e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f52427695b0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f52427695b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5242769950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5242769ae0"/>
        <function-ref name="request" scoped="" ref="0x7f5242769c70"/>
        <function-ref name="granted" scoped="" ref="0x7f5242769e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5242768020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f524276d470" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f524276d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f524276d810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f524276d9a0"/>
        <function-ref name="request" scoped="" ref="0x7f524276db30"/>
        <function-ref name="granted" scoped="" ref="0x7f524276dcc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f524276de50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f524276a060" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f524276a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f524276a3e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f524276a570"/>
        <function-ref name="splitRead" scoped="" ref="0x7f524276a700"/>
        <function-ref name="write" scoped="" ref="0x7f524276a890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f5242763480" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f5242763480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5242763800"/>
        <function-ref name="txDone" scoped="" ref="0x7f5242763990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7f52427612f0" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7f52427612f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5242761670"/>
        <function-ref name="runTask" scoped="" ref="0x7f5242761800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f52427502c0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f52427502c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5242750640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f5242755d10" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f5242755d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f52427540e0"/>
        <function-ref name="txDone" scoped="" ref="0x7f5242754270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f5242759020" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f5242759020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f52427593a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f5242759530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f52427596c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f5242759850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f52427599e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f5242759b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f5242759d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f5242758020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f52427581b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f5242758340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f52427584d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f5242758660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f52427587f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f5242758a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f5242758c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f5242758da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f5242757020"/>
        <function-ref name="isUart" scoped="" ref="0x7f52427571b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f5242757340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f52427574d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f5242757660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f52427577f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f5242757980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f5242757b10"/>
        <function-ref name="getMode" scoped="" ref="0x7f5242757ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f5242756220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f52427563b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f5242756540"/>
        <function-ref name="tx" scoped="" ref="0x7f52427566d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f5242756860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f52427569f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f5242756b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f5242756d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f5242755020"/>
        <function-ref name="rx" scoped="" ref="0x7f52427551b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f5242755340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f52427554d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f5242755660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f52427557f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f5242755980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f5242716bb0" loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f5242716bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5242715020"/>
        <function-ref name="isInput" scoped="" ref="0x7f52427151b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5242715340"/>
        <function-ref name="clr" scoped="" ref="0x7f5242713020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5242715660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52427157f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5242715980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5242715b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5242715ca0"/>
        <function-ref name="get" scoped="" ref="0x7f5242715e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5242714020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52427141b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5242714340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52427145d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5242714760"/>
        <function-ref name="set" scoped="" ref="0x7f52427148f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5242714a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52427154d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5242714c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5242714da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f52427492d0" loc="56:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f52427492d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5242749650"/>
        <function-ref name="txDone" scoped="" ref="0x7f52427497e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f52427133e0" loc="63:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f52427133e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5242713760"/>
        <function-ref name="isInput" scoped="" ref="0x7f52427138f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5242713a80"/>
        <function-ref name="clr" scoped="" ref="0x7f52427117f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5242713da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5242712020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52427121b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5242712340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52427124d0"/>
        <function-ref name="get" scoped="" ref="0x7f5242712660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52427127f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5242712980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5242712b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5242712da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5242711020"/>
        <function-ref name="set" scoped="" ref="0x7f52427111b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5242711340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5242713c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52427114d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5242711660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f5242711bb0" loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f5242711bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5242710020"/>
        <function-ref name="isInput" scoped="" ref="0x7f52427101b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5242710340"/>
        <function-ref name="clr" scoped="" ref="0x7f524270e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f5242710660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52427107f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5242710980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5242710b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5242710ca0"/>
        <function-ref name="get" scoped="" ref="0x7f5242710e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f524270f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f524270f1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f524270f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f524270f5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f524270f760"/>
        <function-ref name="set" scoped="" ref="0x7f524270f8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f524270fa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52427104d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f524270fc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f524270fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f524274e700" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f524274e700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f524274ea80"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f524274ec10"/>
        <function-ref name="setUctl" scoped="" ref="0x7f524274eda0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f524274d020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f524274d1b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f524274d340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f524274d4d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f524274d660"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f524274d7f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f524274d980"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f524274db10"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f524274dca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f524274de30"/>
        <function-ref name="getUbr" scoped="" ref="0x7f524274c120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f524274c2b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f524274c440"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f524274c5d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f524274c760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f524274c8f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f524274ca80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f524274cc10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f524274cda0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f524274b020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f524274b1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f524274b340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f524274b6d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f524274b860"/>
        <function-ref name="setUbr" scoped="" ref="0x7f524274b9f0"/>
        <function-ref name="tx" scoped="" ref="0x7f524274bb80"/>
        <function-ref name="getUctl" scoped="" ref="0x7f524274bd10"/>
        <function-ref name="disableUart" scoped="" ref="0x7f524274a020"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f524274a1b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f524274a340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f524274a4d0"/>
        <function-ref name="rx" scoped="" ref="0x7f524274a660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f524274a7f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f524274a980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f524274ab10"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f524274aca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f524274ae30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7f5242720d10" loc="59:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f5242720d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f52427470e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f5242747270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f5242747400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f5242747590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f5242747720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f52427478b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f5242747a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f5242747bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5242747d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f5242746020"/>
        <function-ref name="getData" scoped="" ref="0x7f52427461b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f5242746340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f52427464d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f5242746760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f52427468f0"/>
        <function-ref name="getIV" scoped="" ref="0x7f5242746a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f5242746c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f5242746da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f524271f020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f524271f1b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f524271f340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f524271f4d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f524271f660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f524271f7f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f524271f980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f524271fd10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f524271e020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f524271e1b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f524271e340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f524271e4d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f524271e660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f524271e7f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f524271e980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f524271eb10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f524271eca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f524271ee30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f524271d020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f524271d1b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f524271d340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f524271d4d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f524271d660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f524271d7f0"/>
        <function-ref name="setData" scoped="" ref="0x7f524271d980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f524271db10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f524271dca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f524271de30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f524271c020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f524271c1b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f524271c340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f524271c8d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f524271ca60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f524271cbf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f524271cd80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f524271b020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f524271b1b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f524271b340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f524271b4d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f524271b660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f524271b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f52427183e0" loc="61:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f52427183e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5242718760"/>
        <function-ref name="isInput" scoped="" ref="0x7f52427188f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5242718a80"/>
        <function-ref name="clr" scoped="" ref="0x7f52427167f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5242718da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5242717020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52427171b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5242717340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52427174d0"/>
        <function-ref name="get" scoped="" ref="0x7f5242717660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52427177f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5242717980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5242717b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5242717da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5242716020"/>
        <function-ref name="set" scoped="" ref="0x7f52427161b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5242716340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5242718c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52427164d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5242716660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f5242749c20" loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f5242749c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5242748020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f524271bbb0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f524271bbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f524271a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f524271a1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f524271a340"/>
        <function-ref name="clr" scoped="" ref="0x7f5242718020"/>
        <function-ref name="toggle" scoped="" ref="0x7f524271a660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f524271a7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f524271a980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f524271ab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f524271aca0"/>
        <function-ref name="get" scoped="" ref="0x7f524271ae30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5242719020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52427191b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5242719340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52427195d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5242719760"/>
        <function-ref name="set" scoped="" ref="0x7f52427198f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5242719a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f524271a4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5242719c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5242719da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f52414702c0" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f52414702c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5241470640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f52414707d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f524146a440" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f524146a440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f524146a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f5241463760" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5241463760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5241463ae0"/>
        <function-ref name="configure" scoped="" ref="0x7f5241463c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f524146aa50" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f524146aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f524146add0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f5241469020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f52414691b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f5241469340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f52414694d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f5241469660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f52414697f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f5241469980"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f5241469b10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f5241469ca0"/>
        <function-ref name="getData" scoped="" ref="0x7f5241469e30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f5241468020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f52414681b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f5241468440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f52414685d0"/>
        <function-ref name="getIV" scoped="" ref="0x7f5241468760"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f52414688f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f5241468a80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f5241468c10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f5241468da0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f5241467020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f52414671b0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f5241467340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f52414674d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f5241467660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f52414679f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f5241467b80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f5241467d10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f5241466020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f52414661b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f5241466340"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f52414664d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f5241466660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f52414667f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f5241466980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f5241466b10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f5241466ca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f5241466e30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f5241465020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f52414651b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f5241465340"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f52414654d0"/>
        <function-ref name="setData" scoped="" ref="0x7f5241465660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f52414657f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f5241465980"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f5241465b10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f5241465ca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f5241465e30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f5241464020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f52414645b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f5241464740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f52414648d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f5241464a60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f5241464bf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f5241464d80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f5241463020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f52414631b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f5241463340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f52414634d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f524146bc10" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f524146bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f524146a020"/>
        <function-ref name="txDone" scoped="" ref="0x7f524146a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5241471640" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5241471640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f52414719c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5241471b50"/>
        <function-ref name="request" scoped="" ref="0x7f5241471ce0"/>
        <function-ref name="granted" scoped="" ref="0x7f5241471e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5241470030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f524146f2b0" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f524146f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f524146f630"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f524146f7c0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f524146f950"/>
        <function-ref name="enableUart" scoped="" ref="0x7f524146fae0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f524146fc70"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f524146fe00"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f524146e020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f524146e1b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f524146e340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f524146e4d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f524146e660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f524146e7f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f524146e980"/>
        <function-ref name="getUbr" scoped="" ref="0x7f524146ec10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f524146eda0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f524146d020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f524146d1b0"/>
        <function-ref name="isUart" scoped="" ref="0x7f524146d340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f524146d4d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f524146d660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f524146d7f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f524146d980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f524146db10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f524146dca0"/>
        <function-ref name="getMode" scoped="" ref="0x7f524146de30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f524146c220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f524146c3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f524146c540"/>
        <function-ref name="tx" scoped="" ref="0x7f524146c6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f524146c860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f524146c9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f524146cb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f524146cd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f524146b020"/>
        <function-ref name="rx" scoped="" ref="0x7f524146b1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f524146b340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f524146b4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f524146b660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f524146b7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f524146b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f5241470a60" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5241470a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5241470de0"/>
        <function-ref name="userId" scoped="" ref="0x7f524146f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f52426692c0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f52426692c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5242669640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f52426697d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f52426668a0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f52426668a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5242666c20"/>
        <function-ref name="configure" scoped="" ref="0x7f5242666db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f524266d4d0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f524266d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f524266d850"/>
        <function-ref name="txDone" scoped="" ref="0x7f524266d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f524266b020" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f524266b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f524266b3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f524266b530"/>
        <function-ref name="request" scoped="" ref="0x7f524266b6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f524266b850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f524266b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f524266c3f0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f524266c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f524266c770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f5242669ad0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5242669ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5242669e50"/>
        <function-ref name="userId" scoped="" ref="0x7f5242666020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f5242651bf0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5242651bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5242650020"/>
        <function-ref name="userId" scoped="" ref="0x7f52426501b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f5242664d60" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f5242664d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5242663180"/>
        <function-ref name="txDone" scoped="" ref="0x7f5242663310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f52426515e0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f52426515e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5242651960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f5242663710" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f5242663710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5242663ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f5242663d80" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f5242663d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5242651180"/>
        <function-ref name="txDone" scoped="" ref="0x7f5242651310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f52425d2a60" loc="59:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f52425d2a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f52425d2e00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f52425d1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f52425d0790" loc="64:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f52425d0790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f52425d0b30"/>
        <function-ref name="configure" scoped="" ref="0x7f52425d0cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f52425d1270" loc="60:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f52425d1270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f52425d15f0"/>
        <function-ref name="requested" scoped="" ref="0x7f52425d1780"/>
        <function-ref name="granted" scoped="" ref="0x7f52425d1910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f52425d1aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f52425d1c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f52425d3ca0" loc="58:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f52425d3ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f52425d20a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f52425d2230"/>
        <function-ref name="request" scoped="" ref="0x7f52425d23c0"/>
        <function-ref name="granted" scoped="" ref="0x7f52425d2550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f52425d26e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7f52425cf020" loc="65:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f52425cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f52425cf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f52425d1e80" loc="61:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f52425d1e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f52425d0220"/>
        <function-ref name="userId" scoped="" ref="0x7f52425d03b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f52413f5020" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f52413f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f52413f53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f52413f5630" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f52413f5630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f52413f59b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f52413f5b40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f52413f5cd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f52413f5e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f52413f26c0" loc="99:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f52413f26c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f52413f2a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f52413f2bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f52413f09d0" loc="105:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f52413f09d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f52413f0d70"/>
        <function-ref name="configure" scoped="" ref="0x7f52413ee020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f52413ee2b0" loc="106:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f52413ee2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f52413ee630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f52413ee7c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f52413ee950"/>
        <function-ref name="dequeue" scoped="" ref="0x7f52413eeae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f52413f2e40" loc="100:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f52413f2e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f52413f11e0"/>
        <function-ref name="requested" scoped="" ref="0x7f52413f1370"/>
        <function-ref name="granted" scoped="" ref="0x7f52413f1500"/>
        <function-ref name="isOwner" scoped="" ref="0x7f52413f1690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f52413f1820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f52413eed30" loc="107:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f52413eed30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f52413ed0e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f52413ed270"/>
        <function-ref name="led1On" scoped="" ref="0x7f52413ed400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f52413ed590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f52413ed720"/>
        <function-ref name="get" scoped="" ref="0x7f52413ed8b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f52413eda40"/>
        <function-ref name="led0On" scoped="" ref="0x7f52413ec1b0"/>
        <function-ref name="set" scoped="" ref="0x7f52413edd60"/>
        <function-ref name="led2On" scoped="" ref="0x7f52413edbd0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f52413ec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f52413f3850" loc="98:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f52413f3850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f52413f3bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f52413f3d80"/>
        <function-ref name="request" scoped="" ref="0x7f52413f2020"/>
        <function-ref name="granted" scoped="" ref="0x7f52413f21b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f52413f2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7f52413f02d0" loc="104:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f52413f02d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f52413f0650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f52413f1a70" loc="101:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f52413f1a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f52413f1df0"/>
        <function-ref name="userId" scoped="" ref="0x7f52413f0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f52413ec480" loc="155:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f52413ec480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f52413ec800"/>
        <function-ref name="runTask" scoped="" ref="0x7f52413ec990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f52425c5020" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f52425c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f52425c53a0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f52425c5530"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f52425c56c0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f52425c5850"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f52425c59e0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f52425c5b70"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f52425c5d00"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f52425c4020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f52425c41b0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f52425c4340"/>
        <function-ref name="getData" scoped="" ref="0x7f52425c44d0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f52425c4660"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f52425c47f0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f52425c4a80"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f52425c4c10"/>
        <function-ref name="getIV" scoped="" ref="0x7f52425c4da0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f52425c3020"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f52425c31b0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f52425c3340"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f52425c34d0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f52425c3660"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f52425c37f0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f52425c3980"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f52425c3b10"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f52425c3ca0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f52425c2220"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f52425c23b0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f52425c2540"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f52425c26d0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f52425c2860"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f52425c29f0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f52425c2b80"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f52425c2d10"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f52425c1020"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f52425c11b0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f52425c1340"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f52425c14d0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f52425c1660"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f52425c17f0"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f52425c1980"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f52425c1b10"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f52425c1ca0"/>
        <function-ref name="setData" scoped="" ref="0x7f52425c1e30"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f52425c0020"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f52425c01b0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f52425c0340"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f52425c04d0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f52425c0660"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f52425c07f0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f52425c0d80"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f52425bf020"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f52425bf1b0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f52425bf340"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f52425bf4d0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f52425bf660"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f52425bf7f0"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f52425bf980"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f52425bfb10"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f52425bfca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7f52425b5bb0" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7f52425b5bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f52425b4020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f52425b41b0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f52425b4340"/>
        <function-ref name="enableUart" scoped="" ref="0x7f52425b44d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f52425b4660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f52425b47f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f52425b4980"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f52425b4b10"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f52425b4ca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f52425b4e30"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f52425b3020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f52425b31b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f52425b3340"/>
        <function-ref name="getUbr" scoped="" ref="0x7f52425b35d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f52425b3760"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f52425b38f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f52425b3a80"/>
        <function-ref name="isUart" scoped="" ref="0x7f52425b3c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f52425b3da0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f52425b2020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f52425b21b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f52425b2340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f52425b24d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f52425b2660"/>
        <function-ref name="getMode" scoped="" ref="0x7f52425b27f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f52425b2b80"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f52425b2d10"/>
        <function-ref name="setUbr" scoped="" ref="0x7f52425b1020"/>
        <function-ref name="tx" scoped="" ref="0x7f52425b11b0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f52425b1340"/>
        <function-ref name="disableUart" scoped="" ref="0x7f52425b14d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f52425b1660"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f52425b17f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f52425b1980"/>
        <function-ref name="rx" scoped="" ref="0x7f52425b1b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f52425b1ca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f52425b1e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f52425b0020"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f52425b01b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f52425b0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f52425aee40" loc="52:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f52425aee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52425ad1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f52425ad370"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52425ad500"/>
        <function-ref name="clr" scoped="" ref="0x7f52425ab1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f52425ad820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52425ad9b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52425adb40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52425adcd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52425ade60"/>
        <function-ref name="get" scoped="" ref="0x7f52425ac020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52425ac1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52425ac340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52425ac4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52425ac760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52425ac8f0"/>
        <function-ref name="set" scoped="" ref="0x7f52425aca80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52425acc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52425ad690"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52425acda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52425ab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7f52425bed40" loc="48:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f52425bed40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f52425bb0e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f52425bb270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f52425bb400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f52425bb590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f52425bb720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f52425bb8b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f52425bba40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f52425bbbd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f52425bbd60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f52425ba020"/>
        <function-ref name="getData" scoped="" ref="0x7f52425ba1b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f52425ba340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f52425ba4d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f52425ba760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f52425ba8f0"/>
        <function-ref name="getIV" scoped="" ref="0x7f52425baa80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f52425bac10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f52425bada0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f52425b9020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f52425b91b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f52425b9340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f52425b94d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f52425b9660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f52425b97f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f52425b9980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f52425b9d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f52425b8020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f52425b81b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f52425b8340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f52425b84d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f52425b8660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f52425b87f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f52425b8980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f52425b8b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f52425b8ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f52425b8e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f52425b7020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f52425b71b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f52425b7340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f52425b74d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f52425b7660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f52425b77f0"/>
        <function-ref name="setData" scoped="" ref="0x7f52425b7980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f52425b7b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f52425b7ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f52425b7e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f52425b6020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f52425b61b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f52425b6340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f52425b68d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f52425b6a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f52425b6bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f52425b6d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f52425b5020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f52425b51b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f52425b5340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f52425b54d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f52425b5660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f52425b57f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f52425b0700" loc="51:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f52425b0700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52425b0a80"/>
        <function-ref name="isInput" scoped="" ref="0x7f52425b0c10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52425b0da0"/>
        <function-ref name="clr" scoped="" ref="0x7f52425aea80"/>
        <function-ref name="toggle" scoped="" ref="0x7f52425af1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52425af340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52425af4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52425af660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52425af7f0"/>
        <function-ref name="get" scoped="" ref="0x7f52425af980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52425afb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52425afca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52425afe30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52425ae120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52425ae2b0"/>
        <function-ref name="set" scoped="" ref="0x7f52425ae440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52425ae5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52425af020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52425ae760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52425ae8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f5242499c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f5242499c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242498210"/>
        <function-ref name="write" scoped="" ref="0x7f52424983a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f52424a4da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f52424a4da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52424a3180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f524249db50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f524249db50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524249b020"/>
        <function-ref name="write" scoped="" ref="0x7f524249b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f5242497670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f5242497670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424979f0"/>
        <function-ref name="write" scoped="" ref="0x7f5242497b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f5242490e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f5242490e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524248f210"/>
        <function-ref name="write" scoped="" ref="0x7f524248f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f5242497e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f5242497e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242496210"/>
        <function-ref name="write" scoped="" ref="0x7f52424963a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f52424832f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f52424832f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242483670"/>
        <function-ref name="write" scoped="" ref="0x7f5242483800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f52424852f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f52424852f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242485670"/>
        <function-ref name="write" scoped="" ref="0x7f5242485800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f52424a1120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f52424a1120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52424a14a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f524248b670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f524248b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524248b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f524248bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f52424862f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f52424862f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242486670"/>
        <function-ref name="write" scoped="" ref="0x7f5242486800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f524249bc60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f524249bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524249a020"/>
        <function-ref name="write" scoped="" ref="0x7f524249a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f524249ac60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f524249ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242499020"/>
        <function-ref name="write" scoped="" ref="0x7f52424991b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f5242491670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f5242491670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424919f0"/>
        <function-ref name="write" scoped="" ref="0x7f5242491b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f5242493e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f5242493e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242492210"/>
        <function-ref name="write" scoped="" ref="0x7f52424923a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f5242496670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f5242496670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424969f0"/>
        <function-ref name="write" scoped="" ref="0x7f5242496b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f52424a5760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f52424a5760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f52424a5ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f52424a5c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f52424a5e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f52424a0aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f52424a0aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52424a0e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f524249f120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f524249f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f524249f5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f524248aa70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f524248aa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524248adf0"/>
        <function-ref name="write" scoped="" ref="0x7f5242489020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f524249f870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f524249f870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f524249fbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f5242486ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5242486ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242486e50"/>
        <function-ref name="write" scoped="" ref="0x7f5242485020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f52424a1dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f52424a1dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52424a0180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f524248ce50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f524248ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524248b210"/>
        <function-ref name="write" scoped="" ref="0x7f524248b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f524249a480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f524249a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524249a800"/>
        <function-ref name="write" scoped="" ref="0x7f524249a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f524249b480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f524249b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524249b800"/>
        <function-ref name="write" scoped="" ref="0x7f524249b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f52424a4750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f52424a4750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52424a4ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f524248de50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f524248de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524248c210"/>
        <function-ref name="write" scoped="" ref="0x7f524248c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f524248f670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f524248f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524248f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f524248fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f524248c670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f524248c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524248c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f524248cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f5242484ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f5242484ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242484e50"/>
        <function-ref name="write" scoped="" ref="0x7f5242483020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f5242485ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f5242485ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242485e50"/>
        <function-ref name="write" scoped="" ref="0x7f5242484020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f5242492670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f5242492670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424929f0"/>
        <function-ref name="write" scoped="" ref="0x7f5242492b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f524248fe50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f524248fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524248d210"/>
        <function-ref name="write" scoped="" ref="0x7f524248d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f5242488ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f5242488ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242488e50"/>
        <function-ref name="write" scoped="" ref="0x7f5242486020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f5242494670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f5242494670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424949f0"/>
        <function-ref name="write" scoped="" ref="0x7f5242494b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f5242483ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f5242483ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5242483e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5242482020"/>
        <function-ref name="write" scoped="" ref="0x7f52424821b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5242482340"/>
        <function-ref name="readDone" scoped="" ref="0x7f52424824d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f52424a4100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f52424a4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52424a4480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f524249d370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f524249d370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524249d6f0"/>
        <function-ref name="write" scoped="" ref="0x7f524249d880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f5242499480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f5242499480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242499800"/>
        <function-ref name="write" scoped="" ref="0x7f5242499990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f5242491e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f5242491e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242490210"/>
        <function-ref name="write" scoped="" ref="0x7f52424903a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f5242496e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f5242496e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242494210"/>
        <function-ref name="write" scoped="" ref="0x7f52424943a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f5242490670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f5242490670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424909f0"/>
        <function-ref name="write" scoped="" ref="0x7f5242490b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f5242498670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f5242498670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424989f0"/>
        <function-ref name="write" scoped="" ref="0x7f5242498b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f52424a3450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f52424a3450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52424a37d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f5242498e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f5242498e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242497210"/>
        <function-ref name="write" scoped="" ref="0x7f52424973a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f52424a6a80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f52424a6a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f52424a6e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f52424a5020"/>
        <function-ref name="request" scoped="" ref="0x7f52424a51b0"/>
        <function-ref name="granted" scoped="" ref="0x7f52424a5340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f52424a54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f524249e020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f524249e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f524249e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f524249ecc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f524249ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f524249d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f52424882f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f52424882f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242488670"/>
        <function-ref name="write" scoped="" ref="0x7f5242488800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f5242489ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f5242489ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242489e50"/>
        <function-ref name="write" scoped="" ref="0x7f5242488020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f52424a0450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f52424a0450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52424a07d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f52424892f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f52424892f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242489670"/>
        <function-ref name="write" scoped="" ref="0x7f5242489800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f52424842f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f52424842f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242484670"/>
        <function-ref name="write" scoped="" ref="0x7f5242484800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f5242492e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f5242492e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242491210"/>
        <function-ref name="write" scoped="" ref="0x7f52424913a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f524248d670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f524248d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524248d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f524248db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f52424a3aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f52424a3aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52424a3e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f52424a1770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f52424a1770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52424a1af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f5242494e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f5242494e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242493210"/>
        <function-ref name="write" scoped="" ref="0x7f52424933a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f524249e670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f524249e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f524249e9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f5242493670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f5242493670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424939f0"/>
        <function-ref name="write" scoped="" ref="0x7f5242493b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f524248be50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f524248be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524248a610"/>
        <function-ref name="write" scoped="" ref="0x7f524248a7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f52424827a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f52424827a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5242482b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5242482cb0"/>
        <function-ref name="write" scoped="" ref="0x7f5242482e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5242481020"/>
        <function-ref name="readDone" scoped="" ref="0x7f52424811b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f524246dc60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f524246dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524246b210"/>
        <function-ref name="write" scoped="" ref="0x7f524246b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f5242477da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f5242477da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5242476180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f5242470b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f5242470b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524246f020"/>
        <function-ref name="write" scoped="" ref="0x7f524246f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f524246a670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f524246a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524246a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f524246ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f5242463e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f5242463e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242462210"/>
        <function-ref name="write" scoped="" ref="0x7f52424623a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f524246ae50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f524246ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242469210"/>
        <function-ref name="write" scoped="" ref="0x7f52424693a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f52424562f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f52424562f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242456670"/>
        <function-ref name="write" scoped="" ref="0x7f5242456800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f52424592f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f52424592f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242459670"/>
        <function-ref name="write" scoped="" ref="0x7f5242459800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f5242475120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f5242475120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52424754a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f524245e670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f524245e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524245e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f524245eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f524245a2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f524245a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524245a670"/>
        <function-ref name="write" scoped="" ref="0x7f524245a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f524246fc60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f524246fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524246e020"/>
        <function-ref name="write" scoped="" ref="0x7f524246e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f524246ec60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f524246ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524246d020"/>
        <function-ref name="write" scoped="" ref="0x7f524246d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f5242464670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f5242464670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424649f0"/>
        <function-ref name="write" scoped="" ref="0x7f5242464b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f5242467e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f5242467e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242466210"/>
        <function-ref name="write" scoped="" ref="0x7f52424663a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f5242469670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f5242469670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424699f0"/>
        <function-ref name="write" scoped="" ref="0x7f5242469b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f5242478760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5242478760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f5242478ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f5242478c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f5242478e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f5242474aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5242474aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5242474e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f5242473120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f5242473120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52424735a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f524245da70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f524245da70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524245ddf0"/>
        <function-ref name="write" scoped="" ref="0x7f524245c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f5242473870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f5242473870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5242473bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f524245aad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f524245aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524245ae50"/>
        <function-ref name="write" scoped="" ref="0x7f5242459020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f5242475dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f5242475dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5242474180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f5242460e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f5242460e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524245e210"/>
        <function-ref name="write" scoped="" ref="0x7f524245e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f524246e480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f524246e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524246e800"/>
        <function-ref name="write" scoped="" ref="0x7f524246e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f524246f480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f524246f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524246f800"/>
        <function-ref name="write" scoped="" ref="0x7f524246f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f5242477750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f5242477750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5242477ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f5242461e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f5242461e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242460210"/>
        <function-ref name="write" scoped="" ref="0x7f52424603a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f5242462670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f5242462670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424629f0"/>
        <function-ref name="write" scoped="" ref="0x7f5242462b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f5242460670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f5242460670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424609f0"/>
        <function-ref name="write" scoped="" ref="0x7f5242460b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f5242458ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f5242458ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242458e50"/>
        <function-ref name="write" scoped="" ref="0x7f5242456020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f5242459ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f5242459ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242459e50"/>
        <function-ref name="write" scoped="" ref="0x7f5242458020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f5242466670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f5242466670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424669f0"/>
        <function-ref name="write" scoped="" ref="0x7f5242466b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f5242462e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f5242462e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242461210"/>
        <function-ref name="write" scoped="" ref="0x7f52424613a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f524245bad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f524245bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524245be50"/>
        <function-ref name="write" scoped="" ref="0x7f524245a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f5242468670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f5242468670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424689f0"/>
        <function-ref name="write" scoped="" ref="0x7f5242468b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f5242456ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f5242456ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5242456e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5242455020"/>
        <function-ref name="write" scoped="" ref="0x7f52424551b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5242455340"/>
        <function-ref name="readDone" scoped="" ref="0x7f52424554d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f5242477100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f5242477100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5242477480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f5242470370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f5242470370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424706f0"/>
        <function-ref name="write" scoped="" ref="0x7f5242470880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f524246d480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f524246d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524246d800"/>
        <function-ref name="write" scoped="" ref="0x7f524246d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f5242464e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f5242464e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242463210"/>
        <function-ref name="write" scoped="" ref="0x7f52424633a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f5242469e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f5242469e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242468210"/>
        <function-ref name="write" scoped="" ref="0x7f52424683a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f5242463670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f5242463670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424639f0"/>
        <function-ref name="write" scoped="" ref="0x7f5242463b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f524246b670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f524246b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524246b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f524246bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f5242476450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f5242476450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52424767d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f524246be50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f524246be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524246a210"/>
        <function-ref name="write" scoped="" ref="0x7f524246a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f524247a9e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f524247a9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f524247ad60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5242478020"/>
        <function-ref name="request" scoped="" ref="0x7f52424781b0"/>
        <function-ref name="granted" scoped="" ref="0x7f5242478340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f52424784d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f5242471020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f5242471020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52424713a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f5242471cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f5242471cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52424700a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f524245b2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f524245b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524245b670"/>
        <function-ref name="write" scoped="" ref="0x7f524245b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f524245cad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f524245cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524245ce50"/>
        <function-ref name="write" scoped="" ref="0x7f524245b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f5242474450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f5242474450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52424747d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f524245c2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f524245c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524245c670"/>
        <function-ref name="write" scoped="" ref="0x7f524245c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f52424582f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f52424582f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242458670"/>
        <function-ref name="write" scoped="" ref="0x7f5242458800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f5242466e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f5242466e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242464210"/>
        <function-ref name="write" scoped="" ref="0x7f52424643a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f5242461670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f5242461670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424619f0"/>
        <function-ref name="write" scoped="" ref="0x7f5242461b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f5242476aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f5242476aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5242476e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f5242475770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f5242475770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5242475af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f5242468e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f5242468e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242467210"/>
        <function-ref name="write" scoped="" ref="0x7f52424673a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f5242471670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f5242471670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52424719f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f5242467670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f5242467670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424679f0"/>
        <function-ref name="write" scoped="" ref="0x7f5242467b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f524245ee50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f524245ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524245d610"/>
        <function-ref name="write" scoped="" ref="0x7f524245d7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f52424557a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f52424557a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5242455b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5242455cb0"/>
        <function-ref name="write" scoped="" ref="0x7f5242455e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5242454020"/>
        <function-ref name="readDone" scoped="" ref="0x7f52424541b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f524244db20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f524244db20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f524244a020"/>
        <function-ref name="changed" scoped="" ref="0x7f524244a1b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f524244a340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f524244a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f524244cd20" loc="13:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f524244cd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f52424360e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f5242432310" loc="5:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f5242432310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f5242432690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7f524242f880" loc="8:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f524242f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524242fc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f5242424020" loc="8:../../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f5242424020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424243a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7f524241abd0" loc="14:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f524241abd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524241d020"/>
        <function-ref name="write" scoped="" ref="0x7f524241d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7f524241d530" loc="15:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7f524241d530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f524241d8b0"/>
        <function-ref name="stop" scoped="" ref="0x7f524241da40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f524241e140" loc="11:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f524241e140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524241e4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f5242423c50" loc="8:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f5242423c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524240a020"/>
        <function-ref name="write" scoped="" ref="0x7f524240a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f524240a540" loc="11:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f524240a540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f524240a8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f524240aa50"/>
        <function-ref name="toggle" scoped="" ref="0x7f524240abe0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f524240ad70"/>
        <function-ref name="get" scoped="" ref="0x7f5242409020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52424091b0"/>
        <function-ref name="set" scoped="" ref="0x7f5242409340"/>
        <function-ref name="clr" scoped="" ref="0x7f52424094d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f5242400950" loc="15:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f5242400950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243367640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f52433679b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f5242403780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f5242405150" loc="11:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f5242405150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52424054d0"/>
        <function-ref name="write" scoped="" ref="0x7f5242405660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f52424059f0" loc="14:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f52424059f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5242405d70"/>
        <function-ref name="isInput" scoped="" ref="0x7f5242404020"/>
        <function-ref name="toggle" scoped="" ref="0x7f52424041b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5242404340"/>
        <function-ref name="get" scoped="" ref="0x7f52424044d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5242404660"/>
        <function-ref name="set" scoped="" ref="0x7f52424047f0"/>
        <function-ref name="clr" scoped="" ref="0x7f5242404980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f5242407ca0" loc="41:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f5242407ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243367640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f52433679b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f52423e0ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f52423dea90" loc="54:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f52423dea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243367640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f52433679b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f52423dd8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f52423cd020" loc="55:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f52423cd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243367640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f52433679b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f52423cde30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f52423cc800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f52423cc340"/>
        <function-ref name="overflow" scoped="" ref="0x7f52423cccc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7f52423c7530" loc="46:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f52423c7530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243367640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f52433679b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f52423c63d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f52423c6d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f52423c6890"/>
        <function-ref name="overflow" scoped="" ref="0x7f52423c4260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f52423bf020" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f52423bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f52423bf3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f52423bf530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f52423bf6c0"/>
        <function-ref name="get" scoped="" ref="0x7f52423bf850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f52423bf9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f52423bfb70"/>
        <function-ref name="getMode" scoped="" ref="0x7f52423bfd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f52423be020"/>
        <function-ref name="overflow" scoped="" ref="0x7f52423be1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f52423be340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f52423be4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f52423c3e50" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f52423c3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243367640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f52433679b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f52423c2ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f52423c1670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f52423c11b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f52423c1b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7f524240b590" loc="3:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7f524240b590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f524240b910"/>
        <function-ref name="isInput" scoped="" ref="0x7f524240baa0"/>
        <function-ref name="toggle" scoped="" ref="0x7f524240bc30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f524240bdc0"/>
        <function-ref name="get" scoped="" ref="0x7f52423ba020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52423ba1b0"/>
        <function-ref name="set" scoped="" ref="0x7f52423ba340"/>
        <function-ref name="clr" scoped="" ref="0x7f52423ba4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f52423b8c50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f52423b8c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52423b7020"/>
        <function-ref name="isInput" scoped="" ref="0x7f52423b71b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f52423b7340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f52423b5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f52423b7660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52423b77f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f52423b7980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f52423b7b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52423b7ca0"/>
        <function-ref name="get" scoped="" ref="0x7f52423b7e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f52423b6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f52423b61b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f52423b6340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f52423b65d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f52423b6760"/>
        <function-ref name="set" scoped="" ref="0x7f52423b68f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f52423b6a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f52423b6c10"/>
        <function-ref name="clr" scoped="" ref="0x7f52423b74d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f52423b6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f52423b99e0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f52423b99e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52423b9d60"/>
        <function-ref name="isInput" scoped="" ref="0x7f52423b8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f52423b81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52423b8340"/>
        <function-ref name="get" scoped="" ref="0x7f52423b84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52423b8660"/>
        <function-ref name="set" scoped="" ref="0x7f52423b87f0"/>
        <function-ref name="clr" scoped="" ref="0x7f52423b8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f52423b01b0" loc="14:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f52423b01b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f52423b0530"/>
        <function-ref name="stop" scoped="" ref="0x7f52423b06c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f524239fcb0" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f524239fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f524239e0a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f524239e230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f524239e3c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f524239e550"/>
        <function-ref name="setCca" scoped="" ref="0x7f524239e6e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f524239e870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f524239b990" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f524239b990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f524239bd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f524239f020" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f524239f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f524239f3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f524239f530"/>
        <function-ref name="modify" scoped="" ref="0x7f524239f6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f524239f850"/>
        <function-ref name="resend" scoped="" ref="0x7f524239f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f52423a46c0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f52423a46c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f52423a4a40"/>
        <function-ref name="stop" scoped="" ref="0x7f52423a4bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f524239c150" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f524239c150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f524239c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f5242391970" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f5242391970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f5242391cf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f5242391e80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f5242390030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f52423901c0"/>
        <function-ref name="setCca" scoped="" ref="0x7f5242390350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f52423904e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f5242389950" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f5242389950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5242386020"/>
        <function-ref name="clear" scoped="" ref="0x7f5242386750"/>
        <function-ref name="isValid" scoped="" ref="0x7f5242388780"/>
        <function-ref name="set" scoped="" ref="0x7f5242386e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f5242371020" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f5242371020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52423713a0"/>
        <function-ref name="write" scoped="" ref="0x7f5242371530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f5242371890" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f5242371890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242371c10"/>
        <function-ref name="write" scoped="" ref="0x7f5242371da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f5242390900" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f5242390900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f5242390c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f5242375530" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f5242375530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52423758b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f5242384880" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f5242384880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f5242384c00"/>
        <function-ref name="disable" scoped="" ref="0x7f5242384d90"/>
        <function-ref name="captured" scoped="" ref="0x7f5242383020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f52423831b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f524238fae0" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7f524238fae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f524238b390"/>
        <function-ref name="fired" scoped="" ref="0x7f524238c360"/>
        <function-ref name="startAt" scoped="" ref="0x7f524238cce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f524238c820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f524238b850"/>
        <function-ref name="start" scoped="" ref="0x7f524238e970"/>
        <function-ref name="stop" scoped="" ref="0x7f524238ee80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f524238bd00" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f524238bd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f524238a0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f524238a230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f524238a3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f524238a550"/>
        <function-ref name="getPower" scoped="" ref="0x7f524238a6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f524238a870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f5242377550" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5242377550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52423778d0"/>
        <function-ref name="write" scoped="" ref="0x7f5242377a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f5242377e00" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f5242377e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52423761c0"/>
        <function-ref name="write" scoped="" ref="0x7f5242376350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f524236bd40" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f524236bd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f524236e0e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f524236e270"/>
        <function-ref name="sfd" scoped="" ref="0x7f524236e400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5242392bc0" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5242392bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5242391020"/>
        <function-ref name="cancel" scoped="" ref="0x7f52423911b0"/>
        <function-ref name="modify" scoped="" ref="0x7f5242391340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f52423914d0"/>
        <function-ref name="resend" scoped="" ref="0x7f5242391660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f5242379d10" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f5242379d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f52423780e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f5242378270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f5242378400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f5242375c60" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f5242375c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5242373020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f524237c820" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f524237c820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f524237cba0"/>
        <function-ref name="isInput" scoped="" ref="0x7f524237cd30"/>
        <function-ref name="toggle" scoped="" ref="0x7f524237b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f524237b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f524237b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f524237b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f524237b660"/>
        <function-ref name="clr" scoped="" ref="0x7f524237b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5242393c60" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5242393c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5242392020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f524238abb0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f524238abb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f5242389020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f52423891b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f5242389340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f524237ebe0" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f524237ebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5242384020"/>
        <function-ref name="isSet" scoped="" ref="0x7f52423841b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5242384340"/>
        <function-ref name="set" scoped="" ref="0x7f52423844d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f52423733e0" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f52423733e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242373960"/>
        <function-ref name="write" scoped="" ref="0x7f5242373af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f5242379020" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f5242379020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f52423793a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5242379530"/>
        <function-ref name="request" scoped="" ref="0x7f52423796c0"/>
        <function-ref name="granted" scoped="" ref="0x7f5242379850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f52423799e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f5242383500" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f5242383500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5242383980"/>
        <function-ref name="isInput" scoped="" ref="0x7f5242383b10"/>
        <function-ref name="toggle" scoped="" ref="0x7f5242383ca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5242383e30"/>
        <function-ref name="get" scoped="" ref="0x7f524237c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f524237c1b0"/>
        <function-ref name="set" scoped="" ref="0x7f524237c340"/>
        <function-ref name="clr" scoped="" ref="0x7f524237c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f5242370130" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f5242370130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52423704b0"/>
        <function-ref name="write" scoped="" ref="0x7f5242370640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f52423709c0" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f52423709c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242370d40"/>
        <function-ref name="write" scoped="" ref="0x7f524236f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f52423766d0" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f52423766d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5242376a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f524237bb40" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f524237bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f524237a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f524237a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f524237a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f524237a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f524237a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f524237a7f0"/>
        <function-ref name="set" scoped="" ref="0x7f524237a980"/>
        <function-ref name="clr" scoped="" ref="0x7f524237ab10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f524236e6c0" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f524236e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f524236ea40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f524236ebd0"/>
        <function-ref name="led1On" scoped="" ref="0x7f524236ed60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f524236d020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f524236d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f524236d340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f524236d4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f524236db10"/>
        <function-ref name="set" scoped="" ref="0x7f524236d660"/>
        <function-ref name="led0On" scoped="" ref="0x7f524236d7f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f524236d980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f52423725e0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f52423725e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242372960"/>
        <function-ref name="write" scoped="" ref="0x7f5242372af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5242392320" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f5242392320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f52423926a0"/>
        <function-ref name="stop" scoped="" ref="0x7f5242392830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f5242378780" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f5242378780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f5242378b00"/>
        <function-ref name="writeDone" scoped="" ref="0x7f5242378c90"/>
        <function-ref name="write" scoped="" ref="0x7f5242378e20"/>
        <function-ref name="beginRead" scoped="" ref="0x7f5242377020"/>
        <function-ref name="readDone" scoped="" ref="0x7f52423771b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f5242376de0" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f5242376de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5242375180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f5242373e80" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f5242373e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5242372220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f524238f0f0" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f524238f0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f524238f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f52422d1c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f52422d1c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422cf210"/>
        <function-ref name="write" scoped="" ref="0x7f52422cf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f52422da020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f52422da020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52422da3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f52422d4c70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f52422d4c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422d3020"/>
        <function-ref name="write" scoped="" ref="0x7f52422d31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f52422ce670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f52422ce670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422ce9f0"/>
        <function-ref name="write" scoped="" ref="0x7f52422ceb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f52422c7e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f52422c7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422c6210"/>
        <function-ref name="write" scoped="" ref="0x7f52422c63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f52422cee50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f52422cee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422cd210"/>
        <function-ref name="write" scoped="" ref="0x7f52422cd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f52422ba2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f52422ba2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422ba670"/>
        <function-ref name="write" scoped="" ref="0x7f52422ba800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f52422bd2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f52422bd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422bd670"/>
        <function-ref name="write" scoped="" ref="0x7f52422bd800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f52422d9370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f52422d9370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52422d96f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f52422c2670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f52422c2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422c29f0"/>
        <function-ref name="write" scoped="" ref="0x7f52422c2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f52422be2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f52422be2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422be670"/>
        <function-ref name="write" scoped="" ref="0x7f52422be800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f52422d3c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f52422d3c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422d2020"/>
        <function-ref name="write" scoped="" ref="0x7f52422d21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f52422d2c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f52422d2c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422d1020"/>
        <function-ref name="write" scoped="" ref="0x7f52422d11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f52422c8670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f52422c8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422c89f0"/>
        <function-ref name="write" scoped="" ref="0x7f52422c8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f52422cbe50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f52422cbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422ca210"/>
        <function-ref name="write" scoped="" ref="0x7f52422ca3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f52422cd670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f52422cd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422cd9f0"/>
        <function-ref name="write" scoped="" ref="0x7f52422cdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f52422dc8f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f52422dc8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f52422dcc70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f52422dce00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f52422db020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f52422d8d00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f52422d8d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52422d70a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f52422d7370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f52422d7370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52422d77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f52422c1a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f52422c1a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422c1df0"/>
        <function-ref name="write" scoped="" ref="0x7f52422c0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f52422d7ac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f52422d7ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52422d7e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f52422bead0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f52422bead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422bee50"/>
        <function-ref name="write" scoped="" ref="0x7f52422bd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f52422d8060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f52422d8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52422d83e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f52422c4e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f52422c4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422c2210"/>
        <function-ref name="write" scoped="" ref="0x7f52422c23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f52422d2480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f52422d2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422d2800"/>
        <function-ref name="write" scoped="" ref="0x7f52422d2990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f52422d3480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f52422d3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422d3800"/>
        <function-ref name="write" scoped="" ref="0x7f52422d3990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f52422db940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f52422db940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52422dbcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f52422c5e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f52422c5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422c4210"/>
        <function-ref name="write" scoped="" ref="0x7f52422c43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f52422c6670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f52422c6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422c69f0"/>
        <function-ref name="write" scoped="" ref="0x7f52422c6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f52422c4670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f52422c4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422c49f0"/>
        <function-ref name="write" scoped="" ref="0x7f52422c4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f52422bcad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f52422bcad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422bce50"/>
        <function-ref name="write" scoped="" ref="0x7f52422ba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f52422bdad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f52422bdad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422bde50"/>
        <function-ref name="write" scoped="" ref="0x7f52422bc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f52422ca670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f52422ca670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422ca9f0"/>
        <function-ref name="write" scoped="" ref="0x7f52422cab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f52422c6e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f52422c6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422c5210"/>
        <function-ref name="write" scoped="" ref="0x7f52422c53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f52422bfad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f52422bfad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422bfe50"/>
        <function-ref name="write" scoped="" ref="0x7f52422be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f52422cc670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f52422cc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422cc9f0"/>
        <function-ref name="write" scoped="" ref="0x7f52422ccb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f52422baad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f52422baad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f52422bae50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f52422b9020"/>
        <function-ref name="write" scoped="" ref="0x7f52422b91b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f52422b9340"/>
        <function-ref name="readDone" scoped="" ref="0x7f52422b94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f52422db2f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f52422db2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52422db670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f52422d4490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f52422d4490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422d4810"/>
        <function-ref name="write" scoped="" ref="0x7f52422d49a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f52422d1480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f52422d1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422d1800"/>
        <function-ref name="write" scoped="" ref="0x7f52422d1990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f52422c8e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f52422c8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422c7210"/>
        <function-ref name="write" scoped="" ref="0x7f52422c73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f52422cde50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f52422cde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422cc210"/>
        <function-ref name="write" scoped="" ref="0x7f52422cc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f52422c7670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f52422c7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422c79f0"/>
        <function-ref name="write" scoped="" ref="0x7f52422c7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f52422cf670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f52422cf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422cf9f0"/>
        <function-ref name="write" scoped="" ref="0x7f52422cfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f52422da670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f52422da670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52422da9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f52422cfe50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f52422cfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422ce210"/>
        <function-ref name="write" scoped="" ref="0x7f52422ce3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f52422dec30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f52422dec30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f52422dc020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f52422dc1b0"/>
        <function-ref name="request" scoped="" ref="0x7f52422dc340"/>
        <function-ref name="granted" scoped="" ref="0x7f52422dc4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f52422dc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f52422d5160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f52422d5160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52422d54e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f52422d5e00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f52422d5e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52422d41c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f52422bf2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f52422bf2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422bf670"/>
        <function-ref name="write" scoped="" ref="0x7f52422bf800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f52422c0ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f52422c0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422c0e50"/>
        <function-ref name="write" scoped="" ref="0x7f52422bf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f52422d86b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f52422d86b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52422d8a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f52422c02f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f52422c02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422c0670"/>
        <function-ref name="write" scoped="" ref="0x7f52422c0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f52422bc2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f52422bc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422bc670"/>
        <function-ref name="write" scoped="" ref="0x7f52422bc800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f52422cae50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f52422cae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422c8210"/>
        <function-ref name="write" scoped="" ref="0x7f52422c83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f52422c5670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f52422c5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422c59f0"/>
        <function-ref name="write" scoped="" ref="0x7f52422c5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f52422dacc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f52422dacc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52422d90a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f52422d99c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f52422d99c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52422d9d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f52422cce50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f52422cce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422cb210"/>
        <function-ref name="write" scoped="" ref="0x7f52422cb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f52422d57b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f52422d57b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52422d5b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f52422cb670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f52422cb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422cb9f0"/>
        <function-ref name="write" scoped="" ref="0x7f52422cbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f52422c2e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f52422c2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422c1610"/>
        <function-ref name="write" scoped="" ref="0x7f52422c17a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f52422b97a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f52422b97a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f52422b9b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f52422b9cb0"/>
        <function-ref name="write" scoped="" ref="0x7f52422b9e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f52422b8020"/>
        <function-ref name="readDone" scoped="" ref="0x7f52422b81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f52422addf0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f52422addf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f52422aa1c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f52422aa350"/>
        <function-ref name="sfd" scoped="" ref="0x7f52422aa4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f52422aa7c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f52422aa7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f52422aab40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f52422a9020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f52422a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f52422a93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f52422ad5c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f52422ad5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f52422ad940"/>
        <function-ref name="stop" scoped="" ref="0x7f52422adad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f52422a2380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f52422a2380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52422a2700"/>
        <function-ref name="isInput" scoped="" ref="0x7f52422a2890"/>
        <function-ref name="toggle" scoped="" ref="0x7f52422a2a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52422a2bb0"/>
        <function-ref name="get" scoped="" ref="0x7f52422a2d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52422a1020"/>
        <function-ref name="set" scoped="" ref="0x7f52422a11b0"/>
        <function-ref name="clr" scoped="" ref="0x7f52422a1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f524229ab90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f524229ab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f5242299020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f52422991b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f5242299340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f52422994d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f5242299660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f52422997f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5242299980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f5242299b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f5242299ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f5242299e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f5242298020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f52422981b0"/>
        <function-ref name="sync" scoped="" ref="0x7f5242298340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f52422985d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f5242298760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f52422839d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7f52422839d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5242283d50"/>
        <function-ref name="runTask" scoped="" ref="0x7f5242282020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f5242298d70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f5242298d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5242296330"/>
        <function-ref name="clear" scoped="" ref="0x7f5242296a60"/>
        <function-ref name="isValid" scoped="" ref="0x7f5242297ba0"/>
        <function-ref name="set" scoped="" ref="0x7f5242294210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f52422a16b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f52422a16b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52422a1a30"/>
        <function-ref name="isInput" scoped="" ref="0x7f52422a1bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f52422a1d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f524229f020"/>
        <function-ref name="get" scoped="" ref="0x7f524229f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f524229f340"/>
        <function-ref name="set" scoped="" ref="0x7f524229f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f524229f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f5242293cb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f5242293cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422920a0"/>
        <function-ref name="write" scoped="" ref="0x7f5242292230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f5242292590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f5242292590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242292910"/>
        <function-ref name="write" scoped="" ref="0x7f5242292aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f52422916d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f52422916d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242291a50"/>
        <function-ref name="write" scoped="" ref="0x7f5242291be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f524229b330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f524229b330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f524229b6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f524229b840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f524229b9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f524229bb60"/>
        <function-ref name="getPower" scoped="" ref="0x7f524229bcf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f524229be80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f52422a5550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f52422a5550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f52422a58d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f52422a5a60"/>
        <function-ref name="sfd" scoped="" ref="0x7f52422a5bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f524229c3a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f524229c3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f524229c720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f52422a3020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f52422a3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f52422a33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f52422a3530"/>
        <function-ref name="toggle" scoped="" ref="0x7f52422a36c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f52422a3850"/>
        <function-ref name="get" scoped="" ref="0x7f52422a39e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f52422a3b70"/>
        <function-ref name="set" scoped="" ref="0x7f52422a3d00"/>
        <function-ref name="clr" scoped="" ref="0x7f52422a2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f5242290020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5242290020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422903a0"/>
        <function-ref name="write" scoped="" ref="0x7f5242290530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f52422a6620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f52422a6620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f52422a69a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f524229a1e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f524229a1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f524229a560"/>
        <function-ref name="getHeader" scoped="" ref="0x7f524229a6f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f524229a880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f52422a4020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f52422a4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f52422a43a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f524229e6e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f524229e6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f524229ea60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f524229ebf0"/>
        <function-ref name="request" scoped="" ref="0x7f524229ed80"/>
        <function-ref name="granted" scoped="" ref="0x7f524229d020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f524229d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f5242292e00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f5242292e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52422911c0"/>
        <function-ref name="write" scoped="" ref="0x7f5242291350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f524229d530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f524229d530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f524229d8b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f524229da40"/>
        <function-ref name="write" scoped="" ref="0x7f524229dbd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f524229dd60"/>
        <function-ref name="readDone" scoped="" ref="0x7f524229c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f52422908b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f52422908b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5242290e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f52422a47c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f52422a47c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f52422a4b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f524228f150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f524228f150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f524228f4d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f524228f660"/>
        <function-ref name="led1On" scoped="" ref="0x7f524228f7f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f524228f980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f524228fb10"/>
        <function-ref name="get" scoped="" ref="0x7f524228fca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f524228fe30"/>
        <function-ref name="led2Off" scoped="" ref="0x7f524228e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f524228e020"/>
        <function-ref name="led0On" scoped="" ref="0x7f524228e1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f524228e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f52422933e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f52422933e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242293760"/>
        <function-ref name="write" scoped="" ref="0x7f52422938f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f5242294b10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f5242294b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5242293020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f524229fa50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f524229fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f524229fdd0"/>
        <function-ref name="disable" scoped="" ref="0x7f524229e020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f524229e1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f524229e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f524229cad0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f524229cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f524229b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f52422a6ca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f52422a6ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f52422a50a0"/>
        <function-ref name="stop" scoped="" ref="0x7f52422a5230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f5242222a70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5242222a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f5242222df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f5242226670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f5242226670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f52422269f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f5242226b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f5242226d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f5242223020"/>
        <function-ref name="getPower" scoped="" ref="0x7f52422231b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f5242223340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f5242221550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f5242221550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5242220b00"/>
        <function-ref name="clear" scoped="" ref="0x7f524221f2a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f52422203d0"/>
        <function-ref name="set" scoped="" ref="0x7f524221f9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f52422220c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f52422220c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f5242222440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f52422225d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f5242222760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f5242219480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f5242219480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5242219800"/>
        <function-ref name="isSet" scoped="" ref="0x7f5242219990"/>
        <function-ref name="cancel" scoped="" ref="0x7f5242219b20"/>
        <function-ref name="set" scoped="" ref="0x7f5242219cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f524221d660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f524221d660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368640"/>
            <typename><typedef-ref name="TMilli" ref="0x7f52433689b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f524221cce0"/>
        <function-ref name="clear" scoped="" ref="0x7f524221b460"/>
        <function-ref name="isValid" scoped="" ref="0x7f524221c5b0"/>
        <function-ref name="set" scoped="" ref="0x7f524221bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f52422236e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f52422236e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5242223a60"/>
        <function-ref name="noAck" scoped="" ref="0x7f5242223bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5242223d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f5242213020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f5242213020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f52422133a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f5242218d20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f5242218d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f52422150e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f5242215270"/>
        <function-ref name="getRssi" scoped="" ref="0x7f5242215400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f5242215590"/>
        <function-ref name="getPower" scoped="" ref="0x7f5242215720"/>
        <function-ref name="getLqi" scoped="" ref="0x7f52422158b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f524220a4a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f524220a4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f524220a820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f524220a9b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f524220ab40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f524220acd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f524220ae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f5242213a80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f5242213a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f5242211020"/>
        <function-ref name="clear" scoped="" ref="0x7f5242211750"/>
        <function-ref name="isValid" scoped="" ref="0x7f52422128d0"/>
        <function-ref name="set" scoped="" ref="0x7f5242211e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f5242214640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5242214640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f52422149c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f5242214b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f5242214ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f524220b8b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f524220b8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f524220bc30"/>
        <function-ref name="isSet" scoped="" ref="0x7f524220bdc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f524220a020"/>
        <function-ref name="set" scoped="" ref="0x7f524220a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f5242206820" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f5242206820"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f52422084c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f5242208b80" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f5242208b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368640"/>
            <typename><typedef-ref name="TMilli" ref="0x7f52433689b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f52422057d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f524220faf0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f524220faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368640"/>
            <typename><typedef-ref name="TMilli" ref="0x7f52433689b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f524220d0d0"/>
        <function-ref name="clear" scoped="" ref="0x7f524220d800"/>
        <function-ref name="isValid" scoped="" ref="0x7f524220e970"/>
        <function-ref name="set" scoped="" ref="0x7f524220b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f5242215c50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f5242215c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5242214020"/>
        <function-ref name="noAck" scoped="" ref="0x7f52422141b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5242214340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f52421b6790" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f52421b6790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f52421b53f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f52421b5a60" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f52421b5a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f52421ab890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f52421a9260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f52421abd50"/>
        <function-ref name="overflow" scoped="" ref="0x7f52421a9720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f52421a41d0" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f52421a41d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368640"/>
            <typename><typedef-ref name="TMilli" ref="0x7f52433689b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f52421a0630"/>
        <function-ref name="fired" scoped="" ref="0x7f52421a3c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f52421a29d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f52421a2550"/>
        <function-ref name="getdt" scoped="" ref="0x7f524219f020"/>
        <function-ref name="gett0" scoped="" ref="0x7f52421a0ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f52421a20d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f52421a4dc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f52421a0020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f52421a32e0"/>
        <function-ref name="stop" scoped="" ref="0x7f52421a37b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f524219f610" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f524219f610"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368640"/>
            <typename><typedef-ref name="TMilli" ref="0x7f52433689b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f524219e3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f52421a53a0" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f52421a53a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f52421a5720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f524216f870" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f524216f870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368640"/>
            <typename><typedef-ref name="TMilli" ref="0x7f52433689b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f524216c090"/>
        <function-ref name="fired" scoped="" ref="0x7f524216d090"/>
        <function-ref name="startAt" scoped="" ref="0x7f524216da10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f524216d550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f524216c550"/>
        <function-ref name="start" scoped="" ref="0x7f524216e6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f524216ebb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f524216f020" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f524216f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f524216f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f52412c1260" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f52412c1260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f52412beb30"/>
        <function-ref name="fired" scoped="" ref="0x7f52412c0a60"/>
        <function-ref name="startAt" scoped="" ref="0x7f52412be4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f52412be020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f52412bd020"/>
        <function-ref name="start" scoped="" ref="0x7f52412c0090"/>
        <function-ref name="stop" scoped="" ref="0x7f52412c05a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f52412c29d0" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f52412c29d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f52412c2d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f52412a8a80" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f52412a8a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f52412a8e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f52412a7020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f52412a71b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f52412a7340"/>
        <function-ref name="fired" scoped="" ref="0x7f52412a74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f52412ab020" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f52412ab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f52412ab3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f52412ab530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f52412ab6c0"/>
        <function-ref name="get" scoped="" ref="0x7f52412ab850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f52412ab9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f52412abb70"/>
        <function-ref name="getMode" scoped="" ref="0x7f52412abd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f52412a9020"/>
        <function-ref name="overflow" scoped="" ref="0x7f52412a91b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f52412a9340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f52412a94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f52412a9760" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f52412a9760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f52412a9ae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f52412a9c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f52412a9e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f52412a8020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f52412a81b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f52412a8340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f52412a84d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f52412a8660"/>
        <function-ref name="setControl" scoped="" ref="0x7f52412a87f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f524129e760" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f524129e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f524129eae0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f524129ec70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f524129ee00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f524129d020"/>
        <function-ref name="fired" scoped="" ref="0x7f524129d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f52412a2dd0" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f52412a2dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f52412a0180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f52412a0310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f52412a04a0"/>
        <function-ref name="get" scoped="" ref="0x7f52412a0630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f52412a07c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f52412a0950"/>
        <function-ref name="getMode" scoped="" ref="0x7f52412a0ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f52412a0c70"/>
        <function-ref name="overflow" scoped="" ref="0x7f52412a0e00"/>
        <function-ref name="setMode" scoped="" ref="0x7f524129f020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f524129f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f52412a5bf0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f52412a5bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f52412a24e0"/>
        <function-ref name="fired" scoped="" ref="0x7f52412a34e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f52412a3e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f52412a39a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f52412a29a0"/>
        <function-ref name="start" scoped="" ref="0x7f52412a4a80"/>
        <function-ref name="stop" scoped="" ref="0x7f52412a3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f52412a5360" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f52412a5360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f52412a56e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f524129f440" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f524129f440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f524129f7c0"/>
        <function-ref name="getControl" scoped="" ref="0x7f524129f950"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f524129fae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f524129fc70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f524129fe00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f524129e020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f524129e1b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f524129e340"/>
        <function-ref name="setControl" scoped="" ref="0x7f524129e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f524218fb70" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f524218fb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368640"/>
            <typename><typedef-ref name="TMilli" ref="0x7f52433689b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f524218b9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f524218a360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f524218be70"/>
        <function-ref name="overflow" scoped="" ref="0x7f524218a820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f5242184b90" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f5242184b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f52421829d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f52421814e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242181020"/>
        <function-ref name="overflow" scoped="" ref="0x7f52421819a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f5242186610" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5242186610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368640"/>
            <typename><typedef-ref name="TMilli" ref="0x7f52433689b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f52421855b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5242184020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5242185a70"/>
        <function-ref name="overflow" scoped="" ref="0x7f52421844e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f52412bb5f0" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f52412bb5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368640"/>
            <typename><typedef-ref name="TMilli" ref="0x7f52433689b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f52412b9e50"/>
        <function-ref name="fired" scoped="" ref="0x7f52412bae00"/>
        <function-ref name="startAt" scoped="" ref="0x7f52412b9800"/>
        <function-ref name="isRunning" scoped="" ref="0x7f52412b9340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f52412b7340"/>
        <function-ref name="start" scoped="" ref="0x7f52412ba430"/>
        <function-ref name="stop" scoped="" ref="0x7f52412ba940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f52412b5d20" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f52412b5d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f52412b2670"/>
        <function-ref name="fired" scoped="" ref="0x7f52412b3550"/>
        <function-ref name="startAt" scoped="" ref="0x7f52412b2020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f52412b3a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f52412b2b30"/>
        <function-ref name="start" scoped="" ref="0x7f52412b4b60"/>
        <function-ref name="stop" scoped="" ref="0x7f52412b3090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f52412b79b0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f52412b79b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368640"/>
            <typename><typedef-ref name="TMilli" ref="0x7f52433689b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f52412b67e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f52412b51b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f52412b6ca0"/>
        <function-ref name="overflow" scoped="" ref="0x7f52412b5670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f524213a9c0" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f524213a9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f524213ad40"/>
        <function-ref name="runTask" scoped="" ref="0x7f5242139020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f524213e850" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f524213e850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368640"/>
            <typename><typedef-ref name="TMilli" ref="0x7f52433689b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f524213a090"/>
        <function-ref name="fired" scoped="" ref="0x7f524213b090"/>
        <function-ref name="startAt" scoped="" ref="0x7f524213ba10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f524213b550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f524213a550"/>
        <function-ref name="start" scoped="" ref="0x7f524213d6a0"/>
        <function-ref name="stop" scoped="" ref="0x7f524213dbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f52421432f0" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f52421432f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368640"/>
            <typename><typedef-ref name="TMilli" ref="0x7f52433689b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f524213f870"/>
        <function-ref name="fired" scoped="" ref="0x7f5242142e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5242140c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5242140780"/>
        <function-ref name="getdt" scoped="" ref="0x7f524213e1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f524213fcf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5242140300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5242142020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f524213f260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f52421424f0"/>
        <function-ref name="stop" scoped="" ref="0x7f52421429c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f52420bb020" loc="58:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f52420bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368640"/>
            <typename><typedef-ref name="TMilli" ref="0x7f52433689b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f52420b7630"/>
        <function-ref name="fired" scoped="" ref="0x7f52420baa60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f52420b9920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f52420b94a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f52420b6020"/>
        <function-ref name="gett0" scoped="" ref="0x7f52420b7ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f52420b9020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f52420bbc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f52420b7020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f52420ba110"/>
        <function-ref name="stop" scoped="" ref="0x7f52420ba5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7f52420b6450" loc="59:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSkew" scoped="" ref="0x7f52420b6450"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7f52420b67d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f52420c28e0" loc="57:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f52420c28e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368640"/>
            <typename><typedef-ref name="TMilli" ref="0x7f52433689b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f52420bd020"/>
        <function-ref name="fired" scoped="" ref="0x7f52420c04c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f52420be300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f52420c0e00"/>
        <function-ref name="getdt" scoped="" ref="0x7f52420bd960"/>
        <function-ref name="gett0" scoped="" ref="0x7f52420bd4c0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f52420c0960"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f52420c1560"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f52420be930"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f52420c1a50"/>
        <function-ref name="stop" scoped="" ref="0x7f52420c0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f5241245020" loc="153:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f5241245020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f52412453a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f5241245530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f524124c180" loc="65:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f524124c180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368640"/>
            <typename><typedef-ref name="TMilli" ref="0x7f52433689b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5241248630"/>
        <function-ref name="fired" scoped="" ref="0x7f524124bbf0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5241249990"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5241249510"/>
        <function-ref name="getdt" scoped="" ref="0x7f5241247020"/>
        <function-ref name="gett0" scoped="" ref="0x7f5241248ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5241249090"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f524124cd70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5241248020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f524124b2a0"/>
        <function-ref name="stop" scoped="" ref="0x7f524124b770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7f52412468b0" loc="67:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSkew" scoped="" ref="0x7f52412468b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7f5241246c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Platform" ref="0x7f5241247410" loc="66:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f5241247410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7f52412464d0"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7f5241246660"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f5241247ab0"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f5241247c40"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7f5241247dd0"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f5241246020"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f52412461b0"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f5241246340"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f5241247790"/>
        <function-ref name="node_id" scoped="" ref="0x7f5241247920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5241253bc0" loc="63:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5241253bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368640"/>
            <typename><typedef-ref name="TMilli" ref="0x7f52433689b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f524124e220"/>
        <function-ref name="fired" scoped="" ref="0x7f5241251740"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f524124f570"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f524124f0d0"/>
        <function-ref name="getdt" scoped="" ref="0x7f524124eb60"/>
        <function-ref name="gett0" scoped="" ref="0x7f524124e6c0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5241251be0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5241252860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f524124fba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5241252d50"/>
        <function-ref name="stop" scoped="" ref="0x7f52412512a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f52420b4a20" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f52420b4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368640"/>
            <typename><typedef-ref name="TMilli" ref="0x7f52433689b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f52420b36b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f52420b3d20" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f52420b3d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368640"/>
            <typename><typedef-ref name="TMilli" ref="0x7f52433689b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f52420b1b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f52420b0550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f52420b0090"/>
        <function-ref name="overflow" scoped="" ref="0x7f52420b0a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f52420aace0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f52420aace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368640"/>
            <typename><typedef-ref name="TMilli" ref="0x7f52433689b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5242095220"/>
        <function-ref name="fired" scoped="" ref="0x7f52420977c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5242096590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5242096110"/>
        <function-ref name="getdt" scoped="" ref="0x7f5242095b20"/>
        <function-ref name="gett0" scoped="" ref="0x7f52420956a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5242097c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5242099940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5242096ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5242099e10"/>
        <function-ref name="stop" scoped="" ref="0x7f5242097340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f52420a1610" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f52420a1610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368640"/>
            <typename><typedef-ref name="TMilli" ref="0x7f52433689b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f524209dc40"/>
        <function-ref name="fired" scoped="" ref="0x7f524209e1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f524209d020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f524209eae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f524209c590"/>
        <function-ref name="gett0" scoped="" ref="0x7f524209c110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f524209e660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f52420a0390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f524209d630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f52420a0860"/>
        <function-ref name="stop" scoped="" ref="0x7f52420a0d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f52420832f0" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f52420832f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242083870"/>
        <function-ref name="write" scoped="" ref="0x7f5242083a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f524208e670" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f524208e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f524208e9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f52420872f0" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f52420872f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242087670"/>
        <function-ref name="write" scoped="" ref="0x7f5242087800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f5242082ce0" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f5242082ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52420810a0"/>
        <function-ref name="write" scoped="" ref="0x7f5242081230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f524207a500" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f524207a500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524207a880"/>
        <function-ref name="write" scoped="" ref="0x7f524207aa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f5242081500" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f5242081500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242081880"/>
        <function-ref name="write" scoped="" ref="0x7f5242081a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f524206e900" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f524206e900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524206ec80"/>
        <function-ref name="write" scoped="" ref="0x7f524206ee10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f5242071900" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f5242071900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242071c80"/>
        <function-ref name="write" scoped="" ref="0x7f5242071e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f524208d9c0" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f524208d9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f524208dd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f5242076ce0" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f5242076ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52420750a0"/>
        <function-ref name="write" scoped="" ref="0x7f5242075230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f5242072900" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f5242072900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242072c80"/>
        <function-ref name="write" scoped="" ref="0x7f5242072e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f52420862f0" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f52420862f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242086670"/>
        <function-ref name="write" scoped="" ref="0x7f5242086800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f52420852f0" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f52420852f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242085670"/>
        <function-ref name="write" scoped="" ref="0x7f5242085800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f524207cce0" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f524207cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524207b0a0"/>
        <function-ref name="write" scoped="" ref="0x7f524207b230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f524207d500" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f524207d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524207d880"/>
        <function-ref name="write" scoped="" ref="0x7f524207da10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f5242081ce0" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f5242081ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52420800a0"/>
        <function-ref name="write" scoped="" ref="0x7f5242080230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f524208f020" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f524208f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f524208f3a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f524208f530"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f524208f6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f524208a370" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f524208a370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f524208a6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f524208a9c0" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f524208a9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f524208ae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f5242074120" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f5242074120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52420744a0"/>
        <function-ref name="write" scoped="" ref="0x7f5242074630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f5242089160" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f5242089160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52420894e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f5242071120" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f5242071120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52420714a0"/>
        <function-ref name="write" scoped="" ref="0x7f5242071630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f524208c6b0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f524208c6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f524208ca30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f5242076500" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f5242076500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242076880"/>
        <function-ref name="write" scoped="" ref="0x7f5242076a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f5242086ad0" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f5242086ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242086e50"/>
        <function-ref name="write" scoped="" ref="0x7f5242085020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f5242087ad0" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f5242087ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242087e50"/>
        <function-ref name="write" scoped="" ref="0x7f5242086020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f524208e020" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f524208e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f524208e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f5242078500" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f5242078500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242078880"/>
        <function-ref name="write" scoped="" ref="0x7f5242078a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f524207ace0" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f524207ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52420790a0"/>
        <function-ref name="write" scoped="" ref="0x7f5242079230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f5242078ce0" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f5242078ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52420760a0"/>
        <function-ref name="write" scoped="" ref="0x7f5242076230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f524206e120" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f524206e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524206e4a0"/>
        <function-ref name="write" scoped="" ref="0x7f524206e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f524206f120" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f524206f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524206f4a0"/>
        <function-ref name="write" scoped="" ref="0x7f524206f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f524207dce0" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f524207dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524207c0a0"/>
        <function-ref name="write" scoped="" ref="0x7f524207c230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f5242079500" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f5242079500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242079880"/>
        <function-ref name="write" scoped="" ref="0x7f5242079a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f5242072120" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f5242072120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52420724a0"/>
        <function-ref name="write" scoped="" ref="0x7f5242072630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f5242080ce0" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f5242080ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524207f0a0"/>
        <function-ref name="write" scoped="" ref="0x7f524207f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f524206d120" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f524206d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f524206d4a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f524206d630"/>
        <function-ref name="write" scoped="" ref="0x7f524206d7c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f524206d950"/>
        <function-ref name="readDone" scoped="" ref="0x7f524206dae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f524208f990" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f524208f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f524208fd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f5242088ae0" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f5242088ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242088e60"/>
        <function-ref name="write" scoped="" ref="0x7f5242087020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f5242085ad0" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f5242085ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242085e50"/>
        <function-ref name="write" scoped="" ref="0x7f5242083020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f524207b500" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f524207b500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524207b880"/>
        <function-ref name="write" scoped="" ref="0x7f524207ba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f5242080500" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f5242080500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242080880"/>
        <function-ref name="write" scoped="" ref="0x7f5242080a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f524207bce0" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f524207bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524207a0a0"/>
        <function-ref name="write" scoped="" ref="0x7f524207a230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f5242083cd0" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f5242083cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52420820a0"/>
        <function-ref name="write" scoped="" ref="0x7f5242082230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f524208ecc0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f524208ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f524208d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f5242082500" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f5242082500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242082880"/>
        <function-ref name="write" scoped="" ref="0x7f5242082a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5242090250" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5242090250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f52420905d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5242090760"/>
        <function-ref name="request" scoped="" ref="0x7f52420908f0"/>
        <function-ref name="granted" scoped="" ref="0x7f5242090a80"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5242090c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f52420897b0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f52420897b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5242089b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f5242088490" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f5242088490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f5242088810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f5242073900" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f5242073900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242073c80"/>
        <function-ref name="write" scoped="" ref="0x7f5242073e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f5242073120" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f5242073120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52420734a0"/>
        <function-ref name="write" scoped="" ref="0x7f5242073630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f524208cd00" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f524208cd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f524208a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f5242074900" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f5242074900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242074c80"/>
        <function-ref name="write" scoped="" ref="0x7f5242074e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f524206f900" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f524206f900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524206fc80"/>
        <function-ref name="write" scoped="" ref="0x7f524206fe10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f524207c500" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f524207c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524207c880"/>
        <function-ref name="write" scoped="" ref="0x7f524207ca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f5242079ce0" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f5242079ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f52420780a0"/>
        <function-ref name="write" scoped="" ref="0x7f5242078230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f524208d370" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f524208d370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f524208d6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f524208c060" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f524208c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f524208c3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f524207f500" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f524207f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524207f880"/>
        <function-ref name="write" scoped="" ref="0x7f524207fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f5242089e00" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f5242089e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f52420881c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f524207fce0" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f524207fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f524207d0a0"/>
        <function-ref name="write" scoped="" ref="0x7f524207d230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f5242075500" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f5242075500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f5242075c80"/>
        <function-ref name="write" scoped="" ref="0x7f5242075e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f524206ddb0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f524206ddb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f524206c180"/>
        <function-ref name="writeDone" scoped="" ref="0x7f524206c310"/>
        <function-ref name="write" scoped="" ref="0x7f524206c4a0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f524206c630"/>
        <function-ref name="readDone" scoped="" ref="0x7f524206c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f5242040a20" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f5242040a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f5242040da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f524203f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f524203e920" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f524203e920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5242040560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5242044990" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5242044990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5242044d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f524203aa20" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f524203aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f524203ada0"/>
        <function-ref name="rand32" scoped="" ref="0x7f5242039020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f524203b940" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f524203b940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f524203a560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f524203b080" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f524203b080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f524203b400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f5242042aa0" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f5242042aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f5242042e20"/>
        <function-ref name="toIdle" scoped="" ref="0x7f524202c020"/>
        <function-ref name="isState" scoped="" ref="0x7f524202c1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f524202c340"/>
        <function-ref name="requestState" scoped="" ref="0x7f524202c4d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f524202c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5242022020" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f5242022020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f52420223a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5242022530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f52420226c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5242022850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f52420229e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5242023220" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5242023220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f52420235a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5242023730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f52420238c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5242023a50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5242023be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f524201ee60" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f524201ee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f524201d210"/>
        <function-ref name="getPayload" scoped="" ref="0x7f524201d3a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f524201d530"/>
        <function-ref name="cancel" scoped="" ref="0x7f524201d6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f524201d850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5242021a10" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5242021a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5242021d90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f524201e020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f524201e1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f524201e340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f524201e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f524201c8f0" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f524201c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f524201cc70"/>
        <function-ref name="rand32" scoped="" ref="0x7f524201ce00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f524201e750" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f524201e750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f524201ead0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f524201b170" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f524201b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f524201b4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f524201b680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f524201b810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f524201dae0" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f524201dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f524201de60"/>
        <function-ref name="toIdle" scoped="" ref="0x7f524201c020"/>
        <function-ref name="isState" scoped="" ref="0x7f524201c1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f524201c340"/>
        <function-ref name="requestState" scoped="" ref="0x7f524201c4d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f524201c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f524201f690" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f524201f690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f524201fa10"/>
        <function-ref name="toIdle" scoped="" ref="0x7f524201fba0"/>
        <function-ref name="isState" scoped="" ref="0x7f524201fd30"/>
        <function-ref name="isIdle" scoped="" ref="0x7f5242008020"/>
        <function-ref name="requestState" scoped="" ref="0x7f52420081b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f5242008340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5242002950" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f5242002950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5242002cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5242005aa0" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5242005aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5242005e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f5242002200" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f5242002200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5242002580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5241ffc3f0" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f5241ffc3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5241ffc770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5241ffdb70" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5241ffdb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5241ffc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5242000e30" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5242000e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5241ffd1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f5241ffca70" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5241ffca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f5241ffcdf0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f5241ffb020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f5241ffb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f5241ffd570" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f5241ffd570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5241ffd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5241fce020" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f5241fce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5241fce3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5241fce6b0" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f5241fce6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5241fcea30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5241fcebc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5241fced50"/>
        <function-ref name="cancel" scoped="" ref="0x7f5241fcd020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5241fcd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5241fd28e0" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5241fd28e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5241fd2c60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5241fd2df0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5241fd1020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5241fd11b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5241fd1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f5241fd1c90" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f5241fd1c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5241fd00a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5241fd0230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5241fd03c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5241fd0550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5241fd06e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5241fd15e0" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5241fd15e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5241fd1960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5241fd3be0" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5241fd3be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5241fd2020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5241fd21b0"/>
        <function-ref name="request" scoped="" ref="0x7f5241fd2340"/>
        <function-ref name="granted" scoped="" ref="0x7f5241fd24d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5241fd2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f5241fd0a50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f5241fd0a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5241fd0dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f5241fcf170" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f5241fcf170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5241fcf4f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5241fcf680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5241fcf810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5241fcf9a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5241fcfb30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5241fc4d70" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f5241fc4d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5241fc3180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5241fc3310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5241fc34a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5241fc3630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5241fc37c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5241fc3b10" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f5241fc3b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5241fc2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f5241f95db0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7f5241f95db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5241f93180"/>
        <function-ref name="runTask" scoped="" ref="0x7f5241f93310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f5241fc22f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f5241fc22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f5241fc2670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f5241fc2800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f5241fc2990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f5241fc2b20"/>
        <function-ref name="getPower" scoped="" ref="0x7f5241fc2cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f5241fc2e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f5241fc6a20" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f5241fc6a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5241fc6da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5241fc5020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5241fc51b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5241fc5340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5241fc54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f5241fc1b70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f5241fc1b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f5241fc0020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f5241fc01b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f5241fc0340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5241fc04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f5241fc1170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5241fc1170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f5241fc14f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f5241fc1680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f5241fc1810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f5241fc6370" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f5241fc6370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5241fc66f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5241fc97b0" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5241fc97b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5241fc9b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5241fc9cc0"/>
        <function-ref name="request" scoped="" ref="0x7f5241fc9e50"/>
        <function-ref name="granted" scoped="" ref="0x7f5241fc7020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5241fc71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f5241fc74d0" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f5241fc74d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5241fc7850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5241fc79e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5241fc7b70"/>
        <function-ref name="cancel" scoped="" ref="0x7f5241fc7d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5241fc6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f5241fc5840" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f5241fc5840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5241fc5bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f5241fc4020" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f5241fc4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5241fc43a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5241fc4530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5241fc46c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5241fc4850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5241fc49e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5241f75dd0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5241f75dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5241f74180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f5241f74410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f5241f74410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f5241f74790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f5241f74920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f5241f74ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f5241f74c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5241f68b80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f5241f68b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5241f67020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5241f671b0"/>
        <function-ref name="start" scoped="" ref="0x7f5241f67340"/>
        <function-ref name="stop" scoped="" ref="0x7f5241f674d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5241f66860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f5241f66860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5241f66be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5241f66d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5241f65020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5241f651b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5241f65340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5241f65690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f5241f65690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5241f65a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5241f6cce0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5241f6cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5241f690a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5241f69230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5241f693c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5241f69550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5241f696e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f5241f68080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f5241f68080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f5241f68400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f5241f68590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f5241f68720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f5241f688b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f5241f67800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f5241f67800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f5241f67b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7f5241f67d10"/>
        <function-ref name="isState" scoped="" ref="0x7f5241f66020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f5241f661b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f5241f66340"/>
        <function-ref name="forceState" scoped="" ref="0x7f5241f664d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f5241f65d90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f5241f65d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5241f64180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5241f64310"/>
        <function-ref name="start" scoped="" ref="0x7f5241f644a0"/>
        <function-ref name="stop" scoped="" ref="0x7f5241f64630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5241f69980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5241f69980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5241f69d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f5241f612d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f5241f612d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f5241f61650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f5241f617e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f5241f61970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f5241f61b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f5241f63580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f5241f63580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f5241f63900"/>
        <function-ref name="toIdle" scoped="" ref="0x7f5241f63a90"/>
        <function-ref name="isState" scoped="" ref="0x7f5241f63c20"/>
        <function-ref name="isIdle" scoped="" ref="0x7f5241f63db0"/>
        <function-ref name="requestState" scoped="" ref="0x7f5241f62020"/>
        <function-ref name="forceState" scoped="" ref="0x7f5241f621b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5241f54d70" loc="45:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f5241f54d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5241f53180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5241f53310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5241f534a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5241f53630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5241f537c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5241f57350" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5241f57350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5241f576d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5241f57860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5241f579f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5241f57b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5241f57d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f5241f54020" loc="41:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f5241f54020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f5241f543a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f5241f54530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f5241f546c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f5241f54850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f5241f549e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f5241f4e1c0" loc="44:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5241f4e1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5241f4e540"/>
        <function-ref name="noAck" scoped="" ref="0x7f5241f4e6d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5241f4e860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f5241f51410" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f5241f51410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f5241f51790"/>
        <function-ref name="setRetries" scoped="" ref="0x7f5241f51920"/>
        <function-ref name="getRetries" scoped="" ref="0x7f5241f51ab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f5241f51c40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f5241f51dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5241f2f690" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f5241f2f690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5241f2fa10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5241f30860" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f5241f30860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5241f30be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5241f30d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5241f2f020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5241f2f1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5241f2f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f5241f2d610" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f5241f2d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f5241f2d990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f5241f2db20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f5241f2dcb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f5241f2de40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f5241f2c020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f5241f2c1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f5241f2c340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f5241f2c4d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f5241f2c660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f5241f2c7f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f5241f2c980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f5241f2cb10"/>
        <function-ref name="sync" scoped="" ref="0x7f5241f2cca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f5241f2b020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f5241f2b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f5241f318b0" loc="54:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f5241f318b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5243314210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f5241f31c30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f5241f31dc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f5241f30020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f5241f301b0"/>
        <function-ref name="setCca" scoped="" ref="0x7f5241f30340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f5241f304d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f5241f32ce0" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f5241f32ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5243314210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f5241f310a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f5241f291f0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f5241f291f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f5241f29570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f5241f29700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f5241f29890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f5241f29a20"/>
        <function-ref name="setCca" scoped="" ref="0x7f5241f29bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f5241f29d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5241f33a80" loc="52:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f5241f33a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5241f33e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5241f32020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5241f321b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5241f32340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5241f324d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5241f37020" loc="48:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f5241f37020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5243314210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5241f373a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5241f37530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5241f376c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5241f37850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5241f379e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f5241f36df0" loc="50:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f5241f36df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5243314210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5241f341c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f5241f2fce0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f5241f2fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f5241f2e0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f5241f2e230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f5241f2e3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f5241f2e550"/>
        <function-ref name="getPower" scoped="" ref="0x7f5241f2e6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f5241f2e870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f5241f2b4d0" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f5241f2b4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f5241f2b950"/>
        <function-ref name="changed" scoped="" ref="0x7f5241f2bae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f5241f2bc70"/>
        <function-ref name="setAddress" scoped="" ref="0x7f5241f2be00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f5241f2eb70" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f5241f2eb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f5241f2d020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f5241f2d1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f5241f2d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5241f36210" loc="49:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5241f36210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5243314210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5241f36590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5241f28d30" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5241f28d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5241f270e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5241f27270"/>
        <function-ref name="led1On" scoped="" ref="0x7f5241f27400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5241f27590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5241f27720"/>
        <function-ref name="get" scoped="" ref="0x7f5241f278b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5241f27a40"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5241f261b0"/>
        <function-ref name="set" scoped="" ref="0x7f5241f27bd0"/>
        <function-ref name="led0On" scoped="" ref="0x7f5241f27d60"/>
        <function-ref name="led2On" scoped="" ref="0x7f5241f26020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5241f34470" loc="51:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f5241f34470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5241f347f0"/>
        <function-ref name="source" scoped="" ref="0x7f5241f34980"/>
        <function-ref name="address" scoped="" ref="0x7f5241f34b10"/>
        <function-ref name="destination" scoped="" ref="0x7f5241f34ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f5241f34e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5241f33020"/>
        <function-ref name="type" scoped="" ref="0x7f5241f331b0"/>
        <function-ref name="setType" scoped="" ref="0x7f5241f33340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5241f334d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5241f33660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5241f337f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7f5241f280f0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7f5241f280f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5241f28470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5241f28600"/>
        <function-ref name="request" scoped="" ref="0x7f5241f28790"/>
        <function-ref name="granted" scoped="" ref="0x7f5241f28920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5241f28ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5241e9f5c0" loc="46:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f5241e9f5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5241e9f940"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5241e9fad0"/>
        <function-ref name="start" scoped="" ref="0x7f5241e9fc60"/>
        <function-ref name="stop" scoped="" ref="0x7f5241e9fdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5241e9c600" loc="47:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f5241e9c600"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5243314210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5241e9c980"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5241e9cb10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5241e9cca0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5241e9ce30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5241e9b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5241e9be10" loc="49:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f5241e9be10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5241e991c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5241e99350"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5241e994e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5241e99670"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5241e99800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5241e9b800" loc="48:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5241e9b800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5243314210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5241e9bb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5241e97b20" loc="53:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5241e97b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5241e94020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5241e941b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f5241e94340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5241e944d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5241e94660"/>
        <function-ref name="get" scoped="" ref="0x7f5241e947f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5241e94980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5241e93020"/>
        <function-ref name="set" scoped="" ref="0x7f5241e94b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f5241e94ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f5241e94e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f5241e971a0" loc="51:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5241e971a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5241e97520"/>
        <function-ref name="noAck" scoped="" ref="0x7f5241e976b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5241e97840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5241e99ab0" loc="50:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f5241e99ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5241e99e30"/>
        <function-ref name="source" scoped="" ref="0x7f5241e98020"/>
        <function-ref name="address" scoped="" ref="0x7f5241e981b0"/>
        <function-ref name="destination" scoped="" ref="0x7f5241e98340"/>
        <function-ref name="setSource" scoped="" ref="0x7f5241e984d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5241e98660"/>
        <function-ref name="type" scoped="" ref="0x7f5241e987f0"/>
        <function-ref name="setType" scoped="" ref="0x7f5241e98980"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5241e98b10"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5241e98ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5241e98e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f5241e38120" loc="54:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f5241e38120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5241e384a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5241e38630"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5241e387c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5241e38950"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5241e38ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f5241e38d70" loc="55:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f5241e38d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5241e37180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f5241e3d110" loc="47:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f5241e3d110"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5243314210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5241e3d4b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5241e3d640"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5241e3d7d0"/>
        <function-ref name="cancel" scoped="" ref="0x7f5241e3d960"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5241e3daf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f5241e3ba40" loc="50:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f5241e3ba40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f5241e3bdc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f5241e3a020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5241e3a1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5241e3a340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f5241e3a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5241e3de70" loc="48:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5241e3de70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f5243314210"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5241e3c240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f5241e3a720" loc="51:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f5241e3a720"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f5241e3aaa0"/>
        <function-ref name="noAck" scoped="" ref="0x7f5241e3ac30"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f5241e3adc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f5241e3c490" loc="49:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f5241e3c490"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f5241e3c810"/>
        <function-ref name="source" scoped="" ref="0x7f5241e3c9a0"/>
        <function-ref name="address" scoped="" ref="0x7f5241e3cb30"/>
        <function-ref name="destination" scoped="" ref="0x7f5241e3ccc0"/>
        <function-ref name="setSource" scoped="" ref="0x7f5241e3ce50"/>
        <function-ref name="setDestination" scoped="" ref="0x7f5241e3b020"/>
        <function-ref name="type" scoped="" ref="0x7f5241e3b1b0"/>
        <function-ref name="setType" scoped="" ref="0x7f5241e3b340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f5241e3b4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f5241e3b660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f5241e3b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5241e328d0" loc="50:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f5241e328d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5241e32c50"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5241e32de0"/>
        <function-ref name="start" scoped="" ref="0x7f5241e31020"/>
        <function-ref name="stop" scoped="" ref="0x7f5241e311b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5241e30480" loc="52:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5241e30480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f5243313d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5241e30800"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5241e30990"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5241e30b20"/>
        <function-ref name="cancel" scoped="" ref="0x7f5241e30cb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5241e30e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5241e32280" loc="49:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5241e32280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5241e32600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5241e31940" loc="51:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5241e31940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f5243313d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5241e31cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5241e2edc0" loc="56:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5241e2edc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5241e2d180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5241e2d310"/>
        <function-ref name="led1On" scoped="" ref="0x7f5241e2d4a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5241e2d630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5241e2d7c0"/>
        <function-ref name="get" scoped="" ref="0x7f5241e2d950"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5241e2dae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5241e291b0"/>
        <function-ref name="set" scoped="" ref="0x7f5241e2dc70"/>
        <function-ref name="led0On" scoped="" ref="0x7f5241e2de00"/>
        <function-ref name="led2On" scoped="" ref="0x7f5241e29020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7f5241e2e4a0" loc="55:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f5241e2e4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f5243313d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f5241e2e820"/>
        <function-ref name="offset" scoped="" ref="0x7f5241e2e9b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f5241e2eb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f5241e262f0" loc="66:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f5241e262f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f5241e26670"/>
        <function-ref name="stopDone" scoped="" ref="0x7f5241e26800"/>
        <function-ref name="start" scoped="" ref="0x7f5241e26990"/>
        <function-ref name="stop" scoped="" ref="0x7f5241e26b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7f5241dbfe40" loc="332:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7f5241dbfe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5241dbe1e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f5241dbe370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f5241e14060" loc="74:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f5241e14060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5241e143e0"/>
        <function-ref name="stop" scoped="" ref="0x7f5241e14570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7f5241df8d10" loc="191:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7f5241df8d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5241df70e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f5241df7270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f5241e29c70" loc="65:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f5241e29c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f5241e26020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7f5241e11c50" loc="75:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7f5241e11c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7f5241e13020"/>
        <function-ref name="flush" scoped="" ref="0x7f5241e131b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7f5241dc1400" loc="322:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7f5241dc1400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5241dc1780"/>
        <function-ref name="runTask" scoped="" ref="0x7f5241dc1910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7f5241e168e0" loc="72:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f5241e168e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f5241e16c60"/>
        <function-ref name="resetSend" scoped="" ref="0x7f5241e16df0"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f5241e23020"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f5241e231b0"/>
        <function-ref name="putData" scoped="" ref="0x7f5241e23340"/>
        <function-ref name="putDone" scoped="" ref="0x7f5241e234d0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f5241e23660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5241e238e0" loc="73:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5241e238e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5241e23c60"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5241e23df0"/>
        <function-ref name="led1On" scoped="" ref="0x7f5241e15020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5241e151b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5241e15340"/>
        <function-ref name="get" scoped="" ref="0x7f5241e154d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5241e15660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5241e15ca0"/>
        <function-ref name="set" scoped="" ref="0x7f5241e157f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f5241e15980"/>
        <function-ref name="led2On" scoped="" ref="0x7f5241e15b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7f5241dba0c0" loc="341:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f5241dba0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5241dba440"/>
        <function-ref name="runTask" scoped="" ref="0x7f5241dba5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7f5241e1f130" loc="67:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f5241e1f130"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f5241e1f4b0"/>
        <function-ref name="nextByte" scoped="" ref="0x7f5241e1f640"/>
        <function-ref name="startSend" scoped="" ref="0x7f5241e1f7d0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f5241e1f960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7f5241e1c5c0" loc="68:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f5241e1c5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f5241e1c940"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f5241e1cad0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f5241e1cc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7f5241cf0c50" loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7f5241cf0c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5241cef020"/>
        <function-ref name="runTask" scoped="" ref="0x7f5241cef1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f5241cf5830" loc="51:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f5241cf5830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f5243313d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5241cf5bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f5241cf5d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f5241cf3020"/>
        <function-ref name="cancel" scoped="" ref="0x7f5241cf31b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5241cf3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7f5241cef480" loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7f5241cef480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f5241cef800"/>
        <function-ref name="runTask" scoped="" ref="0x7f5241cef990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f5241cf5110" loc="50:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f5241cf5110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f5243313d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f5241cf54b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7f5241cf3760" loc="54:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7f5241cf3760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f5243313d70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f5241cf3b00"/>
        <function-ref name="offset" scoped="" ref="0x7f5241cf3c90"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f5241cf3e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5241cf1590" loc="57:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5241cf1590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5241cf1910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5241cf1aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f5241cf1c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5241cf1dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5241cf0020"/>
        <function-ref name="get" scoped="" ref="0x7f5241cf01b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5241cf0340"/>
        <function-ref name="led2On" scoped="" ref="0x7f5241cf0980"/>
        <function-ref name="set" scoped="" ref="0x7f5241cf0660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5241cf04d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f5241cf07f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7f5241cf29d0" loc="56:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f5241cf29d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f5241cf2d50"/>
        <function-ref name="nextByte" scoped="" ref="0x7f5241cf1020"/>
        <function-ref name="startSend" scoped="" ref="0x7f5241cf11b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f5241cf1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7f5241cf20e0" loc="55:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f5241cf20e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f5241cf2460"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f5241cf25f0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f5241cf2780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7f5241cdfd20" loc="50:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f5241cdfd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5241ce90e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f5241ce9270"/>
        <function-ref name="receive" scoped="" ref="0x7f5241ce9400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f5241ce9590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f5241ce9720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f5241ce98b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5241ce9a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7f5241cedb60" loc="48:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f5241cedb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f5241cea020"/>
        <function-ref name="resetSend" scoped="" ref="0x7f5241cea1b0"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f5241cea340"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f5241cea4d0"/>
        <function-ref name="putData" scoped="" ref="0x7f5241cea660"/>
        <function-ref name="putDone" scoped="" ref="0x7f5241cea7f0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f5241cea980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5241ce9cc0" loc="51:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5241ce9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5241ce80a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5241ce8230"/>
        <function-ref name="led1On" scoped="" ref="0x7f5241ce83c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5241ce8550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5241ce86e0"/>
        <function-ref name="get" scoped="" ref="0x7f5241ce8870"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5241ce8a00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5241cdd1b0"/>
        <function-ref name="set" scoped="" ref="0x7f5241ce8b90"/>
        <function-ref name="led0On" scoped="" ref="0x7f5241ce8d20"/>
        <function-ref name="led2On" scoped="" ref="0x7f5241cdd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f5241cc0020" loc="6:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f5241cc0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5241cc03a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f5241cc0530"/>
        <function-ref name="receive" scoped="" ref="0x7f5241cc06c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f5241cc0850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f5241cc3890" loc="5:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f5241cc3890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5241cc3c10"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f5241cc3da0"/>
        <function-ref name="receive" scoped="" ref="0x7f5241cc2020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f5241cc21b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f5241cc2340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f5241cc24d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5241cc2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5241cc3080" loc="4:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f5241cc3080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5241cc3400"/>
        <function-ref name="stop" scoped="" ref="0x7f5241cc3590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5241b2fc70" loc="45:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5241b2fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5241b2e020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5241b2e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f5241b2c440" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f5241b2c440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5241b2c7c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f5241b2c950"/>
        <function-ref name="receive" scoped="" ref="0x7f5241b2cae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f5241b2cc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f5241b2b020" loc="49:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f5241b2b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f5241b2b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f5241b2e440" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f5241b2e440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5241b2e7c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f5241b2e950"/>
        <function-ref name="receive" scoped="" ref="0x7f5241b2eae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f5241b2ec70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f5241b2ee00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f5241b2c020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5241b2c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5241b2f020" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5241b2f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5241b2f3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5241b2f530"/>
        <function-ref name="request" scoped="" ref="0x7f5241b2f6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f5241b2f850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5241b2f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f5241cb0a30" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5241cb0a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5241cb0db0"/>
        <function-ref name="configure" scoped="" ref="0x7f5241caf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f5241cac020" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f5241cac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5241cac3a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f5241cac530"/>
        <function-ref name="receive" scoped="" ref="0x7f5241cac6c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f5241cac850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f5241caa450" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f5241caa450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f5241caa7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f5241caf860" loc="43:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f5241caf860"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5241cafbe0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f5241cafd70"/>
        <function-ref name="receive" scoped="" ref="0x7f5241cae020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f5241cae1b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f5241cae340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f5241cae4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5241cae660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f5241cab1d0" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f5241cab1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5241cab550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5241cab6e0"/>
        <function-ref name="request" scoped="" ref="0x7f5241cab870"/>
        <function-ref name="granted" scoped="" ref="0x7f5241caba00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5241cabb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5241cb17a0" loc="41:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5241cb17a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5241cb1b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5241cb1cb0"/>
        <function-ref name="request" scoped="" ref="0x7f5241cb1e40"/>
        <function-ref name="granted" scoped="" ref="0x7f5241cb0020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5241cb01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f5241ca81d0" loc="48:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f5241ca81d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5241ca8550"/>
        <function-ref name="txDone" scoped="" ref="0x7f5241ca86e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f5241c3ddc0" loc="47:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5241c3ddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5241c3c180"/>
        <function-ref name="configure" scoped="" ref="0x7f5241c3c310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f5241c3b890" loc="49:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f5241c3b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5241c3bc30"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f5241c3bdc0"/>
        <function-ref name="receive" scoped="" ref="0x7f5241c3a020"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f5241c3a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f5241c393e0" loc="52:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f5241c393e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f5241c39780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f5241c39a50" loc="53:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f5241c39a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f5241c39dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f5241c38020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f5241c381b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f5241c38340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f5241c384d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f5241c38660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f5241c387f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f5241c38980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f5241c38b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f5241c38ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f5241c38e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f5241c37020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f5241c371b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f5241c37440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f5241c375d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f5241c37760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f5241c378f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f5241c37a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f5241c37c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f5241c37da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f5241c36020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f5241c361b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f5241c36340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f5241c364d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5241c36660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f5241c369f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f5241c36b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f5241c36d10"/>
        <function-ref name="tx" scoped="" ref="0x7f5241c35020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f5241c351b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f5241c35340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f5241c354d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f5241c35660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f5241c357f0"/>
        <function-ref name="rx" scoped="" ref="0x7f5241c35980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f5241c35b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f5241c35ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f5241c35e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f5241c34020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f5241c341b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f5241c3c6d0" loc="48:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f5241c3c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f5241c3ca70"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f5241c3cc00"/>
        <function-ref name="receive" scoped="" ref="0x7f5241c3cd90"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f5241c3b020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f5241c3b1b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f5241c3b340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f5241c3b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f5241c33020" loc="55:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5241c33020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5241c33e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5241c31800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5241c31340"/>
        <function-ref name="overflow" scoped="" ref="0x7f5241c31cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f5241c3a5b0" loc="51:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f5241c3a5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5241c3a950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5241c3aae0"/>
        <function-ref name="request" scoped="" ref="0x7f5241c3ac70"/>
        <function-ref name="granted" scoped="" ref="0x7f5241c3ae00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5241c39020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5241c3d020" loc="46:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5241c3d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5241c3d3c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5241c3d550"/>
        <function-ref name="request" scoped="" ref="0x7f5241c3d6e0"/>
        <function-ref name="granted" scoped="" ref="0x7f5241c3d870"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5241c3da00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f5241c345b0" loc="54:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f5241c345b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5241c34950"/>
        <function-ref name="txDone" scoped="" ref="0x7f5241c34ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f5241c30120" loc="56:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f5241c30120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f5241c304a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f5241c30630"/>
        <function-ref name="led1On" scoped="" ref="0x7f5241c307c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f5241c30950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f5241c30ae0"/>
        <function-ref name="get" scoped="" ref="0x7f5241c30c70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f5241c30e00"/>
        <function-ref name="led2On" scoped="" ref="0x7f5241c2f4d0"/>
        <function-ref name="set" scoped="" ref="0x7f5241c2f1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f5241c2f020"/>
        <function-ref name="led0On" scoped="" ref="0x7f5241c2f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f5241c21860" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f5241c21860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5241c21be0"/>
        <function-ref name="txDone" scoped="" ref="0x7f5241c21d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f5241c24500" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f5241c24500"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5241c24880"/>
        <function-ref name="stop" scoped="" ref="0x7f5241c24a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f5241c24d30" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f5241c24d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f5241c270e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f5241c27270"/>
        <function-ref name="setUctl" scoped="" ref="0x7f5241c27400"/>
        <function-ref name="enableUart" scoped="" ref="0x7f5241c27590"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f5241c27720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f5241c278b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f5241c27a40"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f5241c27bd0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f5241c27d60"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f5241c26020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f5241c261b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f5241c26340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f5241c264d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f5241c26760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f5241c268f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f5241c26a80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f5241c26c10"/>
        <function-ref name="isUart" scoped="" ref="0x7f5241c26da0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f5241c23020"/>
        <function-ref name="isSpi" scoped="" ref="0x7f5241c231b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f5241c23340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f5241c234d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f5241c23660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f5241c237f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f5241c23980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f5241c23d10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f5241c22020"/>
        <function-ref name="setUbr" scoped="" ref="0x7f5241c221b0"/>
        <function-ref name="tx" scoped="" ref="0x7f5241c22340"/>
        <function-ref name="getUctl" scoped="" ref="0x7f5241c224d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f5241c22660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f5241c227f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f5241c22980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f5241c22b10"/>
        <function-ref name="rx" scoped="" ref="0x7f5241c22ca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f5241c22e30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f5241c21020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f5241c211b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f5241c21340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f5241c214d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f5241c12890" loc="66:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f5241c12890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5241c12c10"/>
        <function-ref name="isInput" scoped="" ref="0x7f5241c12da0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5241c11020"/>
        <function-ref name="clr" scoped="" ref="0x7f5241c10c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f5241c11340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5241c114d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5241c11660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5241c117f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5241c11980"/>
        <function-ref name="get" scoped="" ref="0x7f5241c11b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5241c11ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5241c11e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5241c10020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5241c102b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5241c10440"/>
        <function-ref name="set" scoped="" ref="0x7f5241c105d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5241c10760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5241c111b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5241c108f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5241c10a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f5241c18020" loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f5241c18020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5241c183a0"/>
        <function-ref name="txDone" scoped="" ref="0x7f5241c18530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f5241c0f020" loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f5241c0f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5241c0f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5241c0f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5241c0f6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f5241c0d4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5241c0f9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5241c0fb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5241c0fd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5241c0e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5241c0e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f5241c0e340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5241c0e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5241c0e660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5241c0e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5241c0ea80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5241c0ec10"/>
        <function-ref name="set" scoped="" ref="0x7f5241c0eda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5241c0d020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5241c0f850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5241c0d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5241c0d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f5241c0d890" loc="68:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f5241c0d890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5241c0dc10"/>
        <function-ref name="isInput" scoped="" ref="0x7f5241c0dda0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5241c0c020"/>
        <function-ref name="clr" scoped="" ref="0x7f5241c0bc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f5241c0c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5241c0c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5241c0c660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5241c0c7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5241c0c980"/>
        <function-ref name="get" scoped="" ref="0x7f5241c0cb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5241c0cca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5241c0ce30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5241c0b020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5241c0b2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5241c0b440"/>
        <function-ref name="set" scoped="" ref="0x7f5241c0b5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5241c0b760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5241c0c1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5241c0b8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5241c0ba80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f5241c1d3c0" loc="61:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f5241c1d3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f5241c1d740"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f5241c1d8d0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f5241c1da60"/>
        <function-ref name="enableUart" scoped="" ref="0x7f5241c1dbf0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f5241c1dd80"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f5241c1c020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f5241c1c1b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f5241c1c340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f5241c1c4d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f5241c1c660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f5241c1c7f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f5241c1c980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f5241c1cb10"/>
        <function-ref name="getUbr" scoped="" ref="0x7f5241c1cda0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f5241c1b020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f5241c1b1b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f5241c1b340"/>
        <function-ref name="isUart" scoped="" ref="0x7f5241c1b4d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f5241c1b660"/>
        <function-ref name="isSpi" scoped="" ref="0x7f5241c1b7f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f5241c1b980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f5241c1bb10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f5241c1bca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f5241c1be30"/>
        <function-ref name="getMode" scoped="" ref="0x7f5241c1a020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f5241c1a3b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f5241c1a540"/>
        <function-ref name="setUbr" scoped="" ref="0x7f5241c1a6d0"/>
        <function-ref name="tx" scoped="" ref="0x7f5241c1a860"/>
        <function-ref name="getUctl" scoped="" ref="0x7f5241c1a9f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f5241c1ab80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f5241c1ad10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f5241c19020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f5241c191b0"/>
        <function-ref name="rx" scoped="" ref="0x7f5241c19340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f5241c194d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f5241c19660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f5241c197f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f5241c19980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f5241c19b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f5241c209c0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f5241c209c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5241c20d40"/>
        <function-ref name="stop" scoped="" ref="0x7f5241c1d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f5241c14020" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f5241c14020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5241c143a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f5241c14530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5241c146c0"/>
        <function-ref name="clr" scoped="" ref="0x7f5241c124d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f5241c149e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5241c14b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5241c14d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5241c13020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5241c131b0"/>
        <function-ref name="get" scoped="" ref="0x7f5241c13340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5241c134d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5241c13660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5241c137f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5241c13a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5241c13c10"/>
        <function-ref name="set" scoped="" ref="0x7f5241c13da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5241c12020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5241c14850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5241c121b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5241c12340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f5241c188f0" loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f5241c188f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f5241c18c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f5241c18e00"/>
        <function-ref name="setResistor" scoped="" ref="0x7f5241c16020"/>
        <function-ref name="clr" scoped="" ref="0x7f5241c15c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f5241c16340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f5241c164d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f5241c16660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f5241c167f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f5241c16980"/>
        <function-ref name="get" scoped="" ref="0x7f5241c16b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f5241c16ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f5241c16e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f5241c15020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f5241c152b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f5241c15440"/>
        <function-ref name="set" scoped="" ref="0x7f5241c155d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f5241c15760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f5241c161b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f5241c158f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f5241c15a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f5241b8e7c0" loc="43:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f5241b8e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368df0"/>
            <typename><typedef-ref name="T32khz" ref="0x7f5243367200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f5241b8b620"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f5241b88020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f5241b8bae0"/>
        <function-ref name="overflow" scoped="" ref="0x7f5241b884e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f524114d020" loc="43:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f524114d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f524114d3a0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f524114d530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f524113d440" loc="48:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f524113d440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f524113d7c0"/>
        <function-ref name="configure" scoped="" ref="0x7f524113d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f524113ec10" loc="46:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f524113ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f524113d020"/>
        <function-ref name="txDone" scoped="" ref="0x7f524113d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f524114e340" loc="42:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f524114e340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f524114e6c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f524114e850"/>
        <function-ref name="request" scoped="" ref="0x7f524114e9e0"/>
        <function-ref name="granted" scoped="" ref="0x7f524114eb70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f524114ed00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f524114c020" loc="45:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f524114c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f524114c3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f524114c530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f524114c6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f524114c850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f524114c9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f524114cb70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f524114cd00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f524114a020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f524114a1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f524114a340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f524114a4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f524114a660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f524114a7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f524114aa80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f524114ac10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f524114ada0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f5241149020"/>
        <function-ref name="isUart" scoped="" ref="0x7f52411491b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f5241149340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f52411494d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f5241149660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f52411497f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f5241149980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f5241149b10"/>
        <function-ref name="getMode" scoped="" ref="0x7f5241149ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f5241148220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f52411483b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f5241148540"/>
        <function-ref name="tx" scoped="" ref="0x7f52411486d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f5241148860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f52411489f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f5241148b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f5241148d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f524113e020"/>
        <function-ref name="rx" scoped="" ref="0x7f524113e1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f524113e340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f524113e4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f524113e660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f524113e7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f524113e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f524114d7c0" loc="44:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f524114d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f524114db40"/>
        <function-ref name="userId" scoped="" ref="0x7f524114dcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5241b6f510" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5241b6f510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5241b6f890"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5241b6fa20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f5241b6eaf0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5241b6eaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5241b6ee70"/>
        <function-ref name="configure" scoped="" ref="0x7f5241b6d030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f5241b71510" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f5241b71510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5241b71890"/>
        <function-ref name="txDone" scoped="" ref="0x7f5241b71a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5241b70280" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5241b70280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5241b70600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5241b70790"/>
        <function-ref name="request" scoped="" ref="0x7f5241b70920"/>
        <function-ref name="granted" scoped="" ref="0x7f5241b70ab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5241b70c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f5241b6fd20" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5241b6fd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5241b6e0e0"/>
        <function-ref name="userId" scoped="" ref="0x7f5241b6e270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f5241b69120" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5241b69120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5241b694a0"/>
        <function-ref name="userId" scoped="" ref="0x7f5241b69630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f5241b6b230" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f5241b6b230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5241b6b5d0"/>
        <function-ref name="txDone" scoped="" ref="0x7f5241b6b760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f5241b6aad0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f5241b6aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5241b6ae50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f5241b6bb60" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f5241b6bb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f5241b6a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f5241b6a2f0" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f5241b6a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f5241b6a670"/>
        <function-ref name="txDone" scoped="" ref="0x7f5241b6a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f5241b66bd0" loc="59:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f5241b66bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f5241b65020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5241b651b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f5241b63950" loc="64:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f5241b63950"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f5241b63cf0"/>
        <function-ref name="configure" scoped="" ref="0x7f5241b63e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f5241b65400" loc="60:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5241b65400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5241b65780"/>
        <function-ref name="requested" scoped="" ref="0x7f5241b65910"/>
        <function-ref name="granted" scoped="" ref="0x7f5241b65aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5241b65c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5241b65dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f5241b67e30" loc="58:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5241b67e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5241b66210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5241b663a0"/>
        <function-ref name="request" scoped="" ref="0x7f5241b66530"/>
        <function-ref name="granted" scoped="" ref="0x7f5241b666c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5241b66850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7f5241b620f0" loc="65:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f5241b620f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5241b62470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f5241b63060" loc="61:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5241b63060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5241b633e0"/>
        <function-ref name="userId" scoped="" ref="0x7f5241b63570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f52410d9cf0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f52410d9cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f52410d80a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f52410d8330" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f52410d8330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f52410d86b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f52410d8840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f52410d89d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f52410d8b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f52410d43a0" loc="99:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f52410d43a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f52410d4740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f52410d48d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f52410d27e0" loc="105:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f52410d27e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f52410d2b80"/>
        <function-ref name="configure" scoped="" ref="0x7f52410d2d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f52410d1020" loc="106:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f52410d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f52410d13a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f52410d1530"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f52410d16c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f52410d1850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f52410d4b20" loc="100:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f52410d4b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f52410d3020"/>
        <function-ref name="requested" scoped="" ref="0x7f52410d31b0"/>
        <function-ref name="granted" scoped="" ref="0x7f52410d3340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f52410d34d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f52410d3660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f52410d1aa0" loc="107:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f52410d1aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f52410d1e20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f52410d0020"/>
        <function-ref name="led1On" scoped="" ref="0x7f52410d01b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f52410d0340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f52410d04d0"/>
        <function-ref name="get" scoped="" ref="0x7f52410d0660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f52410d07f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f52410d0e30"/>
        <function-ref name="set" scoped="" ref="0x7f52410d0b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f52410d0980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f52410d0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f52410d5540" loc="98:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f52410d5540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f52410d58e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f52410d5a70"/>
        <function-ref name="request" scoped="" ref="0x7f52410d5c00"/>
        <function-ref name="granted" scoped="" ref="0x7f52410d5d90"/>
        <function-ref name="isOwner" scoped="" ref="0x7f52410d4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7f52410d20e0" loc="104:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f52410d20e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f52410d2460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f52410d38b0" loc="101:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f52410d38b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f52410d3c30"/>
        <function-ref name="userId" scoped="" ref="0x7f52410d3dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f52410cf160" loc="155:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f52410cf160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f52410cf4e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f52410cf670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f5241b5e780" loc="72:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f5241b5e780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f5241b5eb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f5241b5ed50" loc="73:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5241b5ed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5241b48100"/>
        <function-ref name="requested" scoped="" ref="0x7f5241b48290"/>
        <function-ref name="granted" scoped="" ref="0x7f5241b48420"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5241b485b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5241b48740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f5241b5e020" loc="70:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f5241b5e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5241b5e3a0"/>
        <function-ref name="stop" scoped="" ref="0x7f5241b5e530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f5241b48990" loc="74:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5241b48990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5241b48d10"/>
        <function-ref name="userId" scoped="" ref="0x7f5241b47020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f524109abd0" loc="62:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f524109abd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f5241099020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f5241099270" loc="63:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f5241099270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f52410995f0"/>
        <function-ref name="requested" scoped="" ref="0x7f5241099780"/>
        <function-ref name="granted" scoped="" ref="0x7f5241099910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5241099aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f5241099c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f524109a470" loc="60:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f524109a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f524109a7f0"/>
        <function-ref name="stop" scoped="" ref="0x7f524109a980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f5241099e80" loc="64:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f5241099e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f5241098220"/>
        <function-ref name="userId" scoped="" ref="0x7f52410983b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7f5241b268e0" loc="3:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f5241b268e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f5241b26c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f5241b25020" loc="4:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f5241b25020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f5241b253a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f5241b25530"/>
        <function-ref name="request" scoped="" ref="0x7f5241b256c0"/>
        <function-ref name="granted" scoped="" ref="0x7f5241b25850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f5241b259e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f5241b26080" loc="2:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f5241b26080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f5241b26400"/>
        <function-ref name="stop" scoped="" ref="0x7f5241b26590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7f5241b14a30" loc="47:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7f5241b14a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f5241b14db0"/>
        <function-ref name="offset" scoped="" ref="0x7f5241b11020"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f5241b111b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5241b02060" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="TestSerialAppC.TimerIniTDMA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5241b02060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368640"/>
            <typename><typedef-ref name="TMilli" ref="0x7f52433689b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5241aff630"/>
        <function-ref name="fired" scoped="" ref="0x7f5241b01ac0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5241b00920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5241b004a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f5241afd020"/>
        <function-ref name="gett0" scoped="" ref="0x7f5241affab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5241b00020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5241b02c50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5241aff020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5241b01170"/>
        <function-ref name="stop" scoped="" ref="0x7f5241b01640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5241afcb00" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="TestSerialAppC.TimerApagaLeds"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5241afcb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368640"/>
            <typename><typedef-ref name="TMilli" ref="0x7f52433689b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5241af8110"/>
        <function-ref name="fired" scoped="" ref="0x7f5241afa5b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5241af94a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5241af9020"/>
        <function-ref name="getdt" scoped="" ref="0x7f5241af8a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f5241af8590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5241afaa30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5241afb750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5241af9ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5241afbc20"/>
        <function-ref name="stop" scoped="" ref="0x7f5241afa130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f5241af54e0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="TestSerialAppC.TimerFinTDMA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f5241af54e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f5243368640"/>
            <typename><typedef-ref name="TMilli" ref="0x7f52433689b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f5241af2a20"/>
        <function-ref name="fired" scoped="" ref="0x7f5241af3020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f5241af3da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f5241af3920"/>
        <function-ref name="getdt" scoped="" ref="0x7f5241af04a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f5241af0020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f5241af34a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f5241af4110"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f5241af2410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f5241af45e0"/>
        <function-ref name="stop" scoped="" ref="0x7f5241af4ab0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f524335fb80" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f52432fd3d0" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f52433149d0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f5243353a50" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f52433149d0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f5243353dd0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f52432fd130" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f52432faa00" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f52432fa400" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f52432fa730" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f52432f8b60" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f52432fc740" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f52432fc4c0" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f52432f9c70" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
              <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f52432f9690" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f52432f99e0" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
              <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <documentation loc="42:../../../tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f52432dda90" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f52432dd810" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f52432d9ba0" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f52432d9920" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f52432d4020" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f52432d6910" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f52432d6c40" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f52432d6020" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f52432d8050" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f52432d7a70" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f52432d7da0" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <function event="" provided="0" name="receive" ref="0x7f5243301300" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
              <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5243302850" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f5243302ba0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5243301020" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f524335ba00" loc="61:../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f524335a1f0" loc="67:../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f524335a9d0" loc="72:../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f5243359940" loc="83:../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f5243356120" loc="100:../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f5243356930" loc="117:../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f5243359190" loc="77:../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f52433554c0" loc="134:../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f5243355240" loc="134:../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f524335b270" loc="56:../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f5243357190" loc="89:../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f5243357920" loc="94:../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f5243362690" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
              <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f5243362410" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
              <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f5243360c80" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
              <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f5243360a00" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
              <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f5243366a00" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f5243360020" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5243351d30" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5243351d30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f52432eea20" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f52432f1350" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f52432ef120" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f52432f0b00" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f52432f0e40" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f52432f0350" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f52432eca70" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f52432ec1f0" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f52432f1b30" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f52432f48d0" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f52432f4650" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f52432ee0c0" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f52432efac0" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f52432efe00" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f52432f33b0" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f52432f3130" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f52432f3bb0" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f52432718a0" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f5243270020" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f5243273a40" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f5243270e80" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f5243271190" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f5243270740" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5243277c40" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f5243273350" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f5243276190" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f5243245880" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f5243244020" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f5243240b10" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f5243240890" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorPullUp" ref="0x7f524323e5d0" loc="126:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f5243247120" loc="59:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f5243243020" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f524323ed60" loc="134:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="129:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDriveStrength" ref="0x7f524323d860" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="136:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short> &#10; Set port drive strength.</short>
          <long> &#10; Set port drive strength.&#10; @param mode: MSP430_PORT_DRIVE_STRENGTH_*&#10; @return EINVAL if invalid mode or pin doesn't support drive&#10;     strength config.&#10; FAIL if pin is not an output&#10; SUCCESS if pin supports it, is an output, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f524323d5e0" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f5243244760" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f52432450e0" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDriveStrength" ref="0x7f524323b190" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get drive strength.</short>
          <long>&#10; Get drive strength.&#10; @return MSP430_PORT_DRIVE_STRENGTH_*&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f5243242770" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorPullDown" ref="0x7f524323fe30" loc="125:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f52432478c0" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorOff" ref="0x7f524323f3e0" loc="124:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; set resistor mode directly.</short>
          <long>&#10; set resistor mode directly.&#10;&#10; You have to know what you are doing when you use these.  These routines&#10; assume that the port is set for input (PxDIR).  The routines explicitly&#10; change the value of the bits setting in PxOUT.&#10;&#10; The advantage of using these routines is efficiency because there is no&#10; mode checking.  In addition, no error check is done to make sure that the&#10; port is in input mode.  The thing is, first, this is something that you&#10; get right once and then it doesn't change so why check and, second no&#10; one actually checks the error return because there really isn't any&#10; point to doing the check because this isn't something you actually need&#10; to check the return code for.  So why have one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5243248270" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="46:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f52432437a0" loc="91:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f5243240020" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f5243242020" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f52432489a0" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Platform" loc="51:../../../tos/interfaces/Platform.nc">
      <function command="" provided="0" name="jiffiesRawSize" ref="0x7f5243042930" loc="109:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="node_id" ref="0x7f524303e870" loc="182:../../../tos/interfaces/Platform.nc">
        <documentation loc="164:../../../tos/interfaces/Platform.nc">
          <short>&#10; Platform dependent node id.</short>
          <long>&#10; Platform dependent node id.&#10;&#10; Get a Platform defined node id.  This will typically be a serial number&#10; or mac address.&#10;&#10; Platform define PLATFORM_SERIAL_NUM_SIZE determines the&#10; size.  If not defined defaults to 4 bytes (uint32_t).  But platforms&#10; really should define it to be clear.  (see platform.h)&#10;&#10; input:  *lenp      pointer where to place the length of the number.&#10;&#10; output: *lenp      length filled in if non-null.&#10; return: *uint8_t   pointer to the serial_num or NULL.&#10;&#10; a Node Id is assumed to be a sequence of bytes starting with the&#10; msb first.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lenp" ref="0x7f524303e5b0" loc="182:../../../tos/interfaces/Platform.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRawSize" ref="0x7f5243045bb0" loc="79:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRaw" ref="0x7f5243045420" loc="78:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesExpired" ref="0x7f5243041700" loc="126:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t_base" ref="0x7f5243041110" loc="126:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
            </type-int>
          </variable>
          <variable name="limit" ref="0x7f5243041470" loc="126:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIntPriority" ref="0x7f5243040c50" loc="162:../../../tos/interfaces/Platform.nc">
        <documentation loc="153:../../../tos/interfaces/Platform.nc">
          <short>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.</short>
          <long>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.&#10;   modern computer hardware allows the assignment of different priorities&#10;   to interrupt sources.  This is inherently a platform thing.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="irq_number" ref="0x7f52430409d0" loc="162:../../../tos/interfaces/Platform.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set_unaligned_traps" ref="0x7f52430402a0" loc="150:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on_off" ref="0x7f5243040020" loc="150:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesRaw" ref="0x7f5243042190" loc="108:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="localTime" ref="0x7f5243048c50" loc="64:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsExpired" ref="0x7f5243043980" loc="95:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t_base" ref="0x7f5243043390" loc="95:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
            </type-int>
          </variable>
          <variable name="limit" ref="0x7f52430436f0" loc="95:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f5243001b40" loc="48:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f5243003de0" loc="43:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f5243001420" loc="47:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f5243003700" loc="42:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f52430025a0" loc="45:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f52430068f0" loc="40:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f5243003020" loc="41:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f5243002cc0" loc="46:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f524348b7e0" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f5243753700"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f52433b1a80" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f52433af1f0" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f52433b12b0" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f5243529020" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f5243ec9e80" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f5243811e20" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f5243811610" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f5243805770" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event.&#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f5243803020" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f5242edf1e0" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5242edf1e0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f5242edf420" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5242edf420"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f5242eda2a0" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5242edf420"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5242eda020" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f5242ed8430" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5242ed81b0" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f5242edb020" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5242edfd60" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f5242ed7740" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5242edf420"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5242ed7150" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f5242ed74b0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5242edf420"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f5242ecb990" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5242ecb370" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f5242ecb700" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f5242ec9b30" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5242ec98b0" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f5242eccae0" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f5242ecc120" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f5242ecfe80" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f5242ee15f0" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5242ee1370" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f5242ee07d0" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5242ee0550" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f5242ede940" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5242ede6c0" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f5242ee7840" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f52433145f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5242ee75c0" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f5242ef1400" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f52433149d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5242ef1180" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f5242ef3840" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f52433149d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f5242ef2350" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f52433149d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5242ef20d0" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f5242eedd00" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f52433149d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5242eed720" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f5242eeda70" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f52433149d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f5242eef800" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f52433149d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5242eef220" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f5242eef570" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f52433149d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f5242eea2e0" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f5243314210"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5242eea060" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f5242ee9680" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f5243314210"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5242ee90d0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f5242ee93f0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f5243314210"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f5242eec0b0" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5242eeee00" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f5242ee5d00" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f52433145f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f5242ee5720" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f5242ee5a70" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f52433145f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f5242ee4b50" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f52433145f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f5242ea16e0" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5242ea1460" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f5242ea4980" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5242ea4700" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f5242ea50b0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f5242ea6dc0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f5242ea6520" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f5242ea62a0" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f5242ea5ae0" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f5242ea5860" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f5242ea3860" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5242ea35e0" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f5242e94020" loc="59:../../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f52433149d0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f5242e968b0" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f52433149d0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f5242e96c30" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f5242eb0420" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f5242eb1e10" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f5242eb0190" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f5242eacb20" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f5242eac520" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f5242eac890" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f5242eaf020" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f5243ebd110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f5242eb0c80" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f5242eaea30" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f5242eae7b0" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f5242eb1610" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f5242eb1390" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f5242eafb50" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f5242eaf8d0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f5242e9a830" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5242e9a5b0" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f5242e9e8f0" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5242e9e2d0" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f5242e9e660" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f5242e9c810" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5242e9c590" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f5242e9bd20" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5242e9b700" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f5242e9ba90" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f5242e98810" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5242e98590" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f5242ea9430" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5242ea91b0" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f5242e883c0" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5242e8fdd0" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5242e88130" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f5242e84970" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5242e84370" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5242e846a0" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f5242e83aa0" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f5242e876c0" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5242e87440" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f5242e85b80" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
              <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5242e855a0" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f5242e858f0" loc="100:../../../tos/interfaces/Send.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
              <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f5242e8b390" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.&#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource&#10;&#10; @note This command should never be called between putting in a request&#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event,&#10;       we have opted to keep thing simple and warn you about the potential&#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f5242e8d390" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f5242e90a00" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f5242e8db80" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f5242e8bde0" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f5242e623a0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f5242e67dc0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f5242e62110" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f5242e616a0" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f5242e5fe70" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f5242e5f060" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f5242e5f8a0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5242e5fbd0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f5242e60840" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
              <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f5242e60260" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f5242e605b0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
              <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f5242e62e30" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f5242e62bb0" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f5242e5a0e0" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f5242e64870" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f5242e6da40" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f5242e65270" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f5242e542e0" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5242e54020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f5242e56710" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header" ref="0x7f524334fa10"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f524334d440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5242e56410" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f5242e53620" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata" ref="0x7f524334b020"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f524334a8c0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5242e53320" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f5242e6b6e0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f5242e68840" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f5242e68070" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f5242e6fe20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f5242e6ce80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f5242e69020" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f5242e69840" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f5242e6c6c0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f5242e4ed00" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f5242e4f350" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f5242e4e530" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f5242e4e2b0" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f5242e4fac0" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f5242e50020" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f5242e58c90" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f5242e50ad0" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f5242e50850" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f5242df2870" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f5242df2290" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f5242df25e0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f5242df31f0" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f5242df4880" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f5242df4210" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f5242df45f0" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f5242dfbc10" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
              <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f5242dfb990" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
              <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f5242df3a70" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f5242df7730" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f5242df74b0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f5242df9d30" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f5242df9ab0" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f5242df0ae0" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f5242df59c0" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f5242df5740" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f5242df02b0" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f5242df84d0" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f5242ecee10"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f5242ec55a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f5242df8cc0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f5242dfb1f0" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f5242df9390" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f5242df5020" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10;&#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f5242dee4a0" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f5242dee4a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f5242deed60" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10;&#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f5242debac0" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
              <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
            </type-tag>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f5242dee4a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f5242deb510" loc="63:../../../tos/interfaces/Read.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
              <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
            </type-tag>
          </variable>
          <variable name="val" ref="0x7f5242deb830" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f5242dee4a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f5242dc1c10" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f5243354c00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5242dc1990" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f5242dc0710" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f5243354c00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5242dc0490" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f5242de1c50" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f5242ecee10"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f5242ec55a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5242ddd020" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5242ddd020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f5242ddd260" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5242ddd260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f5242dd9e00" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5242ddd260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f5242ddbe40" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f5242dd9460" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5242ddd260"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5242ddd260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f5242ddae60" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5242ddd260"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f5242dd91d0" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5242ddd260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f5242dda640" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f5242dd8620" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5242ddd260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f5242ddddc0" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5242ddd260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f5242dddb40" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5242ddd260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f5242ddb680" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f5242dca560" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f52433149d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f5242dc84f0" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f5242dcad40" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f52433145f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f5242dcbcd0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f52433145f0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f52433149d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f5242dcb6f0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f52433145f0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f5242dcba40" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f52433149d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f5242dbde40" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f5243354c00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f5242dc6e80" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f5243354c00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f5242dc6020" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f5242dc6890" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f5242dc6be0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f5242dc4610" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f5243354c00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f5242dc5770" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f5242dc4020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f5242dc4370" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f5242dcdc30" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f5242dcd470" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f5242dcece0" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f5242dce420" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f5242d03560" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f5242d01020" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f5242d03c60" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f5242d01a00" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f5242d01780" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f5242d00410" loc="44:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f5242d00190" loc="44:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f5242d00b00" loc="46:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f5242d103e0" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f5242d0ec60" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f5242d0e9e0" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f5242d10b10" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f5242d13650" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f5242d0e270" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f5242d12570" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f5242d11cc0" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f5242d13de0" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f5242d12c80" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f5242d115c0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f5242d11340" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f5242d0d6a0" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f5242d0d420" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f5242d07bc0" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10;&#10; It has a predefined idea of what mode that capture should occur in.&#10; If that doesn't work for you, use setControl.&#10;&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; @param ccis configures which input channel to use.&#10;&#10; Msp430Timer.h has convenience definitions:&#10;&#10;     MSP430TIMER_CM_NONE,            MSP430TIMER_CCI_A&#10;     MSP430TIMER_CM_RISING,          MSP430TIMER_CCI_B&#10;     MSP430TIMER_CM_FALLING,         MSP430TIMER_CCI_GND&#10;     MSP430TIMER_CM_BOTH             MSP430TIMER_CCI_VCC&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f5242d075f0" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
          <variable name="ccis" ref="0x7f5242d07930" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f5242d14b60" loc="41:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5242ff7550"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f5242ff6020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f5242d065c0" loc="76:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f5242d054d0" loc="78:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f5242d08d30" loc="56:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short>&#10; Sets the time in compare mode.</short>
          <long>&#10; Sets the time in compare mode.&#10;&#10; setControlAsCompare has a predefined, hardcoded idea of&#10; how the control register should be set for doing a compare.&#10;&#10; Your mileage may vary and this may not work for you.   In&#10; which case you set use setControl.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f5242d06d00" loc="77:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f5242d0a350" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f5242d0aae0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f5242d085a0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5242ff7550"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f5242ff6020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f5242d08320" loc="45:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f5242ff7550"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f5242ff6020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f5242ced020" loc="45:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="42:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f5242ceb6a0" loc="85:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="76:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f5242ceb420" loc="85:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f5242ce92a0" loc="92:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="87:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f5242ce9020" loc="92:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f5242cecc10" loc="74:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="71:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f5242cec350" loc="69:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="59:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f5242ced9d0" loc="57:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="47:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f5242ced750" loc="57:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f5242cc01f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5242b70e10" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5242b70e10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f5242b6b070" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5242b6b070"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f5242b6b990" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Return counter value.</short>
          <long>&#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5242b6b070"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f5242b6aad0" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f5242b6a270" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f5242b69270" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f5242a9d190" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f5242a9c350" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f5242a9db30" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f5242a9d8b0" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f5242aa08f0" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="34:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f5242a735a0" loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="51:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f5242a6f020" loc="85:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f5242a74dc0" loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="46:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f5242a706d0" loc="80:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Sets whether the edge should be high to low or low to high.</short>
          <long>&#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;&#10; DEPRECATED.&#10;&#10; The if generates extra code that doesn't need to be there.   Replaced&#10; by edge{Rising,Falling}();&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f5242a70450" loc="80:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeFalling" ref="0x7f5242a71d30" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f5242a74620" loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeRising" ref="0x7f5242a715d0" loc="66:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="63:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Sets rising or falling edge for the interrupt generation&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f5242a73da0" loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="56:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current input value of a port.</short>
          <long> &#10; Gets the current input value of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f524291f810" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f524291c0e0" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f524291c920" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f52428f5420" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f52428f6e10" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f52428f5190" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f52428f0700" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
              <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f52428f1d90" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f52428f0110" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f52428f0460" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
              <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f52428f1020" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f5243354c00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f52428f2970" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f52428f2cc0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f52428f6020" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f5243354c00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f52428f79d0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f52428f7d20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f52428f3b90" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
              <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f52428f3250" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f52428f35a0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f52428f38f0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
              <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f52428d5a40" loc="76:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f52428d50d0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f52428d5460" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f52428d57a0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f52428d0020" loc="88:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
              <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f52428d32a0" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f52428d3630" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f52428d3970" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f52428d3ce0" loc="89:../../../tos/interfaces/SpiPacket.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
              <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f52428d78f0" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f52428d7670" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f52427f6b70" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f52427f34e0" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <short>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; </short>
        <long>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f52427f2aa0" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f52428282b0"/></typename>
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f5242829e00"/></type-tag>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f52427f16f0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f52427f1470" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f52427f0b30" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f52427f08b0" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f52427f0020" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f52427ee5f0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f52427ee370" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f52427e4020" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f52427e6750" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART. &#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information.&#10;&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f52427dd740" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f52427dd4c0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f52427e0cd0" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART.&#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information. I.e. calling &#60;code>tx&#60;/done> will transmit a byte of&#10; data in the mode (SPI or UART) the USART has been set to before.&#10;&#10; @author Vlado Handziski (handzisk@tkn.tu-berlin.de)&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f52427b97c0" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f52427c42d0" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f52427d1020" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5242844020"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f5242844860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f52427d4cf0" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5242844020"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f5242844860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f52427c73b0" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f52427ce530" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f524283f020"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f524283f860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f52427ce2b0" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f524283f020"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f524283f860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f52427be9e0" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f52427ba020" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f52427d0a90" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5242843ec0"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f5242842680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f52427ced20" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f524283f020"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f524283f860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f52427cbb90" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f52427cb910" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f52427cb1f0" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f52427be2b0" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f52427d02a0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5242843ec0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f5242842680"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f52427d0020" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5242843ec0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f5242842680"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f52427cc020" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f52427bd190" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f52427cca00" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f52427cc780" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f52427c8480" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f52427c8c00" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f52427bf420" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f52427c2190" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f52427c5350" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f52427bfb60" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f52427c4ab0" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f52427bd8b0" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f52427c9390" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f524284ad80"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f52428464d0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f52427bb070" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f52427b9020" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f52427cd700" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f52427cd480" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f52427b72a0" loc="220:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f52427b7020" loc="220:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f52427d1800" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f5242844020"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f5242844860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f52427c7b20" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f52427c3270" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f52427c0ba0" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f5242813b50"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f5242813730"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f52427c0920" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f5242813b50"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f5242813730"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f52427c2ca0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f52428282b0"/></typename>
                <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f5242829e00"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f52427c2a20" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f52428282b0"/></typename>
                <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f5242829e00"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f52427b7ac0" loc="227:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="222:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return byte received&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f52427bb860" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f52427c9ba0" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f52427ba780" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f52427c39e0" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f52427c5b30" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f5242750020" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <function command="" provided="0" name="disableOwnAddress" ref="0x7f52427299d0" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7f524273b020" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7f524272f620" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f524272f3a0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7f52427445b0" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7f524272dc50" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7f52427345e0" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7f524273c070" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7f5242739020" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f524273d020" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f524273fd30" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7f52427404b0" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7f5242737020" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7f524272e550" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7f5242729270" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7f5242731c30" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7f5242724350" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7f52427209d0" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7f5242742420" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7f5242738740" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7f52427361f0" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7f524273d8e0" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7f5242745350" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7f5242731460" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f52427311e0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7f5242748c00" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7f524272d4d0" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7f5242728190" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7f5242723b00" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7f5242720270" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7f524272cb90" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7f52427288c0" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7f524272fdb0" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7f5242725390" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7f5242742b40" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7f52427337e0" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7f52427267b0" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7f524272aac0" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7f5242736de0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7f5242736b60" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7f52427222d0" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7f5242732a60" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7f524272c420" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7f5242745e10" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f52428004a0"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f5242800080"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f5242745b90" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f52428004a0"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f5242800080"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7f5242738020" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7f5242741cb0" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f5242741a30" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7f5242737980" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5242737700" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7f5242725b60" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7f524273f620" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7f5242741350" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7f52427322a0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7f5242732020" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7f5242744ce0" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7f5242726020" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7f524272a350" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7f524272ecc0" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7f5242733020" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7f5242734d30" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7f5242739740" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7f524273c7b0" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7f5242722a40" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7f5242740e30" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f5242740bb0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7f5242724b10" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7f524273b750" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7f5242723350" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f524267e020" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f524267e880" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="38:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f5242646dc0" loc="54:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f5242644020" loc="71:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f5242646530" loc="44:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="39:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f52426456d0" loc="63:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f5242644950" loc="79:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwnerInfo" loc="2:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
      <function command="" provided="0" name="inUse" ref="0x7f5242642b20" loc="9:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
        <documentation loc="3:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
          <short>&#10; Check whether a DefaultOwner has an active client.</short>
          <long>&#10; Check whether a DefaultOwner has an active client.&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f52426384c0" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f5242640490"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f5242638240" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f5242640490"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f524263a420" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f5242639020" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f5242640490"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f524263aca0" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f5242640490"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f5242639930" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f5242640490"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f524242f5e0" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f524242f360" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f524241bb00" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7f524241b1c0" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f524241b530" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f524241b860" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f524241a880" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f524241a2c0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f524241a5f0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5242401530" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5242401530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f5242401770" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5242401770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f52424002e0" loc="66:../../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5242401770"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f5242400060" loc="66:../../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f5242401770"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f524239b580" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f524236b9e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f524236b020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f524236b750" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f524236c7f0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f524236c020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f524236fd30" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f52423803d0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5242380150" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f52423823d0" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5242382150" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f524237e350" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f524237e0d0" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f524237f390" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f524237f110" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f5242209910" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f5242209910"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f5242206270" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f5243ebc920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSkew" loc="51:../../../tos/lib/timer/TimeSkew.nc">
      <documentation loc="35:../../../tos/lib/timer/TimeSkew.nc">
        <short>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.</short>
        <long>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.  Under various circumstances&#10; adjustments may be made by this underlying timing that can result&#10; in time skew.&#10;&#10; Typically this can occur when the RTC (Real Time Clock) subsystem&#10; has had its time adjusted for example via a GPS providing synchronized&#10; time.  If this skew is below a reasonable threshold (platform dependent)&#10; TimeSkew.skew(skew_val) will be signalled.  Beyond that threshold&#10; it might be better to reboot and reestablish reasonable time via&#10; those mechanisms.&#10;&#10; @author Eric B.Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function event="" provided="0" name="skew" ref="0x7f5242128e80" loc="62:../../../tos/lib/timer/TimeSkew.nc">
        <documentation loc="52:../../../tos/lib/timer/TimeSkew.nc">
          <short>&#10; Signaled when the underlying timing system has detected timing&#10; skew.</short>
          <long>&#10; Signaled when the underlying timing system has detected timing&#10; skew.&#10;&#10; @param skew    estimated skew computed.  in millisecs (units platform&#10;                dependent, typically binary millisecs).&#10;                > 0, time has been moved into the future (we were slow).&#10;                &#60; 0, time has been shifted backwards, (we were fast).&#10;                = 0, skew is beyond platform limits.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSkew"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f5243ebd930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="skew" ref="0x7f5242128c00" loc="62:../../../tos/lib/timer/TimeSkew.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f5243ebd930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f52420415e0" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f52420415e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f524203e2a0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f52420415e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f524203e020" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f52420415e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:../../../tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:../../../tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7f5241e2ab00" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5241e2a4f0" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7f5241e2a870" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7f5241e2fc70" loc="15:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7f5241e2cb60" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f5241e2c560" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f5243305940"/>
                <typename><typedef-ref name="message_t" ref="0x7f5243302020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7f5241e2c8d0" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:../../../tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7f5241e11960" loc="54:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f5241e111f0" loc="49:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:../../../tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7f5241e24c20" loc="56:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7f5241e180e0" loc="72:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7f5241e17d00" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5241e17a80" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7f5241e18960" loc="79:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7f5241e197e0" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5241e19560" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7f5241e165b0" loc="100:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7f5241e17270" loc="85:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:../../../tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7f5241e22780" loc="71:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7f5241e200e0" loc="81:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7f5241e25d80" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7f5241e25b00" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7f5241e20c60" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
              <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f5241e209e0" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
              <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:../../../tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7f5241e1e8f0" loc="62:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7f5241e1d5b0" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f5241e1d330" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7f5241e1c0b0" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
              <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f5241e1de00" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
              <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:../../../tos/interfaces/UartStream.nc">
      <documentation loc="32:../../../tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f5241ce7c40" loc="48:../../../tos/interfaces/UartStream.nc">
        <documentation loc="39:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f5241ce7670" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5241ce79b0" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f5241ce2a70" loc="79:../../../tos/interfaces/UartStream.nc">
        <documentation loc="74:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f5241ce27f0" loc="79:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f5241ce0890" loc="90:../../../tos/interfaces/UartStream.nc">
        <documentation loc="81:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f5241ce02c0" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5241ce0600" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f5241ce3610" loc="65:../../../tos/interfaces/UartStream.nc">
        <documentation loc="59:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f5241cdf2c0" loc="99:../../../tos/interfaces/UartStream.nc">
        <documentation loc="92:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
              <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f5241cde820" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5241cdeb60" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f5241cdf020" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
              <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f5241ce2020" loc="72:../../../tos/interfaces/UartStream.nc">
        <documentation loc="67:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f5241ce6610" loc="57:../../../tos/interfaces/UartStream.nc">
        <documentation loc="50:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
              <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f5241ce5bd0" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f5241ce6020" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f5243ebc520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f5241ce6370" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
              <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:../../../tos/interfaces/UartByte.nc">
      <documentation loc="36:../../../tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f5241cbe5b0" loc="50:../../../tos/interfaces/UartByte.nc">
        <documentation loc="43:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f5241cbe330" loc="50:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7f5241cbedf0" loc="59:../../../tos/interfaces/UartByte.nc">
        <documentation loc="52:../../../tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f5241cbdcf0" loc="69:../../../tos/interfaces/UartByte.nc">
        <documentation loc="61:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f5241cbd700" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f5241cbda60" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f5243ebc160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7f5241cbbb50" loc="79:../../../tos/interfaces/UartByte.nc">
        <documentation loc="71:../../../tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f5243815090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <short>&#10; Interface used by Msp430Uart clients to reconfigure the UART before use&#10; </short>
        <long>&#10; Interface used by Msp430Uart clients to reconfigure the UART before use&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f5241cb34c0" loc="39:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f5242813b50"/></typename>
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f5242813730"/></type-tag>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f5241c25860" loc="95:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f5241c240e0" loc="105:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f524380f020"/>
            <typename><typedef-ref name="error_t" ref="0x7f52438071b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f5241b5cce0" loc="62:../../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
