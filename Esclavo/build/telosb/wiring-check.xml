<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="28:SlaveAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fe629f57cf0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fe62a2dfa60"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fe62a2dfa60"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fe62a242110"/></to>
    </wire>
    <wire loc="29:SlaveAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fe629f54360"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fe62a22a0d0"/></to>
    </wire>
    <wire loc="51:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fe62a22a0d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fe62a228c40"/></to>
    </wire>
    <wire loc="31:SlaveAppC.nc">
      <from><interface-ref name="TimerMiSlot" scoped="" ref="0x7fe629f47820"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe629e78980"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe629e78980"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fe629e6eb60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:SlaveAppC.nc">
      <from><interface-ref name="TimerLeds" scoped="" ref="0x7fe629f44cd0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe629b48260"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe629b48260"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fe629e6eb60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="33:SlaveAppC.nc">
      <from><interface-ref name="TimerDormir" scoped="" ref="0x7fe629f3e1c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe629b41b00"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe629b41b00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fe629e6eb60"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:SlaveAppC.nc">
      <from><interface-ref name="TimerComienzaDormir" scoped="" ref="0x7fe629f396f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe629b3a560"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe629b3a560"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fe629e6eb60"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="35:SlaveAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe629eda180"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe628d88c30"/></to>
    </wire>
    <wire loc="65:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe628d88c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe628437aa0"/></to>
    </wire>
    <wire loc="36:SlaveAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe629ec91e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe628d878b0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe628d878b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe628435720"/></to>
    </wire>
    <wire loc="37:SlaveAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7fe629eb77a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fe628e2e360"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fe628e2e360"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fe629b26080"/></to>
    </wire>
    <wire loc="38:SlaveAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fe629ebf5a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fe628d88020"/></to>
    </wire>
    <wire loc="64:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fe628d88020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fe628438e60"/></to>
    </wire>
    <wire loc="39:SlaveAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fe629ebbe80"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe628d82910"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fe628d82910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe628e2b5c0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fe629ef5550"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:SlaveAppC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fe629eaf730"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fe629b21930"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fe629b21930"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fe629ae82f0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe62a2e0020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe628f00dd0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe62a2e0020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe628f88b70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe62a2e0020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe628fa7750"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe62a2e0020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe628fc4080"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe62a2e0020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe629118620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe62a2e0020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe629210c60"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe62a2e0020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe6299a47e0"/></to>
    </wire>
    <wire loc="73:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe62a2e0020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe6285bc020"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe62a2e0020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe6296e1020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe62a2e0020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe629a56cc0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe62a2e0020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe629e678c0"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fe62a242780"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fe62a7891e0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fe62a7891e0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fe62a32e140"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fe62a2411d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe62a2dc020"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe62a2dc020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe62a2cf1a0"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe62a2418d0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fe62a2e0020"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7fe62a2d1130"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7fe62a2cf810"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fe62a2cd020"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7fe62a2b6900"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fe62a2b6900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe62a29d850"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fe62a2cd700"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe62a2d0640"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7fe62a2cdde0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe62a1ff600"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe62a29d850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe62a2831c0"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fe62a294de0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fe62a283830"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7fe62a404c80"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7fe62a282af0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7fe62a77c940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe62a32d040"/></to>
    </wire>
    <wire loc="56:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7fe62a328490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7fe62a5619a0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe62a1ff600"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe62a228640"/></to>
    </wire>
    <wire loc="54:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fe62a21f1d0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7fe62a229d80"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fe62a229d80"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fe629f82480"/></to>
    </wire>
    <wire loc="55:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fe62a2254d0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7fe62a201020"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fe62a201020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fe629f6cb20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fe62a2247f0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7fe62a200380"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fe62a200380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fe629f651b0"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe629f70610"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7fe62a1938a0"/></to>
    </wire>
    <wire loc="737:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7fe62a1938a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a03cb90"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe629f6ade0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7fe62a190020"/></to>
    </wire>
    <wire loc="738:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7fe62a190020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a036060"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe629f64480"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7fe62a18e8a0"/></to>
    </wire>
    <wire loc="739:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7fe62a18e8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a031540"/></to>
    </wire>
    <wire loc="693:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fe62a1e4580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a0eb060"/></to>
    </wire>
    <wire loc="706:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fe62a1cb710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a0b4740"/></to>
    </wire>
    <wire loc="844:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7fe62a141d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a0a4540"/></to>
    </wire>
    <wire loc="864:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7fe62a146d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a005060"/></to>
    </wire>
    <wire loc="845:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7fe62a16fd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a09fb90"/></to>
    </wire>
    <wire loc="711:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7fe62a1c6710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a0a9060"/></to>
    </wire>
    <wire loc="724:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7fe62a1ac8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a073740"/></to>
    </wire>
    <wire loc="748:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7fe62a17e8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a010540"/></to>
    </wire>
    <wire loc="848:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7fe62a16ad50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a093540"/></to>
    </wire>
    <wire loc="858:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7fe62a156d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a026060"/></to>
    </wire>
    <wire loc="870:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7fe62a137d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a000540"/></to>
    </wire>
    <wire loc="696:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fe62a1ddd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a0da060"/></to>
    </wire>
    <wire loc="849:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7fe62a167580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a08eb90"/></to>
    </wire>
    <wire loc="701:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fe62a1d8d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a0d0b90"/></to>
    </wire>
    <wire loc="714:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7fe62a1bee50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a099060"/></to>
    </wire>
    <wire loc="727:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7fe62a1a4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a062540"/></to>
    </wire>
    <wire loc="740:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7fe62a18b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a02cb90"/></to>
    </wire>
    <wire loc="751:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7fe62a176020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a000540"/></to>
    </wire>
    <wire loc="691:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fe62a1e9580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a0f6740"/></to>
    </wire>
    <wire loc="704:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fe62a1d0580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a0bfd10"/></to>
    </wire>
    <wire loc="717:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7fe62a1b6710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a088060"/></to>
    </wire>
    <wire loc="843:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7fe62a171580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a0a4540"/></to>
    </wire>
    <wire loc="861:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7fe62a14e570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a015060"/></to>
    </wire>
    <wire loc="868:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7fe62a139570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a000540"/></to>
    </wire>
    <wire loc="854:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7fe62a15d580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a041540"/></to>
    </wire>
    <wire loc="722:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7fe62a1b1710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a07edc0"/></to>
    </wire>
    <wire loc="735:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7fe62a1988a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a047060"/></to>
    </wire>
    <wire loc="746:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7fe62a1838a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a01cb90"/></to>
    </wire>
    <wire loc="862:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7fe62a14bd40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a010540"/></to>
    </wire>
    <wire loc="851:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7fe62a165d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a052540"/></to>
    </wire>
    <wire loc="694:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fe62a1e2d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a0e5540"/></to>
    </wire>
    <wire loc="707:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fe62a1c9e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a0afb90"/></to>
    </wire>
    <wire loc="744:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7fe62a1898a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a026060"/></to>
    </wire>
    <wire loc="712:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7fe62a1c4e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a0a4540"/></to>
    </wire>
    <wire loc="725:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7fe62a1a9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a06eb90"/></to>
    </wire>
    <wire loc="749:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7fe62a17b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a00bb90"/></to>
    </wire>
    <wire loc="853:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7fe62a160d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a047060"/></to>
    </wire>
    <wire loc="689:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fe62a1ec530"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a12fd10"/></to>
    </wire>
    <wire loc="702:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fe62a1d5580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a0ca060"/></to>
    </wire>
    <wire loc="715:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7fe62a1bb710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a093540"/></to>
    </wire>
    <wire loc="728:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7fe62a1a28a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a05db90"/></to>
    </wire>
    <wire loc="855:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7fe62a15bd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a088060"/></to>
    </wire>
    <wire loc="859:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7fe62a153570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a021540"/></to>
    </wire>
    <wire loc="865:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7fe62a143570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a000540"/></to>
    </wire>
    <wire loc="733:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7fe62a19d8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a052540"/></to>
    </wire>
    <wire loc="856:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7fe62a158580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a083540"/></to>
    </wire>
    <wire loc="692:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fe62a1e7d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a0f1b90"/></to>
    </wire>
    <wire loc="705:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fe62a1cee50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a0b9260"/></to>
    </wire>
    <wire loc="718:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7fe62a1b4e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a083540"/></to>
    </wire>
    <wire loc="852:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7fe62a162580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a04db90"/></to>
    </wire>
    <wire loc="863:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7fe62a148570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a00bb90"/></to>
    </wire>
    <wire loc="723:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7fe62a1ae020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a078260"/></to>
    </wire>
    <wire loc="736:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7fe62a195020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a041540"/></to>
    </wire>
    <wire loc="747:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7fe62a180020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a015060"/></to>
    </wire>
    <wire loc="695:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fe62a1df580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a0e0b90"/></to>
    </wire>
    <wire loc="745:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7fe62a185020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a021540"/></to>
    </wire>
    <wire loc="700:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fe62a1da580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a0d5540"/></to>
    </wire>
    <wire loc="713:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7fe62a1c0710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a09fb90"/></to>
    </wire>
    <wire loc="726:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7fe62a1a78a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a067060"/></to>
    </wire>
    <wire loc="750:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7fe62a1798a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a005060"/></to>
    </wire>
    <wire loc="690:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fe62a1fad50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a0fb260"/></to>
    </wire>
    <wire loc="703:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fe62a1d3d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a0c5540"/></to>
    </wire>
    <wire loc="716:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7fe62a1b9e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a08eb90"/></to>
    </wire>
    <wire loc="729:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7fe62a19f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a057060"/></to>
    </wire>
    <wire loc="860:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7fe62a151d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a01cb90"/></to>
    </wire>
    <wire loc="847:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7fe62a13e560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a099060"/></to>
    </wire>
    <wire loc="846:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7fe62a16c580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a099060"/></to>
    </wire>
    <wire loc="734:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7fe62a19a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a04db90"/></to>
    </wire>
    <wire loc="867:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7fe62a13cd40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a005060"/></to>
    </wire>
    <wire loc="871:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7fe62a134580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a02cb90"/></to>
    </wire>
    <wire loc="842:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7fe62a1748f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe62a0a9060"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fe629e6eb60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fe629e64700"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fe629e64700"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe629b6f8e0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe629e678c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe629c1d020"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe629b6f8e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe6287afdb0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fe629e5e1a0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fe629b60020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe629c1d020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe6289a5b10"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fe629b68020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe629bf02f0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fe629beb850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fe629c1d870"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fe629c1d870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fe62899e890"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fe629b56300"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fe629c968c0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fe629c968c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fe629c79cf0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe6289a5b10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe628988660"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fe6289970a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fe6289a44f0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fe6289a44f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fe628987020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fe62899ac00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fe629c968c0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fe628983190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fe62898d340"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fe62898d340"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fe629e2a990"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe628982770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe62898ca80"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe62898ca80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe629e27720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fe628981a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fe62898bda0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fe62898bda0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fe629e251d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fe629e2a990"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fe629e119e0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7fe629e119e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe629dbb260"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe629e27720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7fe629e0f280"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7fe629e0f280"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fe629d596d0"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fe629e251d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7fe629e0e700"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7fe629e0e700"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fe629d58ac0"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fe629e2a990"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fe629e119e0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe629e27720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7fe629e09a50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7fe629e09a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fe629d49220"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fe629e251d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7fe629e07020"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7fe629e07020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fe629d48610"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fe629e2a990"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fe629e119e0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe629e27720"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7fe629e06d40"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7fe629e06d40"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fe629d416d0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fe629e251d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7fe629e04160"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7fe629e04160"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fe629d40ac0"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fe629e2a990"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fe629e119e0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe629e27720"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7fe629e02020"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7fe629e02020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fe629d3ab30"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fe629e251d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7fe629e01570"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7fe629e01570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fe629d38020"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fe629e2a990"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fe629e119e0"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe629e27720"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7fe629dff5a0"/></to>
    </wire>
    <wire loc="175:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7fe629dff5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fe629d31220"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fe629e251d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7fe629dfea20"/></to>
    </wire>
    <wire loc="176:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7fe629dfea20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fe629d30610"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fe629e2a990"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fe629e119e0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe629e27720"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7fe629dfc8c0"/></to>
    </wire>
    <wire loc="182:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7fe629dfc8c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fe629d2a6d0"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fe629e251d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7fe629dfbd40"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7fe629dfbd40"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fe629d29ac0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7fe629e15730"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fe629d60220"/></to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7fe629e16700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fe629d67cb0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7fe629e03020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fe629d3f7a0"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7fe629e1c890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fe629d67020"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7fe629df9ae0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fe629d287a0"/></to>
    </wire>
    <wire loc="112:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7fe629e200c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fe629db56d0"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7fe629e0aa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fe629d4fcb0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7fe629e0bbb0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fe629d4f020"/></to>
    </wire>
    <wire loc="146:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7fe629e0c730"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fe629d51b30"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7fe629e12a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fe629d5e2f0"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7fe629e00570"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fe629d38cb0"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7fe629e13bb0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fe629d5f610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7fe629e24830"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe629dc33e0"/></to>
    </wire>
    <wire loc="119:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7fe629e1d410"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fe629d69b30"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7fe629e17410"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fe629d6e7a0"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7fe629e07da0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fe629d472f0"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7fe629e1f570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fe629d6fac0"/></to>
    </wire>
    <wire loc="177:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7fe629dfd890"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fe629d2f2f0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7fe629e0d700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fe629d577a0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fe629dc02f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fe629dc1bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fe629dc0940"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7fe629d203f0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fe629dbf020"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7fe629d20b80"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe629d6d610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe629dc33e0"/></to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fe629d6cc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fe629dc1bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe629d65b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe629dc33e0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fe629d632f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fe629dc1bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe629d5d160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe629dc33e0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fe629d5c7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fe629dc1bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fe629db9100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fe629dbaa60"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fe629db9750"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7fe629d1f430"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fe629db9da0"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7fe629d1fbc0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe629d55610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe629dbb260"/></to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fe629d54c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fe629dbaa60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe629d4eb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe629dbb260"/></to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fe629d4c2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fe629dbaa60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe629d45160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe629dbb260"/></to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fe629d447a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fe629dbaa60"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe629d3e610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe629dbb260"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fe629d3dc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fe629dbaa60"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe629d37b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe629dbb260"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fe629d342f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fe629dbaa60"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe629d2e160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe629dbb260"/></to>
    </wire>
    <wire loc="179:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fe629d2d7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fe629dbaa60"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe629d27610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe629dbb260"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fe629d25c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fe629dbaa60"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fe629c5b0f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fe629c948e0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fe629c948e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fe629c8db80"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fe629c7fc50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fe629e119e0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7fe629be79c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe62a77c940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fe6287a83d0"/></from>
      <to><interface-ref name="TimerFrom" scoped="" ref="0x7fe629b68020"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimeSkew" scoped="" ref="0x7fe6287a1a40"/></from>
      <to><interface-ref name="TimeSkew" scoped="" ref="0x7fe629b63450"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7fe6287a35d0"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7fe62a2d1130"/></to>
    </wire>
    <wire loc="153:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7fe6287a0100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe62a77c940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fe629b26080"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fe629afa420"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fe629afa420"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fe628ef3b80"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fe629b0e7a0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fe628ebc8b0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7fe629afd640"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7fe628ebdce0"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe629b22c20"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe628ebea80"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fe629b251d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fe628ec2020"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fe629b23020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fe628ec1df0"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fe629ae82f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fe629099670"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fe629b075b0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fe629ae6320"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fe629ae6320"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fe628ef3080"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fe629b243f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe628ec1210"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe629b18350"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe629ae71a0"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe629ae71a0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fe6290966e0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fe629b01880"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fe629ae6e10"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fe629ae6e10"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fe628edf020"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe629b23650"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe628ebf470"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fe629b15470"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fe629ae7b50"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fe629ae7b50"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fe629095a70"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7fe628eb30f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe629af4960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fe628ebb860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fe629af2e20"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7fe629af2e20"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fe628f5cc90"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fe628eba690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fe629aebb70"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7fe629aebb70"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fe628f5ba50"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fe628eb64d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fe6292c7b20"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fe628ebace0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fe629099670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fe629099670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fe62908bd20"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe628eb9b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe6290950c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe6290950c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe629087640"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fe628eb8610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fe629a59550"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fe629a59550"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fe629a4f0c0"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7fe628eb41f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fe629ae0490"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fe629ae0490"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fe629ada970"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fe628eb3d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fe62a22a0d0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fe628ef3b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7fe628ef0d90"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fe629095a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fe629086020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fe628edf020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fe628edc410"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7fe628f5cc90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fe628f51a20"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fe628ef3080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fe628eec2d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7fe629af3a30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe628f5c5e0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fe628f5c5e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7fe628f51370"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fe6290966e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fe629088c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe629af4960"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe628f5ebe0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe628f5ebe0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe628f547b0"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7fe629aeac90"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe628f5d8e0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fe628f5d8e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7fe628f524d0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fe629af2130"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fe628f5a170"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fe628f5a170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fe628f4f020"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7fe628f5ba50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fe628f50840"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fe628ef0d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fe629ae4590"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fe629ae4590"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fe629adb020"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fe628f596b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe628fac220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fe628fac220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe628faaa10"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fe628fab020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe628ee2350"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fe628ee2350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fe628edfd70"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fe628edfd70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe628ef7ce0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fe628ef7ce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fe628ef1860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fe628ef1860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe629ae10c0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fe629ae10c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe629adbb10"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fe628f59020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe628ef4980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fe628ef4980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fe628ef0690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fe628ef0690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe628f90aa0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fe628f90aa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe628f8be30"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fe628f8d950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe629ae1d60"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fe629ae1d60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe62911e7c0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fe62911e7c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe629116020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe629ad97d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe629a67020"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe629a67020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe629a50390"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7fe629ad1cd0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7fe629a654b0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7fe629a654b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7fe629a4d020"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fe629acd840"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fe62921e6c0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fe629acd840"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fe6291215c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fe6291215c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fe629118ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fe62921e6c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fe62920e320"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7fe629ac66c0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7fe62921b020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7fe62921b020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe62920ebc0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7fe629ace570"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fe62921bcb0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fe62921bcb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fe62920d970"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fe629ac4970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fe629099670"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe629ac0020"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe6290950c0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fe629ac29d0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fe628fcda20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fe628fcda20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fe628fc3a20"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7fe629ab5720"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fe628fcfaa0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fe628fcfaa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fe6296e51d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fe629ac52e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fe62a22a0d0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7fe629ab02a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe62a77c940"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7fe629ab22a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe62a77c940"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7fe629ab32b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe62a77c940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7fe629a53850"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7fe629a4c500"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7fe629a493a0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fe6299a1220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7fe6299a1220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fe62999baf0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fe629a445c0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fe62995ce60"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fe62995ce60"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fe62994e630"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fe629a43830"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7fe6299586a0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fe6299586a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fe62993d630"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7fe629a42b50"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7fe629956ce0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7fe629956ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fe629932020"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7fe629a3c5b0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7fe629918400"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7fe629918400"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fe6297b5680"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fe629a29520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe629353e20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe629353e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe6297644d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fe629a28570"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7fe6293507b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fe6293507b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fe629a28c80"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7fe62934eae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fe62934eae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fe629a2ad70"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7fe629351ad0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fe629351ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fe629a2a450"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7fe62934d160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fe62934d160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fe629a2e1d0"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7fe629343870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fe629343870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fe629a2ea80"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7fe629340880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fe629340880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fe629a323c0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7fe62933f0a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fe62933f0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fe629a32c90"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7fe629348e50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fe629348e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fe629a315f0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7fe629346670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fe629346670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fe629a3a9a0"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7fe629332500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fe629332500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fe629a3a020"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7fe629334ce0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fe629334ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fe629a2d020"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7fe629344e50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fe629344e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fe629a2d8c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7fe629346e50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fe629346e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fe629a2c1d0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7fe629345e50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fe629345e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7fe629a26180"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe629320a80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe629320a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe6297644d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7fe629a273d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe6292f49e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe6292f49e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe6297644d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fe629a38dd0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fe6292c7b20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fe629a47970"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fe6292c6d20"/></to>
    </wire>
    <wire loc="23:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fe6292c6d20"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fe6292ab310"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7fe629a1bca0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe62a77c940"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7fe629a1ddb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe62a77c940"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe6299a47e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe62999b260"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe62999b260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe628748af0"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7fe62999baf0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fe628747370"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe628748af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe628740ab0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fe628747370"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fe6287365f0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe628740ab0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe628721510"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fe628730d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fe62873f360"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fe62873f360"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fe628721da0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fe6287339b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fe629985080"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fe629985080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fe629980cd0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fe62871c020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fe6287261b0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fe6287261b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fe629e2a990"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe62871b760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe6287258f0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe6287258f0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe629e27720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fe62871aa80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fe628724c10"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fe628724c10"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fe629e251d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fe62997c0f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fe629c948e0"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7fe62995a090"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fe629949b00"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7fe629959390"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fe629942020"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7fe62995fb10"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fe629953020"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7fe6299579b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fe629938af0"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe6299522f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fe62a1e4580"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe62994d7a0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7fe62a1ac8a0"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe629948c60"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7fe62a1e7d50"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe6299412f0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fe62a1ec530"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe62993c7a0"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7fe62a1a28a0"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe629937c60"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7fe62a1ae020"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe6299312f0"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7fe62a1a4020"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7fe629914700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fe629911c20"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fe629917060"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fe6297a6b70"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe6298f9760"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7fe629e0c730"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7fe6298f8a80"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7fe629e0aa20"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7fe6298f7930"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7fe62a1ae020"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fe6297b42f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fe6298e53f0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fe6298e53f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fe6298ce3f0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fe6297a57a0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fe6298e8620"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fe6298e8620"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fe6298d57a0"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fe6298d93f0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7fe6298c23f0"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fe6298e2d50"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7fe6298cbd50"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fe6298df3f0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7fe6298c83f0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fe6298edbc0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7fe6298d1d50"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fe6298dcd50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7fe6298c5d50"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fe6298e4710"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7fe6298cd710"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fe6298d7710"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7fe6298c1710"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fe6298de710"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7fe6298c7710"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fe6298e6020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7fe6298cf020"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fe6298da100"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7fe6298c3100"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fe6298e3a30"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7fe6298cca30"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fe6298e0020"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7fe6298c9020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fe6298ee8a0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7fe6298d2a30"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fe6298dda30"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7fe6298c6a30"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fe629350160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fe629342880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fe6293390a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fe6293400a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fe62932e500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fe629330500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fe62934e490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fe629336880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fe629331500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fe62933c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fe62933d0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe629352a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe629763350"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe629763350"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe62975b660"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fe62934de00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fe62934c490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fe629335c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fe62934cbe0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fe629331ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fe6293360a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fe629345670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fe6293370a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fe629339880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fe629337880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fe62932fce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fe629330ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fe62933d880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fe6293380a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fe629332ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fe62933f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fe62932ece0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fe6297622c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fe629351480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fe629348670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fe629344670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fe62933b0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fe62933b880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fe6293420a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fe62934b2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fe629348020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fe62934d7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fe629334500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fe62932f500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fe62933c0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fe629338880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fe629350e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fe62933e0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fe62934b940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fe62933e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fe6293350a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fe62932d9b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fe6297622c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7fe6297622c0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fe629759890"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629758ba0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629757a30"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe6297644d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe62975a510"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe6297558b0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7fe629749b40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fe6296ea770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fe6296ea770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fe6296e51d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fe629754060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe6296c8c40"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe6296c8c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe628643940"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fe629751c70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fe6296c78f0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fe6296c78f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fe628642d70"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fe6297492e0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fe62937d020"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fe62937d020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fe628640020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fe629752a70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fe62a22a0d0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7fe629745bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe62a77c940"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fe6296e51d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fe6296e1b70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fe628640020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fe62965d850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fe628642d70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fe629660110"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe628643940"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe629667d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fe6286425d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fe628637020"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fe628637020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fe6294e42c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fe629660110"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fe6295e5a10"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fe628641410"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fe629660790"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fe629660790"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fe6295e4060"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fe62965ba40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fe6286407c0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe62862a760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe62965e8e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fe62965c690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe628638340"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe628638340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe6294e5020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fe629657b40"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fe628632c10"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fe628632c10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fe6294e74d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe62965e8e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe6295e5250"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fe62965d850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fe6295e4c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe629667d80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe6295e6470"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fe6295e13e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fe62965ba40"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fe6295e25b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7fe62965c690"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fe6295dc480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7fe629657b40"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7fe6295e1a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fe6295d2020"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fe6295d2020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fe6295c9700"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fe6295dcc20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fe62a22a0d0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7fe6295da2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe62a77c940"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fe6295ca2c0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fe6295c4c20"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fe6295ced10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fe6295c42d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fe629595bb0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7fe62a171580"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7fe6295923e0"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7fe62a16fd50"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fe629590bb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7fe62a16c580"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7fe62958d3e0"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7fe62a167580"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7fe62958bbb0"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7fe62a16ad50"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7fe62959bd10"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7fe629438d40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fe628631440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fe6294e63f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fe628631a50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fe62943f020"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fe62943f020"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7fe629438d40"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fe628636020"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fe6295d2020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe6286377c0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe6294e4ad0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe6294e4ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe62944be80"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe6294e38a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe62862a760"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fe6294e42c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fe62944ca60"/></to>
    </wire>
    <wire loc="81:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fe62944ca60"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fe6285b96c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7fe6294e74d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fe6294ded60"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe6294e5020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe62944dca0"/></to>
    </wire>
    <wire loc="80:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe62944dca0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe6285ba850"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7fe6294e63f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fe6294dd710"/></to>
    </wire>
    <wire loc="83:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe62944be80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe6285b8a70"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe62944a790"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe6294e38a0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe6294ccbf0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe62944be80"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7fe6294ddd80"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fe6295ced10"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fe6294cc5e0"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fe6295ca2c0"/></to>
    </wire>
    <wire loc="82:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe62944b270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe6285b9e40"/></to>
    </wire>
    <wire loc="84:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe6285b79d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe62944a790"/></to>
    </wire>
    <wire loc="85:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7fe6285b72d0"/></from>
      <to><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7fe629449020"/></to>
    </wire>
    <wire loc="87:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fe6285b62b0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fe6285bc630"/></to>
    </wire>
    <wire loc="155:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fe6285b3480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe62a77c940"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7fe62942fbb0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fe6295c9700"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fe62942a700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7fe62a171580"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fe629428e40"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7fe62a16c580"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fe629313c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fe62931eda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fe629317b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fe629311670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fe62930ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fe629311e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fe6292fd2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fe6293002f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fe62931c120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fe629305670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fe6293012f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fe629316c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fe629315c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fe62930b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fe62930ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fe629310670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe62931f760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe629763350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fe62931baa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fe629319120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fe629304a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fe629319870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fe629301ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fe62931cdc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fe629306e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fe629315480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fe629316480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fe62931e750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fe629308e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fe629309670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fe629306670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fe6292fead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fe629300ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fe62930c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fe629309e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fe629302ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fe62930f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fe6292fdad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fe6297622c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fe62931e100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fe629317370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fe629313480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fe62930be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fe629310e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fe62930a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fe629312670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fe62931d450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fe629312e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fe629318020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fe629318cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fe6293022f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fe629303ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fe62931b450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fe6293032f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fe6292fe2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fe62930ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fe629308670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fe62931daa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fe62931c770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fe62930fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fe629318670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fe62930e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fe629305e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fe6292fc7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fe6297622c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fe6292e7c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fe6292f2da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fe6292eab50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fe6292e5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fe6292dde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fe6292e5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fe6292d12f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fe6292d32f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fe6292ef120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fe6292d9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fe6292d42f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fe6292e9c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fe6292e8c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fe6292df670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fe6292e1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fe6292e3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe6292f3760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe629763350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fe6292eeaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fe6292ed120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fe6292d8a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fe6292ed870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fe6292d4ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fe6292efdc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fe6292dae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fe6292e8480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fe6292e9480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fe6292f2750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fe6292dbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fe6292dc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fe6292da670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fe6292d2ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fe6292d3ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fe6292e0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fe6292dce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fe6292d5ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fe6292e2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fe6292d1ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fe6297622c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fe6292f2100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fe6292ea370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fe6292e7480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fe6292dfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fe6292e3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fe6292dd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fe6292e6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fe6292f0450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fe6292e6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fe6292ec020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fe6292eccc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fe6292d52f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fe6292d7ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fe6292ee450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fe6292d72f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fe6292d22f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fe6292e0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fe6292db670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fe6292f0aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fe6292ef770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fe6292e2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fe6292ec670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fe6292e1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fe6292d9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fe6292cf7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fe6297622c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7fe6292a8880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7fe62929d020"/></to>
    </wire>
    <wire loc="20:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7fe62929d020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7fe629298140"/></to>
    </wire>
    <wire loc="16:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7fe629293bd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7fe62929cc50"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7fe62929cc50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7fe62927f150"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7fe629297530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fe62922a1b0"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7fe629283540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7fe629284590"/></to>
    </wire>
    <wire loc="11:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7fe629284590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fe6292339e0"/></to>
    </wire>
    <wire loc="18:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7fe62927a950"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7fe629281ca0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7fe629281ca0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7fe629257a90"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7fe62927f9f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7fe629283540"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fe629247020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fe629241530"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fe629241530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fe62923de50"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fe62923a020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7fe629e24830"/></to>
    </wire>
    <wire loc="9:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe629232c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7fe62a1d0580"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7fe629217990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7fe62920c900"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7fe629219150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7fe62920b0f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7fe62920bae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fe6299a1220"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7fe6291f6690"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7fe62995fb10"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fe6291f09b0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fe62995ce60"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7fe6291efcd0"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7fe6299579b0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7fe6291f7a80"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7fe629914700"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fe6291ec020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe629151c30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe629151c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe6297644d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe6291ecd10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe6291508f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe6291508f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe629763350"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fe6291e96d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7fe62914f2f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fe62914f2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fe6291e9de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7fe62914ecc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fe62914ecc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fe6291e8530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7fe62914d370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fe62914d370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fe6291e8c60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7fe62914bd00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fe62914bd00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fe6291eae00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7fe629145c60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fe629145c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fe6291eb780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7fe62912d7a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fe62912d7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fe6297622c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fe6291ea550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fe6291312f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fe6291312f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fe6291e73e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7fe629147480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fe629147480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fe6291e65e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7fe629143e50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fe629143e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fe6291e5020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7fe629142670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fe629142670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fe6291e7e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7fe6291497b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fe6291497b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fe6291e49c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7fe62912fad0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fe62912fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fe6291e5890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7fe6291302f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fe6291302f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fe6291e4130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7fe629130ad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fe629130ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7fe6291ded40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7fe629121df0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7fe629121df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7fe629117550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fe629207d00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fe629099670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe629206bb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe6290950c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fe629201c60"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fe629094550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fe629094550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fe629086a80"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fe6291f1e80"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fe62908c480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fe62908c480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fe62907e8b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fe6291e26c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fe62a22a0d0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fe629144c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fe62914e020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fe629148c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fe62913be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fe629142e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fe62912e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fe629136670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fe629147c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fe62913c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fe62913ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fe629141670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fe62914a370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fe629135a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fe62914aac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fe629131ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fe62914b060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fe629137e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fe629145480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fe62914f940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fe629138e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fe62913a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fe629137670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fe62913d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fe62913ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fe629133ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fe62913f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fe62912ead0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fe6297622c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fe629148490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fe629144480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fe62913ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fe629141e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fe62913b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fe629143670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fe62914e670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fe629149160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fe629149e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fe6291332f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fe629134ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fe62914b6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fe6291342f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fe62912f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fe62913de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fe629138670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fe62914d9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fe62913fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fe62913e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fe629136e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7fe62911d020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7fe6291167c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fe629101150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fe62a22a0d0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fe629115020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fe62995ce60"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7fe629114380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7fe62995a090"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7fe6291136b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7fe629959390"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fe629112a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fe629917060"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fe6291116e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe62901bd00"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe62901bd00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe6297644d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fe629110530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7fe628ff8ad0"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fe628ff8ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fe6297622c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fe62910fad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7fe6290166b0"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fe6290166b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fe62910f3a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7fe629014370"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fe629014370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fe62910e330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fe629099670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe62910d1e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe6290950c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fe62910bd70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fe629094550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fe62910db90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fe629a59550"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fe6291063e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7fe62900de50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fe62900de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fe629106cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7fe62900c670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fe62900c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fe629107b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7fe629013160"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fe629013160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fe6291046d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7fe628ff82f0"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fe628ff82f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fe629105590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7fe628ffb2f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fe628ffb2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fe629105e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7fe628ffbad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fe628ffbad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fe629102020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fe628ffcad0"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fe628ffcad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fe6291028b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7fe629019300"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fe629019300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7fe6290f69d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe62a77c940"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fe629090660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fe629082af0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fe629028300"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fe629985080"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7fe62907c3b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fe629029020"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fe62907a6e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fe629e5e1a0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe629024450"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fe629e6eb60"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fe62900ec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fe629018020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fe629012c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fe629005e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fe62900ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fe629017370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fe629000670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fe628ffc2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fe629011c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fe629010c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fe629006670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fe629009e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fe62900b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe62901a970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe629763350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fe629016d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fe628fffa70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fe629014ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fe629016060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fe629002e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fe629010480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fe629011480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fe629019950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fe629003e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fe629004670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fe629002670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fe628ff9ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fe629007670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fe629004e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fe628ffdad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fe62900a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fe629012490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fe62900e480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fe629006e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fe62900be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fe629005670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fe62900d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fe629018670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fe629013e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fe628ffd2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fe628ffead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fe628ffe2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fe628ff92f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fe629007e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fe629003670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fe629018cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fe6290179c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fe62900ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fe6290137b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fe629009670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fe629000e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fe628ff77a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fe6297622c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7fe628fcb920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7fe628fc4940"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe628fd1990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe628fc4080"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fe628fa7e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fe628fab020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fe628fa6ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fe628fa8690"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fe628fa8690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fe6296e51d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fe628fa58f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fe628fcda20"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe628fa4170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe6290950c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7fe628f8d200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7fe628f88570"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fe628f873f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fe628f8d950"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe628f87a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe6290950c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fe628f4fd70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fe628f596b0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fe628f4eb10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fe628f59020"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fe628f4d2f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fe629099670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe628f4c170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe6290950c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fe628f4cb70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fe628eff410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7fe628f20db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe62a77c940"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7fe628ef2800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fe628eee580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fe628eee580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fe6296e51d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe628ed91c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe629ae71a0"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fe628e2d3f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fe629b251d0"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fe628e2a1d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fe629b23020"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe628e2a7e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe629b22c20"/></to>
    </wire>
    <wire loc="89:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fe628e27a20"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fe629094550"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fe628e1f890"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fe629b075b0"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fe628e2b5c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fe629b243f0"/></to>
    </wire>
    <wire loc="85:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe628e28b20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe629b18350"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe628e29470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe629b23650"/></to>
    </wire>
    <wire loc="90:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fe628e23af0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fe629090660"/></to>
    </wire>
    <wire loc="63:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fe628438e60"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fe6284287f0"/></to>
    </wire>
    <wire loc="64:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe628437aa0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe628e2a7e0"/></to>
    </wire>
    <wire loc="65:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe628435720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe628e29470"/></to>
    </wire>
    <wire loc="67:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fe628d85020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fe628434da0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fe628434da0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe628e28b20"/></to>
    </wire>
    <wire loc="60:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fe6284275f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe628df0930"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe628426270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe628e29470"/></to>
    </wire>
    <wire loc="53:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fe628df0930"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fe628d9fdf0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fe628d9d400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fe628e2d3f0"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe628d9c060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe628e29470"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe628d9b720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe628e2a7e0"/></to>
    </wire>
    <wire loc="184:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7fe628d9a480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe62a77c940"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7fe628d9ac60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe62a77c940"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fe628d7c020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fe628e2a7e0"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fe628d7cc30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fe628e29470"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="41:../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="35:../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="200:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/x1xxx/McuSleepC.nc" safe="">
      <documentation loc="36:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="65:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="45:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="33:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="53:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="37:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; Digital pin i/o abstraction, TI MSP430 processors.</short>
        <long>&#10; Digital pin i/o abstraction, TI MSP430 processors.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @author Joao Goncalves &#60;joao.m.goncalves@ist.utl.pt>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="79(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="79(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="79(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="79(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="79(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="79(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="79(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="79(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="79(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="79(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="79(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="79(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="79(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="79(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="79(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="79(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="79(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="79(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="79(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="79(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="79(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="79(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="79(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="79(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="79(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="79(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="79(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="79(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="79(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="79(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="79(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="79(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="79(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="79(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="79(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="79(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="79(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="79(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="79(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="79(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="79(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="79(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="79(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="79(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="79(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="79(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="79(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="79(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="SlaveC" loc="8:SlaveC.nc">
      <module/>
    </component>
    <component qname="SlaveAppC.TimerMiSlot" loc="44(SlaveAppC.TimerMiSlot):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC" loc="48:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <documentation loc="36:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="41(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="41(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="41(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="41(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="41(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="41(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="41(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="41(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="41(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="41(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="41(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="41(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ebe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe62a2ea200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ebe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe62a2ea200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2eb680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe62a2eb9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ebe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe62a2ea200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2eb680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe62a2eb9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ebe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe62a2ea200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2eb680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe62a2eb9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="55(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2eb680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe62a2eb9f0"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC.VT" loc="61(HilTimerMilliC.VirtualizeTimerC.VT):../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <documentation loc="33:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerImplP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe629be2530"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2eb680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe62a2eb9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SlaveAppC.TimerLeds" loc="44(SlaveAppC.TimerLeds):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.TimerDormir" loc="44(SlaveAppC.TimerDormir):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.TimerComienzaDormir" loc="44(SlaveAppC.TimerComienzaDormir):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ebe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe62a2ea200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ebe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe62a2ea200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ebe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe62a2ea200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ebe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe62a2ea200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ebe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe62a2ea200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="47(HplCC2420InterruptsC.CaptureSFDC):../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; The default for GpioCapture is CCIxA.  Other channels are available&#10; (like B) but they need to be hardcoded in another module.  See&#10; tos/platforms/exp5438_2520/hardware/cc2520/P81SfdCaptureC.nc&#10;&#10; Lower levels have been modified to support being able to change&#10; CCIS in the control registers.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="51:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc" safe="">
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="50(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="50(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
        <short>&#10; An HPL abstraction of USART0 on the MSP430.</short>
        <long>&#10; An HPL abstraction of USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="54:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="56(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="96(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ea640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fe62a2ea9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ea640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fe62a2ea9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ebe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe62a2ea200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SlaveAppC.AMSenderC" loc="47(SlaveAppC.AMSenderC):../../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.AMSenderC.SenderC" loc="47(SlaveAppC.AMSenderC.SenderC):../../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fe629ef5550"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(SlaveAppC.AMSenderC.SenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fe629ef5550"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../../tos/system/AMQueueP.nc">
      <documentation loc="33:../../../tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SlaveAppC.AMReceiverC" loc="43(SlaveAppC.AMReceiverC):../../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7fe62a12e1d0" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7fe62a12e580" loc="81:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7fe62a12e930" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7fe62a12ece0" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7fe62a12d0d0" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7fe629df4930" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7fe629df4cd0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7fe629df30d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7fe629df3450" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7fe629df37d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7fe629df3b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7fe629df2020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7fe629df23b0" loc="49:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7fe629df2780" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7fe629db7c80" loc="42:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7fe629db40d0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fe629cd1cb0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fe629cd1cb0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fe629c8ea40" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fe629c8ea40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fe629c78570" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fe629c78570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fe629c78d40" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fe629c78d40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fe629c77160" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fe629c77160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fe629c77940" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fe629c77940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fe629c77d10" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7fe629c76540" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7fe629c76540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fe629c9b6d0" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fe629c9b6d0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fe629c54020" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fe629c54020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fe629c54410" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fe629c54410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fe629c54bf0" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fe629c54bf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fe629c53020" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe629c18cc0" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe629c18cc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="55:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe629be2530" loc="55:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe629be2530"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fe629be2880" loc="56:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="VirtualizeTimerImplP" loc="61:../../../tos/lib/timer/VirtualizeTimerImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe629bd3980" loc="61:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe629bd3980"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fe629bd3cd0" loc="62:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe629b5f550" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe629b5f550"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="47:../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; The default for GpioCapture is CCIxA.  Other channels are available&#10; (like B) but they need to be hardcoded in another module.  See&#10; tos/platforms/exp5438_2520/hardware/cc2520/P81SfdCaptureC.nc&#10;&#10; Lower levels have been modified to support being able to change&#10; CCIS in the control registers.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="50:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="56:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fe6294c65e0" loc="56:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7fe6294bb9b0" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="96:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7fe62949fcc0" loc="96:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe629255020" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe629255020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fe6292557b0" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe6292557b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../../tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fe628e17660" loc="47:../../../tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fe629ef5550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../../tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fe628e0b360" loc="47:../../../tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fe629ef5550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fe628e030d0" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fe629ef5550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7fe628debc80" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:../../../tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fe628d81330" loc="43:../../../tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fe629ef5550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7fe62a2e0020" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fe62a2e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe62a2e03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fe62a2dfa60" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fe62a2dfa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fe62a2dfde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe62a2dc020" loc="42:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe62a2dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe62a2dc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7fe62a2d1130" loc="43:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7fe62a2d1130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7fe62a2db1b0"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7fe62a2db340"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7fe62a2d17d0"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7fe62a2d1960"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7fe62a2d1af0"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7fe62a2d1c80"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7fe62a2d1e10"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7fe62a2db020"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7fe62a2d14b0"/>
        <function-ref name="node_id" scoped="" ref="0x7fe62a2d1640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7fe62a2cd700" loc="7:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7fe62a2cd700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe62a2cda80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe62a2cf1a0" loc="4:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe62a2cf1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe62a2cf520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7fe62a2cd020" loc="6:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fe62a2cd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe62a2cd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7fe62a2cdde0" loc="8:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7fe62a2cdde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe62a2cc180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7fe62a2cf810" loc="5:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7fe62a2cf810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7fe62a2ce980"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7fe62a2ceb10"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7fe62a2ce020"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7fe62a2ce1b0"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7fe62a2ce340"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7fe62a2ce4d0"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7fe62a2ce660"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7fe62a2ce7f0"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7fe62a2cfb90"/>
        <function-ref name="node_id" scoped="" ref="0x7fe62a2cfd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe62a2d0640" loc="2:../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe62a2d0640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe62a2d09c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7fe62a2b6900" loc="39:../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fe62a2b6900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe62a2b6c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fe62a294de0" loc="40:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fe62a294de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fe62a299c70"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fe62a299310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fe62a2994a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fe62a299630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fe62a299180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fe62a2997c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fe62a299950"/>
        <function-ref name="initClocks" scoped="" ref="0x7fe62a299ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe62a29d850" loc="39:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe62a29d850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe62a29dbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fe62a283830" loc="203:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fe62a283830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fe62a2827f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fe62a283d40"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fe62a282020"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fe62a2821b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fe62a283bb0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fe62a282340"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fe62a2824d0"/>
        <function-ref name="initClocks" scoped="" ref="0x7fe62a282660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7fe62a282af0" loc="204:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fe62a282af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fe62a282e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe62a2831c0" loc="202:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe62a2831c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe62a283540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7fe62a404c80" loc="55:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fe62a404c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fe62a5df0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7fe62a5619a0" loc="51:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fe62a5619a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fe62a561d20"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fe62a67c020"/>
        <function-ref name="sleep" scoped="" ref="0x7fe62a67c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7fe62a4a23d0" loc="52:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7fe62a4a23d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fe62a4a2750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7fe62a29b8b0" loc="39:../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fe62a29b8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fe62a24e7f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fe62a29bdc0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fe62a24e020"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fe62a24e1b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fe62a29bc30"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fe62a24e340"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fe62a24e4d0"/>
        <function-ref name="initClocks" scoped="" ref="0x7fe62a24e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fe62a2418d0" loc="69:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fe62a2418d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe62a241c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fe62a242110" loc="66:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fe62a242110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fe62a242490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7fe62a2411d0" loc="68:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7fe62a2411d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe62a241550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7fe62a242780" loc="67:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fe62a242780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe62a242b00"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fe62a242c90"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fe62a242e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fe62a77c940" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fe62a77c940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe62a77ccc0"/>
        <function-ref name="runTask" scoped="" ref="0x7fe62a77ce50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fe62a7891e0" loc="46:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fe62a7891e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe62a789560"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fe62a7896f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fe62a789880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fe62a32d040" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fe62a32d040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe62a32d3c0"/>
        <function-ref name="runTask" scoped="" ref="0x7fe62a32d550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7fe62a328490" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fe62a328490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fe62a328810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fe62a3289a0"/>
        <function-ref name="sleep" scoped="" ref="0x7fe62a328b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fe62a32e140" loc="54:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fe62a32e140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe62a32e4c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fe62a32e650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fe62a32e7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fe62a22a0d0" loc="46:../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fe62a22a0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe62a22a450"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe62a22a5e0"/>
        <function-ref name="led1On" scoped="" ref="0x7fe62a22a770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe62a22a900"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe62a22aa90"/>
        <function-ref name="get" scoped="" ref="0x7fe62a22ac20"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe62a22adb0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe62a2354d0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a235020"/>
        <function-ref name="led0On" scoped="" ref="0x7fe62a2351b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fe62a235340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7fe62a21f1d0" loc="50:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fe62a21f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a21f550"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a21f6e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a21f870"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a21fa00"/>
        <function-ref name="get" scoped="" ref="0x7fe62a21fb90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a21fd20"/>
        <function-ref name="set" scoped="" ref="0x7fe62a225020"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a2251b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe62a228640" loc="46:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe62a228640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe62a2289c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7fe62a2254d0" loc="51:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fe62a2254d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a225850"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a2259e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a225b70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a225d00"/>
        <function-ref name="get" scoped="" ref="0x7fe62a224020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a2241b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a224340"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a2244d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fe62a228c40" loc="47:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fe62a228c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe62a227020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe62a2271b0"/>
        <function-ref name="led1On" scoped="" ref="0x7fe62a227340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe62a2274d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe62a227660"/>
        <function-ref name="get" scoped="" ref="0x7fe62a2277f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe62a227980"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe62a226020"/>
        <function-ref name="set" scoped="" ref="0x7fe62a227b10"/>
        <function-ref name="led0On" scoped="" ref="0x7fe62a227ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7fe62a227e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7fe62a2247f0" loc="52:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fe62a2247f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a224b70"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a224d00"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a21e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a21e1b0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a21e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a21e4d0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a21e660"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a21e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7fe62a229d80" loc="41:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fe62a229d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a202180"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a202310"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a2024a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a202630"/>
        <function-ref name="get" scoped="" ref="0x7fe62a2027c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a202950"/>
        <function-ref name="set" scoped="" ref="0x7fe62a202ae0"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a202c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7fe62a201020" loc="42:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fe62a201020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a2013a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a201530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a2016c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a201850"/>
        <function-ref name="get" scoped="" ref="0x7fe62a2019e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a201b70"/>
        <function-ref name="set" scoped="" ref="0x7fe62a201d00"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a200020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7fe62a1ff600" loc="44:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe62a1ff600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe62a1ff980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7fe62a200380" loc="43:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fe62a200380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a200700"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a200890"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a200a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a200bb0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a200d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a1ff020"/>
        <function-ref name="set" scoped="" ref="0x7fe62a1ff1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1ff340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fe62a1e4580" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fe62a1e4580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1e4900"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a1e4a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a1e4c20"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1e2980"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a1e3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1e31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a1e3340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1e34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a1e3660"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1e37f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1e3980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a1e3b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1e3ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a1e2020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1e21b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a1e2340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1e24d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a1e4db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1e2660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1e27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fe62a1cb710" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fe62a1cb710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1cba90"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a1cbc20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a1cbdb0"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1c9a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a1ca1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1ca340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a1ca4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1ca660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a1ca7f0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1ca980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1cab10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a1caca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1cae30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a1c9120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1c92b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a1c9440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1c95d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a1ca020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1c9760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1c98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7fe62a141d30" loc="205:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7fe62a141d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1400e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a140270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a140400"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a13e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a140720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1408b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a140a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a140bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a140d60"/>
        <function-ref name="get" scoped="" ref="0x7fe62a13f020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a13f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a13f340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a13f4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a13f760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a13f8f0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a13fa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a13fc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a140590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a13fda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a13e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7fe62a146d40" loc="201:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7fe62a146d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1450e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a145270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a145400"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1431b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a145720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1458b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a145a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a145bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a145d60"/>
        <function-ref name="get" scoped="" ref="0x7fe62a144020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1441b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a144340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1444d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a144760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1448f0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a144a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a144c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a145590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a144da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a143020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7fe62a16fd50" loc="183:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7fe62a16fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a16e100"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a16e290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a16e420"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a16c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a16e740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a16e8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a16ea60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a16ebf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a16ed80"/>
        <function-ref name="get" scoped="" ref="0x7fe62a16d020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a16d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a16d340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a16d4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a16d760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a16d8f0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a16da80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a16dc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a16e5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a16dda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a16c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7fe62a1c6710" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7fe62a1c6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1c6a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a1c6c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a1c6db0"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1c4a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a1c51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1c5340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a1c54d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1c5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a1c57f0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1c5980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1c5b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a1c5ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1c5e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a1c4120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1c42b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a1c4440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1c45d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a1c5020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1c4760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1c48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7fe62a1ac8a0" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7fe62a1ac8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1acc20"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a1acdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a1ab020"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1aac10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a1ab340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1ab4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a1ab660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1ab7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a1ab980"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1abb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1abca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a1abe30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1aa020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a1aa2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1aa440"/>
        <function-ref name="set" scoped="" ref="0x7fe62a1aa5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1aa760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a1ab1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1aa8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1aaa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7fe62a1938a0" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7fe62a1938a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a193c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a193db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a192020"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a191c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a192340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1924d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a192660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1927f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a192980"/>
        <function-ref name="get" scoped="" ref="0x7fe62a192b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a192ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a192e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a191020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a1912b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a191440"/>
        <function-ref name="set" scoped="" ref="0x7fe62a1915d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a191760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a1921b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1918f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a191a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7fe62a17e8a0" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7fe62a17e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a17ec20"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a17edb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a17d020"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a17cc10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a17d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a17d4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a17d660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a17d7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a17d980"/>
        <function-ref name="get" scoped="" ref="0x7fe62a17db10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a17dca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a17de30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a17c020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a17c2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a17c440"/>
        <function-ref name="set" scoped="" ref="0x7fe62a17c5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a17c760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a17d1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a17c8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a17ca80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7fe62a16ad50" loc="185:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7fe62a16ad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a169100"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a169290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a169420"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1671b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a169740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1698d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a169a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a169bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a169d80"/>
        <function-ref name="get" scoped="" ref="0x7fe62a168020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1681b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a168340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1684d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a168760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1688f0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a168a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a168c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a1695b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a168da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a167020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7fe62a156d40" loc="195:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7fe62a156d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1550e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a155270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a155400"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1531b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a155720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1558b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a155a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a155bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a155d60"/>
        <function-ref name="get" scoped="" ref="0x7fe62a154020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1541b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a154340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1544d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a154760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1548f0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a154a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a154c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a155590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a154da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a153020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7fe62a137d50" loc="211:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7fe62a137d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a136100"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a136290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a136420"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1341b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a136740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1368d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a136a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a136bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a136d80"/>
        <function-ref name="get" scoped="" ref="0x7fe62a135020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1351b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a135340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1354d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a135760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1358f0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a135a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a135c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a1365b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a135da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a134020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fe62a1ddd50" loc="57:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fe62a1ddd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1dc100"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a1dc290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a1dc420"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1da1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a1dc740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1dc8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a1dca60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1dcbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a1dcd80"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1db020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1db1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a1db340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1db4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a1db760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1db8f0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a1dba80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1dbc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a1dc5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1dbda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7fe62a167580" loc="186:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7fe62a167580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a167900"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a167a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a167c20"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a165980"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a166020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1661b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a166340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1664d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a166660"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1667f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a166980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a166b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a166ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a165020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1651b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a165340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1654d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a167db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a165660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1657f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fe62a1d8d50" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fe62a1d8d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1d7100"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a1d7290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a1d7420"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1d51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a1d7740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1d78d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a1d7a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1d7bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a1d7d80"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1d6020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1d61b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a1d6340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1d64d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a1d6760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1d68f0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a1d6a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1d6c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a1d75b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1d6da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7fe62a1bee50" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7fe62a1bee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1bd210"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a1bd3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a1bd530"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1bb340"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a1bd850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1bd9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a1bdb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1bdd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a1bc020"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1bc1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1bc340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a1bc4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1bc660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a1bc8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1bca80"/>
        <function-ref name="set" scoped="" ref="0x7fe62a1bcc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1bcda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a1bd6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1bb020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1bb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7fe62a1a4020" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7fe62a1a4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1a43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a1a4530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a1a46c0"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1a24d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a1a49e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1a4b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a1a4d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1a3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a1a31b0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1a3340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1a34d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a1a3660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1a37f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a1a3a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1a3c10"/>
        <function-ref name="set" scoped="" ref="0x7fe62a1a3da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1a2020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a1a4850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1a21b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1a2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7fe62a18b020" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7fe62a18b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a18b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a18b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a18b6c0"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1894d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a18b9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a18bb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a18bd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a18a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a18a1b0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a18a340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a18a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a18a660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a18a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a18aa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a18ac10"/>
        <function-ref name="set" scoped="" ref="0x7fe62a18ada0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a189020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a18b850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1891b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a189340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7fe62a176020" loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7fe62a176020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1763a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a176530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a1766c0"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1744d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a1769e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a176b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a176d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a175020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a1751b0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a175340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1754d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a175660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1757f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a175a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a175c10"/>
        <function-ref name="set" scoped="" ref="0x7fe62a175da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a174020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a176850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1741b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a174340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fe62a1e9580" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fe62a1e9580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1e9900"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a1e9a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a1e9c20"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1e7980"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a1e8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1e81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a1e8340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1e84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a1e8660"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1e87f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1e8980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a1e8b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1e8ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a1e7020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1e71b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a1e7340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1e74d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a1e9db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1e7660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1e77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fe62a1d0580" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fe62a1d0580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1d0a00"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a1d0b90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a1d0d20"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1cea80"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a1cf1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1cf340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a1cf4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1cf660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a1cf7f0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1cf980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1cfb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a1cfca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1cfe30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a1ce120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1ce2b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a1ce440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1ce5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a1cf020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1ce760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1ce8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7fe62a1b6710" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7fe62a1b6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1b6a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a1b6c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a1b6db0"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1b4a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a1b51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1b5340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a1b54d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1b5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a1b57f0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1b5980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1b5b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a1b5ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1b5e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a1b4120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1b42b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a1b4440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1b45d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a1b5020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1b4760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1b48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7fe62a171580" loc="182:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7fe62a171580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a171900"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a171a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a171c20"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a16f980"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a170020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1701b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a170340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1704d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a170660"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1707f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a170980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a170b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a170ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a16f020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a16f1b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a16f340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a16f4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a171db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a16f660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a16f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7fe62a14e570" loc="198:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7fe62a14e570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a14e8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a14ea80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a14ec10"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a14b980"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a14c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a14c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a14c340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a14c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a14c660"/>
        <function-ref name="get" scoped="" ref="0x7fe62a14c7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a14c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a14cb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a14cca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a14b020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a14b1b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a14b340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a14b4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a14eda0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a14b660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a14b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7fe62a139570" loc="209:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7fe62a139570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1398f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a139a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a139c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a137980"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a138020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1381b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a138340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1384d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a138660"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1387f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a138980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a138b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a138ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a137020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1371b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a137340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1374d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a139da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a137660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1377f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7fe62a15d580" loc="191:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7fe62a15d580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a15d900"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a15da90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a15dc20"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a15b980"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a15c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a15c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a15c340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a15c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a15c660"/>
        <function-ref name="get" scoped="" ref="0x7fe62a15c7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a15c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a15cb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a15cca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a15b020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a15b1b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a15b340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a15b4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a15ddb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a15b660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a15b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7fe62a1b1710" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7fe62a1b1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1b1c90"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a1b1e20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a1b0020"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1afc10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a1b0340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1b04d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a1b0660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1b07f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a1b0980"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1b0b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1b0ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a1b0e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1af020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a1af2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1af440"/>
        <function-ref name="set" scoped="" ref="0x7fe62a1af5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1af760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a1b01b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1af8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1afa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7fe62a1988a0" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7fe62a1988a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a198c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a198db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a197020"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a196c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a197340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1974d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a197660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1977f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a197980"/>
        <function-ref name="get" scoped="" ref="0x7fe62a197b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a197ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a197e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a196020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a1962b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a196440"/>
        <function-ref name="set" scoped="" ref="0x7fe62a1965d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a196760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a1971b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1968f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a196a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7fe62a1838a0" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7fe62a1838a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a183c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a183db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a182020"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a181c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a182340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1824d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a182660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1827f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a182980"/>
        <function-ref name="get" scoped="" ref="0x7fe62a182b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a182ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a182e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a181020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a1812b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a181440"/>
        <function-ref name="set" scoped="" ref="0x7fe62a1815d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a181760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a1821b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1818f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a181a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7fe62a14bd40" loc="199:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7fe62a14bd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a14a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a14a270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a14a400"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1481b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a14a720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a14a8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a14aa40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a14abd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a14ad60"/>
        <function-ref name="get" scoped="" ref="0x7fe62a149020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1491b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a149340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1494d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a149760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1498f0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a149a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a149c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a14a590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a149da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a148020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7fe62a165d40" loc="188:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7fe62a165d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1640e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a164270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a164400"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1621b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a164720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1648b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a164a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a164bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a164d60"/>
        <function-ref name="get" scoped="" ref="0x7fe62a163020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1631b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a163340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1634d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a163760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1638f0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a163a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a163c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a164590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a163da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a162020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fe62a1e2d50" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fe62a1e2d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1e1100"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a1e1290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a1e1420"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1df1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a1e1740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1e18d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a1e1a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1e1bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a1e1d80"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1e0020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1e01b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a1e0340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1e04d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a1e0760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1e08f0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a1e0a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1e0c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a1e15b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1e0da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1df020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fe62a1c9e50" loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fe62a1c9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1c8210"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a1c83a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a1c8530"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1c6340"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a1c8850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1c89e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a1c8b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1c8d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a1c7020"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1c71b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1c7340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a1c74d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1c7660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a1c78f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1c7a80"/>
        <function-ref name="set" scoped="" ref="0x7fe62a1c7c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1c7da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a1c86c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1c6020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1c61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7fe62a1898a0" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7fe62a1898a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a189c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a189db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a187020"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a186c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a187340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1874d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a187660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1877f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a187980"/>
        <function-ref name="get" scoped="" ref="0x7fe62a187b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a187ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a187e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a186020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a1862b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a186440"/>
        <function-ref name="set" scoped="" ref="0x7fe62a1865d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a186760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a1871b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1868f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a186a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7fe62a1c4e50" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7fe62a1c4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1c2210"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a1c23a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a1c2530"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1c0340"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a1c2850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1c29e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a1c2b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1c2d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a1c1020"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1c11b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1c1340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a1c14d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1c1660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a1c18f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1c1a80"/>
        <function-ref name="set" scoped="" ref="0x7fe62a1c1c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1c1da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a1c26c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1c0020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1c01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7fe62a1a9020" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7fe62a1a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1a93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a1a9530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a1a96c0"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1a74d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a1a99e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1a9b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a1a9d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1a8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a1a81b0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1a8340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1a84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a1a8660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1a87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a1a8a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1a8c10"/>
        <function-ref name="set" scoped="" ref="0x7fe62a1a8da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1a7020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a1a9850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1a71b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1a7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7fe62a190020" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7fe62a190020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1903a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a190530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a1906c0"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a18e4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a1909e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a190b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a190d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a18f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a18f1b0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a18f340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a18f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a18f660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a18f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a18fa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a18fc10"/>
        <function-ref name="set" scoped="" ref="0x7fe62a18fda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a18e020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a190850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a18e1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a18e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7fe62a17b020" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7fe62a17b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a17b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a17b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a17b6c0"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1794d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a17b9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a17bb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a17bd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a17a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a17a1b0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a17a340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a17a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a17a660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a17a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a17aa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a17ac10"/>
        <function-ref name="set" scoped="" ref="0x7fe62a17ada0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a179020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a17b850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1791b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a179340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7fe62a160d50" loc="190:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7fe62a160d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a15f100"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a15f290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a15f420"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a15d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a15f740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a15f8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a15fa60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a15fbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a15fd80"/>
        <function-ref name="get" scoped="" ref="0x7fe62a15e020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a15e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a15e340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a15e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a15e760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a15e8f0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a15ea80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a15ec10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a15f5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a15eda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a15d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fe62a1ec530" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fe62a1ec530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1ec8b0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a1eca40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a1ecbd0"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1fa980"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a1fb020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1fb1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a1fb340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1fb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a1fb660"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1fb7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1fb980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a1fbb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1fbca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a1fa020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1fa1b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a1fa340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1fa4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a1ecd60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1fa660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1fa7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fe62a1d5580" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fe62a1d5580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1d5900"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a1d5a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a1d5c20"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1d3980"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a1d4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1d41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a1d4340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1d44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a1d4660"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1d47f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1d4980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a1d4b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1d4ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a1d3020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1d31b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a1d3340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1d34d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a1d5db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1d3660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1d37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7fe62a1bb710" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7fe62a1bb710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1bba90"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a1bbc20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a1bbdb0"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1b9a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a1ba1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1ba340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a1ba4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1ba660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a1ba7f0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1ba980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1bab10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a1baca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1bae30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a1b9120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1b92b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a1b9440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1b95d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a1ba020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1b9760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1b98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7fe62a1a28a0" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7fe62a1a28a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1a2c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a1a2db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a1a1020"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1a0c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a1a1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1a14d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a1a1660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1a17f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a1a1980"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1a1b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1a1ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a1a1e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1a0020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a1a02b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1a0440"/>
        <function-ref name="set" scoped="" ref="0x7fe62a1a05d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1a0760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a1a11b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1a08f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1a0a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7fe62a15bd50" loc="192:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7fe62a15bd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a15a100"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a15a290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a15a420"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1581b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a15a740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a15a8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a15aa60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a15abf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a15ad80"/>
        <function-ref name="get" scoped="" ref="0x7fe62a159020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1591b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a159340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1594d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a159760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1598f0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a159a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a159c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a15a5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a159da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a158020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7fe62a153570" loc="196:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7fe62a153570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1538f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a153a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a153c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a151980"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a152020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1521b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a152340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1524d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a152660"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1527f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a152980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a152b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a152ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a151020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1511b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a151340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1514d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a153da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a151660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1517f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7fe62a143570" loc="202:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7fe62a143570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1438f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a143a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a143c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a141980"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a142020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1421b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a142340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1424d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a142660"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1427f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a142980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a142b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a142ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a141020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1411b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a141340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1414d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a143da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a141660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1417f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7fe62a19d8a0" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7fe62a19d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a19dc20"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a19ddb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a19c020"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a19bc10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a19c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a19c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a19c660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a19c7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a19c980"/>
        <function-ref name="get" scoped="" ref="0x7fe62a19cb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a19cca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a19ce30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a19b020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a19b2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a19b440"/>
        <function-ref name="set" scoped="" ref="0x7fe62a19b5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a19b760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a19c1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a19b8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a19ba80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7fe62a158580" loc="193:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7fe62a158580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a158900"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a158a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a158c20"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a156980"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a157020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1571b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a157340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1574d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a157660"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1577f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a157980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a157b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a157ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a156020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1561b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a156340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1564d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a158db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a156660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1567f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fe62a1e7d50" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fe62a1e7d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1e6100"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a1e6290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a1e6420"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1e41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a1e6740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1e68d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a1e6a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1e6bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a1e6d80"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1e5020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1e51b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a1e5340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1e54d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a1e5760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1e58f0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a1e5a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1e5c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a1e65b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1e5da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1e4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fe62a1cee50" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fe62a1cee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1cd210"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a1cd3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a1cd530"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1cb340"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a1cd850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1cd9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a1cdb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1cdd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a1cc020"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1cc1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1cc340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a1cc4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1cc660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a1cc8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1cca80"/>
        <function-ref name="set" scoped="" ref="0x7fe62a1ccc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1ccda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a1cd6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1cb020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1cb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7fe62a1b4e50" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7fe62a1b4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1b3210"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a1b33a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a1b3530"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1b1340"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a1b3850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1b39e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a1b3b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1b3d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a1b2020"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1b21b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1b2340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a1b24d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1b2660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a1b28f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1b2a80"/>
        <function-ref name="set" scoped="" ref="0x7fe62a1b2c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1b2da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a1b36c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1b1020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1b11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7fe62a162580" loc="189:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7fe62a162580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a162900"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a162a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a162c20"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a160980"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a161020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1611b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a161340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1614d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a161660"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1617f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a161980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a161b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a161ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a160020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1601b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a160340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1604d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a162db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a160660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1607f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7fe62a148570" loc="200:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7fe62a148570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1488f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a148a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a148c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a146980"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a147020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1471b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a147340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1474d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a147660"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1477f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a147980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a147b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a147ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a146020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1461b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a146340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1464d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a148da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a146660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1467f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7fe62a1ae020" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7fe62a1ae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1ae3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a1ae530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a1ae6c0"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1ac4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a1ae9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1aeb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a1aed00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1ad020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a1ad1b0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1ad340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1ad4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a1ad660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1ad7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a1ada80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1adc10"/>
        <function-ref name="set" scoped="" ref="0x7fe62a1adda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1ac020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a1ae850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1ac1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1ac340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7fe62a195020" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7fe62a195020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1953a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a195530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a1956c0"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1934d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a1959e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a195b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a195d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a194020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a1941b0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a194340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1944d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a194660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1947f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a194a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a194c10"/>
        <function-ref name="set" scoped="" ref="0x7fe62a194da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a193020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a195850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1931b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a193340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7fe62a180020" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7fe62a180020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1803a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a180530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a1806c0"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a17e4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a1809e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a180b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a180d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a17f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a17f1b0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a17f340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a17f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a17f660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a17f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a17fa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a17fc10"/>
        <function-ref name="set" scoped="" ref="0x7fe62a17fda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a17e020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a180850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a17e1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a17e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fe62a1df580" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fe62a1df580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1df900"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a1dfa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a1dfc20"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1dd980"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a1de020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1de1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a1de340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1de4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a1de660"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1de7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1de980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a1deb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1deca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a1dd020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1dd1b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a1dd340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1dd4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a1dfdb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1dd660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1dd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7fe62a185020" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7fe62a185020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1853a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a185530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a1856c0"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1834d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a1859e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a185b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a185d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a184020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a1841b0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a184340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1844d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a184660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1847f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a184a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a184c10"/>
        <function-ref name="set" scoped="" ref="0x7fe62a184da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a183020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a185850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1831b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a183340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fe62a1da580" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fe62a1da580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1da900"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a1daa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a1dac20"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1d8980"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a1d9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1d91b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a1d9340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1d94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a1d9660"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1d97f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1d9980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a1d9b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1d9ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a1d8020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1d81b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a1d8340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1d84d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a1dadb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1d8660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1d87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7fe62a1c0710" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7fe62a1c0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1c0a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a1c0c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a1c0db0"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1bea80"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a1bf1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1bf340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a1bf4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1bf660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a1bf7f0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1bf980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1bfb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a1bfca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1bfe30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a1be120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1be2b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a1be440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1be5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a1bf020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1be760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1be8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7fe62a1a78a0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7fe62a1a78a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1a7c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a1a7db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a1a6020"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1a5c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a1a6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1a64d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a1a6660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1a67f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a1a6980"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1a6b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1a6ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a1a6e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1a5020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a1a52b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1a5440"/>
        <function-ref name="set" scoped="" ref="0x7fe62a1a55d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1a5760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a1a61b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1a58f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1a5a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7fe62a18e8a0" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7fe62a18e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a18ec20"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a18edb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a18d020"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a18cc10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a18d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a18d4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a18d660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a18d7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a18d980"/>
        <function-ref name="get" scoped="" ref="0x7fe62a18db10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a18dca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a18de30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a18c020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a18c2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a18c440"/>
        <function-ref name="set" scoped="" ref="0x7fe62a18c5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a18c760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a18d1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a18c8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a18ca80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7fe62a1798a0" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7fe62a1798a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a179c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a179db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a178020"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a177c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a178340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1784d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a178660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1787f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a178980"/>
        <function-ref name="get" scoped="" ref="0x7fe62a178b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a178ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a178e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a177020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a1772b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a177440"/>
        <function-ref name="set" scoped="" ref="0x7fe62a1775d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a177760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a1781b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1778f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a177a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fe62a1fad50" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fe62a1fad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1eb100"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a1eb290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a1eb420"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1e91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a1eb740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1eb8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a1eba60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1ebbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a1ebd80"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1ea020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1ea1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a1ea340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1ea4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a1ea760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1ea8f0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a1eaa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1eac10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a1eb5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1eada0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1e9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fe62a1d3d50" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fe62a1d3d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1d2100"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a1d2290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a1d2420"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1d01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a1d2740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1d28d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a1d2a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1d2bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a1d2d80"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1d1020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1d11b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a1d1340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1d14d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a1d1760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1d18f0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a1d1a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1d1c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a1d25b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1d1da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1d0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7fe62a1b9e50" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7fe62a1b9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1b8210"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a1b83a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a1b8530"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1b6340"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a1b8850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1b89e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a1b8b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1b8d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a1b7020"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1b71b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1b7340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a1b74d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1b7660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a1b78f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1b7a80"/>
        <function-ref name="set" scoped="" ref="0x7fe62a1b7c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1b7da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a1b86c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1b6020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1b61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7fe62a19f020" loc="90:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7fe62a19f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a19f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a19f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a19f6c0"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a19d4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a19f9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a19fb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a19fd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a19e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a19e1b0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a19e340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a19e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a19e660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a19e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a19ea80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a19ec10"/>
        <function-ref name="set" scoped="" ref="0x7fe62a19eda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a19d020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a19f850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a19d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a19d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7fe62a151d40" loc="197:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7fe62a151d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1500e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a150270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a150400"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a14e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a150720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1508b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a150a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a150bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a150d60"/>
        <function-ref name="get" scoped="" ref="0x7fe62a14f020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a14f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a14f340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a14f4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a14f760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a14f8f0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a14fa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a14fc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a150590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a14fda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a14e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7fe62a13e560" loc="206:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7fe62a13e560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a13e8e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a13ea70"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a13ec00"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a13c980"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a13d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a13d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a13d340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a13d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a13d660"/>
        <function-ref name="get" scoped="" ref="0x7fe62a13d7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a13d980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a13db10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a13dca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a13c020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a13c1b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a13c340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a13c4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a13ed90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a13c660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a13c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7fe62a16c580" loc="184:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7fe62a16c580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a16c900"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a16ca90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a16cc20"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a16a980"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a16b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a16b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a16b340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a16b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a16b660"/>
        <function-ref name="get" scoped="" ref="0x7fe62a16b7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a16b980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a16bb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a16bca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a16a020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a16a1b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a16a340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a16a4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a16cdb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a16a660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a16a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7fe62a19a020" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7fe62a19a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a19a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a19a530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a19a6c0"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1984d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a19a9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a19ab70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a19ad00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a199020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a1991b0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a199340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1994d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a199660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1997f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a199a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a199c10"/>
        <function-ref name="set" scoped="" ref="0x7fe62a199da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a198020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a19a850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a1981b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a198340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7fe62a13cd40" loc="208:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7fe62a13cd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a13b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a13b270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a13b400"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1391b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a13b720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a13b8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a13ba40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a13bbd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a13bd60"/>
        <function-ref name="get" scoped="" ref="0x7fe62a13a020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a13a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a13a340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a13a4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a13a760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a13a8f0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a13aa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a13ac10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a13b590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a13ada0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a139020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7fe62a134580" loc="212:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7fe62a134580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a134900"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a134a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a134c20"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a132980"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a133020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1331b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a133340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a1334d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a133660"/>
        <function-ref name="get" scoped="" ref="0x7fe62a1337f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a133980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a133b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a133ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a132020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1321b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a132340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a1324d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a134db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a132660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a1327f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7fe62a1748f0" loc="181:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7fe62a1748f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1730a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a173230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a1733c0"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a1711b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a1736e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a173870"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a173a00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a173b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a173d20"/>
        <function-ref name="get" scoped="" ref="0x7fe62a172020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a1721b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a172340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a1724d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a172760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a1728f0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a172a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a172c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a173550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a172da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a171020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a12fd10" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a12fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a1000e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a100270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a100400"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a0fe1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a100720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a1008b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a100a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a100bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a100d60"/>
        <function-ref name="get" scoped="" ref="0x7fe62a0ff020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a0ff1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a0ff340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a0ff4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a0ff760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a0ff8f0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a0ffa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a0ffc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a0ffda0"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a100590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a0fe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a0fb260" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a0fb260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a0fb5e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a0fb770"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a0fb900"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a0f9660"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a0fbc20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a0fbdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a0fa020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a0fa1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a0fa340"/>
        <function-ref name="get" scoped="" ref="0x7fe62a0fa4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a0fa660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a0fa7f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a0fa980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a0fac10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a0fada0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a0f9020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a0f91b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a0f9340"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a0fba90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a0f94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a0f6740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a0f6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a0f6ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a0f6c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a0f6de0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a0f4a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a0f51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a0f5340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a0f54d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a0f5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a0f57f0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a0f5980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a0f5b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a0f5ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a0f5e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a0f4120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a0f42b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a0f4440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a0f45d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a0f4760"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a0f5020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a0f48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a0f1b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a0f1b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a0f0020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a0f01b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a0f0340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a0ee020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a0f0660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a0f07f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a0f0980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a0f0b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a0f0ca0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a0f0e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a0ef020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a0ef1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a0ef340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a0ef5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a0ef760"/>
        <function-ref name="set" scoped="" ref="0x7fe62a0ef8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a0efa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a0efc10"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a0f04d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a0efda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a0eb060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a0eb060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a0eb3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a0eb570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a0eb700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a0e84d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a0eba20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a0ebbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a0ebd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a0e9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a0e91b0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a0e9340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a0e94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a0e9660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a0e97f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a0e9a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a0e9c10"/>
        <function-ref name="set" scoped="" ref="0x7fe62a0e9da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a0e8020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a0e81b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a0eb890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a0e8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a0e5540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a0e5540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a0e58c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a0e5a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a0e5be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a0e3980"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a0e4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a0e41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a0e4340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a0e44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a0e4660"/>
        <function-ref name="get" scoped="" ref="0x7fe62a0e47f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a0e4980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a0e4b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a0e4ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a0e3020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a0e31b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a0e3340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a0e34d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a0e3660"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a0e5d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a0e37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a0e0b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a0e0b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a0df020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a0df1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a0df340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a0dd020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a0df660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a0df7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a0df980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a0dfb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a0dfca0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a0dfe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a0de020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a0de1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a0de340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a0de5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a0de760"/>
        <function-ref name="set" scoped="" ref="0x7fe62a0de8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a0dea80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a0dec10"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a0df4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a0deda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a0da060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a0da060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a0da3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a0da570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a0da700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a0d84d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a0daa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a0dabb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a0dad40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a0d9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a0d91b0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a0d9340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a0d94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a0d9660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a0d97f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a0d9a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a0d9c10"/>
        <function-ref name="set" scoped="" ref="0x7fe62a0d9da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a0d8020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a0d81b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a0da890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a0d8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a0d5540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a0d5540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a0d58c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a0d5a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a0d5be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a0d3980"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a0d4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a0d41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a0d4340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a0d44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a0d4660"/>
        <function-ref name="get" scoped="" ref="0x7fe62a0d47f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a0d4980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a0d4b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a0d4ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a0d3020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a0d31b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a0d3340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a0d34d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a0d3660"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a0d5d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a0d37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a0d0b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a0d0b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a0cf020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a0cf1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a0cf340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a0cd020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a0cf660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a0cf7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a0cf980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a0cfb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a0cfca0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a0cfe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a0ce020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a0ce1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a0ce340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a0ce5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a0ce760"/>
        <function-ref name="set" scoped="" ref="0x7fe62a0ce8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a0cea80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a0cec10"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a0cf4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a0ceda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a0ca060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a0ca060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a0ca3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a0ca570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a0ca700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a0c84d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a0caa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a0cabb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a0cad40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a0c9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a0c91b0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a0c9340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a0c94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a0c9660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a0c97f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a0c9a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a0c9c10"/>
        <function-ref name="set" scoped="" ref="0x7fe62a0c9da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a0c8020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a0c81b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a0ca890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a0c8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a0c5540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a0c5540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a0c58c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a0c5a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a0c5be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a0c3980"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a0c4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a0c41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a0c4340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a0c44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a0c4660"/>
        <function-ref name="get" scoped="" ref="0x7fe62a0c47f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a0c4980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a0c4b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a0c4ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a0c3020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a0c31b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a0c3340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a0c34d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a0c3660"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a0c5d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a0c37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a0bfd10" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a0bfd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a0be0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a0be270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a0be400"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a0bc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a0be720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a0be8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a0bea40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a0bebd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a0bed60"/>
        <function-ref name="get" scoped="" ref="0x7fe62a0bd020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a0bd1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a0bd340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a0bd4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a0bd760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a0bd8f0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a0bda80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a0bdc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a0bdda0"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a0be590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a0bc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a0b9260" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a0b9260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a0b95e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a0b9770"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a0b9900"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a0b7660"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a0b9c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a0b9db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a0b8020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a0b81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a0b8340"/>
        <function-ref name="get" scoped="" ref="0x7fe62a0b84d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a0b8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a0b87f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a0b8980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a0b8c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a0b8da0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a0b7020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a0b71b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a0b7340"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a0b9a90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a0b74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a0b4740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a0b4740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a0b4ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a0b4c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a0b4de0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a0b2a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a0b31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a0b3340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a0b34d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a0b3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a0b37f0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a0b3980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a0b3b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a0b3ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a0b3e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a0b2120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a0b22b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a0b2440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a0b25d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a0b2760"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a0b3020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a0b28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a0afb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a0afb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a0ae020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a0ae1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a0ae340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a0ac020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a0ae660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a0ae7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a0ae980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a0aeb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a0aeca0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a0aee30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a0ad020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a0ad1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a0ad340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a0ad5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a0ad760"/>
        <function-ref name="set" scoped="" ref="0x7fe62a0ad8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a0ada80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a0adc10"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a0ae4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a0adda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a0a9060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a0a9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a0a93e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a0a9570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a0a9700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a0a74d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a0a9a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a0a9bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a0a9d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a0a8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a0a81b0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a0a8340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a0a84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a0a8660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a0a87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a0a8a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a0a8c10"/>
        <function-ref name="set" scoped="" ref="0x7fe62a0a8da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a0a7020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a0a71b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a0a9890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a0a7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a0a4540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a0a4540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a0a48c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a0a4a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a0a4be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a0a2980"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a0a3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a0a31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a0a3340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a0a34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a0a3660"/>
        <function-ref name="get" scoped="" ref="0x7fe62a0a37f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a0a3980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a0a3b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a0a3ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a0a2020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a0a21b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a0a2340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a0a24d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a0a2660"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a0a4d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a0a27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a09fb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a09fb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a09e020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a09e1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a09e340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a09c020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a09e660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a09e7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a09e980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a09eb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a09eca0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a09ee30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a09d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a09d1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a09d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a09d5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a09d760"/>
        <function-ref name="set" scoped="" ref="0x7fe62a09d8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a09da80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a09dc10"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a09e4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a09dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a099060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a099060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a0993e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a099570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a099700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a0964d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a099a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a099bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a099d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a097020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a0971b0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a097340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a0974d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a097660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a0977f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a097a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a097c10"/>
        <function-ref name="set" scoped="" ref="0x7fe62a097da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a096020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a0961b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a099890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a096340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a093540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a093540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a0938c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a093a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a093be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a091980"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a092020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a0921b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a092340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a0924d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a092660"/>
        <function-ref name="get" scoped="" ref="0x7fe62a0927f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a092980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a092b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a092ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a091020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a0911b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a091340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a0914d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a091660"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a093d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a0917f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a08eb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a08eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a08d020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a08d1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a08d340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a08b020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a08d660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a08d7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a08d980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a08db10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a08dca0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a08de30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a08c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a08c1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a08c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a08c5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a08c760"/>
        <function-ref name="set" scoped="" ref="0x7fe62a08c8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a08ca80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a08cc10"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a08d4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a08cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a088060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a088060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a0883e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a088570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a088700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a0864d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a088a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a088bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a088d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a087020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a0871b0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a087340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a0874d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a087660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a0877f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a087a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a087c10"/>
        <function-ref name="set" scoped="" ref="0x7fe62a087da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a086020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a0861b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a088890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a086340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a083540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a083540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a0838c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a083a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a083be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a081980"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a082020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a0821b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a082340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a0824d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a082660"/>
        <function-ref name="get" scoped="" ref="0x7fe62a0827f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a082980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a082b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a082ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a081020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a0811b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a081340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a0814d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a081660"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a083d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a0817f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a07edc0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a07edc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a07d180"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a07d310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a07d4a0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a07b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a07d7c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a07d950"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a07dae0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a07dc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a07de00"/>
        <function-ref name="get" scoped="" ref="0x7fe62a07c020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a07c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a07c340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a07c4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a07c760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a07c8f0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a07ca80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a07cc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a07cda0"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a07d630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a07b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a078260" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a078260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a0785e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a078770"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a078900"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a076660"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a078c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a078db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a077020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a0771b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a077340"/>
        <function-ref name="get" scoped="" ref="0x7fe62a0774d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a077660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a0777f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a077980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a077c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a077da0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a076020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a0761b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a076340"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a078a90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a0764d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a073740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a073740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a073ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a073c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a073de0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a071a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a0721b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a072340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a0724d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a072660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a0727f0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a072980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a072b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a072ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a072e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a071120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a0712b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a071440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a0715d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a071760"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a072020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a0718f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a06eb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a06eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a06c020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a06c1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a06c340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a06a020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a06c660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a06c7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a06c980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a06cb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a06cca0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a06ce30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a06b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a06b1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a06b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a06b5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a06b760"/>
        <function-ref name="set" scoped="" ref="0x7fe62a06b8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a06ba80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a06bc10"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a06c4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a06bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a067060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a067060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a0673e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a067570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a067700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a0654d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a067a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a067bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a067d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a066020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a0661b0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a066340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a0664d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a066660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a0667f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a066a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a066c10"/>
        <function-ref name="set" scoped="" ref="0x7fe62a066da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a065020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a0651b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a067890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a065340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a062540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a062540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a0628c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a062a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a062be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a060980"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a061020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a0611b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a061340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a0614d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a061660"/>
        <function-ref name="get" scoped="" ref="0x7fe62a0617f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a061980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a061b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a061ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a060020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a0601b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a060340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a0604d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a060660"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a062d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a0607f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a05db90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a05db90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a05c020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a05c1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a05c340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a05a020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a05c660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a05c7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a05c980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a05cb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a05cca0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a05ce30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a05b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a05b1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a05b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a05b5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a05b760"/>
        <function-ref name="set" scoped="" ref="0x7fe62a05b8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a05ba80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a05bc10"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a05c4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a05bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a057060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a057060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a0573e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a057570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a057700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a0554d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a057a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a057bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a057d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a056020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a0561b0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a056340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a0564d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a056660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a0567f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a056a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a056c10"/>
        <function-ref name="set" scoped="" ref="0x7fe62a056da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a055020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a0551b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a057890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a055340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a052540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a052540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a0528c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a052a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a052be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a050980"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a051020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a0511b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a051340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a0514d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a051660"/>
        <function-ref name="get" scoped="" ref="0x7fe62a0517f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a051980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a051b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a051ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a050020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a0501b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a050340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a0504d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a050660"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a052d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a0507f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a04db90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a04db90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a04c020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a04c1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a04c340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a04a020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a04c660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a04c7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a04c980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a04cb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a04cca0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a04ce30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a04b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a04b1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a04b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a04b5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a04b760"/>
        <function-ref name="set" scoped="" ref="0x7fe62a04b8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a04ba80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a04bc10"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a04c4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a04bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a047060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a047060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a0473e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a047570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a047700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a0454d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a047a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a047bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a047d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a046020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a0461b0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a046340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a0464d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a046660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a0467f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a046a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a046c10"/>
        <function-ref name="set" scoped="" ref="0x7fe62a046da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a045020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a0451b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a047890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a045340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a041540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a041540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a0418c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a041a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a041be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a03f980"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a040020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a0401b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a040340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a0404d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a040660"/>
        <function-ref name="get" scoped="" ref="0x7fe62a0407f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a040980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a040b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a040ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a03f020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a03f1b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a03f340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a03f4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a03f660"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a041d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a03f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a03cb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a03cb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a03b020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a03b1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a03b340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a039020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a03b660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a03b7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a03b980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a03bb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a03bca0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a03be30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a03a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a03a1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a03a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a03a5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a03a760"/>
        <function-ref name="set" scoped="" ref="0x7fe62a03a8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a03aa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a03ac10"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a03b4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a03ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a036060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a036060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a0363e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a036570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a036700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a0344d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a036a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a036bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a036d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a035020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a0351b0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a035340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a0354d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a035660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a0357f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a035a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a035c10"/>
        <function-ref name="set" scoped="" ref="0x7fe62a035da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a034020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a0341b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a036890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a034340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a031540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a031540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a0318c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a031a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a031be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a02f980"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a030020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a0301b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a030340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a0304d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a030660"/>
        <function-ref name="get" scoped="" ref="0x7fe62a0307f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a030980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a030b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a030ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a02f020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a02f1b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a02f340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a02f4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a02f660"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a031d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a02f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a02cb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a02cb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a02b020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a02b1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a02b340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a029020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a02b660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a02b7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a02b980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a02bb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a02bca0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a02be30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a02a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a02a1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a02a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a02a5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a02a760"/>
        <function-ref name="set" scoped="" ref="0x7fe62a02a8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a02aa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a02ac10"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a02b4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a02ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a026060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a026060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a0263e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a026570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a026700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a0244d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a026a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a026bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a026d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a025020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a0251b0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a025340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a0254d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a025660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a0257f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a025a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a025c10"/>
        <function-ref name="set" scoped="" ref="0x7fe62a025da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a024020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a0241b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a026890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a024340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a021540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a021540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a0218c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a021a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a021be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a01f980"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a020020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a0201b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a020340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a0204d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a020660"/>
        <function-ref name="get" scoped="" ref="0x7fe62a0207f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a020980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a020b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a020ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a01f020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a01f1b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a01f340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a01f4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a01f660"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a021d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a01f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a01cb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a01cb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a01a020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a01a1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a01a340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a018020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a01a660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a01a7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a01a980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a01ab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a01aca0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a01ae30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a019020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a0191b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a019340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a0195d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a019760"/>
        <function-ref name="set" scoped="" ref="0x7fe62a0198f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a019a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a019c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a01a4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a019da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a015060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a015060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a0153e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a015570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a015700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a0134d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a015a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a015bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a015d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a014020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a0141b0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a014340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a0144d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a014660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a0147f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a014a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a014c10"/>
        <function-ref name="set" scoped="" ref="0x7fe62a014da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a013020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a0131b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a015890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a013340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a010540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a010540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a0108c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a010a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a010be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a00e980"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a00f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a00f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a00f340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a00f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a00f660"/>
        <function-ref name="get" scoped="" ref="0x7fe62a00f7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a00f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a00fb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a00fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a00e020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a00e1b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62a00e340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a00e4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a00e660"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a010d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a00e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a00bb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a00bb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a00a020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a00a1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a00a340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a008020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a00a660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a00a7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a00a980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a00ab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a00aca0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a00ae30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a009020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a0091b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a009340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a0095d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a009760"/>
        <function-ref name="set" scoped="" ref="0x7fe62a0098f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a009a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a009c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a00a4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a009da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a005060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a005060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a0053e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a005570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a005700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62a0034d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62a005a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62a005bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62a005d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62a004020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62a0041b0"/>
        <function-ref name="get" scoped="" ref="0x7fe62a004340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62a0044d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62a004660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62a0047f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62a004a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62a004c10"/>
        <function-ref name="set" scoped="" ref="0x7fe62a004da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62a003020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62a0031b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a005890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62a003340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe62a000540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fe62a000540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62a0008c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62a000a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62a000be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe629ffe980"/>
        <function-ref name="toggle" scoped="" ref="0x7fe629fff020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe629fff1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe629fff340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe629fff4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe629fff660"/>
        <function-ref name="get" scoped="" ref="0x7fe629fff7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe629fff980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe629fffb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe629fffca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe629ffe020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe629ffe1b0"/>
        <function-ref name="set" scoped="" ref="0x7fe629ffe340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe629ffe4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe629ffe660"/>
        <function-ref name="clr" scoped="" ref="0x7fe62a000d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe629ffe7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fe629f70610" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe629f70610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe629f70990"/>
        <function-ref name="isInput" scoped="" ref="0x7fe629f70b20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe629f70cb0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe629f6e980"/>
        <function-ref name="toggle" scoped="" ref="0x7fe629f6f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe629f6f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe629f6f340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe629f6f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe629f6f660"/>
        <function-ref name="get" scoped="" ref="0x7fe629f6f7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe629f6f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe629f6fb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe629f6fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe629f6e020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe629f6e1b0"/>
        <function-ref name="set" scoped="" ref="0x7fe629f6e340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe629f6e4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe629f6e660"/>
        <function-ref name="clr" scoped="" ref="0x7fe629f70e40"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe629f6e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fe629f82480" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fe629f82480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe629f82800"/>
        <function-ref name="isInput" scoped="" ref="0x7fe629f82990"/>
        <function-ref name="toggle" scoped="" ref="0x7fe629f82b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe629f82cb0"/>
        <function-ref name="get" scoped="" ref="0x7fe629f82e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe629f70020"/>
        <function-ref name="set" scoped="" ref="0x7fe629f701b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe629f70340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fe629f6ade0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe629f6ade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe629f69180"/>
        <function-ref name="isInput" scoped="" ref="0x7fe629f69310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe629f694a0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe629f671b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe629f697c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe629f69950"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe629f69ae0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe629f69c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe629f69e00"/>
        <function-ref name="get" scoped="" ref="0x7fe629f68020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe629f681b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe629f68340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe629f684d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe629f68760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe629f688f0"/>
        <function-ref name="set" scoped="" ref="0x7fe629f68a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe629f68c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe629f68da0"/>
        <function-ref name="clr" scoped="" ref="0x7fe629f69630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe629f67020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fe629f6cb20" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fe629f6cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe629f6a020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe629f6a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe629f6a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe629f6a4d0"/>
        <function-ref name="get" scoped="" ref="0x7fe629f6a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe629f6a7f0"/>
        <function-ref name="set" scoped="" ref="0x7fe629f6a980"/>
        <function-ref name="clr" scoped="" ref="0x7fe629f6ab10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fe629f64480" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe629f64480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe629f64800"/>
        <function-ref name="isInput" scoped="" ref="0x7fe629f64990"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe629f64b20"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe629f627f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe629f64e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe629f63020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe629f631b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe629f63340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe629f634d0"/>
        <function-ref name="get" scoped="" ref="0x7fe629f63660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe629f637f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe629f63980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe629f63b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe629f63da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe629f62020"/>
        <function-ref name="set" scoped="" ref="0x7fe629f621b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe629f62340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe629f624d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe629f64cb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe629f62660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fe629f651b0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fe629f651b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe629f65530"/>
        <function-ref name="isInput" scoped="" ref="0x7fe629f656c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe629f65850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe629f659e0"/>
        <function-ref name="get" scoped="" ref="0x7fe629f65b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe629f65d00"/>
        <function-ref name="set" scoped="" ref="0x7fe629f64020"/>
        <function-ref name="clr" scoped="" ref="0x7fe629f641b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fe629ec91e0" loc="17:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fe629ec91e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe629ec9560"/>
        <function-ref name="source" scoped="" ref="0x7fe629ec96f0"/>
        <function-ref name="address" scoped="" ref="0x7fe629ec9880"/>
        <function-ref name="destination" scoped="" ref="0x7fe629ec9a10"/>
        <function-ref name="setSource" scoped="" ref="0x7fe629ec9ba0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe629ec9d30"/>
        <function-ref name="type" scoped="" ref="0x7fe629f32020"/>
        <function-ref name="setType" scoped="" ref="0x7fe629f321b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe629f32340"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe629f324d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe629f32660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7fe629eb77a0" loc="20:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x7fe629eb77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe629eb7b20"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe629eb7cb0"/>
        <function-ref name="start" scoped="" ref="0x7fe629eb7e40"/>
        <function-ref name="stop" scoped="" ref="0x7fe629ec0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fe629f57cf0" loc="9:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fe629f57cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fe629f540a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fe629eda180" loc="16:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fe629eda180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe629eda500"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe629eda690"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe629eda820"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe629eda9b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe629edab40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fe629ebf5a0" loc="18:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fe629ebf5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe629ebf920"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe629ebfab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe629ebfc40"/>
        <function-ref name="cancel" scoped="" ref="0x7fe629ebfdd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe629edb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fe629eaf730" loc="21:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fe629eaf730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fe629eafab0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fe629eafc40"/>
        <function-ref name="getRssi" scoped="" ref="0x7fe629eafdd0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fe629ebc020"/>
        <function-ref name="getPower" scoped="" ref="0x7fe629ebc1b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fe629ebc340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerDormir" ref="0x7fe629f3e1c0" loc="14:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerDormir" scoped="" ref="0x7fe629f3e1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2eb680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe62a2eb9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe629f3a630"/>
        <function-ref name="fired" scoped="" ref="0x7fe629f3dc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe629f3c9d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe629f3c550"/>
        <function-ref name="getdt" scoped="" ref="0x7fe629f39020"/>
        <function-ref name="gett0" scoped="" ref="0x7fe629f3aab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe629f3c0d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe629f3edb0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe629f3a020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe629f3d2e0"/>
        <function-ref name="stop" scoped="" ref="0x7fe629f3d7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7fe629ebbe80" loc="19:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fe629ebbe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe629ec8220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fe629f54360" loc="10:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fe629f54360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe629f546e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe629f54870"/>
        <function-ref name="led1On" scoped="" ref="0x7fe629f54a00"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe629f54b90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe629f54d20"/>
        <function-ref name="get" scoped="" ref="0x7fe629f53020"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe629f531b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe629f537f0"/>
        <function-ref name="set" scoped="" ref="0x7fe629f53340"/>
        <function-ref name="led0On" scoped="" ref="0x7fe629f534d0"/>
        <function-ref name="led2On" scoped="" ref="0x7fe629f53660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerMiSlot" ref="0x7fe629f47820" loc="12:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMiSlot" scoped="" ref="0x7fe629f47820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2eb680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe62a2eb9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe629f46cf0"/>
        <function-ref name="fired" scoped="" ref="0x7fe629f51300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe629f460d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe629f51c00"/>
        <function-ref name="getdt" scoped="" ref="0x7fe629f44660"/>
        <function-ref name="gett0" scoped="" ref="0x7fe629f441e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe629f51780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe629f52480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe629f466e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe629f52950"/>
        <function-ref name="stop" scoped="" ref="0x7fe629f52e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerLeds" ref="0x7fe629f44cd0" loc="13:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerLeds" scoped="" ref="0x7fe629f44cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2eb680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe62a2eb9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe629f3f220"/>
        <function-ref name="fired" scoped="" ref="0x7fe629f427c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe629f41590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe629f41110"/>
        <function-ref name="getdt" scoped="" ref="0x7fe629f3fb20"/>
        <function-ref name="gett0" scoped="" ref="0x7fe629f3f6a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe629f42c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe629f43940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe629f41ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe629f43e10"/>
        <function-ref name="stop" scoped="" ref="0x7fe629f42340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerComienzaDormir" ref="0x7fe629f396f0" loc="15:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerComienzaDormir" scoped="" ref="0x7fe629f396f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2eb680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe62a2eb9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe629f35c40"/>
        <function-ref name="fired" scoped="" ref="0x7fe629f371e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe629f35020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe629f37ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fe629f34590"/>
        <function-ref name="gett0" scoped="" ref="0x7fe629f34110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe629f37660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe629f38390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe629f35630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe629f38860"/>
        <function-ref name="stop" scoped="" ref="0x7fe629f38d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe629e78980" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="SlaveAppC.TimerMiSlot"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe629e78980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2eb680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe62a2eb9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe629b4be80"/>
        <function-ref name="fired" scoped="" ref="0x7fe629b4c4a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe629b4b260"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe629b4cda0"/>
        <function-ref name="getdt" scoped="" ref="0x7fe629b4a7a0"/>
        <function-ref name="gett0" scoped="" ref="0x7fe629b4a320"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe629b4c920"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe629b4e5a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe629b4b870"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe629b4ea70"/>
        <function-ref name="stop" scoped="" ref="0x7fe629b4c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fe629e6eb60" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7fe629e6eb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2eb680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe62a2eb9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe629e69110"/>
        <function-ref name="fired" scoped="" ref="0x7fe629e6b5f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe629e6a4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe629e6a020"/>
        <function-ref name="getdt" scoped="" ref="0x7fe629e69a10"/>
        <function-ref name="gett0" scoped="" ref="0x7fe629e69590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe629e6ba70"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe629e6d790"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe629e6aab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe629e6dc60"/>
        <function-ref name="stop" scoped="" ref="0x7fe629e6b170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fe629e64700" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7fe629e64700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2eb680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe62a2eb9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe629e60c40"/>
        <function-ref name="fired" scoped="" ref="0x7fe629e621e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe629e60020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe629e62ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fe629e5f590"/>
        <function-ref name="gett0" scoped="" ref="0x7fe629e5f110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe629e62660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe629e63390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe629e60630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe629e63860"/>
        <function-ref name="stop" scoped="" ref="0x7fe629e63d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fe629e5e1a0" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fe629e5e1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2eb680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe62a2eb9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe629e5edd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe629e678c0" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe629e678c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe629e67c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fe629c1d870" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fe629c1d870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2eb680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe62a2eb9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe629c1a090"/>
        <function-ref name="fired" scoped="" ref="0x7fe629c1b090"/>
        <function-ref name="startAt" scoped="" ref="0x7fe629c1ba10"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe629c1b550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe629c1a550"/>
        <function-ref name="start" scoped="" ref="0x7fe629c1c6a0"/>
        <function-ref name="stop" scoped="" ref="0x7fe629c1cbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe629c1d020" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe629c1d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe629c1d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fe6289a44f0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fe6289a44f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ebe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe62a2ea200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe6289a1db0"/>
        <function-ref name="fired" scoped="" ref="0x7fe6289a2da0"/>
        <function-ref name="startAt" scoped="" ref="0x7fe6289a1760"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe6289a12a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe6289a02a0"/>
        <function-ref name="start" scoped="" ref="0x7fe6289a23d0"/>
        <function-ref name="stop" scoped="" ref="0x7fe6289a28e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe6289a5b10" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe6289a5b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe6289a4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fe62898bda0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fe62898bda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe62898a180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe62898a310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe62898a4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe62898a630"/>
        <function-ref name="fired" scoped="" ref="0x7fe62898a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fe62898d340" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fe62898d340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe62898d6c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe62898d850"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe62898d9e0"/>
        <function-ref name="get" scoped="" ref="0x7fe62898db70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe62898dd00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe62898c020"/>
        <function-ref name="getMode" scoped="" ref="0x7fe62898c1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe62898c340"/>
        <function-ref name="overflow" scoped="" ref="0x7fe62898c4d0"/>
        <function-ref name="setMode" scoped="" ref="0x7fe62898c660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe62898c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fe62898ca80" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe62898ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe62898ce00"/>
        <function-ref name="getControl" scoped="" ref="0x7fe62898b020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe62898b1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe62898b340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe62898b4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe62898b660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe62898b7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe62898b980"/>
        <function-ref name="setControl" scoped="" ref="0x7fe62898bb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fe629e251d0" loc="52:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fe629e251d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629e25550"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe629e256e0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe629e25870"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe629e25a00"/>
        <function-ref name="fired" scoped="" ref="0x7fe629e25b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fe629e2a990" loc="50:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fe629e2a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe629e2ad10"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe629e29020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe629e291b0"/>
        <function-ref name="get" scoped="" ref="0x7fe629e29340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe629e294d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629e29660"/>
        <function-ref name="getMode" scoped="" ref="0x7fe629e297f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629e29980"/>
        <function-ref name="overflow" scoped="" ref="0x7fe629e29b10"/>
        <function-ref name="setMode" scoped="" ref="0x7fe629e29ca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe629e29e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fe629e27720" loc="51:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe629e27720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe629e27aa0"/>
        <function-ref name="getControl" scoped="" ref="0x7fe629e27c30"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe629e27dc0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe629e26020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe629e261b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe629e26340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe629e264d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe629e26660"/>
        <function-ref name="setControl" scoped="" ref="0x7fe629e267f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7fe629e15730" loc="56:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7fe629e15730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe629e15ab0"/>
        <function-ref name="getControl" scoped="" ref="0x7fe629e15c40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe629e15dd0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe629e13020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe629e131b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe629e13340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe629e134d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe629e13660"/>
        <function-ref name="setControl" scoped="" ref="0x7fe629e137f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7fe629e0f280" loc="61:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7fe629e0f280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe629e0f600"/>
        <function-ref name="getControl" scoped="" ref="0x7fe629e0f790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe629e0f920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe629e0fab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe629e0fc40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe629e0fdd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe629e0e020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe629e0e1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fe629e0e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7fe629e16700" loc="55:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7fe629e16700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629e16a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe629e16c10"/>
        <function-ref name="captured" scoped="" ref="0x7fe629e16da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629e15020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629e151b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe629e15340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7fe629e03020" loc="73:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7fe629e03020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629e033a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe629e03530"/>
        <function-ref name="captured" scoped="" ref="0x7fe629e036c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629e03850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629e039e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe629e03b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7fe629e1c890" loc="54:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7fe629e1c890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629e1cc10"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe629e1cda0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe629e16020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe629e161b0"/>
        <function-ref name="fired" scoped="" ref="0x7fe629e16340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7fe629e04160" loc="72:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7fe629e04160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629e044e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe629e04670"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe629e04800"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe629e04990"/>
        <function-ref name="fired" scoped="" ref="0x7fe629e04b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7fe629df9ae0" loc="82:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7fe629df9ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629df9e60"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe629df8020"/>
        <function-ref name="captured" scoped="" ref="0x7fe629df81b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629df8340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629df84d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe629df8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7fe629e02020" loc="74:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7fe629e02020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe629e023a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fe629e02530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe629e026c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe629e02850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe629e029e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe629e02b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe629e02d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe629e01020"/>
        <function-ref name="setControl" scoped="" ref="0x7fe629e011b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7fe629e200c0" loc="50:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7fe629e200c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe629e20440"/>
        <function-ref name="getControl" scoped="" ref="0x7fe629e205d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe629e20760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe629e208f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe629e20a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe629e20c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe629e20da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe629e1f020"/>
        <function-ref name="setControl" scoped="" ref="0x7fe629e1f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7fe629e0aa20" loc="66:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7fe629e0aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629e0ada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe629e09020"/>
        <function-ref name="captured" scoped="" ref="0x7fe629e091b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629e09340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629e094d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe629e09660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7fe629e0bbb0" loc="65:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7fe629e0bbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629e0a020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe629e0a1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe629e0a340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe629e0a4d0"/>
        <function-ref name="fired" scoped="" ref="0x7fe629e0a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7fe629e0c730" loc="64:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7fe629e0c730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe629e0cab0"/>
        <function-ref name="getControl" scoped="" ref="0x7fe629e0cc40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe629e0cdd0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe629e0b020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe629e0b1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe629e0b340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe629e0b4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe629e0b660"/>
        <function-ref name="setControl" scoped="" ref="0x7fe629e0b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7fe629e12a20" loc="58:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7fe629e12a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629e12da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe629e11020"/>
        <function-ref name="captured" scoped="" ref="0x7fe629e111b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629e11340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629e114d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe629e11660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7fe629e00570" loc="76:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7fe629e00570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629e008f0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe629e00a80"/>
        <function-ref name="captured" scoped="" ref="0x7fe629e00c10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629e00da0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629dff020"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe629dff1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7fe629e09a50" loc="67:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7fe629e09a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe629e09dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7fe629e08020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe629e081b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe629e08340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe629e084d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe629e08660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe629e087f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe629e08980"/>
        <function-ref name="setControl" scoped="" ref="0x7fe629e08b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7fe629e13bb0" loc="57:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7fe629e13bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629e12020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe629e121b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe629e12340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe629e124d0"/>
        <function-ref name="fired" scoped="" ref="0x7fe629e12660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7fe629e24830" loc="49:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7fe629e24830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe629e24bb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe629e24d40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe629e21020"/>
        <function-ref name="get" scoped="" ref="0x7fe629e211b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe629e21340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629e214d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe629e21660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629e217f0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe629e21980"/>
        <function-ref name="setMode" scoped="" ref="0x7fe629e21b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe629e21ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7fe629e01570" loc="75:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7fe629e01570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629e01af0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe629e01c80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe629e01e10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe629e00020"/>
        <function-ref name="fired" scoped="" ref="0x7fe629e001b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7fe629e1d410" loc="53:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7fe629e1d410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe629e1d790"/>
        <function-ref name="getControl" scoped="" ref="0x7fe629e1d920"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe629e1dab0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe629e1dc40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe629e1ddd0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe629e1c020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe629e1c1b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe629e1c340"/>
        <function-ref name="setControl" scoped="" ref="0x7fe629e1c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7fe629dff5a0" loc="77:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7fe629dff5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe629dff920"/>
        <function-ref name="getControl" scoped="" ref="0x7fe629dffab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe629dffc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe629dffdd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe629dfe020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe629dfe1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe629dfe340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe629dfe4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fe629dfe660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7fe629e17410" loc="52:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7fe629e17410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629e17790"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe629e17920"/>
        <function-ref name="captured" scoped="" ref="0x7fe629e17ab0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629e17c40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629e17dd0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe629e1d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7fe629e07da0" loc="69:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7fe629e07da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629e06180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe629e06310"/>
        <function-ref name="captured" scoped="" ref="0x7fe629e064a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629e06630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629e067c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe629e06950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7fe629e1f570" loc="51:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7fe629e1f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629e1f8f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe629e1fa80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe629e1fc10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe629e1fda0"/>
        <function-ref name="fired" scoped="" ref="0x7fe629e1e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7fe629e07020" loc="68:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7fe629e07020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629e073a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe629e07530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe629e076c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe629e07850"/>
        <function-ref name="fired" scoped="" ref="0x7fe629e079e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7fe629dfd890" loc="79:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7fe629dfd890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629dfdc10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe629dfdda0"/>
        <function-ref name="captured" scoped="" ref="0x7fe629dfc020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629dfc1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629dfc340"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe629dfc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7fe629e06d40" loc="71:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7fe629e06d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe629e050e0"/>
        <function-ref name="getControl" scoped="" ref="0x7fe629e05270"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe629e05400"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe629e05590"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe629e05720"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe629e058b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe629e05a40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe629e05bd0"/>
        <function-ref name="setControl" scoped="" ref="0x7fe629e05d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7fe629e119e0" loc="60:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7fe629e119e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe629e11d60"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe629e10020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe629e101b0"/>
        <function-ref name="get" scoped="" ref="0x7fe629e10340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe629e104d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629e10660"/>
        <function-ref name="getMode" scoped="" ref="0x7fe629e107f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629e10980"/>
        <function-ref name="overflow" scoped="" ref="0x7fe629e10b10"/>
        <function-ref name="setMode" scoped="" ref="0x7fe629e10ca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe629e10e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7fe629e0d700" loc="63:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7fe629e0d700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629e0da80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe629e0dc10"/>
        <function-ref name="captured" scoped="" ref="0x7fe629e0dda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629e0c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629e0c1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe629e0c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7fe629dfea20" loc="78:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7fe629dfea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629dfeda0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe629dfd020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe629dfd1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe629dfd340"/>
        <function-ref name="fired" scoped="" ref="0x7fe629dfd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7fe629dfbd40" loc="81:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7fe629dfbd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629df90e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe629df9270"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe629df9400"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe629df9590"/>
        <function-ref name="fired" scoped="" ref="0x7fe629df9720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7fe629e0e700" loc="62:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7fe629e0e700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629e0eb80"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe629e0ed10"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe629e0d020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe629e0d1b0"/>
        <function-ref name="fired" scoped="" ref="0x7fe629e0d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7fe629dfc8c0" loc="80:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7fe629dfc8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe629dfcc40"/>
        <function-ref name="getControl" scoped="" ref="0x7fe629dfcdd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe629dfb020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe629dfb1b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe629dfb340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe629dfb4d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe629dfb660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe629dfb7f0"/>
        <function-ref name="setControl" scoped="" ref="0x7fe629dfb980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fe629dc0940" loc="55:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fe629dc0940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe629dc0cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fe629dc02f0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fe629dc02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe629dc0670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fe629dbf020" loc="56:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fe629dbf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe629dbf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fe629dc1bf0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fe629dc1bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe629dc0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe629dc33e0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe629dc33e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe629dc3760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe629dc38f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe629dc3a80"/>
        <function-ref name="get" scoped="" ref="0x7fe629dc3c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe629dc3da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629dc1020"/>
        <function-ref name="getMode" scoped="" ref="0x7fe629dc11b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629dc1340"/>
        <function-ref name="overflow" scoped="" ref="0x7fe629dc14d0"/>
        <function-ref name="setMode" scoped="" ref="0x7fe629dc1660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe629dc17f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fe629db9750" loc="55:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fe629db9750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe629db9ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fe629db9100" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fe629db9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe629db9480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fe629db9da0" loc="56:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fe629db9da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe629db8180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fe629dbaa60" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fe629dbaa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe629dbae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe629dbb260" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe629dbb260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe629dbb5e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe629dbb770"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe629dbb900"/>
        <function-ref name="get" scoped="" ref="0x7fe629dbba90"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe629dbbc20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629dbbdb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe629dba020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629dba1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe629dba340"/>
        <function-ref name="setMode" scoped="" ref="0x7fe629dba4d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe629dba660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fe629d6e7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fe629d6e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629d6eb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe629d6ecb0"/>
        <function-ref name="captured" scoped="" ref="0x7fe629d6ee40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629d6d020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629d6d1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe629d6d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fe629db56d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fe629db56d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe629db5a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fe629db5be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe629db5d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe629d6f020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe629d6f1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe629d6f340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe629d6f4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe629d6f660"/>
        <function-ref name="setControl" scoped="" ref="0x7fe629d6f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fe629d6cc50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fe629d6cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe629d6b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fe629d6fac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fe629d6fac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629d6fe40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe629d6e020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe629d6e1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe629d6e340"/>
        <function-ref name="fired" scoped="" ref="0x7fe629d6e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe629d6d610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe629d6d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe629d6d990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe629d6db20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe629d6dcb0"/>
        <function-ref name="get" scoped="" ref="0x7fe629d6de40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe629d6c020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629d6c1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe629d6c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629d6c4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe629d6c660"/>
        <function-ref name="setMode" scoped="" ref="0x7fe629d6c7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe629d6c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fe629d67cb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fe629d67cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629d650a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe629d65230"/>
        <function-ref name="captured" scoped="" ref="0x7fe629d653c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629d65550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629d656e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe629d65870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fe629d69b30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fe629d69b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe629d68020"/>
        <function-ref name="getControl" scoped="" ref="0x7fe629d681b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe629d68340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe629d684d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe629d68660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe629d687f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe629d68980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe629d68b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fe629d68ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fe629d632f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fe629d632f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe629d63670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fe629d67020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fe629d67020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629d673a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe629d67530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe629d676c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe629d67850"/>
        <function-ref name="fired" scoped="" ref="0x7fe629d679e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe629d65b40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe629d65b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe629d64020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe629d641b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe629d64340"/>
        <function-ref name="get" scoped="" ref="0x7fe629d644d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe629d64660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629d647f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe629d64980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629d64b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fe629d64ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fe629d64e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe629d63020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fe629d5e2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fe629d5e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629d5e670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe629d5e800"/>
        <function-ref name="captured" scoped="" ref="0x7fe629d5e990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629d5eb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629d5ecb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe629d5ee40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fe629d60220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fe629d60220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe629d605a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fe629d60730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe629d608c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe629d60a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe629d60be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe629d60d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe629d5f020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe629d5f1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fe629d5f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fe629d5c7a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fe629d5c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe629d5cb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fe629d5f610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fe629d5f610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629d5f990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe629d5fb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe629d5fcb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe629d5fe40"/>
        <function-ref name="fired" scoped="" ref="0x7fe629d5e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe629d5d160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe629d5d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe629d5d4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe629d5d670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe629d5d800"/>
        <function-ref name="get" scoped="" ref="0x7fe629d5d990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe629d5db20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629d5dcb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe629d5de40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629d5c020"/>
        <function-ref name="overflow" scoped="" ref="0x7fe629d5c1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fe629d5c340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe629d5c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fe629d577a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fe629d577a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629d57b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe629d57cb0"/>
        <function-ref name="captured" scoped="" ref="0x7fe629d57e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629d55020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629d551b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe629d55340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fe629d596d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fe629d596d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe629d59a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fe629d59be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe629d59d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe629d58020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe629d581b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe629d58340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe629d584d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe629d58660"/>
        <function-ref name="setControl" scoped="" ref="0x7fe629d587f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fe629d54c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fe629d54c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe629d53020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fe629d58ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fe629d58ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629d58e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe629d57020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe629d571b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe629d57340"/>
        <function-ref name="fired" scoped="" ref="0x7fe629d574d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe629d55610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe629d55610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe629d55990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe629d55b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe629d55cb0"/>
        <function-ref name="get" scoped="" ref="0x7fe629d55e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe629d54020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629d541b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe629d54340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629d544d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe629d54660"/>
        <function-ref name="setMode" scoped="" ref="0x7fe629d547f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe629d54980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fe629d4fcb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fe629d4fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629d4e0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe629d4e230"/>
        <function-ref name="captured" scoped="" ref="0x7fe629d4e3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629d4e550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629d4e6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe629d4e870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fe629d51b30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fe629d51b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe629d50020"/>
        <function-ref name="getControl" scoped="" ref="0x7fe629d501b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe629d50340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe629d504d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe629d50660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe629d507f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe629d50980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe629d50b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fe629d50ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fe629d4c2f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fe629d4c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe629d4c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fe629d4f020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fe629d4f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629d4f3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe629d4f530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe629d4f6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe629d4f850"/>
        <function-ref name="fired" scoped="" ref="0x7fe629d4f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe629d4eb40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe629d4eb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe629d4d020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe629d4d1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe629d4d340"/>
        <function-ref name="get" scoped="" ref="0x7fe629d4d4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe629d4d660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629d4d7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe629d4d980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629d4db10"/>
        <function-ref name="overflow" scoped="" ref="0x7fe629d4dca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fe629d4de30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe629d4c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fe629d472f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fe629d472f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629d47670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe629d47800"/>
        <function-ref name="captured" scoped="" ref="0x7fe629d47990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629d47b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629d47cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe629d47e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fe629d49220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fe629d49220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe629d495a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fe629d49730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe629d498c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe629d49a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe629d49be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe629d49d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe629d48020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe629d481b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fe629d48340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fe629d447a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fe629d447a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe629d44b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fe629d48610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fe629d48610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629d48990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe629d48b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe629d48cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe629d48e40"/>
        <function-ref name="fired" scoped="" ref="0x7fe629d47020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe629d45160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe629d45160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe629d454e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe629d45670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe629d45800"/>
        <function-ref name="get" scoped="" ref="0x7fe629d45990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe629d45b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629d45cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe629d45e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629d44020"/>
        <function-ref name="overflow" scoped="" ref="0x7fe629d441b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fe629d44340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe629d444d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fe629d3f7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fe629d3f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629d3fb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe629d3fcb0"/>
        <function-ref name="captured" scoped="" ref="0x7fe629d3fe40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629d3e020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629d3e1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe629d3e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fe629d416d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fe629d416d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe629d41a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fe629d41be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe629d41d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe629d40020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe629d401b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe629d40340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe629d404d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe629d40660"/>
        <function-ref name="setControl" scoped="" ref="0x7fe629d407f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fe629d3dc50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fe629d3dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe629d3c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fe629d40ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fe629d40ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629d40e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe629d3f020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe629d3f1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe629d3f340"/>
        <function-ref name="fired" scoped="" ref="0x7fe629d3f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe629d3e610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe629d3e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe629d3e990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe629d3eb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe629d3ecb0"/>
        <function-ref name="get" scoped="" ref="0x7fe629d3ee40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe629d3d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629d3d1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe629d3d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629d3d4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe629d3d660"/>
        <function-ref name="setMode" scoped="" ref="0x7fe629d3d7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe629d3d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fe629d38cb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fe629d38cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629d370a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe629d37230"/>
        <function-ref name="captured" scoped="" ref="0x7fe629d373c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629d37550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629d376e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe629d37870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fe629d3ab30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fe629d3ab30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe629d39020"/>
        <function-ref name="getControl" scoped="" ref="0x7fe629d391b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe629d39340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe629d394d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe629d39660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe629d397f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe629d39980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe629d39b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fe629d39ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fe629d342f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fe629d342f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe629d34670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fe629d38020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fe629d38020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629d383a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe629d38530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe629d386c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe629d38850"/>
        <function-ref name="fired" scoped="" ref="0x7fe629d389e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe629d37b40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe629d37b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe629d35020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe629d351b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe629d35340"/>
        <function-ref name="get" scoped="" ref="0x7fe629d354d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe629d35660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629d357f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe629d35980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629d35b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fe629d35ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fe629d35e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe629d34020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fe629d2f2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fe629d2f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629d2f670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe629d2f800"/>
        <function-ref name="captured" scoped="" ref="0x7fe629d2f990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629d2fb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629d2fcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe629d2fe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fe629d31220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fe629d31220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe629d315a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fe629d31730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe629d318c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe629d31a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe629d31be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe629d31d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe629d30020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe629d301b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fe629d30340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fe629d2d7a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fe629d2d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe629d2db20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fe629d30610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fe629d30610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629d30990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe629d30b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe629d30cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe629d30e40"/>
        <function-ref name="fired" scoped="" ref="0x7fe629d2f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe629d2e160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe629d2e160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe629d2e4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe629d2e670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe629d2e800"/>
        <function-ref name="get" scoped="" ref="0x7fe629d2e990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe629d2eb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629d2ecb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe629d2ee40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629d2d020"/>
        <function-ref name="overflow" scoped="" ref="0x7fe629d2d1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fe629d2d340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe629d2d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fe629d287a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fe629d287a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629d28b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe629d28cb0"/>
        <function-ref name="captured" scoped="" ref="0x7fe629d28e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629d27020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629d271b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe629d27340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fe629d2a6d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fe629d2a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe629d2aa50"/>
        <function-ref name="getControl" scoped="" ref="0x7fe629d2abe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe629d2ad70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe629d29020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe629d291b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe629d29340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe629d294d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe629d29660"/>
        <function-ref name="setControl" scoped="" ref="0x7fe629d297f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fe629d25c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fe629d25c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe629d24020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fe629d29ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fe629d29ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe629d29e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe629d28020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe629d281b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe629d28340"/>
        <function-ref name="fired" scoped="" ref="0x7fe629d284d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe629d27610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe629d27610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe629d27990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe629d27b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe629d27cb0"/>
        <function-ref name="get" scoped="" ref="0x7fe629d27e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe629d25020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629d251b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe629d25340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629d254d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe629d25660"/>
        <function-ref name="setMode" scoped="" ref="0x7fe629d257f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe629d25980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7fe629d1fbc0" loc="7:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7fe629d1fbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe629d1e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7fe629d203f0" loc="4:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7fe629d203f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe629d20770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7fe629d20b80" loc="5:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7fe629d20b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe629d1f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7fe629d1f430" loc="6:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7fe629d1f430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe629d1f7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fe628981a80" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fe628981a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe628981e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe628980020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe6289801b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe628980340"/>
        <function-ref name="fired" scoped="" ref="0x7fe6289804d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fe628983190" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fe628983190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe628983510"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe6289836a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe628983830"/>
        <function-ref name="get" scoped="" ref="0x7fe6289839c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe628983b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe628983ce0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe628983e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe628982030"/>
        <function-ref name="overflow" scoped="" ref="0x7fe6289821c0"/>
        <function-ref name="setMode" scoped="" ref="0x7fe628982350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe6289824e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fe628987020" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fe628987020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ebe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe62a2ea200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe628985870"/>
        <function-ref name="fired" scoped="" ref="0x7fe628986840"/>
        <function-ref name="startAt" scoped="" ref="0x7fe628985220"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe628986d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe628985d30"/>
        <function-ref name="start" scoped="" ref="0x7fe628987e30"/>
        <function-ref name="stop" scoped="" ref="0x7fe628986380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe628988660" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe628988660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe6289889e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fe628982770" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe628982770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe628982af0"/>
        <function-ref name="getControl" scoped="" ref="0x7fe628982c80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe628982e10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe628981020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe6289811b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe628981340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe6289814d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe628981660"/>
        <function-ref name="setControl" scoped="" ref="0x7fe6289817f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fe629c968c0" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fe629c968c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2eb680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe62a2eb9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe629c9a700"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629c950d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629c9abc0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe629c95590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7fe629c948e0" loc="43:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fe629c948e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ebe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe62a2ea200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe629c91780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629c90150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629c91c40"/>
        <function-ref name="overflow" scoped="" ref="0x7fe629c90610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fe629c7fc50" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fe629c7fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe629c7e020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe629c7e1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe629c7e340"/>
        <function-ref name="get" scoped="" ref="0x7fe629c7e4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe629c7e660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629c7e7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe629c7e980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629c7eb10"/>
        <function-ref name="overflow" scoped="" ref="0x7fe629c7eca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fe629c7ee30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe629c7d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fe629c8db80" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fe629c8db80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ebe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe62a2ea200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe629c8c9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629c7f360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629c8ce70"/>
        <function-ref name="overflow" scoped="" ref="0x7fe629c7f820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fe629c5b0f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fe629c5b0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ebe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe62a2ea200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe629c5a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629c5a9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629c5a4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe629c5ae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fe629c79cf0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fe629c79cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2eb680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe62a2eb9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe629c5eb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629c5d550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629c5d090"/>
        <function-ref name="overflow" scoped="" ref="0x7fe629c5da10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fe62899e890" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fe62899e890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2eb680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe62a2eb9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe62899a0d0"/>
        <function-ref name="fired" scoped="" ref="0x7fe62899c0d0"/>
        <function-ref name="startAt" scoped="" ref="0x7fe62899ca50"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe62899c590"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe62899a590"/>
        <function-ref name="start" scoped="" ref="0x7fe62899d6e0"/>
        <function-ref name="stop" scoped="" ref="0x7fe62899dbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fe6289970a0" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fe6289970a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ebe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe62a2ea200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe628994b30"/>
        <function-ref name="fired" scoped="" ref="0x7fe6289969f0"/>
        <function-ref name="startAt" scoped="" ref="0x7fe6289944e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe628994020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe628993020"/>
        <function-ref name="start" scoped="" ref="0x7fe628996020"/>
        <function-ref name="stop" scoped="" ref="0x7fe628996530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fe62899ac00" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fe62899ac00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2eb680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe62a2eb9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe628999a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe6289984e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe628998020"/>
        <function-ref name="overflow" scoped="" ref="0x7fe6289989a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7fe629be79c0" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7fe629be79c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe629be7d40"/>
        <function-ref name="runTask" scoped="" ref="0x7fe629be6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fe629beb850" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fe629beb850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2eb680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe62a2eb9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe629be7090"/>
        <function-ref name="fired" scoped="" ref="0x7fe629be8090"/>
        <function-ref name="startAt" scoped="" ref="0x7fe629be8a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe629be8550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe629be7550"/>
        <function-ref name="start" scoped="" ref="0x7fe629bea6a0"/>
        <function-ref name="stop" scoped="" ref="0x7fe629beabb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe629bf02f0" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe629bf02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2eb680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe62a2eb9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe629bec870"/>
        <function-ref name="fired" scoped="" ref="0x7fe629befe40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe629bedc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe629bed780"/>
        <function-ref name="getdt" scoped="" ref="0x7fe629beb1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7fe629beccf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe629bed300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe629bef020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe629bec260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe629bef4f0"/>
        <function-ref name="stop" scoped="" ref="0x7fe629bef9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fe629b68020" loc="58:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7fe629b68020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2eb680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe62a2eb9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe629b64630"/>
        <function-ref name="fired" scoped="" ref="0x7fe629b67a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe629b66920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe629b664a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fe629b63020"/>
        <function-ref name="gett0" scoped="" ref="0x7fe629b64ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe629b66020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe629b68c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe629b64020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe629b67110"/>
        <function-ref name="stop" scoped="" ref="0x7fe629b675e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7fe629b63450" loc="59:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSkew" scoped="" ref="0x7fe629b63450"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7fe629b637d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe629b6f8e0" loc="57:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe629b6f8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2eb680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe62a2eb9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe629b6a020"/>
        <function-ref name="fired" scoped="" ref="0x7fe629b6d4c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe629b6b300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe629b6de00"/>
        <function-ref name="getdt" scoped="" ref="0x7fe629b6a960"/>
        <function-ref name="gett0" scoped="" ref="0x7fe629b6a4c0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe629b6d960"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe629b6e560"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe629b6b930"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe629b6ea50"/>
        <function-ref name="stop" scoped="" ref="0x7fe629b6d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7fe6287a0100" loc="153:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7fe6287a0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe6287a0480"/>
        <function-ref name="runTask" scoped="" ref="0x7fe6287a0610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fe6287a83d0" loc="65:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7fe6287a83d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2eb680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe62a2eb9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe6287a4870"/>
        <function-ref name="fired" scoped="" ref="0x7fe6287a7e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe6287a5c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe6287a5780"/>
        <function-ref name="getdt" scoped="" ref="0x7fe6287a31e0"/>
        <function-ref name="gett0" scoped="" ref="0x7fe6287a4cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe6287a5300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe6287a7020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe6287a4260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe6287a74f0"/>
        <function-ref name="stop" scoped="" ref="0x7fe6287a79c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7fe6287a1a40" loc="67:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSkew" scoped="" ref="0x7fe6287a1a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7fe6287a1dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Platform" ref="0x7fe6287a35d0" loc="66:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7fe6287a35d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7fe6287a1660"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7fe6287a17f0"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7fe6287a3c70"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7fe6287a3e00"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7fe6287a1020"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7fe6287a11b0"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7fe6287a1340"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7fe6287a14d0"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7fe6287a3950"/>
        <function-ref name="node_id" scoped="" ref="0x7fe6287a3ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe6287afdb0" loc="63:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe6287afdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2eb680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe62a2eb9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe6287a9470"/>
        <function-ref name="fired" scoped="" ref="0x7fe6287ac9b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe6287ab7c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe6287ab320"/>
        <function-ref name="getdt" scoped="" ref="0x7fe6287a9db0"/>
        <function-ref name="gett0" scoped="" ref="0x7fe6287a9910"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe6287ace50"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe6287aea80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe6287abdf0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe6287ac020"/>
        <function-ref name="stop" scoped="" ref="0x7fe6287ac510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fe629b60020" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fe629b60020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2eb680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe62a2eb9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe629b60c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fe629b56300" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fe629b56300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2eb680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe62a2eb9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe629b55150"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629b55ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629b55610"/>
        <function-ref name="overflow" scoped="" ref="0x7fe629b53020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe629b48260" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="SlaveAppC.TimerLeds"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe629b48260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2eb680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe62a2eb9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe629b446e0"/>
        <function-ref name="fired" scoped="" ref="0x7fe629b46ca0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe629b45a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe629b455f0"/>
        <function-ref name="getdt" scoped="" ref="0x7fe629b43020"/>
        <function-ref name="gett0" scoped="" ref="0x7fe629b44b60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe629b45170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe629b48e50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe629b440d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe629b46350"/>
        <function-ref name="stop" scoped="" ref="0x7fe629b46820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe629b41b00" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="SlaveAppC.TimerDormir"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe629b41b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2eb680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe62a2eb9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe629b3d110"/>
        <function-ref name="fired" scoped="" ref="0x7fe629b3f5b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe629b3e4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe629b3e020"/>
        <function-ref name="getdt" scoped="" ref="0x7fe629b3da10"/>
        <function-ref name="gett0" scoped="" ref="0x7fe629b3d590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe629b3fa30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe629b40750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe629b3eab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe629b40c20"/>
        <function-ref name="stop" scoped="" ref="0x7fe629b3f130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe629b3a560" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="SlaveAppC.TimerComienzaDormir"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe629b3a560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2eb680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe62a2eb9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe629b37a20"/>
        <function-ref name="fired" scoped="" ref="0x7fe629b38020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe629b38da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe629b38920"/>
        <function-ref name="getdt" scoped="" ref="0x7fe629b354a0"/>
        <function-ref name="gett0" scoped="" ref="0x7fe629b35020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe629b384a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe629b391b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe629b37410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe629b39680"/>
        <function-ref name="stop" scoped="" ref="0x7fe629b39b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fe629b26080" loc="55:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fe629b26080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe629b26400"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe629b26590"/>
        <function-ref name="start" scoped="" ref="0x7fe629b26720"/>
        <function-ref name="stop" scoped="" ref="0x7fe629b268b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fe629b0e7a0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fe629b0e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe629ef5550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fe629b0eb20"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fe629b0ecb0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fe629b0ee40"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fe629b1f020"/>
        <function-ref name="setCca" scoped="" ref="0x7fe629b1f1b0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fe629b1f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fe629afd640" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7fe629afd640"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe629ef5550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fe629afdac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe629b22c20" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fe629b22c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe629b21020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe629b211b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe629b21340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe629b214d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe629b21660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fe629b251d0" loc="56:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fe629b251d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe629ef5550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe629b25550"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe629b256e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe629b25870"/>
        <function-ref name="cancel" scoped="" ref="0x7fe629b25a00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe629b25b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fe629b23020" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fe629b23020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe629ef5550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe629b233a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fe629b21930" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fe629b21930"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fe629b21cb0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fe629b21e40"/>
        <function-ref name="getRssi" scoped="" ref="0x7fe629b20020"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fe629b201b0"/>
        <function-ref name="getPower" scoped="" ref="0x7fe629b20340"/>
        <function-ref name="getLqi" scoped="" ref="0x7fe629b204d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fe629b075b0" loc="65:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fe629b075b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fe629b07930"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fe629b07ac0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fe629b07c50"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fe629b07de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe629b243f0" loc="57:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fe629b243f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe629ef5550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe629b24770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fe629b18350" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe629b18350"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fe629b186d0"/>
        <function-ref name="noAck" scoped="" ref="0x7fe629b18860"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fe629b189f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fe629b01880" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fe629b01880"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fe629b01c00"/>
        <function-ref name="setRetries" scoped="" ref="0x7fe629b01d90"/>
        <function-ref name="getRetries" scoped="" ref="0x7fe629b0d020"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fe629b0d1b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fe629b0d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fe629b23650" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fe629b23650"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe629b239d0"/>
        <function-ref name="source" scoped="" ref="0x7fe629b23b60"/>
        <function-ref name="address" scoped="" ref="0x7fe629b23cf0"/>
        <function-ref name="destination" scoped="" ref="0x7fe629b23e80"/>
        <function-ref name="setSource" scoped="" ref="0x7fe629b22030"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe629b221c0"/>
        <function-ref name="type" scoped="" ref="0x7fe629b22350"/>
        <function-ref name="setType" scoped="" ref="0x7fe629b224e0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe629b22670"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe629b22800"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe629b22990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fe629b15470" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fe629b15470"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fe629b157f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fe629afa420" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fe629afa420"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe629afa7a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe629afa930"/>
        <function-ref name="start" scoped="" ref="0x7fe629afaac0"/>
        <function-ref name="stop" scoped="" ref="0x7fe629afac50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fe629ae7b50" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fe629ae7b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fe629ae6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fe629ae6e10" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fe629ae6e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fe629ae51c0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fe629ae5350"/>
        <function-ref name="getRetries" scoped="" ref="0x7fe629ae54e0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fe629ae5670"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fe629ae5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fe629ae82f0" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fe629ae82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fe629ae8670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fe629ae8800"/>
        <function-ref name="getRssi" scoped="" ref="0x7fe629ae8990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fe629ae8b20"/>
        <function-ref name="getPower" scoped="" ref="0x7fe629ae8cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fe629ae8e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fe629af2e20" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fe629af2e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe629aeb1c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe629aeb350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe629aeb4e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe629aeb670"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe629aeb800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fe629ae6320" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fe629ae6320"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fe629ae66a0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fe629ae6830"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fe629ae69c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fe629ae6b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fe629af3a30" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7fe629af3a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe629af3db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fe629ae71a0" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe629ae71a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fe629ae7520"/>
        <function-ref name="noAck" scoped="" ref="0x7fe629ae76b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fe629ae7840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe629af4960" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe629af4960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe629af4ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe629af4e70"/>
        <function-ref name="request" scoped="" ref="0x7fe629af8030"/>
        <function-ref name="granted" scoped="" ref="0x7fe629af81c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe629af8350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fe629aeac90" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7fe629aeac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe629af30a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe629af3230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe629af33c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe629af3550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe629af36e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fe629af2130" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fe629af2130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe629af24b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe629af2640"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe629af27d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe629af2960"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe629af2af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fe629aebb70" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fe629aebb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe629ae8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fe629ae4590" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fe629ae4590"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe629ae4910"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe629ae4aa0"/>
        <function-ref name="start" scoped="" ref="0x7fe629ae4c30"/>
        <function-ref name="stop" scoped="" ref="0x7fe629ae4dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fe629ae0490" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fe629ae0490"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fe629ae0810"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fe629ae09a0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fe629ae0b30"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fe629ae0cc0"/>
        <function-ref name="setCca" scoped="" ref="0x7fe629ae0e50"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fe629adf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fe629ae10c0" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fe629ae10c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe629ae1440"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe629ae15d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe629ae1760"/>
        <function-ref name="cancel" scoped="" ref="0x7fe629ae18f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe629ae1a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe629ae1d60" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fe629ae1d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe629ae0180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fe629adb020" loc="39:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fe629adb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe629adb3a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe629adb530"/>
        <function-ref name="start" scoped="" ref="0x7fe629adb6c0"/>
        <function-ref name="stop" scoped="" ref="0x7fe629adb850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fe629ada970" loc="41:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fe629ada970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fe629adacf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fe629adae80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fe629ad9030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fe629ad91c0"/>
        <function-ref name="setCca" scoped="" ref="0x7fe629ad9350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fe629ad94e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7fe629ace570" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7fe629ace570"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fe629ace8f0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fe629acea80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fe629acec10"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fe629aceda0"/>
        <function-ref name="setCca" scoped="" ref="0x7fe629acc020"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fe629acc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fe629ac4970" loc="50:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fe629ac4970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fe629ac4cf0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fe629ac4e80"/>
        <function-ref name="getRssi" scoped="" ref="0x7fe629ac1030"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fe629ac11c0"/>
        <function-ref name="getPower" scoped="" ref="0x7fe629ac1350"/>
        <function-ref name="getLqi" scoped="" ref="0x7fe629ac14e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7fe629ac66c0" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7fe629ac66c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe629ac6a40"/>
        <function-ref name="cancel" scoped="" ref="0x7fe629ac6bd0"/>
        <function-ref name="modify" scoped="" ref="0x7fe629ac6d60"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe629ace020"/>
        <function-ref name="resend" scoped="" ref="0x7fe629ace1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fe629adbb10" loc="40:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fe629adbb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe629ada020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe629ada1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe629ada340"/>
        <function-ref name="cancel" scoped="" ref="0x7fe629ada4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe629ada660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fe629ac29d0" loc="48:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fe629ac29d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fe629ac2d50"/>
        <function-ref name="rand32" scoped="" ref="0x7fe629ac5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fe629acd840" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7fe629acd840"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe629acdbc0"/>
        <function-ref name="stop" scoped="" ref="0x7fe629acdd50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fe629ac0020" loc="51:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe629ac0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fe629ac03a0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fe629ac0530"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fe629ac06c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7fe629ad1cd0" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fe629ad1cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fe629ad60a0"/>
        <function-ref name="rfOff" scoped="" ref="0x7fe629ad6230"/>
        <function-ref name="rxOn" scoped="" ref="0x7fe629ad63c0"/>
        <function-ref name="startVReg" scoped="" ref="0x7fe629ad6550"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fe629ad66e0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fe629ad6870"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fe629ad6a00"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fe629ad6b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fe629ac52e0" loc="49:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fe629ac52e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe629ac5660"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe629ac57f0"/>
        <function-ref name="led1On" scoped="" ref="0x7fe629ac5980"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe629ac5b10"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe629ac5ca0"/>
        <function-ref name="get" scoped="" ref="0x7fe629ac5e30"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe629ac4020"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe629ac4660"/>
        <function-ref name="set" scoped="" ref="0x7fe629ac41b0"/>
        <function-ref name="led0On" scoped="" ref="0x7fe629ac4340"/>
        <function-ref name="led2On" scoped="" ref="0x7fe629ac44d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fe629ad97d0" loc="43:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe629ad97d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe629ad9b50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe629ad9ce0"/>
        <function-ref name="request" scoped="" ref="0x7fe629ad9e70"/>
        <function-ref name="granted" scoped="" ref="0x7fe629ad8030"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe629ad81c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7fe629ab5720" loc="52:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7fe629ab5720"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fe629ab5ba0"/>
        <function-ref name="toIdle" scoped="" ref="0x7fe629ab5d30"/>
        <function-ref name="isState" scoped="" ref="0x7fe629abf020"/>
        <function-ref name="isIdle" scoped="" ref="0x7fe629abf1b0"/>
        <function-ref name="requestState" scoped="" ref="0x7fe629abf340"/>
        <function-ref name="forceState" scoped="" ref="0x7fe629abf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7fe629ab02a0" loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7fe629ab02a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe629ab0620"/>
        <function-ref name="runTask" scoped="" ref="0x7fe629ab07b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7fe629ab22a0" loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7fe629ab22a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe629ab2620"/>
        <function-ref name="runTask" scoped="" ref="0x7fe629ab27b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7fe629ab32b0" loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7fe629ab32b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe629ab3630"/>
        <function-ref name="runTask" scoped="" ref="0x7fe629ab37c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7fe629a59550" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fe629a59550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fe629a598d0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fe629a59a60"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fe629a59bf0"/>
        <function-ref name="syncDone" scoped="" ref="0x7fe629a59d80"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fe629a66020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fe629a661b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fe629a66340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fe629a664d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fe629a66660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fe629a667f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fe629a66980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fe629a66b10"/>
        <function-ref name="sync" scoped="" ref="0x7fe629a66ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fe629a65020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fe629a651b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7fe629a53850" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7fe629a53850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629a57480"/>
        <function-ref name="readDone" scoped="" ref="0x7fe629a57900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7fe629a654b0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fe629a654b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fe629a65830"/>
        <function-ref name="rfOff" scoped="" ref="0x7fe629a659c0"/>
        <function-ref name="rxOn" scoped="" ref="0x7fe629a65b50"/>
        <function-ref name="startVReg" scoped="" ref="0x7fe629a65ce0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fe629a65e70"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fe629a58030"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fe629a581c0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fe629a58350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe629a67020" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe629a67020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe629a673a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe629a67530"/>
        <function-ref name="request" scoped="" ref="0x7fe629a676c0"/>
        <function-ref name="granted" scoped="" ref="0x7fe629a67850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe629a679e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7fe629a4f0c0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fe629a4f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fe629a4f440"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fe629a4f5d0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fe629a4f760"/>
        <function-ref name="syncDone" scoped="" ref="0x7fe629a4f8f0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fe629a4fa80"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fe629a4fc10"/>
        <function-ref name="setChannel" scoped="" ref="0x7fe629a4fda0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fe629a4e020"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fe629a4e1b0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fe629a4e340"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fe629a4e4d0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fe629a4e660"/>
        <function-ref name="sync" scoped="" ref="0x7fe629a4e7f0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fe629a4ea80"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fe629a4ec10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7fe629a2d020" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fe629a2d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629a2d3a0"/>
        <function-ref name="write" scoped="" ref="0x7fe629a2d530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7fe629a47970" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fe629a47970"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fe629a47cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7fe629a493a0" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7fe629a493a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ebe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe62a2ea200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe629a46be0"/>
        <function-ref name="fired" scoped="" ref="0x7fe629a48bc0"/>
        <function-ref name="startAt" scoped="" ref="0x7fe629a46590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe629a460d0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe629a440d0"/>
        <function-ref name="start" scoped="" ref="0x7fe629a481f0"/>
        <function-ref name="stop" scoped="" ref="0x7fe629a48700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7fe629a32c90" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fe629a32c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629a310a0"/>
        <function-ref name="write" scoped="" ref="0x7fe629a31230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7fe629a43830" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7fe629a43830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe629a43bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe629a43d40"/>
        <function-ref name="toggle" scoped="" ref="0x7fe629a42020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe629a421b0"/>
        <function-ref name="get" scoped="" ref="0x7fe629a42340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe629a424d0"/>
        <function-ref name="set" scoped="" ref="0x7fe629a42660"/>
        <function-ref name="clr" scoped="" ref="0x7fe629a427f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7fe629a4c500" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7fe629a4c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629a4b130"/>
        <function-ref name="readDone" scoped="" ref="0x7fe629a4b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7fe629a1bca0" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7fe629a1bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe629a1a0a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fe629a1a230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7fe629a2d8c0" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fe629a2d8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629a2dc40"/>
        <function-ref name="write" scoped="" ref="0x7fe629a2ddd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7fe629a2c1d0" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fe629a2c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629a2c550"/>
        <function-ref name="write" scoped="" ref="0x7fe629a2c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7fe629a2ea80" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fe629a2ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629a2ee00"/>
        <function-ref name="write" scoped="" ref="0x7fe629a32020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fe629a38dd0" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fe629a38dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fe629a3e180"/>
        <function-ref name="changed" scoped="" ref="0x7fe629a3e310"/>
        <function-ref name="amGroup" scoped="" ref="0x7fe629a3e4a0"/>
        <function-ref name="setAddress" scoped="" ref="0x7fe629a3e630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fe629a445c0" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fe629a445c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe629a44940"/>
        <function-ref name="isInput" scoped="" ref="0x7fe629a44ad0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe629a44c60"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe629a44df0"/>
        <function-ref name="get" scoped="" ref="0x7fe629a43020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe629a431b0"/>
        <function-ref name="set" scoped="" ref="0x7fe629a43340"/>
        <function-ref name="clr" scoped="" ref="0x7fe629a434d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7fe629a2a450" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fe629a2a450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe629a2a9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7fe629a42b50" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7fe629a42b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe629a41020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe629a411b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe629a41340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe629a414d0"/>
        <function-ref name="get" scoped="" ref="0x7fe629a41660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe629a417f0"/>
        <function-ref name="set" scoped="" ref="0x7fe629a41980"/>
        <function-ref name="clr" scoped="" ref="0x7fe629a41b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe629a56cc0" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe629a56cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe629a500a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7fe629a315f0" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fe629a315f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629a31970"/>
        <function-ref name="write" scoped="" ref="0x7fe629a31b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7fe629a2ad70" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fe629a2ad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe629a29180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fe629a29520" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fe629a29520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe629a298a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe629a29a30"/>
        <function-ref name="request" scoped="" ref="0x7fe629a29bc0"/>
        <function-ref name="granted" scoped="" ref="0x7fe629a29d50"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe629a27020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7fe629a26180" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7fe629a26180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe629a26500"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe629a26690"/>
        <function-ref name="request" scoped="" ref="0x7fe629a26820"/>
        <function-ref name="granted" scoped="" ref="0x7fe629a269b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe629a26b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7fe629a4d020" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fe629a4d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fe629a4d3a0"/>
        <function-ref name="rfOff" scoped="" ref="0x7fe629a4d530"/>
        <function-ref name="rxOn" scoped="" ref="0x7fe629a4d6c0"/>
        <function-ref name="startVReg" scoped="" ref="0x7fe629a4d850"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fe629a4d9e0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fe629a4db70"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fe629a4dd00"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fe629a4c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7fe629a323c0" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fe629a323c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629a32740"/>
        <function-ref name="write" scoped="" ref="0x7fe629a328d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7fe629a2e1d0" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fe629a2e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629a2e550"/>
        <function-ref name="write" scoped="" ref="0x7fe629a2e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7fe629a28570" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fe629a28570"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe629a288f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fe629a26e00" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fe629a26e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe629a251c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe629a25350"/>
        <function-ref name="led1On" scoped="" ref="0x7fe629a254e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe629a25670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe629a25800"/>
        <function-ref name="get" scoped="" ref="0x7fe629a25990"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe629a25b20"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe629a241b0"/>
        <function-ref name="set" scoped="" ref="0x7fe629a25cb0"/>
        <function-ref name="led0On" scoped="" ref="0x7fe629a25e40"/>
        <function-ref name="led2On" scoped="" ref="0x7fe629a24020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7fe629a1ddb0" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7fe629a1ddb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe629a1b180"/>
        <function-ref name="runTask" scoped="" ref="0x7fe629a1b310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe629a50390" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe629a50390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe629a50710"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe629a508a0"/>
        <function-ref name="request" scoped="" ref="0x7fe629a50a30"/>
        <function-ref name="granted" scoped="" ref="0x7fe629a50bc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe629a50d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7fe629a3a9a0" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fe629a3a9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629a3ad20"/>
        <function-ref name="write" scoped="" ref="0x7fe629a37020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7fe629a3a020" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fe629a3a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629a3a4a0"/>
        <function-ref name="write" scoped="" ref="0x7fe629a3a630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7fe629a3c5b0" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7fe629a3c5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe629a3c930"/>
        <function-ref name="disable" scoped="" ref="0x7fe629a3cac0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fe629a3cc50"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fe629a3cde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7fe629a273d0" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7fe629a273d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe629a27750"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe629a278e0"/>
        <function-ref name="request" scoped="" ref="0x7fe629a27a70"/>
        <function-ref name="granted" scoped="" ref="0x7fe629a27c00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe629a27d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7fe629a28c80" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fe629a28c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe629a2a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe6299a47e0" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe6299a47e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe6299a4b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7fe6299a1220" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7fe6299a1220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ebe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe62a2ea200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe62999fb30"/>
        <function-ref name="fired" scoped="" ref="0x7fe6299a0a60"/>
        <function-ref name="startAt" scoped="" ref="0x7fe62999f4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe62999f020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe62999d020"/>
        <function-ref name="start" scoped="" ref="0x7fe6299a0090"/>
        <function-ref name="stop" scoped="" ref="0x7fe6299a05a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe62999b260" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe62999b260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe62999b5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7fe62999baf0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7fe62999baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ebe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe62a2ea200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe629961390"/>
        <function-ref name="fired" scoped="" ref="0x7fe629962360"/>
        <function-ref name="startAt" scoped="" ref="0x7fe629962ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe629962820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe629961850"/>
        <function-ref name="start" scoped="" ref="0x7fe629963970"/>
        <function-ref name="stop" scoped="" ref="0x7fe629963e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fe628747370" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fe628747370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ebe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe62a2ea200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe628744ba0"/>
        <function-ref name="fired" scoped="" ref="0x7fe628746b80"/>
        <function-ref name="startAt" scoped="" ref="0x7fe628744550"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe628744090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe628743090"/>
        <function-ref name="start" scoped="" ref="0x7fe6287461b0"/>
        <function-ref name="stop" scoped="" ref="0x7fe6287466c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe628748af0" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe628748af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe628748e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fe62873f360" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fe62873f360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ebe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe62a2ea200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe62873dba0"/>
        <function-ref name="fired" scoped="" ref="0x7fe62873eb80"/>
        <function-ref name="startAt" scoped="" ref="0x7fe62873d550"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe62873d090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe62873c090"/>
        <function-ref name="start" scoped="" ref="0x7fe62873e1b0"/>
        <function-ref name="stop" scoped="" ref="0x7fe62873e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe628740ab0" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe628740ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe628740e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fe628724c10" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fe628724c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe628723020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe6287231b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe628723340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe6287234d0"/>
        <function-ref name="fired" scoped="" ref="0x7fe628723660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fe6287261b0" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fe6287261b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe628726530"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe6287266c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe628726850"/>
        <function-ref name="get" scoped="" ref="0x7fe6287269e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe628726b70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe628726d00"/>
        <function-ref name="getMode" scoped="" ref="0x7fe628725020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe6287251b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe628725340"/>
        <function-ref name="setMode" scoped="" ref="0x7fe6287254d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe628725660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fe6287258f0" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe6287258f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe628725c70"/>
        <function-ref name="getControl" scoped="" ref="0x7fe628725e00"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe628724020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe6287241b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe628724340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe6287244d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe628724660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe6287247f0"/>
        <function-ref name="setControl" scoped="" ref="0x7fe628724980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fe62871aa80" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fe62871aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe62871ae00"/>
        <function-ref name="setEvent" scoped="" ref="0x7fe628719020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fe6287191b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fe628719340"/>
        <function-ref name="fired" scoped="" ref="0x7fe6287194d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fe62871c020" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fe62871c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe62871c3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe62871c530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe62871c6c0"/>
        <function-ref name="get" scoped="" ref="0x7fe62871c850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe62871c9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe62871cb70"/>
        <function-ref name="getMode" scoped="" ref="0x7fe62871cd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe62871b020"/>
        <function-ref name="overflow" scoped="" ref="0x7fe62871b1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fe62871b340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe62871b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fe628721da0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fe628721da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ebe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe62a2ea200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe62871d670"/>
        <function-ref name="fired" scoped="" ref="0x7fe62871e610"/>
        <function-ref name="startAt" scoped="" ref="0x7fe62871d020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe62871ead0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe62871db30"/>
        <function-ref name="start" scoped="" ref="0x7fe62871fbf0"/>
        <function-ref name="stop" scoped="" ref="0x7fe62871e150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe628721510" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe628721510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe628721890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fe62871b760" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe62871b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe62871bae0"/>
        <function-ref name="getControl" scoped="" ref="0x7fe62871bc70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe62871be00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe62871a020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe62871a1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe62871a340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe62871a4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe62871a660"/>
        <function-ref name="setControl" scoped="" ref="0x7fe62871a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fe629985080" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fe629985080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ebe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe62a2ea200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe629984020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe6299849a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe6299844e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe629984e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fe62997c0f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fe62997c0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ebe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe62a2ea200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe62997b020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe62997b9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe62997b4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe62997be60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fe629980cd0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fe629980cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ebe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe62a2ea200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe62997fb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe62997e550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe62997e090"/>
        <function-ref name="overflow" scoped="" ref="0x7fe62997ea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fe6287365f0" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fe6287365f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ebe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe62a2ea200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe628734e50"/>
        <function-ref name="fired" scoped="" ref="0x7fe628735e00"/>
        <function-ref name="startAt" scoped="" ref="0x7fe628734800"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe628734340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe628733340"/>
        <function-ref name="start" scoped="" ref="0x7fe628735430"/>
        <function-ref name="stop" scoped="" ref="0x7fe628735940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fe628730d20" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fe628730d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ebe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe62a2ea200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe62872d670"/>
        <function-ref name="fired" scoped="" ref="0x7fe62872e550"/>
        <function-ref name="startAt" scoped="" ref="0x7fe62872d020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe62872ea10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe62872db30"/>
        <function-ref name="start" scoped="" ref="0x7fe62872fb60"/>
        <function-ref name="stop" scoped="" ref="0x7fe62872e090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fe6287339b0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fe6287339b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ebe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe62a2ea200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe6287327e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe6287301b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe628732ca0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe628730670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7fe62995a090" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7fe62995a090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62995a410"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62995a5a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62995a730"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62995a8c0"/>
        <function-ref name="get" scoped="" ref="0x7fe62995aa50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62995abe0"/>
        <function-ref name="set" scoped="" ref="0x7fe62995ad70"/>
        <function-ref name="clr" scoped="" ref="0x7fe629959020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7fe629959390" loc="45:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7fe629959390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe629959710"/>
        <function-ref name="isInput" scoped="" ref="0x7fe6299598a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe629959a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe629959bc0"/>
        <function-ref name="get" scoped="" ref="0x7fe629959d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe629958020"/>
        <function-ref name="set" scoped="" ref="0x7fe6299581b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe629958340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7fe6299586a0" loc="46:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7fe6299586a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe629958a20"/>
        <function-ref name="isInput" scoped="" ref="0x7fe629958bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe629958d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe629957020"/>
        <function-ref name="get" scoped="" ref="0x7fe6299571b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe629957340"/>
        <function-ref name="set" scoped="" ref="0x7fe6299574d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe629957660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7fe62995ce60" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fe62995ce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62995b210"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62995b3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62995b530"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62995b6c0"/>
        <function-ref name="get" scoped="" ref="0x7fe62995b850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62995b9e0"/>
        <function-ref name="set" scoped="" ref="0x7fe62995bb70"/>
        <function-ref name="clr" scoped="" ref="0x7fe62995bd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7fe629956ce0" loc="48:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7fe629956ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe6299550a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe629955230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe6299553c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe629955550"/>
        <function-ref name="get" scoped="" ref="0x7fe6299556e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe629955870"/>
        <function-ref name="set" scoped="" ref="0x7fe629955a00"/>
        <function-ref name="clr" scoped="" ref="0x7fe629955b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7fe62995fb10" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7fe62995fb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62995c020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62995c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62995c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62995c4d0"/>
        <function-ref name="get" scoped="" ref="0x7fe62995c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62995c7f0"/>
        <function-ref name="set" scoped="" ref="0x7fe62995c980"/>
        <function-ref name="clr" scoped="" ref="0x7fe62995cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7fe6299579b0" loc="47:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7fe6299579b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe629957d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fe629956020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe6299561b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe629956340"/>
        <function-ref name="get" scoped="" ref="0x7fe6299564d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe629956660"/>
        <function-ref name="set" scoped="" ref="0x7fe6299567f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe629956980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fe6299522f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe6299522f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe629952670"/>
        <function-ref name="isInput" scoped="" ref="0x7fe629952800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe629952990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe629950660"/>
        <function-ref name="toggle" scoped="" ref="0x7fe629952cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe629952e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe629951020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe6299511b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe629951340"/>
        <function-ref name="get" scoped="" ref="0x7fe6299514d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe629951660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe6299517f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe629951980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe629951c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe629951da0"/>
        <function-ref name="set" scoped="" ref="0x7fe629950020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe6299501b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe629950340"/>
        <function-ref name="clr" scoped="" ref="0x7fe629952b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe6299504d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fe629953020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fe629953020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe6299533a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe629953530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe6299536c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe629953850"/>
        <function-ref name="get" scoped="" ref="0x7fe6299539e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe629953b70"/>
        <function-ref name="set" scoped="" ref="0x7fe629953d00"/>
        <function-ref name="clr" scoped="" ref="0x7fe629952020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fe62994d7a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe62994d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62994db20"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62994dcb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62994de40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62994ba80"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62994c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62994c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62994c4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62994c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62994c7f0"/>
        <function-ref name="get" scoped="" ref="0x7fe62994c980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62994cb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62994cca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62994ce30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62994b120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62994b2b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62994b440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62994b5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62994b760"/>
        <function-ref name="clr" scoped="" ref="0x7fe62994c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62994b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fe62994e630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fe62994e630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62994e9b0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62994eb40"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62994ecd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62994ee60"/>
        <function-ref name="get" scoped="" ref="0x7fe62994d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62994d1b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62994d340"/>
        <function-ref name="clr" scoped="" ref="0x7fe62994d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fe629948c60" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe629948c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe629947020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe6299471b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe629947340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe629945020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe629947660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe6299477f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe629947980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe629947b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe629947ca0"/>
        <function-ref name="get" scoped="" ref="0x7fe629947e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe629946020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe6299461b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe629946340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe6299465d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe629946760"/>
        <function-ref name="set" scoped="" ref="0x7fe6299468f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe629946a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe629946c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe6299474d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe629946da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fe629949b00" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fe629949b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe629949e80"/>
        <function-ref name="isInput" scoped="" ref="0x7fe629948030"/>
        <function-ref name="toggle" scoped="" ref="0x7fe6299481c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe629948350"/>
        <function-ref name="get" scoped="" ref="0x7fe6299484e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe629948670"/>
        <function-ref name="set" scoped="" ref="0x7fe629948800"/>
        <function-ref name="clr" scoped="" ref="0x7fe629948990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fe6299412f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe6299412f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe629941670"/>
        <function-ref name="isInput" scoped="" ref="0x7fe629941800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe629941990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62993f660"/>
        <function-ref name="toggle" scoped="" ref="0x7fe629941cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe629941e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe629940020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe6299401b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe629940340"/>
        <function-ref name="get" scoped="" ref="0x7fe6299404d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe629940660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe6299407f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe629940980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe629940c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe629940da0"/>
        <function-ref name="set" scoped="" ref="0x7fe62993f020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62993f1b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62993f340"/>
        <function-ref name="clr" scoped="" ref="0x7fe629941b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62993f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fe629942020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fe629942020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe6299423a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe629942530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe6299426c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe629942850"/>
        <function-ref name="get" scoped="" ref="0x7fe6299429e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe629942b70"/>
        <function-ref name="set" scoped="" ref="0x7fe629942d00"/>
        <function-ref name="clr" scoped="" ref="0x7fe629941020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fe62993c7a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe62993c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62993cb20"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62993ccb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62993ce40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62993aa80"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62993b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62993b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62993b4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62993b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62993b7f0"/>
        <function-ref name="get" scoped="" ref="0x7fe62993b980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62993bb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62993bca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62993be30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62993a120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62993a2b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62993a440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62993a5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62993a760"/>
        <function-ref name="clr" scoped="" ref="0x7fe62993b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62993a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fe62993d630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fe62993d630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62993d9b0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62993db40"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62993dcd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62993de60"/>
        <function-ref name="get" scoped="" ref="0x7fe62993c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62993c1b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62993c340"/>
        <function-ref name="clr" scoped="" ref="0x7fe62993c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fe629937c60" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe629937c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe629936020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe6299361b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe629936340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe629934020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe629936660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe6299367f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe629936980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe629936b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe629936ca0"/>
        <function-ref name="get" scoped="" ref="0x7fe629936e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe629935020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe6299351b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe629935340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe6299355d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe629935760"/>
        <function-ref name="set" scoped="" ref="0x7fe6299358f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe629935a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe629935c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe6299364d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe629935da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fe629938af0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fe629938af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe629938e70"/>
        <function-ref name="isInput" scoped="" ref="0x7fe629937030"/>
        <function-ref name="toggle" scoped="" ref="0x7fe6299371c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe629937350"/>
        <function-ref name="get" scoped="" ref="0x7fe6299374e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe629937670"/>
        <function-ref name="set" scoped="" ref="0x7fe629937800"/>
        <function-ref name="clr" scoped="" ref="0x7fe629937990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fe6299312f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe6299312f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe629931670"/>
        <function-ref name="isInput" scoped="" ref="0x7fe629931800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe629931990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62992f660"/>
        <function-ref name="toggle" scoped="" ref="0x7fe629931cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe629931e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe629930020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe6299301b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe629930340"/>
        <function-ref name="get" scoped="" ref="0x7fe6299304d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe629930660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe6299307f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe629930980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe629930c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe629930da0"/>
        <function-ref name="set" scoped="" ref="0x7fe62992f020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62992f1b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62992f340"/>
        <function-ref name="clr" scoped="" ref="0x7fe629931b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62992f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fe629932020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fe629932020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe6299323a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe629932530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe6299326c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe629932850"/>
        <function-ref name="get" scoped="" ref="0x7fe6299329e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe629932b70"/>
        <function-ref name="set" scoped="" ref="0x7fe629932d00"/>
        <function-ref name="clr" scoped="" ref="0x7fe629931020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7fe629914700" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7fe629914700"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fe629914a80"/>
        <function-ref name="disable" scoped="" ref="0x7fe629914c10"/>
        <function-ref name="captured" scoped="" ref="0x7fe629914da0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fe629918020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7fe629918400" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7fe629918400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe629918780"/>
        <function-ref name="disable" scoped="" ref="0x7fe629918910"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fe629918aa0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fe629918c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7fe629917060" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fe629917060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe6299173e0"/>
        <function-ref name="disable" scoped="" ref="0x7fe629917570"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fe629917700"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fe629917890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7fe6298f8a80" loc="50:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7fe6298f8a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fe6298f8e00"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fe6298f7020"/>
        <function-ref name="captured" scoped="" ref="0x7fe6298f71b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe6298f7340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe6298f74d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fe6298f7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fe629911c20" loc="48:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fe629911c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fe6298f9020"/>
        <function-ref name="disable" scoped="" ref="0x7fe6298f91b0"/>
        <function-ref name="captured" scoped="" ref="0x7fe6298f9340"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fe6298f94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fe6298f9760" loc="49:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fe6298f9760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fe6298f9ae0"/>
        <function-ref name="getControl" scoped="" ref="0x7fe6298f9c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe6298f9e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fe6298f8020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fe6298f81b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe6298f8340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe6298f84d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fe6298f8660"/>
        <function-ref name="setControl" scoped="" ref="0x7fe6298f87f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7fe6298f7930" loc="51:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fe6298f7930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe6298f7cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe6298f7e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe6298f6020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe6298f5c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe6298f6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe6298f64d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe6298f6660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe6298f67f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe6298f6980"/>
        <function-ref name="get" scoped="" ref="0x7fe6298f6b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe6298f6ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe6298f6e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe6298f5020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe6298f52b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe6298f5440"/>
        <function-ref name="set" scoped="" ref="0x7fe6298f55d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe6298f5760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe6298f58f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe6298f61b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe6298f5a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fe6298e53f0" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fe6298e53f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe6298e5770"/>
        <function-ref name="fired" scoped="" ref="0x7fe6298e5900"/>
        <function-ref name="disable" scoped="" ref="0x7fe6298e5a90"/>
        <function-ref name="edge" scoped="" ref="0x7fe6298e5c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fe6298e5db0"/>
        <function-ref name="enable" scoped="" ref="0x7fe6298e4020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fe6298e41b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe6298e4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fe6298d93f0" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fe6298d93f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe6298d9770"/>
        <function-ref name="fired" scoped="" ref="0x7fe6298d9900"/>
        <function-ref name="disable" scoped="" ref="0x7fe6298d9a90"/>
        <function-ref name="edge" scoped="" ref="0x7fe6298d9c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fe6298d9db0"/>
        <function-ref name="enable" scoped="" ref="0x7fe6298d7020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fe6298d71b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe6298d7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fe6298e2d50" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fe6298e2d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe6298e1100"/>
        <function-ref name="fired" scoped="" ref="0x7fe6298e1290"/>
        <function-ref name="disable" scoped="" ref="0x7fe6298e1420"/>
        <function-ref name="edge" scoped="" ref="0x7fe6298e15b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fe6298e1740"/>
        <function-ref name="enable" scoped="" ref="0x7fe6298e18d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fe6298e1a60"/>
        <function-ref name="getValue" scoped="" ref="0x7fe6298e1bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fe6298df3f0" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fe6298df3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe6298df770"/>
        <function-ref name="fired" scoped="" ref="0x7fe6298df900"/>
        <function-ref name="disable" scoped="" ref="0x7fe6298dfa90"/>
        <function-ref name="edge" scoped="" ref="0x7fe6298dfc20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fe6298dfdb0"/>
        <function-ref name="enable" scoped="" ref="0x7fe6298de020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fe6298de1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe6298de340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fe6298edbc0" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fe6298edbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe6298e7020"/>
        <function-ref name="fired" scoped="" ref="0x7fe6298e71b0"/>
        <function-ref name="disable" scoped="" ref="0x7fe6298e7340"/>
        <function-ref name="edge" scoped="" ref="0x7fe6298e74d0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fe6298e7660"/>
        <function-ref name="enable" scoped="" ref="0x7fe6298e77f0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fe6298e7980"/>
        <function-ref name="getValue" scoped="" ref="0x7fe6298e7b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fe6298dcd50" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fe6298dcd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe6298db210"/>
        <function-ref name="fired" scoped="" ref="0x7fe6298db3a0"/>
        <function-ref name="disable" scoped="" ref="0x7fe6298db530"/>
        <function-ref name="edge" scoped="" ref="0x7fe6298db6c0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fe6298db850"/>
        <function-ref name="enable" scoped="" ref="0x7fe6298db9e0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fe6298dbb70"/>
        <function-ref name="getValue" scoped="" ref="0x7fe6298dbd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fe6298e4710" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fe6298e4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe6298e4a90"/>
        <function-ref name="fired" scoped="" ref="0x7fe6298e4c20"/>
        <function-ref name="disable" scoped="" ref="0x7fe6298e4db0"/>
        <function-ref name="edge" scoped="" ref="0x7fe6298e3020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fe6298e31b0"/>
        <function-ref name="enable" scoped="" ref="0x7fe6298e3340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fe6298e34d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe6298e3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fe6298d7710" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fe6298d7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe6298d7a90"/>
        <function-ref name="fired" scoped="" ref="0x7fe6298d7c20"/>
        <function-ref name="disable" scoped="" ref="0x7fe6298d7db0"/>
        <function-ref name="edge" scoped="" ref="0x7fe6298d6020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fe6298d61b0"/>
        <function-ref name="enable" scoped="" ref="0x7fe6298d6340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fe6298d64d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe6298d6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fe6298e8620" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fe6298e8620"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe6298e89a0"/>
        <function-ref name="fired" scoped="" ref="0x7fe6298e8b30"/>
        <function-ref name="disable" scoped="" ref="0x7fe6298e8cc0"/>
        <function-ref name="edge" scoped="" ref="0x7fe6298e8e50"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fe6298ee020"/>
        <function-ref name="enable" scoped="" ref="0x7fe6298ee1b0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fe6298ee340"/>
        <function-ref name="getValue" scoped="" ref="0x7fe6298ee4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fe6298de710" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fe6298de710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe6298dea90"/>
        <function-ref name="fired" scoped="" ref="0x7fe6298dec20"/>
        <function-ref name="disable" scoped="" ref="0x7fe6298dedb0"/>
        <function-ref name="edge" scoped="" ref="0x7fe6298dd020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fe6298dd1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fe6298dd340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fe6298dd4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe6298dd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fe6298e6020" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fe6298e6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe6298e63a0"/>
        <function-ref name="fired" scoped="" ref="0x7fe6298e6530"/>
        <function-ref name="disable" scoped="" ref="0x7fe6298e66c0"/>
        <function-ref name="edge" scoped="" ref="0x7fe6298e6850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fe6298e69e0"/>
        <function-ref name="enable" scoped="" ref="0x7fe6298e6b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fe6298e6d00"/>
        <function-ref name="getValue" scoped="" ref="0x7fe6298e5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fe6298da100" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fe6298da100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe6298da480"/>
        <function-ref name="fired" scoped="" ref="0x7fe6298da610"/>
        <function-ref name="disable" scoped="" ref="0x7fe6298da7a0"/>
        <function-ref name="edge" scoped="" ref="0x7fe6298da930"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fe6298daac0"/>
        <function-ref name="enable" scoped="" ref="0x7fe6298dac50"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fe6298dade0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe6298d9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fe6298e3a30" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fe6298e3a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe6298e3db0"/>
        <function-ref name="fired" scoped="" ref="0x7fe6298e2020"/>
        <function-ref name="disable" scoped="" ref="0x7fe6298e21b0"/>
        <function-ref name="edge" scoped="" ref="0x7fe6298e2340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fe6298e24d0"/>
        <function-ref name="enable" scoped="" ref="0x7fe6298e2660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fe6298e27f0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe6298e2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fe6298e0020" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fe6298e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe6298e03a0"/>
        <function-ref name="fired" scoped="" ref="0x7fe6298e0530"/>
        <function-ref name="disable" scoped="" ref="0x7fe6298e06c0"/>
        <function-ref name="edge" scoped="" ref="0x7fe6298e0850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fe6298e09e0"/>
        <function-ref name="enable" scoped="" ref="0x7fe6298e0b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fe6298e0d00"/>
        <function-ref name="getValue" scoped="" ref="0x7fe6298df020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fe6298ee8a0" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fe6298ee8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe6298eec20"/>
        <function-ref name="fired" scoped="" ref="0x7fe6298eedb0"/>
        <function-ref name="disable" scoped="" ref="0x7fe6298ed020"/>
        <function-ref name="edge" scoped="" ref="0x7fe6298ed1b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fe6298ed340"/>
        <function-ref name="enable" scoped="" ref="0x7fe6298ed4d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fe6298ed660"/>
        <function-ref name="getValue" scoped="" ref="0x7fe6298ed7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fe6298dda30" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fe6298dda30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe6298dddb0"/>
        <function-ref name="fired" scoped="" ref="0x7fe6298dc020"/>
        <function-ref name="disable" scoped="" ref="0x7fe6298dc1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fe6298dc340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fe6298dc4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fe6298dc660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fe6298dc7f0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe6298dc980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fe6298ce3f0" loc="58:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fe6298ce3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe6298ce770"/>
        <function-ref name="fired" scoped="" ref="0x7fe6298ce900"/>
        <function-ref name="disable" scoped="" ref="0x7fe6298cea90"/>
        <function-ref name="edge" scoped="" ref="0x7fe6298cec20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fe6298cedb0"/>
        <function-ref name="enable" scoped="" ref="0x7fe6298cd020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fe6298cd1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe6298cd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fe6298c23f0" loc="70:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fe6298c23f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe6298c2770"/>
        <function-ref name="fired" scoped="" ref="0x7fe6298c2900"/>
        <function-ref name="disable" scoped="" ref="0x7fe6298c2a90"/>
        <function-ref name="edge" scoped="" ref="0x7fe6298c2c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fe6298c2db0"/>
        <function-ref name="enable" scoped="" ref="0x7fe6298c1020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fe6298c11b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe6298c1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fe6298cbd50" loc="61:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fe6298cbd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe6298ca100"/>
        <function-ref name="fired" scoped="" ref="0x7fe6298ca290"/>
        <function-ref name="disable" scoped="" ref="0x7fe6298ca420"/>
        <function-ref name="edge" scoped="" ref="0x7fe6298ca5b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fe6298ca740"/>
        <function-ref name="enable" scoped="" ref="0x7fe6298ca8d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fe6298caa60"/>
        <function-ref name="getValue" scoped="" ref="0x7fe6298cabf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fe6298c83f0" loc="65:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fe6298c83f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe6298c8770"/>
        <function-ref name="fired" scoped="" ref="0x7fe6298c8900"/>
        <function-ref name="disable" scoped="" ref="0x7fe6298c8a90"/>
        <function-ref name="edge" scoped="" ref="0x7fe6298c8c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fe6298c8db0"/>
        <function-ref name="enable" scoped="" ref="0x7fe6298c7020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fe6298c71b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe6298c7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fe6298d1d50" loc="56:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fe6298d1d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe6298d0100"/>
        <function-ref name="fired" scoped="" ref="0x7fe6298d0290"/>
        <function-ref name="disable" scoped="" ref="0x7fe6298d0420"/>
        <function-ref name="edge" scoped="" ref="0x7fe6298d05b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fe6298d0740"/>
        <function-ref name="enable" scoped="" ref="0x7fe6298d08d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fe6298d0a60"/>
        <function-ref name="getValue" scoped="" ref="0x7fe6298d0bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fe6298c5d50" loc="68:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fe6298c5d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe6298c4210"/>
        <function-ref name="fired" scoped="" ref="0x7fe6298c43a0"/>
        <function-ref name="disable" scoped="" ref="0x7fe6298c4530"/>
        <function-ref name="edge" scoped="" ref="0x7fe6298c46c0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fe6298c4850"/>
        <function-ref name="enable" scoped="" ref="0x7fe6298c49e0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fe6298c4b70"/>
        <function-ref name="getValue" scoped="" ref="0x7fe6298c4d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fe6298cd710" loc="59:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fe6298cd710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe6298cda90"/>
        <function-ref name="fired" scoped="" ref="0x7fe6298cdc20"/>
        <function-ref name="disable" scoped="" ref="0x7fe6298cddb0"/>
        <function-ref name="edge" scoped="" ref="0x7fe6298cc020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fe6298cc1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fe6298cc340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fe6298cc4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe6298cc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fe6298c1710" loc="71:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fe6298c1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe6298c1a90"/>
        <function-ref name="fired" scoped="" ref="0x7fe6298c1c20"/>
        <function-ref name="disable" scoped="" ref="0x7fe6298c1db0"/>
        <function-ref name="edge" scoped="" ref="0x7fe6298c0020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fe6298c01b0"/>
        <function-ref name="enable" scoped="" ref="0x7fe6298c0340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fe6298c04d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe6298c0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fe6298d57a0" loc="54:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fe6298d57a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe6298d5b20"/>
        <function-ref name="fired" scoped="" ref="0x7fe6298d5cb0"/>
        <function-ref name="disable" scoped="" ref="0x7fe6298d5e40"/>
        <function-ref name="edge" scoped="" ref="0x7fe6298d2020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fe6298d21b0"/>
        <function-ref name="enable" scoped="" ref="0x7fe6298d2340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fe6298d24d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe6298d2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fe6298c7710" loc="66:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fe6298c7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe6298c7a90"/>
        <function-ref name="fired" scoped="" ref="0x7fe6298c7c20"/>
        <function-ref name="disable" scoped="" ref="0x7fe6298c7db0"/>
        <function-ref name="edge" scoped="" ref="0x7fe6298c6020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fe6298c61b0"/>
        <function-ref name="enable" scoped="" ref="0x7fe6298c6340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fe6298c64d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe6298c6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fe6298cf020" loc="57:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fe6298cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe6298cf3a0"/>
        <function-ref name="fired" scoped="" ref="0x7fe6298cf530"/>
        <function-ref name="disable" scoped="" ref="0x7fe6298cf6c0"/>
        <function-ref name="edge" scoped="" ref="0x7fe6298cf850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fe6298cf9e0"/>
        <function-ref name="enable" scoped="" ref="0x7fe6298cfb70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fe6298cfd00"/>
        <function-ref name="getValue" scoped="" ref="0x7fe6298ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fe6298c3100" loc="69:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fe6298c3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe6298c3480"/>
        <function-ref name="fired" scoped="" ref="0x7fe6298c3610"/>
        <function-ref name="disable" scoped="" ref="0x7fe6298c37a0"/>
        <function-ref name="edge" scoped="" ref="0x7fe6298c3930"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fe6298c3ac0"/>
        <function-ref name="enable" scoped="" ref="0x7fe6298c3c50"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fe6298c3de0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe6298c2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fe6298cca30" loc="60:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fe6298cca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe6298ccdb0"/>
        <function-ref name="fired" scoped="" ref="0x7fe6298cb020"/>
        <function-ref name="disable" scoped="" ref="0x7fe6298cb1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fe6298cb340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fe6298cb4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fe6298cb660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fe6298cb7f0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe6298cb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fe6298c9020" loc="64:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fe6298c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe6298c93a0"/>
        <function-ref name="fired" scoped="" ref="0x7fe6298c9530"/>
        <function-ref name="disable" scoped="" ref="0x7fe6298c96c0"/>
        <function-ref name="edge" scoped="" ref="0x7fe6298c9850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fe6298c99e0"/>
        <function-ref name="enable" scoped="" ref="0x7fe6298c9b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fe6298c9d00"/>
        <function-ref name="getValue" scoped="" ref="0x7fe6298c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fe6298d2a30" loc="55:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fe6298d2a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe6298d2db0"/>
        <function-ref name="fired" scoped="" ref="0x7fe6298d1020"/>
        <function-ref name="disable" scoped="" ref="0x7fe6298d11b0"/>
        <function-ref name="edge" scoped="" ref="0x7fe6298d1340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fe6298d14d0"/>
        <function-ref name="enable" scoped="" ref="0x7fe6298d1660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fe6298d17f0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe6298d1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fe6298c6a30" loc="67:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fe6298c6a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe6298c6db0"/>
        <function-ref name="fired" scoped="" ref="0x7fe6298c5020"/>
        <function-ref name="disable" scoped="" ref="0x7fe6298c51b0"/>
        <function-ref name="edge" scoped="" ref="0x7fe6298c5340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fe6298c54d0"/>
        <function-ref name="enable" scoped="" ref="0x7fe6298c5660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fe6298c57f0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe6298c5980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fe6297b42f0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fe6297b42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe6297b4670"/>
        <function-ref name="fired" scoped="" ref="0x7fe6297b4800"/>
        <function-ref name="disable" scoped="" ref="0x7fe6297b4990"/>
        <function-ref name="edge" scoped="" ref="0x7fe6297b4b20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fe6297b4cb0"/>
        <function-ref name="enable" scoped="" ref="0x7fe6297b4e40"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fe6297a7020"/>
        <function-ref name="getValue" scoped="" ref="0x7fe6297a71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fe6297b5680" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fe6297b5680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe6297b5a00"/>
        <function-ref name="disable" scoped="" ref="0x7fe6297b5b90"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fe6297b5d20"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fe6297b4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fe6297a57a0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fe6297a57a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe6297a5b20"/>
        <function-ref name="fired" scoped="" ref="0x7fe6297a5cb0"/>
        <function-ref name="disable" scoped="" ref="0x7fe6297a5e40"/>
        <function-ref name="edge" scoped="" ref="0x7fe6297a4020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fe6297a41b0"/>
        <function-ref name="enable" scoped="" ref="0x7fe6297a4340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fe6297a44d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe6297a4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fe6297a6b70" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fe6297a6b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe6297a5020"/>
        <function-ref name="disable" scoped="" ref="0x7fe6297a51b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fe6297a5340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fe6297a54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fe629344e50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fe629344e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629343410"/>
        <function-ref name="write" scoped="" ref="0x7fe6293435a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fe629350160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fe629350160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe6293504e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fe629348e50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fe629348e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629346210"/>
        <function-ref name="write" scoped="" ref="0x7fe6293463a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fe629342880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fe629342880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629342c00"/>
        <function-ref name="write" scoped="" ref="0x7fe629342d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fe6293390a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fe6293390a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629339420"/>
        <function-ref name="write" scoped="" ref="0x7fe6293395b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fe6293400a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fe6293400a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629340420"/>
        <function-ref name="write" scoped="" ref="0x7fe6293405b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fe62932e500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fe62932e500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62932e880"/>
        <function-ref name="write" scoped="" ref="0x7fe62932ea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fe629330500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fe629330500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629330880"/>
        <function-ref name="write" scoped="" ref="0x7fe629330a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fe62934e490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fe62934e490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe62934e810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fe629336880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fe629336880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629336c00"/>
        <function-ref name="write" scoped="" ref="0x7fe629336d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fe629331500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fe629331500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629331880"/>
        <function-ref name="write" scoped="" ref="0x7fe629331a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fe629346e50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fe629346e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629345210"/>
        <function-ref name="write" scoped="" ref="0x7fe6293453a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fe629345e50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fe629345e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629344210"/>
        <function-ref name="write" scoped="" ref="0x7fe6293443a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fe62933c880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fe62933c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62933cc00"/>
        <function-ref name="write" scoped="" ref="0x7fe62933cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fe62933d0a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fe62933d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62933d420"/>
        <function-ref name="write" scoped="" ref="0x7fe62933d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fe629340880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fe629340880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629340c00"/>
        <function-ref name="write" scoped="" ref="0x7fe629340d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fe629352a90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe629352a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fe629352e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fe629351020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fe6293511b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fe62934de00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fe62934de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe62934c1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fe62934c490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fe62934c490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe62934c910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fe629335c80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fe629335c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6293340a0"/>
        <function-ref name="write" scoped="" ref="0x7fe629334230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fe62934cbe0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fe62934cbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe62934b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fe629331ce0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fe629331ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6293300a0"/>
        <function-ref name="write" scoped="" ref="0x7fe629330230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fe62934d160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fe62934d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe62934d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fe6293360a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fe6293360a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629336420"/>
        <function-ref name="write" scoped="" ref="0x7fe6293365b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fe629345670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fe629345670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6293459f0"/>
        <function-ref name="write" scoped="" ref="0x7fe629345b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fe629346670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fe629346670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6293469f0"/>
        <function-ref name="write" scoped="" ref="0x7fe629346b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fe629351ad0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fe629351ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe629351e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fe6293370a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fe6293370a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629337420"/>
        <function-ref name="write" scoped="" ref="0x7fe6293375b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fe629339880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fe629339880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629339c00"/>
        <function-ref name="write" scoped="" ref="0x7fe629339d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fe629337880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fe629337880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629337c00"/>
        <function-ref name="write" scoped="" ref="0x7fe629337d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fe62932fce0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fe62932fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62932e0a0"/>
        <function-ref name="write" scoped="" ref="0x7fe62932e230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fe629330ce0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fe629330ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62932f0a0"/>
        <function-ref name="write" scoped="" ref="0x7fe62932f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fe62933d880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fe62933d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62933dc00"/>
        <function-ref name="write" scoped="" ref="0x7fe62933dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fe6293380a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fe6293380a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629338420"/>
        <function-ref name="write" scoped="" ref="0x7fe6293385b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fe629332ce0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fe629332ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6293310a0"/>
        <function-ref name="write" scoped="" ref="0x7fe629331230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fe62933f880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fe62933f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62933fc00"/>
        <function-ref name="write" scoped="" ref="0x7fe62933fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fe62932ece0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fe62932ece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fe62932d0a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fe62932d230"/>
        <function-ref name="write" scoped="" ref="0x7fe62932d3c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fe62932d550"/>
        <function-ref name="readDone" scoped="" ref="0x7fe62932d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fe629351480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fe629351480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe629351800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fe629348670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fe629348670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6293489f0"/>
        <function-ref name="write" scoped="" ref="0x7fe629348b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fe629344670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fe629344670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6293449f0"/>
        <function-ref name="write" scoped="" ref="0x7fe629344b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fe62933b0a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fe62933b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62933b420"/>
        <function-ref name="write" scoped="" ref="0x7fe62933b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fe62933f0a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fe62933f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62933f420"/>
        <function-ref name="write" scoped="" ref="0x7fe62933f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fe62933b880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fe62933b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62933bc00"/>
        <function-ref name="write" scoped="" ref="0x7fe62933bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fe629343870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fe629343870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629343bf0"/>
        <function-ref name="write" scoped="" ref="0x7fe629343d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fe6293507b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fe6293507b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe629350b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fe6293420a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fe6293420a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629342420"/>
        <function-ref name="write" scoped="" ref="0x7fe6293425b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe629353e20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe629353e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe6293521c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe629352350"/>
        <function-ref name="request" scoped="" ref="0x7fe6293524e0"/>
        <function-ref name="granted" scoped="" ref="0x7fe629352670"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe629352800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fe62934b2f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fe62934b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe62934b670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fe629348020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fe629348020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe6293483a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fe629332500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fe629332500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629332880"/>
        <function-ref name="write" scoped="" ref="0x7fe629332a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fe629334ce0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fe629334ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6293320a0"/>
        <function-ref name="write" scoped="" ref="0x7fe629332230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fe62934d7b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fe62934d7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe62934db30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fe629334500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fe629334500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629334880"/>
        <function-ref name="write" scoped="" ref="0x7fe629334a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fe62932f500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fe62932f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62932f880"/>
        <function-ref name="write" scoped="" ref="0x7fe62932fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fe62933c0a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fe62933c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62933c420"/>
        <function-ref name="write" scoped="" ref="0x7fe62933c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fe629338880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fe629338880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629338c00"/>
        <function-ref name="write" scoped="" ref="0x7fe629338d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fe629350e00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fe629350e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe62934e1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fe62934eae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fe62934eae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe62934ee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fe62933e0a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fe62933e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62933e420"/>
        <function-ref name="write" scoped="" ref="0x7fe62933e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fe62934b940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fe62934b940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe62934bcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fe62933e880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fe62933e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62933ec00"/>
        <function-ref name="write" scoped="" ref="0x7fe62933ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fe6293350a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fe6293350a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629335820"/>
        <function-ref name="write" scoped="" ref="0x7fe6293359b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fe62932d9b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fe62932d9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fe62932dd30"/>
        <function-ref name="writeDone" scoped="" ref="0x7fe62932b020"/>
        <function-ref name="write" scoped="" ref="0x7fe62932b1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fe62932b340"/>
        <function-ref name="readDone" scoped="" ref="0x7fe62932b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7fe6297622c0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7fe6297622c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fe629762640"/>
        <function-ref name="writeDone" scoped="" ref="0x7fe6297627d0"/>
        <function-ref name="write" scoped="" ref="0x7fe629762960"/>
        <function-ref name="beginRead" scoped="" ref="0x7fe629762af0"/>
        <function-ref name="readDone" scoped="" ref="0x7fe629762c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fe629763350" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe629763350"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fe6297636d0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fe629763860"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fe6297639f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7fe629761540" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7fe629761540"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6297618c0"/>
        <function-ref name="write" scoped="" ref="0x7fe629761a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7fe629760370" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7fe629760370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6297606f0"/>
        <function-ref name="write" scoped="" ref="0x7fe629760880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe6297644d0" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe6297644d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe629764850"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe6297649e0"/>
        <function-ref name="request" scoped="" ref="0x7fe629764b70"/>
        <function-ref name="granted" scoped="" ref="0x7fe629764d00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe629763020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7fe62975e1d0" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7fe62975e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe62975e550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7fe6297492e0" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fe6297492e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe629749660"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe6297497f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7fe629759890" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7fe629759890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fe629759c10"/>
        <function-ref name="writeDone" scoped="" ref="0x7fe629759da0"/>
        <function-ref name="write" scoped="" ref="0x7fe629758020"/>
        <function-ref name="beginRead" scoped="" ref="0x7fe6297581b0"/>
        <function-ref name="readDone" scoped="" ref="0x7fe629758340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fe62975b660" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe62975b660"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fe62975b9e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fe62975bb70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fe62975bd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7fe629751c70" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fe629751c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fe629753020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7fe629749b40" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7fe629749b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fe629752020"/>
        <function-ref name="toIdle" scoped="" ref="0x7fe6297521b0"/>
        <function-ref name="isState" scoped="" ref="0x7fe629752340"/>
        <function-ref name="isIdle" scoped="" ref="0x7fe6297524d0"/>
        <function-ref name="requestState" scoped="" ref="0x7fe629752660"/>
        <function-ref name="forceState" scoped="" ref="0x7fe6297527f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fe629754060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fe629754060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe6297543e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe629754570"/>
        <function-ref name="request" scoped="" ref="0x7fe629754700"/>
        <function-ref name="granted" scoped="" ref="0x7fe629754890"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe629754a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7fe629758ba0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7fe629758ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629757020"/>
        <function-ref name="write" scoped="" ref="0x7fe6297571b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7fe629757a30" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7fe629757a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629757db0"/>
        <function-ref name="write" scoped="" ref="0x7fe629755020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fe629752a70" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fe629752a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe629752df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe629750020"/>
        <function-ref name="led1On" scoped="" ref="0x7fe6297501b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe629750340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe6297504d0"/>
        <function-ref name="get" scoped="" ref="0x7fe629750660"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe6297507f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe629750e30"/>
        <function-ref name="set" scoped="" ref="0x7fe629750980"/>
        <function-ref name="led0On" scoped="" ref="0x7fe629750b10"/>
        <function-ref name="led2On" scoped="" ref="0x7fe629750ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe62975a510" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe62975a510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe62975a890"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe62975aa20"/>
        <function-ref name="request" scoped="" ref="0x7fe62975abb0"/>
        <function-ref name="granted" scoped="" ref="0x7fe62975ad40"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe629759020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7fe629745bd0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7fe629745bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe629744020"/>
        <function-ref name="runTask" scoped="" ref="0x7fe6297441b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7fe6297558b0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7fe6297558b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe629755c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fe6296ea770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fe6296ea770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fe6296eaaf0"/>
        <function-ref name="toIdle" scoped="" ref="0x7fe6296eac80"/>
        <function-ref name="isState" scoped="" ref="0x7fe6296eae10"/>
        <function-ref name="isIdle" scoped="" ref="0x7fe6296e6020"/>
        <function-ref name="requestState" scoped="" ref="0x7fe6296e61b0"/>
        <function-ref name="forceState" scoped="" ref="0x7fe6296e6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fe6296e51d0" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fe6296e51d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fe6296e5550"/>
        <function-ref name="toIdle" scoped="" ref="0x7fe6296e56e0"/>
        <function-ref name="isState" scoped="" ref="0x7fe6296e5870"/>
        <function-ref name="isIdle" scoped="" ref="0x7fe6296e5a00"/>
        <function-ref name="requestState" scoped="" ref="0x7fe6296e5b90"/>
        <function-ref name="forceState" scoped="" ref="0x7fe6296e5d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe6296e1020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe6296e1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe6296e13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fe6296e1b70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fe6296e1b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fe6296df020"/>
        <function-ref name="toIdle" scoped="" ref="0x7fe6296df1b0"/>
        <function-ref name="isState" scoped="" ref="0x7fe6296df340"/>
        <function-ref name="isIdle" scoped="" ref="0x7fe6296df4d0"/>
        <function-ref name="requestState" scoped="" ref="0x7fe6296df660"/>
        <function-ref name="forceState" scoped="" ref="0x7fe6296df7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fe62937d020" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fe62937d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe62937d3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe62937d530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fe6296c78f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fe6296c78f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fe6296c7c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe6296c8c40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe6296c8c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe6296c7020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe6296c71b0"/>
        <function-ref name="request" scoped="" ref="0x7fe6296c7340"/>
        <function-ref name="granted" scoped="" ref="0x7fe6296c74d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe6296c7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fe6286425d0" loc="82:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fe6286425d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fe628642950"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe628642ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fe628640020" loc="87:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fe628640020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe6286403a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe628640530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fe6286407c0" loc="89:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fe6286407c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fe628640b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fe628642d70" loc="83:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fe628642d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fe628641180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe628643940" loc="81:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe628643940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe628643cc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe628643e50"/>
        <function-ref name="request" scoped="" ref="0x7fe628642020"/>
        <function-ref name="granted" scoped="" ref="0x7fe6286421b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe628642340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fe628641410" loc="85:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fe628641410"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fe628641790"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fe628641920"/>
        <function-ref name="splitRead" scoped="" ref="0x7fe628641ab0"/>
        <function-ref name="write" scoped="" ref="0x7fe628641c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fe62965e8e0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe62965e8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fe62965ec60"/>
        <function-ref name="configure" scoped="" ref="0x7fe62965edf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fe62965d850" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fe62965d850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe62965dbd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe62965dd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fe62965ba40" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fe62965ba40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fe62965bdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fe629660110" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fe629660110"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fe629660490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fe62965c690" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fe62965c690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe62965ca10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe62965cba0"/>
        <function-ref name="request" scoped="" ref="0x7fe62965cd30"/>
        <function-ref name="granted" scoped="" ref="0x7fe62965b020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe62965b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe629667d80" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe629667d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe629662180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe629662310"/>
        <function-ref name="request" scoped="" ref="0x7fe6296624a0"/>
        <function-ref name="granted" scoped="" ref="0x7fe629662630"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe6296627c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fe629660790" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fe629660790"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fe629660b10"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fe629660ca0"/>
        <function-ref name="splitRead" scoped="" ref="0x7fe629660e30"/>
        <function-ref name="write" scoped="" ref="0x7fe62965d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fe629657b40" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fe629657b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fe629659020"/>
        <function-ref name="txDone" scoped="" ref="0x7fe6296591b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fe6295e5250" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe6295e5250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fe6295e55f0"/>
        <function-ref name="configure" scoped="" ref="0x7fe6295e5780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fe6295e4c50" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fe6295e4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe6295e2020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe6295e21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fe6295e13e0" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fe6295e13e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fe6295e1780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fe6295e5a10" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fe6295e5a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fe6295e5d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7fe6295e1a50" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fe6295e1a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fe6295e1dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fe6295e0020"/>
        <function-ref name="setUctl" scoped="" ref="0x7fe6295e01b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fe6295e0340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fe6295e04d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fe6295e0660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fe6295e07f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fe6295e0980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fe6295e0b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fe6295e0ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fe6295e0e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fe6295df020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fe6295df1b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fe6295df440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fe6295df5d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fe6295df760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fe6295df8f0"/>
        <function-ref name="isUart" scoped="" ref="0x7fe6295dfa80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fe6295dfc10"/>
        <function-ref name="isSpi" scoped="" ref="0x7fe6295dfda0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fe6295de020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fe6295de1b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fe6295de340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fe6295de4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe6295de660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fe6295de9f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fe6295deb80"/>
        <function-ref name="setUbr" scoped="" ref="0x7fe6295ded10"/>
        <function-ref name="tx" scoped="" ref="0x7fe6295dd020"/>
        <function-ref name="getUctl" scoped="" ref="0x7fe6295dd1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fe6295dd340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fe6295dd4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fe6295dd660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fe6295dd7f0"/>
        <function-ref name="rx" scoped="" ref="0x7fe6295dd980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fe6295ddb10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fe6295ddca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fe6295dde30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fe6295dc020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fe6295dc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fe6295dcc20" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fe6295dcc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe6295db020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe6295db1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7fe6295db340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe6295db4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe6295db660"/>
        <function-ref name="get" scoped="" ref="0x7fe6295db7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe6295db980"/>
        <function-ref name="led2On" scoped="" ref="0x7fe6295da020"/>
        <function-ref name="set" scoped="" ref="0x7fe6295dbca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe6295dbb10"/>
        <function-ref name="led0On" scoped="" ref="0x7fe6295dbe30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fe6295e25b0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fe6295e25b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe6295e2950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe6295e2ae0"/>
        <function-ref name="request" scoped="" ref="0x7fe6295e2c70"/>
        <function-ref name="granted" scoped="" ref="0x7fe6295e2e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe6295e1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe6295e6470" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe6295e6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe6295e6810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe6295e69a0"/>
        <function-ref name="request" scoped="" ref="0x7fe6295e6b30"/>
        <function-ref name="granted" scoped="" ref="0x7fe6295e6cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe6295e6e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fe6295e4060" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fe6295e4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fe6295e43e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fe6295e4570"/>
        <function-ref name="splitRead" scoped="" ref="0x7fe6295e4700"/>
        <function-ref name="write" scoped="" ref="0x7fe6295e4890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fe6295dc480" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fe6295dc480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fe6295dc800"/>
        <function-ref name="txDone" scoped="" ref="0x7fe6295dc990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7fe6295da2f0" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7fe6295da2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe6295da670"/>
        <function-ref name="runTask" scoped="" ref="0x7fe6295da800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7fe6295ca2c0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fe6295ca2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe6295ca640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fe6295ced10" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fe6295ced10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fe6295cd0e0"/>
        <function-ref name="txDone" scoped="" ref="0x7fe6295cd270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fe6295d2020" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fe6295d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fe6295d23a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fe6295d2530"/>
        <function-ref name="setUctl" scoped="" ref="0x7fe6295d26c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fe6295d2850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fe6295d29e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fe6295d2b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fe6295d2d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fe6295d1020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fe6295d11b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fe6295d1340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fe6295d14d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fe6295d1660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fe6295d17f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fe6295d1a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fe6295d1c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fe6295d1da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fe6295d0020"/>
        <function-ref name="isUart" scoped="" ref="0x7fe6295d01b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fe6295d0340"/>
        <function-ref name="isSpi" scoped="" ref="0x7fe6295d04d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fe6295d0660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fe6295d07f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fe6295d0980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fe6295d0b10"/>
        <function-ref name="getMode" scoped="" ref="0x7fe6295d0ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fe6295cf220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fe6295cf3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fe6295cf540"/>
        <function-ref name="tx" scoped="" ref="0x7fe6295cf6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fe6295cf860"/>
        <function-ref name="disableUart" scoped="" ref="0x7fe6295cf9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fe6295cfb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fe6295cfd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fe6295ce020"/>
        <function-ref name="rx" scoped="" ref="0x7fe6295ce1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fe6295ce340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fe6295ce4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fe6295ce660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fe6295ce7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fe6295ce980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fe629590bb0" loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fe629590bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62958f020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62958f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62958f340"/>
        <function-ref name="clr" scoped="" ref="0x7fe62958d020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62958f660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62958f7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62958f980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62958fb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62958fca0"/>
        <function-ref name="get" scoped="" ref="0x7fe62958fe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62958e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62958e1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62958e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62958e5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62958e760"/>
        <function-ref name="set" scoped="" ref="0x7fe62958e8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62958ea80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62958f4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62958ec10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62958eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fe6295c42d0" loc="56:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fe6295c42d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fe6295c4650"/>
        <function-ref name="txDone" scoped="" ref="0x7fe6295c47e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7fe62958d3e0" loc="63:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7fe62958d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62958d760"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62958d8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62958da80"/>
        <function-ref name="clr" scoped="" ref="0x7fe62958b7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62958dda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62958c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62958c1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62958c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62958c4d0"/>
        <function-ref name="get" scoped="" ref="0x7fe62958c660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe62958c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe62958c980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe62958cb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe62958cda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe62958b020"/>
        <function-ref name="set" scoped="" ref="0x7fe62958b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe62958b340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62958dc10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe62958b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62958b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7fe62958bbb0" loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7fe62958bbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62958a020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62958a1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62958a340"/>
        <function-ref name="clr" scoped="" ref="0x7fe629588020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62958a660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62958a7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe62958a980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe62958ab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62958aca0"/>
        <function-ref name="get" scoped="" ref="0x7fe62958ae30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe629589020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe6295891b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe629589340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe6295895d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe629589760"/>
        <function-ref name="set" scoped="" ref="0x7fe6295898f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe629589a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe62958a4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe629589c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe629589da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7fe6295c9700" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fe6295c9700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fe6295c9a80"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fe6295c9c10"/>
        <function-ref name="setUctl" scoped="" ref="0x7fe6295c9da0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fe6295c8020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fe6295c81b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fe6295c8340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fe6295c84d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fe6295c8660"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fe6295c87f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fe6295c8980"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fe6295c8b10"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fe6295c8ca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fe6295c8e30"/>
        <function-ref name="getUbr" scoped="" ref="0x7fe6295c7120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fe6295c72b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fe6295c7440"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fe6295c75d0"/>
        <function-ref name="isUart" scoped="" ref="0x7fe6295c7760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fe6295c78f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fe6295c7a80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fe6295c7c10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fe6295c7da0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fe6295c6020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fe6295c61b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fe6295c6340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fe6295c66d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fe6295c6860"/>
        <function-ref name="setUbr" scoped="" ref="0x7fe6295c69f0"/>
        <function-ref name="tx" scoped="" ref="0x7fe6295c6b80"/>
        <function-ref name="getUctl" scoped="" ref="0x7fe6295c6d10"/>
        <function-ref name="disableUart" scoped="" ref="0x7fe6295c5020"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fe6295c51b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fe6295c5340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fe6295c54d0"/>
        <function-ref name="rx" scoped="" ref="0x7fe6295c5660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fe6295c57f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fe6295c5980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fe6295c5b10"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fe6295c5ca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fe6295c5e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7fe62959bd10" loc="59:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7fe62959bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fe6295c10e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fe6295c1270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fe6295c1400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fe6295c1590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fe6295c1720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fe6295c18b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fe6295c1a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fe6295c1bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe6295c1d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fe6295c0020"/>
        <function-ref name="getData" scoped="" ref="0x7fe6295c01b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fe6295c0340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fe6295c04d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fe6295c0760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fe6295c08f0"/>
        <function-ref name="getIV" scoped="" ref="0x7fe6295c0a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fe6295c0c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fe6295c0da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fe629599020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fe6295991b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fe629599340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fe6295994d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fe629599660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fe6295997f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fe629599980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fe629599d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fe629598020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fe6295981b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fe629598340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fe6295984d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fe629598660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fe6295987f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fe629598980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fe629598b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fe629598ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fe629598e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fe629597020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fe6295971b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fe629597340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fe6295974d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fe629597660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fe6295977f0"/>
        <function-ref name="setData" scoped="" ref="0x7fe629597980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fe629597b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fe629597ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fe629597e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fe629596020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fe6295961b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fe629596340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fe6295968d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fe629596a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fe629596bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fe629596d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fe629595020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fe6295951b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fe629595340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fe6295954d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fe629595660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fe6295957f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7fe6295923e0" loc="61:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7fe6295923e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe629592760"/>
        <function-ref name="isInput" scoped="" ref="0x7fe6295928f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe629592a80"/>
        <function-ref name="clr" scoped="" ref="0x7fe6295907f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe629592da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe629591020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe6295911b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe629591340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe6295914d0"/>
        <function-ref name="get" scoped="" ref="0x7fe629591660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe6295917f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe629591980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe629591b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe629591da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe629590020"/>
        <function-ref name="set" scoped="" ref="0x7fe6295901b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe629590340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe629592c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe6295904d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe629590660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fe6295c4c20" loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fe6295c4c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe6295c3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fe629595bb0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fe629595bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe629594020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe6295941b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe629594340"/>
        <function-ref name="clr" scoped="" ref="0x7fe629592020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe629594660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe6295947f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe629594980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe629594b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe629594ca0"/>
        <function-ref name="get" scoped="" ref="0x7fe629594e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe629593020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe6295931b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe629593340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe6295935d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe629593760"/>
        <function-ref name="set" scoped="" ref="0x7fe6295938f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe629593a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe6295944d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe629593c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe629593da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fe628637020" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fe628637020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fe6286373a0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe628637530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7fe628631440" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fe628631440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe6286317c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fe62862a760" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe62862a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fe62862aae0"/>
        <function-ref name="configure" scoped="" ref="0x7fe62862ac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7fe628631a50" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fe628631a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fe628631dd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fe628630020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fe6286301b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fe628630340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fe6286304d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fe628630660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fe6286307f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fe628630980"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe628630b10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fe628630ca0"/>
        <function-ref name="getData" scoped="" ref="0x7fe628630e30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fe62862f020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fe62862f1b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fe62862f440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fe62862f5d0"/>
        <function-ref name="getIV" scoped="" ref="0x7fe62862f760"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fe62862f8f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fe62862fa80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fe62862fc10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fe62862fda0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fe62862e020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fe62862e1b0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fe62862e340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fe62862e4d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fe62862e660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fe62862e9f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fe62862eb80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fe62862ed10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fe62862d020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fe62862d1b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fe62862d340"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fe62862d4d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fe62862d660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fe62862d7f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fe62862d980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fe62862db10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fe62862dca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fe62862de30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fe62862c020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fe62862c1b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fe62862c340"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fe62862c4d0"/>
        <function-ref name="setData" scoped="" ref="0x7fe62862c660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fe62862c7f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fe62862c980"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fe62862cb10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fe62862cca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fe62862ce30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fe62862b020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fe62862b5b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fe62862b740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fe62862b8d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fe62862ba60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fe62862bbf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fe62862bd80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fe62862a020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fe62862a1b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fe62862a340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fe62862a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fe628632c10" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fe628632c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fe628631020"/>
        <function-ref name="txDone" scoped="" ref="0x7fe6286311b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe628638340" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe628638340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe6286386c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe628638850"/>
        <function-ref name="request" scoped="" ref="0x7fe6286389e0"/>
        <function-ref name="granted" scoped="" ref="0x7fe628638b70"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe628638d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fe628636020" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fe628636020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fe6286363a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fe628636530"/>
        <function-ref name="setUctl" scoped="" ref="0x7fe6286366c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fe628636850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fe6286369e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fe628636b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fe628636d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fe628635020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fe6286351b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fe628635340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fe6286354d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fe628635660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fe6286357f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fe628635a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fe628635c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fe628635da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fe628634020"/>
        <function-ref name="isUart" scoped="" ref="0x7fe6286341b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fe628634340"/>
        <function-ref name="isSpi" scoped="" ref="0x7fe6286344d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fe628634660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fe6286347f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fe628634980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fe628634b10"/>
        <function-ref name="getMode" scoped="" ref="0x7fe628634ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fe628633220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fe6286333b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fe628633540"/>
        <function-ref name="tx" scoped="" ref="0x7fe6286336d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fe628633860"/>
        <function-ref name="disableUart" scoped="" ref="0x7fe6286339f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fe628633b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fe628633d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fe628632020"/>
        <function-ref name="rx" scoped="" ref="0x7fe6286321b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fe628632340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fe6286324d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fe628632660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fe6286327f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fe628632980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fe6286377c0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe6286377c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe628637b40"/>
        <function-ref name="userId" scoped="" ref="0x7fe628637cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fe6294e42c0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fe6294e42c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fe6294e4640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe6294e47d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fe6294e38a0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe6294e38a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fe6294e3c20"/>
        <function-ref name="configure" scoped="" ref="0x7fe6294e3db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fe6294e74d0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fe6294e74d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fe6294e7850"/>
        <function-ref name="txDone" scoped="" ref="0x7fe6294e79e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe6294e5020" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe6294e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe6294e53a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe6294e5530"/>
        <function-ref name="request" scoped="" ref="0x7fe6294e56c0"/>
        <function-ref name="granted" scoped="" ref="0x7fe6294e5850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe6294e59e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fe6294e63f0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fe6294e63f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe6294e6770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fe6294e4ad0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe6294e4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe6294e4e50"/>
        <function-ref name="userId" scoped="" ref="0x7fe6294e3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fe6294ccbf0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe6294ccbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe6294ca020"/>
        <function-ref name="userId" scoped="" ref="0x7fe6294ca1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fe6294ded60" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fe6294ded60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fe6294dd180"/>
        <function-ref name="txDone" scoped="" ref="0x7fe6294dd310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7fe6294cc5e0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fe6294cc5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe6294cc960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fe6294dd710" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fe6294dd710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe6294ddab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7fe6294ddd80" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7fe6294ddd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fe6294cc180"/>
        <function-ref name="txDone" scoped="" ref="0x7fe6294cc310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fe62944ca60" loc="59:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fe62944ca60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fe62944ce00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe62944b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fe62944a790" loc="64:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe62944a790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fe62944ab30"/>
        <function-ref name="configure" scoped="" ref="0x7fe62944acc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fe62944b270" loc="60:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe62944b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe62944b5f0"/>
        <function-ref name="requested" scoped="" ref="0x7fe62944b780"/>
        <function-ref name="granted" scoped="" ref="0x7fe62944b910"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe62944baa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe62944bc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe62944dca0" loc="58:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe62944dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe62944c0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe62944c230"/>
        <function-ref name="request" scoped="" ref="0x7fe62944c3c0"/>
        <function-ref name="granted" scoped="" ref="0x7fe62944c550"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe62944c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7fe629449020" loc="65:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7fe629449020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe6294493a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fe62944be80" loc="61:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe62944be80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe62944a220"/>
        <function-ref name="userId" scoped="" ref="0x7fe62944a3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe6285bc020" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe6285bc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe6285bc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fe6285bc630" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fe6285bc630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fe6285bc9b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fe6285bcb40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fe6285bccd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fe6285bce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fe6285b96c0" loc="99:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fe6285b96c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fe6285b9a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe6285b9bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fe6285b79d0" loc="105:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe6285b79d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fe6285b7d70"/>
        <function-ref name="configure" scoped="" ref="0x7fe6285b6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fe6285b62b0" loc="106:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fe6285b62b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fe6285b6630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fe6285b67c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fe6285b6950"/>
        <function-ref name="dequeue" scoped="" ref="0x7fe6285b6ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fe6285b9e40" loc="100:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe6285b9e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe6285b81e0"/>
        <function-ref name="requested" scoped="" ref="0x7fe6285b8370"/>
        <function-ref name="granted" scoped="" ref="0x7fe6285b8500"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe6285b8690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe6285b8820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fe6285b6d30" loc="107:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fe6285b6d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe6285b40e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe6285b4270"/>
        <function-ref name="led1On" scoped="" ref="0x7fe6285b4400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe6285b4590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe6285b4720"/>
        <function-ref name="get" scoped="" ref="0x7fe6285b48b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe6285b4a40"/>
        <function-ref name="led0On" scoped="" ref="0x7fe6285b31b0"/>
        <function-ref name="set" scoped="" ref="0x7fe6285b4d60"/>
        <function-ref name="led2On" scoped="" ref="0x7fe6285b4bd0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe6285b3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe6285ba850" loc="98:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe6285ba850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe6285babf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe6285bad80"/>
        <function-ref name="request" scoped="" ref="0x7fe6285b9020"/>
        <function-ref name="granted" scoped="" ref="0x7fe6285b91b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe6285b9340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7fe6285b72d0" loc="104:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7fe6285b72d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe6285b7650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fe6285b8a70" loc="101:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe6285b8a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe6285b8df0"/>
        <function-ref name="userId" scoped="" ref="0x7fe6285b7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fe6285b3480" loc="155:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fe6285b3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe6285b3800"/>
        <function-ref name="runTask" scoped="" ref="0x7fe6285b3990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7fe62943f020" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fe62943f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fe62943f3a0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fe62943f530"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fe62943f6c0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fe62943f850"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fe62943f9e0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fe62943fb70"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fe62943fd00"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fe62943e020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe62943e1b0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fe62943e340"/>
        <function-ref name="getData" scoped="" ref="0x7fe62943e4d0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fe62943e660"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fe62943e7f0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fe62943ea80"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fe62943ec10"/>
        <function-ref name="getIV" scoped="" ref="0x7fe62943eda0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fe62943d020"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fe62943d1b0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fe62943d340"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fe62943d4d0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fe62943d660"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fe62943d7f0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fe62943d980"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fe62943db10"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fe62943dca0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fe62943c220"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fe62943c3b0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fe62943c540"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fe62943c6d0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fe62943c860"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fe62943c9f0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fe62943cb80"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fe62943cd10"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fe62943b020"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fe62943b1b0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fe62943b340"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fe62943b4d0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fe62943b660"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fe62943b7f0"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fe62943b980"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fe62943bb10"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fe62943bca0"/>
        <function-ref name="setData" scoped="" ref="0x7fe62943be30"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fe62943a020"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fe62943a1b0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fe62943a340"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fe62943a4d0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fe62943a660"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fe62943a7f0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fe62943ad80"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fe629439020"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fe6294391b0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fe629439340"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fe6294394d0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fe629439660"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fe6294397f0"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fe629439980"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fe629439b10"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fe629439ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7fe62942fbb0" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7fe62942fbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fe62942e020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fe62942e1b0"/>
        <function-ref name="setUctl" scoped="" ref="0x7fe62942e340"/>
        <function-ref name="enableUart" scoped="" ref="0x7fe62942e4d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fe62942e660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fe62942e7f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fe62942e980"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fe62942eb10"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fe62942eca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fe62942ee30"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fe62942d020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fe62942d1b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fe62942d340"/>
        <function-ref name="getUbr" scoped="" ref="0x7fe62942d5d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fe62942d760"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fe62942d8f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fe62942da80"/>
        <function-ref name="isUart" scoped="" ref="0x7fe62942dc10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fe62942dda0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fe62942c020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fe62942c1b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fe62942c340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fe62942c4d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fe62942c660"/>
        <function-ref name="getMode" scoped="" ref="0x7fe62942c7f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fe62942cb80"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fe62942cd10"/>
        <function-ref name="setUbr" scoped="" ref="0x7fe62942b020"/>
        <function-ref name="tx" scoped="" ref="0x7fe62942b1b0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fe62942b340"/>
        <function-ref name="disableUart" scoped="" ref="0x7fe62942b4d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fe62942b660"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fe62942b7f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fe62942b980"/>
        <function-ref name="rx" scoped="" ref="0x7fe62942bb10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fe62942bca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fe62942be30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fe62942a020"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fe62942a1b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fe62942a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fe629428e40" loc="52:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fe629428e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe6294271e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe629427370"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe629427500"/>
        <function-ref name="clr" scoped="" ref="0x7fe6294251b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe629427820"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe6294279b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe629427b40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe629427cd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe629427e60"/>
        <function-ref name="get" scoped="" ref="0x7fe629426020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe6294261b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe629426340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe6294264d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe629426760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe6294268f0"/>
        <function-ref name="set" scoped="" ref="0x7fe629426a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe629426c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe629427690"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe629426da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe629425020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7fe629438d40" loc="48:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7fe629438d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fe6294350e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fe629435270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fe629435400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fe629435590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fe629435720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fe6294358b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fe629435a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fe629435bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe629435d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fe629434020"/>
        <function-ref name="getData" scoped="" ref="0x7fe6294341b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fe629434340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fe6294344d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fe629434760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fe6294348f0"/>
        <function-ref name="getIV" scoped="" ref="0x7fe629434a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fe629434c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fe629434da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fe629433020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fe6294331b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fe629433340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fe6294334d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fe629433660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fe6294337f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fe629433980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fe629433d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fe629432020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fe6294321b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fe629432340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fe6294324d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fe629432660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fe6294327f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fe629432980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fe629432b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fe629432ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fe629432e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fe629431020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fe6294311b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fe629431340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fe6294314d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fe629431660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fe6294317f0"/>
        <function-ref name="setData" scoped="" ref="0x7fe629431980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fe629431b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fe629431ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fe629431e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fe629430020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fe6294301b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fe629430340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fe6294308d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fe629430a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fe629430bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fe629430d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fe62942f020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fe62942f1b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fe62942f340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fe62942f4d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fe62942f660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fe62942f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fe62942a700" loc="51:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fe62942a700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62942aa80"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62942ac10"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe62942ada0"/>
        <function-ref name="clr" scoped="" ref="0x7fe629428a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fe6294291b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe629429340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe6294294d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe629429660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe6294297f0"/>
        <function-ref name="get" scoped="" ref="0x7fe629429980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe629429b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe629429ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe629429e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe629428120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe6294282b0"/>
        <function-ref name="set" scoped="" ref="0x7fe629428440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe6294285d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe629429020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe629428760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe6294288f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fe629313c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fe629313c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629312210"/>
        <function-ref name="write" scoped="" ref="0x7fe6293123a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fe62931eda0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fe62931eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe62931d180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fe629317b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fe629317b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629316020"/>
        <function-ref name="write" scoped="" ref="0x7fe6293161b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fe629311670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fe629311670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6293119f0"/>
        <function-ref name="write" scoped="" ref="0x7fe629311b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fe62930ae50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fe62930ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629309210"/>
        <function-ref name="write" scoped="" ref="0x7fe6293093a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fe629311e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fe629311e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629310210"/>
        <function-ref name="write" scoped="" ref="0x7fe6293103a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fe6292fd2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fe6292fd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292fd670"/>
        <function-ref name="write" scoped="" ref="0x7fe6292fd800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fe6293002f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fe6293002f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629300670"/>
        <function-ref name="write" scoped="" ref="0x7fe629300800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fe62931c120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fe62931c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe62931c4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fe629305670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fe629305670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6293059f0"/>
        <function-ref name="write" scoped="" ref="0x7fe629305b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fe6293012f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fe6293012f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629301670"/>
        <function-ref name="write" scoped="" ref="0x7fe629301800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fe629316c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fe629316c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629315020"/>
        <function-ref name="write" scoped="" ref="0x7fe6293151b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fe629315c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fe629315c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629313020"/>
        <function-ref name="write" scoped="" ref="0x7fe6293131b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fe62930b670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fe62930b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62930b9f0"/>
        <function-ref name="write" scoped="" ref="0x7fe62930bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fe62930ee50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fe62930ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62930c210"/>
        <function-ref name="write" scoped="" ref="0x7fe62930c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fe629310670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fe629310670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6293109f0"/>
        <function-ref name="write" scoped="" ref="0x7fe629310b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fe62931f760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe62931f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fe62931fae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fe62931fc70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fe62931fe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fe62931baa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fe62931baa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe62931be20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fe629319120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fe629319120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe6293195a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fe629304a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fe629304a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629304df0"/>
        <function-ref name="write" scoped="" ref="0x7fe629303020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fe629319870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fe629319870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe629319bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fe629301ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fe629301ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629301e50"/>
        <function-ref name="write" scoped="" ref="0x7fe629300020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fe62931cdc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fe62931cdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe62931b180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fe629306e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fe629306e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629305210"/>
        <function-ref name="write" scoped="" ref="0x7fe6293053a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fe629315480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fe629315480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629315800"/>
        <function-ref name="write" scoped="" ref="0x7fe629315990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fe629316480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fe629316480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629316800"/>
        <function-ref name="write" scoped="" ref="0x7fe629316990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fe62931e750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fe62931e750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe62931ead0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fe629308e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fe629308e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629306210"/>
        <function-ref name="write" scoped="" ref="0x7fe6293063a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fe629309670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fe629309670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6293099f0"/>
        <function-ref name="write" scoped="" ref="0x7fe629309b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fe629306670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fe629306670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6293069f0"/>
        <function-ref name="write" scoped="" ref="0x7fe629306b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fe6292fead0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fe6292fead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292fee50"/>
        <function-ref name="write" scoped="" ref="0x7fe6292fd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fe629300ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fe629300ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629300e50"/>
        <function-ref name="write" scoped="" ref="0x7fe6292fe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fe62930c670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fe62930c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62930c9f0"/>
        <function-ref name="write" scoped="" ref="0x7fe62930cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fe629309e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fe629309e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629308210"/>
        <function-ref name="write" scoped="" ref="0x7fe6293083a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fe629302ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fe629302ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629302e50"/>
        <function-ref name="write" scoped="" ref="0x7fe629301020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fe62930f670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fe62930f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62930f9f0"/>
        <function-ref name="write" scoped="" ref="0x7fe62930fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fe6292fdad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fe6292fdad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fe6292fde50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fe6292fc020"/>
        <function-ref name="write" scoped="" ref="0x7fe6292fc1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fe6292fc340"/>
        <function-ref name="readDone" scoped="" ref="0x7fe6292fc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fe62931e100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fe62931e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe62931e480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fe629317370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fe629317370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6293176f0"/>
        <function-ref name="write" scoped="" ref="0x7fe629317880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fe629313480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fe629313480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629313800"/>
        <function-ref name="write" scoped="" ref="0x7fe629313990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fe62930be50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fe62930be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62930a210"/>
        <function-ref name="write" scoped="" ref="0x7fe62930a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fe629310e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fe629310e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62930f210"/>
        <function-ref name="write" scoped="" ref="0x7fe62930f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fe62930a670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fe62930a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62930a9f0"/>
        <function-ref name="write" scoped="" ref="0x7fe62930ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fe629312670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fe629312670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6293129f0"/>
        <function-ref name="write" scoped="" ref="0x7fe629312b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fe62931d450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fe62931d450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe62931d7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fe629312e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fe629312e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629311210"/>
        <function-ref name="write" scoped="" ref="0x7fe6293113a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe629320a80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe629320a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe629320e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe62931f020"/>
        <function-ref name="request" scoped="" ref="0x7fe62931f1b0"/>
        <function-ref name="granted" scoped="" ref="0x7fe62931f340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe62931f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fe629318020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fe629318020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe6293183a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fe629318cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fe629318cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe6293170a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fe6293022f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fe6293022f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629302670"/>
        <function-ref name="write" scoped="" ref="0x7fe629302800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fe629303ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fe629303ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629303e50"/>
        <function-ref name="write" scoped="" ref="0x7fe629302020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fe62931b450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fe62931b450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe62931b7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fe6293032f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fe6293032f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629303670"/>
        <function-ref name="write" scoped="" ref="0x7fe629303800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fe6292fe2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fe6292fe2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292fe670"/>
        <function-ref name="write" scoped="" ref="0x7fe6292fe800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fe62930ce50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fe62930ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62930b210"/>
        <function-ref name="write" scoped="" ref="0x7fe62930b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fe629308670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fe629308670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6293089f0"/>
        <function-ref name="write" scoped="" ref="0x7fe629308b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fe62931daa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fe62931daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe62931de20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fe62931c770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fe62931c770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe62931caf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fe62930fe50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fe62930fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62930e210"/>
        <function-ref name="write" scoped="" ref="0x7fe62930e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fe629318670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fe629318670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe6293189f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fe62930e670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fe62930e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62930e9f0"/>
        <function-ref name="write" scoped="" ref="0x7fe62930eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fe629305e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fe629305e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629304610"/>
        <function-ref name="write" scoped="" ref="0x7fe6293047a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fe6292fc7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fe6292fc7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fe6292fcb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fe6292fccb0"/>
        <function-ref name="write" scoped="" ref="0x7fe6292fce40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fe6292fb020"/>
        <function-ref name="readDone" scoped="" ref="0x7fe6292fb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fe6292e7c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fe6292e7c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292e6210"/>
        <function-ref name="write" scoped="" ref="0x7fe6292e63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fe6292f2da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fe6292f2da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe6292f0180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fe6292eab50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fe6292eab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292e9020"/>
        <function-ref name="write" scoped="" ref="0x7fe6292e91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fe6292e5670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fe6292e5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292e59f0"/>
        <function-ref name="write" scoped="" ref="0x7fe6292e5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fe6292dde50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fe6292dde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292dc210"/>
        <function-ref name="write" scoped="" ref="0x7fe6292dc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fe6292e5e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fe6292e5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292e3210"/>
        <function-ref name="write" scoped="" ref="0x7fe6292e33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fe6292d12f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fe6292d12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292d1670"/>
        <function-ref name="write" scoped="" ref="0x7fe6292d1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fe6292d32f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fe6292d32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292d3670"/>
        <function-ref name="write" scoped="" ref="0x7fe6292d3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fe6292ef120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fe6292ef120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe6292ef4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fe6292d9670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fe6292d9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292d99f0"/>
        <function-ref name="write" scoped="" ref="0x7fe6292d9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fe6292d42f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fe6292d42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292d4670"/>
        <function-ref name="write" scoped="" ref="0x7fe6292d4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fe6292e9c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fe6292e9c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292e8020"/>
        <function-ref name="write" scoped="" ref="0x7fe6292e81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fe6292e8c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fe6292e8c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292e7020"/>
        <function-ref name="write" scoped="" ref="0x7fe6292e71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fe6292df670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fe6292df670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292df9f0"/>
        <function-ref name="write" scoped="" ref="0x7fe6292dfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fe6292e1e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fe6292e1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292e0210"/>
        <function-ref name="write" scoped="" ref="0x7fe6292e03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fe6292e3670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fe6292e3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292e39f0"/>
        <function-ref name="write" scoped="" ref="0x7fe6292e3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fe6292f3760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe6292f3760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fe6292f3ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fe6292f3c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fe6292f3e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fe6292eeaa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fe6292eeaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe6292eee20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fe6292ed120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fe6292ed120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe6292ed5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fe6292d8a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fe6292d8a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292d8df0"/>
        <function-ref name="write" scoped="" ref="0x7fe6292d7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fe6292ed870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fe6292ed870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe6292edbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fe6292d4ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fe6292d4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292d4e50"/>
        <function-ref name="write" scoped="" ref="0x7fe6292d3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fe6292efdc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fe6292efdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe6292ee180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fe6292dae50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fe6292dae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292d9210"/>
        <function-ref name="write" scoped="" ref="0x7fe6292d93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fe6292e8480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fe6292e8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292e8800"/>
        <function-ref name="write" scoped="" ref="0x7fe6292e8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fe6292e9480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fe6292e9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292e9800"/>
        <function-ref name="write" scoped="" ref="0x7fe6292e9990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fe6292f2750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fe6292f2750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe6292f2ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fe6292dbe50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fe6292dbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292da210"/>
        <function-ref name="write" scoped="" ref="0x7fe6292da3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fe6292dc670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fe6292dc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292dc9f0"/>
        <function-ref name="write" scoped="" ref="0x7fe6292dcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fe6292da670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fe6292da670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292da9f0"/>
        <function-ref name="write" scoped="" ref="0x7fe6292dab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fe6292d2ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fe6292d2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292d2e50"/>
        <function-ref name="write" scoped="" ref="0x7fe6292d1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fe6292d3ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fe6292d3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292d3e50"/>
        <function-ref name="write" scoped="" ref="0x7fe6292d2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fe6292e0670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fe6292e0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292e09f0"/>
        <function-ref name="write" scoped="" ref="0x7fe6292e0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fe6292dce50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fe6292dce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292db210"/>
        <function-ref name="write" scoped="" ref="0x7fe6292db3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fe6292d5ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fe6292d5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292d5e50"/>
        <function-ref name="write" scoped="" ref="0x7fe6292d4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fe6292e2670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fe6292e2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292e29f0"/>
        <function-ref name="write" scoped="" ref="0x7fe6292e2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fe6292d1ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fe6292d1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fe6292d1e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fe6292cf020"/>
        <function-ref name="write" scoped="" ref="0x7fe6292cf1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fe6292cf340"/>
        <function-ref name="readDone" scoped="" ref="0x7fe6292cf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fe6292f2100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fe6292f2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe6292f2480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fe6292ea370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fe6292ea370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292ea6f0"/>
        <function-ref name="write" scoped="" ref="0x7fe6292ea880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fe6292e7480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fe6292e7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292e7800"/>
        <function-ref name="write" scoped="" ref="0x7fe6292e7990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fe6292dfe50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fe6292dfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292dd210"/>
        <function-ref name="write" scoped="" ref="0x7fe6292dd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fe6292e3e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fe6292e3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292e2210"/>
        <function-ref name="write" scoped="" ref="0x7fe6292e23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fe6292dd670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fe6292dd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292dd9f0"/>
        <function-ref name="write" scoped="" ref="0x7fe6292ddb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fe6292e6670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fe6292e6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292e69f0"/>
        <function-ref name="write" scoped="" ref="0x7fe6292e6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fe6292f0450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fe6292f0450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe6292f07d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fe6292e6e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fe6292e6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292e5210"/>
        <function-ref name="write" scoped="" ref="0x7fe6292e53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe6292f49e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe6292f49e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe6292f4d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe6292f3020"/>
        <function-ref name="request" scoped="" ref="0x7fe6292f31b0"/>
        <function-ref name="granted" scoped="" ref="0x7fe6292f3340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe6292f34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fe6292ec020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fe6292ec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe6292ec3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fe6292eccc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fe6292eccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe6292ea0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fe6292d52f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fe6292d52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292d5670"/>
        <function-ref name="write" scoped="" ref="0x7fe6292d5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fe6292d7ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fe6292d7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292d7e50"/>
        <function-ref name="write" scoped="" ref="0x7fe6292d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fe6292ee450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fe6292ee450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe6292ee7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fe6292d72f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fe6292d72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292d7670"/>
        <function-ref name="write" scoped="" ref="0x7fe6292d7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fe6292d22f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fe6292d22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292d2670"/>
        <function-ref name="write" scoped="" ref="0x7fe6292d2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fe6292e0e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fe6292e0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292df210"/>
        <function-ref name="write" scoped="" ref="0x7fe6292df3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fe6292db670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fe6292db670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292db9f0"/>
        <function-ref name="write" scoped="" ref="0x7fe6292dbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fe6292f0aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fe6292f0aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe6292f0e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fe6292ef770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fe6292ef770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe6292efaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fe6292e2e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fe6292e2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292e1210"/>
        <function-ref name="write" scoped="" ref="0x7fe6292e13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fe6292ec670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fe6292ec670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe6292ec9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fe6292e1670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fe6292e1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292e19f0"/>
        <function-ref name="write" scoped="" ref="0x7fe6292e1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fe6292d9e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fe6292d9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292d8610"/>
        <function-ref name="write" scoped="" ref="0x7fe6292d87a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fe6292cf7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fe6292cf7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fe6292cfb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fe6292cfcb0"/>
        <function-ref name="write" scoped="" ref="0x7fe6292cfe40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fe6292ce020"/>
        <function-ref name="readDone" scoped="" ref="0x7fe6292ce1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7fe6292c7b20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fe6292c7b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fe6292c4020"/>
        <function-ref name="changed" scoped="" ref="0x7fe6292c41b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fe6292c4340"/>
        <function-ref name="setAddress" scoped="" ref="0x7fe6292c44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7fe6292c6d20" loc="13:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fe6292c6d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fe6292b00e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7fe6292ab310" loc="5:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fe6292ab310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fe6292ab690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7fe6292a8880" loc="8:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7fe6292a8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292a8c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7fe62929d020" loc="8:../../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7fe62929d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62929d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7fe629293bd0" loc="14:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7fe629293bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629297020"/>
        <function-ref name="write" scoped="" ref="0x7fe6292971b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7fe629297530" loc="15:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7fe629297530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe6292978b0"/>
        <function-ref name="stop" scoped="" ref="0x7fe629297a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7fe629298140" loc="11:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7fe629298140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6292984c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7fe62929cc50" loc="8:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7fe62929cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629283020"/>
        <function-ref name="write" scoped="" ref="0x7fe6292831b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7fe629283540" loc="11:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7fe629283540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe6292838c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe629283a50"/>
        <function-ref name="toggle" scoped="" ref="0x7fe629283be0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe629283d70"/>
        <function-ref name="get" scoped="" ref="0x7fe629282020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe6292821b0"/>
        <function-ref name="set" scoped="" ref="0x7fe629282340"/>
        <function-ref name="clr" scoped="" ref="0x7fe6292824d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7fe62927a950" loc="15:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7fe62927a950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ea640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fe62a2ea9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fe62927d780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7fe62927f150" loc="11:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7fe62927f150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62927f4d0"/>
        <function-ref name="write" scoped="" ref="0x7fe62927f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7fe62927f9f0" loc="14:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7fe62927f9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe62927fd70"/>
        <function-ref name="isInput" scoped="" ref="0x7fe62927e020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe62927e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe62927e340"/>
        <function-ref name="get" scoped="" ref="0x7fe62927e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe62927e660"/>
        <function-ref name="set" scoped="" ref="0x7fe62927e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe62927e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7fe629281ca0" loc="41:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7fe629281ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ea640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fe62a2ea9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fe629259ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7fe629257a90" loc="54:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7fe629257a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ea640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fe62a2ea9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fe6292568d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fe629247020" loc="55:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fe629247020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ea640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fe62a2ea9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe629247e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629245800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629245340"/>
        <function-ref name="overflow" scoped="" ref="0x7fe629245cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7fe629241530" loc="46:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fe629241530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ea640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fe62a2ea9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe6292403d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629240d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629240890"/>
        <function-ref name="overflow" scoped="" ref="0x7fe62923f260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fe62923a020" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fe62923a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe62923a3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fe62923a530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fe62923a6c0"/>
        <function-ref name="get" scoped="" ref="0x7fe62923a850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fe62923a9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe62923ab70"/>
        <function-ref name="getMode" scoped="" ref="0x7fe62923ad00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629239020"/>
        <function-ref name="overflow" scoped="" ref="0x7fe6292391b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fe629239340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fe6292394d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fe62923de50" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fe62923de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ea640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fe62a2ea9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe62923cca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe62923b670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe62923b1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe62923bb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7fe629284590" loc="3:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7fe629284590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe629284910"/>
        <function-ref name="isInput" scoped="" ref="0x7fe629284aa0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe629284c30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe629284dc0"/>
        <function-ref name="get" scoped="" ref="0x7fe629234020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe6292341b0"/>
        <function-ref name="set" scoped="" ref="0x7fe629234340"/>
        <function-ref name="clr" scoped="" ref="0x7fe6292344d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fe629232c50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fe629232c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe629231020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe6292311b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fe629231340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fe62922f020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe629231660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe6292317f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fe629231980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fe629231b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe629231ca0"/>
        <function-ref name="get" scoped="" ref="0x7fe629231e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fe629230020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fe6292301b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fe629230340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fe6292305d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fe629230760"/>
        <function-ref name="set" scoped="" ref="0x7fe6292308f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fe629230a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fe629230c10"/>
        <function-ref name="clr" scoped="" ref="0x7fe6292314d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fe629230da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fe6292339e0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fe6292339e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe629233d60"/>
        <function-ref name="isInput" scoped="" ref="0x7fe629232020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe6292321b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe629232340"/>
        <function-ref name="get" scoped="" ref="0x7fe6292324d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe629232660"/>
        <function-ref name="set" scoped="" ref="0x7fe6292327f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe629232980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fe62922a1b0" loc="14:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fe62922a1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe62922a530"/>
        <function-ref name="stop" scoped="" ref="0x7fe62922a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fe62921bcb0" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fe62921bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fe62921a0a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fe62921a230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fe62921a3c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fe62921a550"/>
        <function-ref name="setCca" scoped="" ref="0x7fe62921a6e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fe62921a870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7fe629217990" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7fe629217990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fe629217d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7fe62921b020" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7fe62921b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe62921b3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe62921b530"/>
        <function-ref name="modify" scoped="" ref="0x7fe62921b6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe62921b850"/>
        <function-ref name="resend" scoped="" ref="0x7fe62921b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fe62921e6c0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fe62921e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe62921ea40"/>
        <function-ref name="stop" scoped="" ref="0x7fe62921ebd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7fe629219150" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7fe629219150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fe6292194d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fe62920d970" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fe62920d970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fe62920dcf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fe62920de80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fe62920c030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fe62920c1c0"/>
        <function-ref name="setCca" scoped="" ref="0x7fe62920c350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fe62920c4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fe629201c60" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fe629201c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ebe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe62a2ea200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fe629203210"/>
        <function-ref name="clear" scoped="" ref="0x7fe629203940"/>
        <function-ref name="isValid" scoped="" ref="0x7fe629204ac0"/>
        <function-ref name="set" scoped="" ref="0x7fe6291f8090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7fe6291e5020" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fe6291e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6291e53a0"/>
        <function-ref name="write" scoped="" ref="0x7fe6291e5530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7fe6291e5890" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fe6291e5890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6291e5c10"/>
        <function-ref name="write" scoped="" ref="0x7fe6291e5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7fe62920c900" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7fe62920c900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fe62920cc80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7fe6291e8530" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fe6291e8530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe6291e88b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7fe6291f7a80" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7fe6291f7a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fe6291f7e00"/>
        <function-ref name="disable" scoped="" ref="0x7fe6291f6020"/>
        <function-ref name="captured" scoped="" ref="0x7fe6291f61b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fe6291f6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7fe62920bae0" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7fe62920bae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ebe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe62a2ea200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe629207390"/>
        <function-ref name="fired" scoped="" ref="0x7fe629209360"/>
        <function-ref name="startAt" scoped="" ref="0x7fe629209ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe629209820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe629207850"/>
        <function-ref name="start" scoped="" ref="0x7fe62920a970"/>
        <function-ref name="stop" scoped="" ref="0x7fe62920ae80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fe629207d00" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fe629207d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fe6292060a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fe629206230"/>
        <function-ref name="getRssi" scoped="" ref="0x7fe6292063c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fe629206550"/>
        <function-ref name="getPower" scoped="" ref="0x7fe6292066e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fe629206870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7fe6291ea550" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fe6291ea550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6291ea8d0"/>
        <function-ref name="write" scoped="" ref="0x7fe6291eaa60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7fe6291eae00" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fe6291eae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6291e91c0"/>
        <function-ref name="write" scoped="" ref="0x7fe6291e9350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7fe6291ded40" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fe6291ded40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe6291e20e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fe6291e2270"/>
        <function-ref name="sfd" scoped="" ref="0x7fe6291e2400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fe62920ebc0" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fe62920ebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe62920d020"/>
        <function-ref name="cancel" scoped="" ref="0x7fe62920d1b0"/>
        <function-ref name="modify" scoped="" ref="0x7fe62920d340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe62920d4d0"/>
        <function-ref name="resend" scoped="" ref="0x7fe62920d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7fe6291ecd10" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe6291ecd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fe6291eb0e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fe6291eb270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fe6291eb400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7fe6291e8c60" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fe6291e8c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe6291e7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fe6291f09b0" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fe6291f09b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe6291f0d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fe6291ef020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe6291ef1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe6291ef340"/>
        <function-ref name="get" scoped="" ref="0x7fe6291ef4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe6291ef660"/>
        <function-ref name="set" scoped="" ref="0x7fe6291ef7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe6291ef980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe629210c60" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe629210c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe62920e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fe629206bb0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe629206bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fe629205020"/>
        <function-ref name="getHeader" scoped="" ref="0x7fe6292051b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fe629205340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7fe6291f1e80" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fe6291f1e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe6291f7220"/>
        <function-ref name="isSet" scoped="" ref="0x7fe6291f73b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe6291f7540"/>
        <function-ref name="set" scoped="" ref="0x7fe6291f76d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7fe6291e73e0" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fe6291e73e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6291e7960"/>
        <function-ref name="write" scoped="" ref="0x7fe6291e7af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fe6291ec020" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fe6291ec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe6291ec3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe6291ec530"/>
        <function-ref name="request" scoped="" ref="0x7fe6291ec6c0"/>
        <function-ref name="granted" scoped="" ref="0x7fe6291ec850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe6291ec9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7fe6291f6690" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7fe6291f6690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe6291f6b10"/>
        <function-ref name="isInput" scoped="" ref="0x7fe6291f6ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe6291f6e30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe6291f0020"/>
        <function-ref name="get" scoped="" ref="0x7fe6291f01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe6291f0340"/>
        <function-ref name="set" scoped="" ref="0x7fe6291f04d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe6291f0660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7fe6291e4130" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fe6291e4130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6291e44b0"/>
        <function-ref name="write" scoped="" ref="0x7fe6291e4640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7fe6291e49c0" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fe6291e49c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6291e4d40"/>
        <function-ref name="write" scoped="" ref="0x7fe6291e3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7fe6291e96d0" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fe6291e96d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe6291e9a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7fe6291efcd0" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7fe6291efcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe6291ed0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe6291ed230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe6291ed3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe6291ed550"/>
        <function-ref name="get" scoped="" ref="0x7fe6291ed6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe6291ed870"/>
        <function-ref name="set" scoped="" ref="0x7fe6291eda00"/>
        <function-ref name="clr" scoped="" ref="0x7fe6291edb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fe6291e26c0" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fe6291e26c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe6291e2a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe6291e2bd0"/>
        <function-ref name="led1On" scoped="" ref="0x7fe6291e2d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe6291e1020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe6291e11b0"/>
        <function-ref name="get" scoped="" ref="0x7fe6291e1340"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe6291e14d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe6291e1b10"/>
        <function-ref name="set" scoped="" ref="0x7fe6291e1660"/>
        <function-ref name="led0On" scoped="" ref="0x7fe6291e17f0"/>
        <function-ref name="led2On" scoped="" ref="0x7fe6291e1980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7fe6291e65e0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fe6291e65e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6291e6960"/>
        <function-ref name="write" scoped="" ref="0x7fe6291e6af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fe62920e320" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fe62920e320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe62920e6a0"/>
        <function-ref name="stop" scoped="" ref="0x7fe62920e830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7fe6291eb780" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fe6291eb780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fe6291ebb00"/>
        <function-ref name="writeDone" scoped="" ref="0x7fe6291ebc90"/>
        <function-ref name="write" scoped="" ref="0x7fe6291ebe20"/>
        <function-ref name="beginRead" scoped="" ref="0x7fe6291ea020"/>
        <function-ref name="readDone" scoped="" ref="0x7fe6291ea1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7fe6291e9de0" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fe6291e9de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe6291e8180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7fe6291e7e80" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fe6291e7e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe6291e6220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7fe62920b0f0" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7fe62920b0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fe62920b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fe629144c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fe629144c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629143210"/>
        <function-ref name="write" scoped="" ref="0x7fe6291433a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fe62914e020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fe62914e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe62914e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fe629148c70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fe629148c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629147020"/>
        <function-ref name="write" scoped="" ref="0x7fe6291471b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fe629142670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fe629142670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6291429f0"/>
        <function-ref name="write" scoped="" ref="0x7fe629142b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fe62913be50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fe62913be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62913a210"/>
        <function-ref name="write" scoped="" ref="0x7fe62913a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fe629142e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fe629142e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629141210"/>
        <function-ref name="write" scoped="" ref="0x7fe6291413a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fe62912e2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fe62912e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62912e670"/>
        <function-ref name="write" scoped="" ref="0x7fe62912e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fe6291302f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fe6291302f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629130670"/>
        <function-ref name="write" scoped="" ref="0x7fe629130800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fe62914d370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fe62914d370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe62914d6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fe629136670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fe629136670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6291369f0"/>
        <function-ref name="write" scoped="" ref="0x7fe629136b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fe6291312f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fe6291312f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629131670"/>
        <function-ref name="write" scoped="" ref="0x7fe629131800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fe629147c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fe629147c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629145020"/>
        <function-ref name="write" scoped="" ref="0x7fe6291451b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fe629145c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fe629145c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629144020"/>
        <function-ref name="write" scoped="" ref="0x7fe6291441b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fe62913c670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fe62913c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62913c9f0"/>
        <function-ref name="write" scoped="" ref="0x7fe62913cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fe62913ee50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fe62913ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62913d210"/>
        <function-ref name="write" scoped="" ref="0x7fe62913d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fe629141670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fe629141670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6291419f0"/>
        <function-ref name="write" scoped="" ref="0x7fe629141b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fe6291508f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe6291508f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fe629150c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fe629150e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fe62914f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fe62914bd00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fe62914bd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe62914a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fe62914a370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fe62914a370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe62914a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fe629135a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fe629135a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629135df0"/>
        <function-ref name="write" scoped="" ref="0x7fe629134020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fe62914aac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fe62914aac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe62914ae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fe629131ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fe629131ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629131e50"/>
        <function-ref name="write" scoped="" ref="0x7fe629130020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fe62914b060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fe62914b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe62914b3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fe629137e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fe629137e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629136210"/>
        <function-ref name="write" scoped="" ref="0x7fe6291363a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fe629145480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fe629145480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629145800"/>
        <function-ref name="write" scoped="" ref="0x7fe629145990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fe629147480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fe629147480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629147800"/>
        <function-ref name="write" scoped="" ref="0x7fe629147990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fe62914f940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fe62914f940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe62914fcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fe629138e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fe629138e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629137210"/>
        <function-ref name="write" scoped="" ref="0x7fe6291373a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fe62913a670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fe62913a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62913a9f0"/>
        <function-ref name="write" scoped="" ref="0x7fe62913ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fe629137670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fe629137670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6291379f0"/>
        <function-ref name="write" scoped="" ref="0x7fe629137b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fe62912fad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fe62912fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62912fe50"/>
        <function-ref name="write" scoped="" ref="0x7fe62912e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fe629130ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fe629130ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629130e50"/>
        <function-ref name="write" scoped="" ref="0x7fe62912f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fe62913d670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fe62913d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62913d9f0"/>
        <function-ref name="write" scoped="" ref="0x7fe62913db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fe62913ae50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fe62913ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629138210"/>
        <function-ref name="write" scoped="" ref="0x7fe6291383a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fe629133ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fe629133ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629133e50"/>
        <function-ref name="write" scoped="" ref="0x7fe629131020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fe62913f670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fe62913f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62913f9f0"/>
        <function-ref name="write" scoped="" ref="0x7fe62913fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fe62912ead0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fe62912ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fe62912ee50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fe62912d020"/>
        <function-ref name="write" scoped="" ref="0x7fe62912d1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fe62912d340"/>
        <function-ref name="readDone" scoped="" ref="0x7fe62912d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fe62914f2f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fe62914f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe62914f670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fe629148490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fe629148490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629148810"/>
        <function-ref name="write" scoped="" ref="0x7fe6291489a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fe629144480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fe629144480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629144800"/>
        <function-ref name="write" scoped="" ref="0x7fe629144990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fe62913ce50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fe62913ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62913b210"/>
        <function-ref name="write" scoped="" ref="0x7fe62913b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fe629141e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fe629141e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62913f210"/>
        <function-ref name="write" scoped="" ref="0x7fe62913f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fe62913b670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fe62913b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62913b9f0"/>
        <function-ref name="write" scoped="" ref="0x7fe62913bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fe629143670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fe629143670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6291439f0"/>
        <function-ref name="write" scoped="" ref="0x7fe629143b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fe62914e670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fe62914e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe62914e9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fe629143e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fe629143e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629142210"/>
        <function-ref name="write" scoped="" ref="0x7fe6291423a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe629151c30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe629151c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe629150020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe6291501b0"/>
        <function-ref name="request" scoped="" ref="0x7fe629150340"/>
        <function-ref name="granted" scoped="" ref="0x7fe6291504d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe629150660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fe629149160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fe629149160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe6291494e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fe629149e00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fe629149e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe6291481c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fe6291332f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fe6291332f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629133670"/>
        <function-ref name="write" scoped="" ref="0x7fe629133800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fe629134ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fe629134ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629134e50"/>
        <function-ref name="write" scoped="" ref="0x7fe629133020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fe62914b6b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fe62914b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe62914ba30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fe6291342f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fe6291342f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629134670"/>
        <function-ref name="write" scoped="" ref="0x7fe629134800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fe62912f2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fe62912f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62912f670"/>
        <function-ref name="write" scoped="" ref="0x7fe62912f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fe62913de50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fe62913de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62913c210"/>
        <function-ref name="write" scoped="" ref="0x7fe62913c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fe629138670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fe629138670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6291389f0"/>
        <function-ref name="write" scoped="" ref="0x7fe629138b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fe62914ecc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fe62914ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe62914d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fe62914d9c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fe62914d9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe62914dd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fe62913fe50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fe62913fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62913e210"/>
        <function-ref name="write" scoped="" ref="0x7fe62913e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fe6291497b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fe6291497b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe629149b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fe62913e670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fe62913e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62913e9f0"/>
        <function-ref name="write" scoped="" ref="0x7fe62913eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fe629136e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fe629136e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629135610"/>
        <function-ref name="write" scoped="" ref="0x7fe6291357a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fe62912d7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fe62912d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fe62912db20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fe62912dcb0"/>
        <function-ref name="write" scoped="" ref="0x7fe62912de40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fe62912c020"/>
        <function-ref name="readDone" scoped="" ref="0x7fe62912c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7fe629121df0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fe629121df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe62911e1c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fe62911e350"/>
        <function-ref name="sfd" scoped="" ref="0x7fe62911e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe62911e7c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fe62911e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe62911eb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7fe62911d020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7fe62911d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fe62911d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fe6291215c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fe6291215c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe629121940"/>
        <function-ref name="stop" scoped="" ref="0x7fe629121ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7fe629114380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7fe629114380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe629114700"/>
        <function-ref name="isInput" scoped="" ref="0x7fe629114890"/>
        <function-ref name="toggle" scoped="" ref="0x7fe629114a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe629114bb0"/>
        <function-ref name="get" scoped="" ref="0x7fe629114d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe629113020"/>
        <function-ref name="set" scoped="" ref="0x7fe6291131b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe629113340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fe62910db90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fe62910db90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fe62910c020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fe62910c1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fe62910c340"/>
        <function-ref name="syncDone" scoped="" ref="0x7fe62910c4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fe62910c660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fe62910c7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fe62910c980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fe62910cb10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fe62910cca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fe62910ce30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fe62910b020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fe62910b1b0"/>
        <function-ref name="sync" scoped="" ref="0x7fe62910b340"/>
        <function-ref name="getChannel" scoped="" ref="0x7fe62910b5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fe62910b760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7fe6290f69d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7fe6290f69d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe6290f6d50"/>
        <function-ref name="runTask" scoped="" ref="0x7fe6290f4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fe62910bd70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fe62910bd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ebe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe62a2ea200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fe629108330"/>
        <function-ref name="clear" scoped="" ref="0x7fe629108a60"/>
        <function-ref name="isValid" scoped="" ref="0x7fe62910aba0"/>
        <function-ref name="set" scoped="" ref="0x7fe629107210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7fe6291136b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7fe6291136b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe629113a30"/>
        <function-ref name="isInput" scoped="" ref="0x7fe629113bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe629113d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe629112020"/>
        <function-ref name="get" scoped="" ref="0x7fe6291121b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe629112340"/>
        <function-ref name="set" scoped="" ref="0x7fe6291124d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe629112660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7fe629106cb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fe629106cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6291050a0"/>
        <function-ref name="write" scoped="" ref="0x7fe629105230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7fe629105590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fe629105590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629105910"/>
        <function-ref name="write" scoped="" ref="0x7fe629105aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7fe6291046d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fe6291046d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629104a50"/>
        <function-ref name="write" scoped="" ref="0x7fe629104be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fe62910e330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fe62910e330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fe62910e6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fe62910e840"/>
        <function-ref name="getRssi" scoped="" ref="0x7fe62910e9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fe62910eb60"/>
        <function-ref name="getPower" scoped="" ref="0x7fe62910ecf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fe62910ee80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7fe629117550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fe629117550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe6291178d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fe629117a60"/>
        <function-ref name="sfd" scoped="" ref="0x7fe629117bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7fe62910f3a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fe62910f3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe62910f720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fe629115020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fe629115020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe6291153a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe629115530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe6291156c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe629115850"/>
        <function-ref name="get" scoped="" ref="0x7fe6291159e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe629115b70"/>
        <function-ref name="set" scoped="" ref="0x7fe629115d00"/>
        <function-ref name="clr" scoped="" ref="0x7fe629114020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7fe629102020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fe629102020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6291023a0"/>
        <function-ref name="write" scoped="" ref="0x7fe629102530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe629118620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe629118620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe6291189a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fe62910d1e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe62910d1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fe62910d560"/>
        <function-ref name="getHeader" scoped="" ref="0x7fe62910d6f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fe62910d880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe629116020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fe629116020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe6291163a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fe6291116e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fe6291116e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe629111a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe629111bf0"/>
        <function-ref name="request" scoped="" ref="0x7fe629111d80"/>
        <function-ref name="granted" scoped="" ref="0x7fe629110020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe6291101b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7fe629105e00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fe629105e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6291041c0"/>
        <function-ref name="write" scoped="" ref="0x7fe629104350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7fe629110530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fe629110530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fe6291108b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fe629110a40"/>
        <function-ref name="write" scoped="" ref="0x7fe629110bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fe629110d60"/>
        <function-ref name="readDone" scoped="" ref="0x7fe62910f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7fe6291028b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fe6291028b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe629102e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7fe6291167c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7fe6291167c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fe629116b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fe629101150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fe629101150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe6291014d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe629101660"/>
        <function-ref name="led1On" scoped="" ref="0x7fe6291017f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe629101980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe629101b10"/>
        <function-ref name="get" scoped="" ref="0x7fe629101ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe629101e30"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe6291004d0"/>
        <function-ref name="set" scoped="" ref="0x7fe629100020"/>
        <function-ref name="led0On" scoped="" ref="0x7fe6291001b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fe629100340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7fe6291063e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fe6291063e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629106760"/>
        <function-ref name="write" scoped="" ref="0x7fe6291068f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7fe629107b10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fe629107b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe629106020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7fe629112a50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fe629112a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe629112dd0"/>
        <function-ref name="disable" scoped="" ref="0x7fe629111020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fe6291111b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fe629111340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7fe62910fad0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fe62910fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe62910e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fe629118ca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fe629118ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe6291170a0"/>
        <function-ref name="stop" scoped="" ref="0x7fe629117230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fe629095a70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fe629095a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fe629095df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fe629099670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fe629099670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fe6290999f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fe629099b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7fe629099d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fe629096020"/>
        <function-ref name="getPower" scoped="" ref="0x7fe6290961b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fe629096340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fe629094550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fe629094550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ebe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe62a2ea200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fe629093b00"/>
        <function-ref name="clear" scoped="" ref="0x7fe6290912a0"/>
        <function-ref name="isValid" scoped="" ref="0x7fe6290933d0"/>
        <function-ref name="set" scoped="" ref="0x7fe6290919d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7fe6290950c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe6290950c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fe629095440"/>
        <function-ref name="getHeader" scoped="" ref="0x7fe6290955d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fe629095760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fe62908c480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fe62908c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe62908c800"/>
        <function-ref name="isSet" scoped="" ref="0x7fe62908c990"/>
        <function-ref name="cancel" scoped="" ref="0x7fe62908cb20"/>
        <function-ref name="set" scoped="" ref="0x7fe62908ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fe629090660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fe629090660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2eb680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe62a2eb9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fe62908fce0"/>
        <function-ref name="clear" scoped="" ref="0x7fe62908d460"/>
        <function-ref name="isValid" scoped="" ref="0x7fe62908f5b0"/>
        <function-ref name="set" scoped="" ref="0x7fe62908db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fe6290966e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fe6290966e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fe629096a60"/>
        <function-ref name="noAck" scoped="" ref="0x7fe629096bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fe629096d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fe629086020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fe629086020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fe6290863a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fe62908bd20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fe62908bd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fe6290880e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fe629088270"/>
        <function-ref name="getRssi" scoped="" ref="0x7fe629088400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fe629088590"/>
        <function-ref name="getPower" scoped="" ref="0x7fe629088720"/>
        <function-ref name="getLqi" scoped="" ref="0x7fe6290888b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fe62907d4a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fe62907d4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe62907d820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe62907d9b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe62907db40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe62907dcd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe62907de60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fe629086a80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fe629086a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ebe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe62a2ea200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fe629083020"/>
        <function-ref name="clear" scoped="" ref="0x7fe629083750"/>
        <function-ref name="isValid" scoped="" ref="0x7fe6290858d0"/>
        <function-ref name="set" scoped="" ref="0x7fe629083e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7fe629087640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe629087640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fe6290879c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fe629087b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fe629087ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fe62907e8b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fe62907e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe62907ec30"/>
        <function-ref name="isSet" scoped="" ref="0x7fe62907edc0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe62907d020"/>
        <function-ref name="set" scoped="" ref="0x7fe62907d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7fe62907c3b0" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7fe62907c3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ebe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe62a2ea200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe62907a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7fe62907a6e0" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fe62907a6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2eb680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe62a2eb9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe6290793d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fe629082af0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fe629082af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2eb680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe62a2eb9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fe62907f0d0"/>
        <function-ref name="clear" scoped="" ref="0x7fe62907f800"/>
        <function-ref name="isValid" scoped="" ref="0x7fe629081970"/>
        <function-ref name="set" scoped="" ref="0x7fe62907e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fe629088c50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fe629088c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fe629087020"/>
        <function-ref name="noAck" scoped="" ref="0x7fe6290871b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fe629087340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fe629029020" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fe629029020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ebe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe62a2ea200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe629029c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fe629028300" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fe629028300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ebe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe62a2ea200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe629027150"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe629027ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe629027610"/>
        <function-ref name="overflow" scoped="" ref="0x7fe629026020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe629024450" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fe629024450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2eb680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe62a2eb9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe629020a20"/>
        <function-ref name="fired" scoped="" ref="0x7fe629021020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe629021da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe629021920"/>
        <function-ref name="getdt" scoped="" ref="0x7fe62901f4a0"/>
        <function-ref name="gett0" scoped="" ref="0x7fe62901f020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe6290214a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe629023090"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe629020410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe629023560"/>
        <function-ref name="stop" scoped="" ref="0x7fe629023a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fe62900ec60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fe62900ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62900d210"/>
        <function-ref name="write" scoped="" ref="0x7fe62900d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fe629018020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fe629018020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe6290183a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fe629012c70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fe629012c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629011020"/>
        <function-ref name="write" scoped="" ref="0x7fe6290111b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fe62900c670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fe62900c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62900c9f0"/>
        <function-ref name="write" scoped="" ref="0x7fe62900cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fe629005e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fe629005e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629004210"/>
        <function-ref name="write" scoped="" ref="0x7fe6290043a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fe62900ce50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fe62900ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62900b210"/>
        <function-ref name="write" scoped="" ref="0x7fe62900b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fe628ff82f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fe628ff82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe628ff8670"/>
        <function-ref name="write" scoped="" ref="0x7fe628ff8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fe628ffb2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fe628ffb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe628ffb670"/>
        <function-ref name="write" scoped="" ref="0x7fe628ffb800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fe629017370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fe629017370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe6290176f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fe629000670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fe629000670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6290009f0"/>
        <function-ref name="write" scoped="" ref="0x7fe629000b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fe628ffc2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fe628ffc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe628ffc670"/>
        <function-ref name="write" scoped="" ref="0x7fe628ffc800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fe629011c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fe629011c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629010020"/>
        <function-ref name="write" scoped="" ref="0x7fe6290101b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fe629010c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fe629010c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62900e020"/>
        <function-ref name="write" scoped="" ref="0x7fe62900e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fe629006670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fe629006670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6290069f0"/>
        <function-ref name="write" scoped="" ref="0x7fe629006b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fe629009e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fe629009e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629007210"/>
        <function-ref name="write" scoped="" ref="0x7fe6290073a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fe62900b670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fe62900b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62900b9f0"/>
        <function-ref name="write" scoped="" ref="0x7fe62900bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fe62901a970" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fe62901a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fe62901acf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fe62901ae80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fe629019030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fe629016d00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fe629016d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe6290140a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fe629014370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fe629014370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe6290147f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fe628fffa70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fe628fffa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe628fffdf0"/>
        <function-ref name="write" scoped="" ref="0x7fe628ffe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fe629014ac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fe629014ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe629014e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fe628ffcad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fe628ffcad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe628ffce50"/>
        <function-ref name="write" scoped="" ref="0x7fe628ffb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fe629016060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fe629016060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe6290163e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fe629002e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fe629002e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629000210"/>
        <function-ref name="write" scoped="" ref="0x7fe6290003a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fe629010480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fe629010480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629010800"/>
        <function-ref name="write" scoped="" ref="0x7fe629010990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fe629011480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fe629011480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629011800"/>
        <function-ref name="write" scoped="" ref="0x7fe629011990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fe629019950" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fe629019950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe629019cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fe629003e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fe629003e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629002210"/>
        <function-ref name="write" scoped="" ref="0x7fe6290023a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fe629004670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fe629004670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6290049f0"/>
        <function-ref name="write" scoped="" ref="0x7fe629004b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fe629002670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fe629002670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6290029f0"/>
        <function-ref name="write" scoped="" ref="0x7fe629002b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fe628ff9ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fe628ff9ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe628ff9e50"/>
        <function-ref name="write" scoped="" ref="0x7fe628ff8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fe628ffbad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fe628ffbad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe628ffbe50"/>
        <function-ref name="write" scoped="" ref="0x7fe628ff9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fe629007670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fe629007670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6290079f0"/>
        <function-ref name="write" scoped="" ref="0x7fe629007b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fe629004e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fe629004e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629003210"/>
        <function-ref name="write" scoped="" ref="0x7fe6290033a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fe628ffdad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fe628ffdad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe628ffde50"/>
        <function-ref name="write" scoped="" ref="0x7fe628ffc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fe62900a670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fe62900a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62900a9f0"/>
        <function-ref name="write" scoped="" ref="0x7fe62900ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fe628ff8ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fe628ff8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fe628ff8e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fe628ff7020"/>
        <function-ref name="write" scoped="" ref="0x7fe628ff71b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fe628ff7340"/>
        <function-ref name="readDone" scoped="" ref="0x7fe628ff74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fe629019300" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fe629019300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe629019680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fe629012490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fe629012490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629012810"/>
        <function-ref name="write" scoped="" ref="0x7fe6290129a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fe62900e480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fe62900e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62900e800"/>
        <function-ref name="write" scoped="" ref="0x7fe62900e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fe629006e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fe629006e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629005210"/>
        <function-ref name="write" scoped="" ref="0x7fe6290053a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fe62900be50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fe62900be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62900a210"/>
        <function-ref name="write" scoped="" ref="0x7fe62900a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fe629005670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fe629005670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6290059f0"/>
        <function-ref name="write" scoped="" ref="0x7fe629005b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fe62900d670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fe62900d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62900d9f0"/>
        <function-ref name="write" scoped="" ref="0x7fe62900db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fe629018670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fe629018670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe6290189f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fe62900de50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fe62900de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe62900c210"/>
        <function-ref name="write" scoped="" ref="0x7fe62900c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe62901bd00" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe62901bd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe62901a0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe62901a230"/>
        <function-ref name="request" scoped="" ref="0x7fe62901a3c0"/>
        <function-ref name="granted" scoped="" ref="0x7fe62901a550"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe62901a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fe629013160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fe629013160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe6290134e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fe629013e00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fe629013e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe6290121c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fe628ffd2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fe628ffd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe628ffd670"/>
        <function-ref name="write" scoped="" ref="0x7fe628ffd800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fe628ffead0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fe628ffead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe628ffee50"/>
        <function-ref name="write" scoped="" ref="0x7fe628ffd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fe6290166b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fe6290166b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe629016a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fe628ffe2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fe628ffe2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe628ffe670"/>
        <function-ref name="write" scoped="" ref="0x7fe628ffe800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fe628ff92f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fe628ff92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe628ff9670"/>
        <function-ref name="write" scoped="" ref="0x7fe628ff9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fe629007e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fe629007e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629006210"/>
        <function-ref name="write" scoped="" ref="0x7fe6290063a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fe629003670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fe629003670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6290039f0"/>
        <function-ref name="write" scoped="" ref="0x7fe629003b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fe629018cc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fe629018cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe6290170a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fe6290179c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fe6290179c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe629017d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fe62900ae50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fe62900ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe629009210"/>
        <function-ref name="write" scoped="" ref="0x7fe6290093a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fe6290137b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fe6290137b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fe629013b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fe629009670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fe629009670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe6290099f0"/>
        <function-ref name="write" scoped="" ref="0x7fe629009b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fe629000e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fe629000e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe628fff610"/>
        <function-ref name="write" scoped="" ref="0x7fe628fff7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fe628ff77a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fe628ff77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fe628ff7b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fe628ff7cb0"/>
        <function-ref name="write" scoped="" ref="0x7fe628ff7e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fe628ff6020"/>
        <function-ref name="readDone" scoped="" ref="0x7fe628ff61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fe628fcda20" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fe628fcda20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fe628fcdda0"/>
        <function-ref name="rand32" scoped="" ref="0x7fe628fcc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fe628fcb920" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7fe628fcb920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe628fcd560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe628fd1990" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe628fd1990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe628fd1d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fe628fc3a20" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fe628fc3a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fe628fc3da0"/>
        <function-ref name="rand32" scoped="" ref="0x7fe628fc2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fe628fc4940" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7fe628fc4940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe628fc3560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe628fc4080" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe628fc4080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe628fc4400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fe628fcfaa0" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fe628fcfaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fe628fcfe20"/>
        <function-ref name="toIdle" scoped="" ref="0x7fe628fb5020"/>
        <function-ref name="isState" scoped="" ref="0x7fe628fb51b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fe628fb5340"/>
        <function-ref name="requestState" scoped="" ref="0x7fe628fb54d0"/>
        <function-ref name="forceState" scoped="" ref="0x7fe628fb5660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fe628fab020" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fe628fab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe628fab3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe628fab530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe628fab6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe628fab850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe628fab9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fe628fac220" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fe628fac220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe628fac5a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe628fac730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe628fac8c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe628faca50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe628facbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fe628fa7e60" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fe628fa7e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe628fa6210"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe628fa63a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe628fa6530"/>
        <function-ref name="cancel" scoped="" ref="0x7fe628fa66c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe628fa6850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fe628faaa10" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fe628faaa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe628faad90"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe628fa7020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe628fa71b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe628fa7340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe628fa74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fe628fa58f0" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fe628fa58f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fe628fa5c70"/>
        <function-ref name="rand32" scoped="" ref="0x7fe628fa5e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe628fa7750" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe628fa7750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe628fa7ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fe628fa4170" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe628fa4170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fe628fa44f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fe628fa4680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fe628fa4810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7fe628fa6ae0" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fe628fa6ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fe628fa6e60"/>
        <function-ref name="toIdle" scoped="" ref="0x7fe628fa5020"/>
        <function-ref name="isState" scoped="" ref="0x7fe628fa51b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fe628fa5340"/>
        <function-ref name="requestState" scoped="" ref="0x7fe628fa54d0"/>
        <function-ref name="forceState" scoped="" ref="0x7fe628fa5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fe628fa8690" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fe628fa8690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fe628fa8a10"/>
        <function-ref name="toIdle" scoped="" ref="0x7fe628fa8ba0"/>
        <function-ref name="isState" scoped="" ref="0x7fe628fa8d30"/>
        <function-ref name="isIdle" scoped="" ref="0x7fe628f93020"/>
        <function-ref name="requestState" scoped="" ref="0x7fe628f931b0"/>
        <function-ref name="forceState" scoped="" ref="0x7fe628f93340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fe628f8d950" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fe628f8d950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe628f8dcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe628f90aa0" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fe628f90aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe628f90e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7fe628f8d200" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7fe628f8d200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe628f8d580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fe628f873f0" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fe628f873f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe628f87770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe628f88b70" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe628f88b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe628f87020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe628f8be30" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fe628f8be30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe628f881e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fe628f87a70" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe628f87a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fe628f87df0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fe628f86020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fe628f861b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7fe628f88570" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7fe628f88570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe628f888f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fe628f59020" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fe628f59020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe628f593a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fe628f596b0" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fe628f596b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe628f59a30"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe628f59bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe628f59d50"/>
        <function-ref name="cancel" scoped="" ref="0x7fe628f58020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe628f581b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fe628f5d8e0" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fe628f5d8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe628f5dc60"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe628f5ddf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe628f5c020"/>
        <function-ref name="cancel" scoped="" ref="0x7fe628f5c1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe628f5c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fe628f5cc90" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fe628f5cc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe628f5b0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe628f5b230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe628f5b3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe628f5b550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe628f5b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe628f5c5e0" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fe628f5c5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe628f5c960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe628f5ebe0" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe628f5ebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe628f5d020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe628f5d1b0"/>
        <function-ref name="request" scoped="" ref="0x7fe628f5d340"/>
        <function-ref name="granted" scoped="" ref="0x7fe628f5d4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe628f5d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fe628f5ba50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fe628f5ba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe628f5bdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fe628f5a170" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fe628f5a170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe628f5a4f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe628f5a680"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe628f5a810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe628f5a9a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe628f5ab30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fe628f4fd70" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fe628f4fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe628f4e180"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe628f4e310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe628f4e4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe628f4e630"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe628f4e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fe628f4eb10" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fe628f4eb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe628f4d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7fe628f20db0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7fe628f20db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe628f1e180"/>
        <function-ref name="runTask" scoped="" ref="0x7fe628f1e310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fe628f4d2f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fe628f4d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fe628f4d670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fe628f4d800"/>
        <function-ref name="getRssi" scoped="" ref="0x7fe628f4d990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fe628f4db20"/>
        <function-ref name="getPower" scoped="" ref="0x7fe628f4dcb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fe628f4de40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fe628f51a20" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fe628f51a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe628f51da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe628f50020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe628f501b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe628f50340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe628f504d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fe628f4cb70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fe628f4cb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fe628f4b020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fe628f4b1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fe628f4b340"/>
        <function-ref name="dequeue" scoped="" ref="0x7fe628f4b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fe628f4c170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe628f4c170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fe628f4c4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fe628f4c680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fe628f4c810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fe628f51370" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7fe628f51370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe628f516f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe628f547b0" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fe628f547b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe628f54b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe628f54cc0"/>
        <function-ref name="request" scoped="" ref="0x7fe628f54e50"/>
        <function-ref name="granted" scoped="" ref="0x7fe628f52020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe628f521b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fe628f524d0" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7fe628f524d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe628f52850"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe628f529e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe628f52b70"/>
        <function-ref name="cancel" scoped="" ref="0x7fe628f52d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe628f51020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fe628f50840" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fe628f50840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe628f50bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fe628f4f020" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fe628f4f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe628f4f3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe628f4f530"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe628f4f6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe628f4f850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe628f4f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe628f00dd0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fe628f00dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe628eff180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fe628eff410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fe628eff410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fe628eff790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fe628eff920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fe628effab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fe628effc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fe628ef3b80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fe628ef3b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe628ef2020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe628ef21b0"/>
        <function-ref name="start" scoped="" ref="0x7fe628ef2340"/>
        <function-ref name="stop" scoped="" ref="0x7fe628ef24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fe628ef1860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fe628ef1860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe628ef1be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe628ef1d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe628ef0020"/>
        <function-ref name="cancel" scoped="" ref="0x7fe628ef01b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe628ef0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fe628ef0690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fe628ef0690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe628ef0a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fe628ef7ce0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fe628ef7ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe628ef40a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe628ef4230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe628ef43c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe628ef4550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe628ef46e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fe628ef3080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fe628ef3080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fe628ef3400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fe628ef3590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fe628ef3720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fe628ef38b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7fe628ef2800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7fe628ef2800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fe628ef2b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7fe628ef2d10"/>
        <function-ref name="isState" scoped="" ref="0x7fe628ef1020"/>
        <function-ref name="isIdle" scoped="" ref="0x7fe628ef11b0"/>
        <function-ref name="requestState" scoped="" ref="0x7fe628ef1340"/>
        <function-ref name="forceState" scoped="" ref="0x7fe628ef14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fe628ef0d90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7fe628ef0d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe628eef180"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe628eef310"/>
        <function-ref name="start" scoped="" ref="0x7fe628eef4a0"/>
        <function-ref name="stop" scoped="" ref="0x7fe628eef630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe628ef4980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fe628ef4980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe628ef4d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fe628eec2d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fe628eec2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fe628eec650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fe628eec7e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fe628eec970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fe628eecb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fe628eee580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fe628eee580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fe628eee900"/>
        <function-ref name="toIdle" scoped="" ref="0x7fe628eeea90"/>
        <function-ref name="isState" scoped="" ref="0x7fe628eeec20"/>
        <function-ref name="isIdle" scoped="" ref="0x7fe628eeedb0"/>
        <function-ref name="requestState" scoped="" ref="0x7fe628eed020"/>
        <function-ref name="forceState" scoped="" ref="0x7fe628eed1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fe628edfd70" loc="45:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fe628edfd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe628ede180"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe628ede310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe628ede4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe628ede630"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe628ede7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fe628ee2350" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fe628ee2350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe628ee26d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe628ee2860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe628ee29f0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe628ee2b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe628ee2d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fe628edf020" loc="41:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fe628edf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fe628edf3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fe628edf530"/>
        <function-ref name="getRetries" scoped="" ref="0x7fe628edf6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fe628edf850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fe628edf9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7fe628ed91c0" loc="44:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe628ed91c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fe628ed9540"/>
        <function-ref name="noAck" scoped="" ref="0x7fe628ed96d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fe628ed9860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fe628edc410" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fe628edc410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fe628edc790"/>
        <function-ref name="setRetries" scoped="" ref="0x7fe628edc920"/>
        <function-ref name="getRetries" scoped="" ref="0x7fe628edcab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fe628edcc40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fe628edcdd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fe628eba690" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fe628eba690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe628ebaa10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fe628ebb860" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fe628ebb860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe628ebbbe0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe628ebbd70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe628eba020"/>
        <function-ref name="cancel" scoped="" ref="0x7fe628eba1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe628eba340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fe628eb8610" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fe628eb8610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fe628eb8990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fe628eb8b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fe628eb8cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7fe628eb8e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fe628eb7020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fe628eb71b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fe628eb7340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fe628eb74d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fe628eb7660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fe628eb77f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fe628eb7980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fe628eb7b10"/>
        <function-ref name="sync" scoped="" ref="0x7fe628eb7ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fe628eb6020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fe628eb61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fe628ebc8b0" loc="54:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fe628ebc8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe629ef5550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fe628ebcc30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fe628ebcdc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fe628ebb020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fe628ebb1b0"/>
        <function-ref name="setCca" scoped="" ref="0x7fe628ebb340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fe628ebb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fe628ebdce0" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7fe628ebdce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe629ef5550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fe628ebc0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7fe628eb41f0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7fe628eb41f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fe628eb4570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fe628eb4700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fe628eb4890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fe628eb4a20"/>
        <function-ref name="setCca" scoped="" ref="0x7fe628eb4bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fe628eb4d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe628ebea80" loc="52:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fe628ebea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe628ebee00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe628ebd020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe628ebd1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe628ebd340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe628ebd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fe628ec2020" loc="48:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fe628ec2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe629ef5550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe628ec23a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe628ec2530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe628ec26c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe628ec2850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe628ec29e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fe628ec1df0" loc="50:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fe628ec1df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe629ef5550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe628ebf1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fe628ebace0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fe628ebace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fe628eb90a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fe628eb9230"/>
        <function-ref name="getRssi" scoped="" ref="0x7fe628eb93c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fe628eb9550"/>
        <function-ref name="getPower" scoped="" ref="0x7fe628eb96e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fe628eb9870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fe628eb64d0" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fe628eb64d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fe628eb6950"/>
        <function-ref name="changed" scoped="" ref="0x7fe628eb6ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fe628eb6c70"/>
        <function-ref name="setAddress" scoped="" ref="0x7fe628eb6e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fe628eb9b70" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fe628eb9b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fe628eb8020"/>
        <function-ref name="getHeader" scoped="" ref="0x7fe628eb81b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fe628eb8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe628ec1210" loc="49:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fe628ec1210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe629ef5550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe628ec1590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fe628eb3d30" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fe628eb3d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe628eb20e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe628eb2270"/>
        <function-ref name="led1On" scoped="" ref="0x7fe628eb2400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe628eb2590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe628eb2720"/>
        <function-ref name="get" scoped="" ref="0x7fe628eb28b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe628eb2a40"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe628eb11b0"/>
        <function-ref name="set" scoped="" ref="0x7fe628eb2bd0"/>
        <function-ref name="led0On" scoped="" ref="0x7fe628eb2d60"/>
        <function-ref name="led2On" scoped="" ref="0x7fe628eb1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fe628ebf470" loc="51:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fe628ebf470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe628ebf7f0"/>
        <function-ref name="source" scoped="" ref="0x7fe628ebf980"/>
        <function-ref name="address" scoped="" ref="0x7fe628ebfb10"/>
        <function-ref name="destination" scoped="" ref="0x7fe628ebfca0"/>
        <function-ref name="setSource" scoped="" ref="0x7fe628ebfe30"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe628ebe020"/>
        <function-ref name="type" scoped="" ref="0x7fe628ebe1b0"/>
        <function-ref name="setType" scoped="" ref="0x7fe628ebe340"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe628ebe4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe628ebe660"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe628ebe7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7fe628eb30f0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7fe628eb30f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe628eb3470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe628eb3600"/>
        <function-ref name="request" scoped="" ref="0x7fe628eb3790"/>
        <function-ref name="granted" scoped="" ref="0x7fe628eb3920"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe628eb3ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fe628e2e360" loc="61:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fe628e2e360"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fe628e2e6e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fe628e2e870"/>
        <function-ref name="start" scoped="" ref="0x7fe628e2ea00"/>
        <function-ref name="stop" scoped="" ref="0x7fe628e2eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fe628e2d3f0" loc="63:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fe628e2d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe629ef5550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe628e2d770"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe628e2d900"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe628e2da90"/>
        <function-ref name="cancel" scoped="" ref="0x7fe628e2dc20"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe628e2ddb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fe628e2a1d0" loc="65:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fe628e2a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe629ef5550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe628e2a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe628e2a7e0" loc="67:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fe628e2a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe628e2ab60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe628e2acf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe628e2ae80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe628e29030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe628e291c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fe628e27a20" loc="70:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fe628e27a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2ebe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fe62a2ea200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fe628e25020"/>
        <function-ref name="clear" scoped="" ref="0x7fe628e25750"/>
        <function-ref name="isValid" scoped="" ref="0x7fe628e26890"/>
        <function-ref name="set" scoped="" ref="0x7fe628e25e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fe628e1f890" loc="72:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fe628e1f890"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fe628e1fc10"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fe628e1fda0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fe628e1e020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fe628e1e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe628e2b5c0" loc="64:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fe628e2b5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe629ef5550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe628e2b940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fe628e28b20" loc="69:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fe628e28b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fe628e27020"/>
        <function-ref name="noAck" scoped="" ref="0x7fe628e271b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fe628e27340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fe628e29470" loc="68:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fe628e29470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe628e297f0"/>
        <function-ref name="source" scoped="" ref="0x7fe628e29980"/>
        <function-ref name="address" scoped="" ref="0x7fe628e29b10"/>
        <function-ref name="destination" scoped="" ref="0x7fe628e29ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7fe628e29e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe628e28020"/>
        <function-ref name="type" scoped="" ref="0x7fe628e281b0"/>
        <function-ref name="setType" scoped="" ref="0x7fe628e28340"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe628e284d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe628e28660"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe628e287f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fe628e23af0" loc="71:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fe628e23af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fe62a2eb680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe62a2eb9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fe628e210d0"/>
        <function-ref name="clear" scoped="" ref="0x7fe628e21800"/>
        <function-ref name="isValid" scoped="" ref="0x7fe628e22970"/>
        <function-ref name="set" scoped="" ref="0x7fe628e1f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fe628d88020" loc="49:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fe628d88020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe628d883a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe628d88530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe628d886c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe628d88850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe628d889e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe628d88c30" loc="50:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fe628d88c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe628d87020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe628d871b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe628d87340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe628d874d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe628d87660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fe628d878b0" loc="51:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fe628d878b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe628d87c30"/>
        <function-ref name="source" scoped="" ref="0x7fe628d87dc0"/>
        <function-ref name="address" scoped="" ref="0x7fe628d86020"/>
        <function-ref name="destination" scoped="" ref="0x7fe628d861b0"/>
        <function-ref name="setSource" scoped="" ref="0x7fe628d86340"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe628d864d0"/>
        <function-ref name="type" scoped="" ref="0x7fe628d86660"/>
        <function-ref name="setType" scoped="" ref="0x7fe628d867f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe628d86980"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe628d86b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe628d86ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fe628d85020" loc="52:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fe628d85020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fe628d853a0"/>
        <function-ref name="noAck" scoped="" ref="0x7fe628d85530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fe628d856c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fe628438e60" loc="49:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fe628438e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe628437210"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe6284373a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe628437530"/>
        <function-ref name="cancel" scoped="" ref="0x7fe6284376c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe628437850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe628437aa0" loc="50:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fe628437aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe628437e20"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe628435020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe6284351b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe628435340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe6284354d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fe628435720" loc="51:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fe628435720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe628435aa0"/>
        <function-ref name="source" scoped="" ref="0x7fe628435c30"/>
        <function-ref name="address" scoped="" ref="0x7fe628435dc0"/>
        <function-ref name="destination" scoped="" ref="0x7fe628434020"/>
        <function-ref name="setSource" scoped="" ref="0x7fe6284341b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe628434340"/>
        <function-ref name="type" scoped="" ref="0x7fe6284344d0"/>
        <function-ref name="setType" scoped="" ref="0x7fe628434660"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe6284347f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe628434980"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe628434b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fe628434da0" loc="52:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fe628434da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fe628433180"/>
        <function-ref name="noAck" scoped="" ref="0x7fe628433310"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fe6284334a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fe6284287f0" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fe6284287f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe628428b70"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe628428d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe628427020"/>
        <function-ref name="cancel" scoped="" ref="0x7fe6284271b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe628427340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7fe6284275f0" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fe6284275f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe628427970"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe628427b00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe628427c90"/>
        <function-ref name="cancel" scoped="" ref="0x7fe628427e20"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe628426020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fe628426270" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fe628426270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe6284265f0"/>
        <function-ref name="source" scoped="" ref="0x7fe628426780"/>
        <function-ref name="address" scoped="" ref="0x7fe628426910"/>
        <function-ref name="destination" scoped="" ref="0x7fe628426aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7fe628426c30"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe628426dc0"/>
        <function-ref name="type" scoped="" ref="0x7fe628425020"/>
        <function-ref name="setType" scoped="" ref="0x7fe6284251b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe628425340"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe6284254d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe628425660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fe628df0930" loc="43:../../../tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fe628df0930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe628df0cb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe628df0e40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe628ded020"/>
        <function-ref name="cancel" scoped="" ref="0x7fe628ded1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe628ded340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fe628d9d400" loc="51:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fe628d9d400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fe629ef5550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe628d9d7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe628d9d930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe628d9dac0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe628d9dc50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe628d9dde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fe628d9fdf0" loc="47:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fe628d9fdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fe628d9e1c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe628d9e350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe628d9e4e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe628d9e670"/>
        <function-ref name="sendDone" scoped="" ref="0x7fe628d9e800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fe628d9b720" loc="53:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fe628d9b720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe628d9baa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe628d9bc30"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe628d9bdc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe628d9a020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe628d9a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBusy" ref="0x7fe628d9eb80" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBusy" scoped="" ref="0x7fe628d9eb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBusy"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="busy" scoped="" ref="0x7fe628d9d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7fe628d9a480" loc="184:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7fe628d9a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe628d9a800"/>
        <function-ref name="runTask" scoped="" ref="0x7fe628d9a990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7fe628d9ac60" loc="140:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7fe628d9ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe628d99020"/>
        <function-ref name="runTask" scoped="" ref="0x7fe628d991b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fe628d9c060" loc="52:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fe628d9c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe628d9c3e0"/>
        <function-ref name="source" scoped="" ref="0x7fe628d9c570"/>
        <function-ref name="address" scoped="" ref="0x7fe628d9c700"/>
        <function-ref name="destination" scoped="" ref="0x7fe628d9c890"/>
        <function-ref name="setSource" scoped="" ref="0x7fe628d9ca20"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe628d9cbb0"/>
        <function-ref name="type" scoped="" ref="0x7fe628d9cd40"/>
        <function-ref name="setType" scoped="" ref="0x7fe628d9b020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe628d9b1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe628d9b340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe628d9b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fe628d7c020" loc="46:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SlaveAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fe628d7c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe628d7c3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fe628d7c530"/>
        <function-ref name="getPayload" scoped="" ref="0x7fe628d7c6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fe628d7c850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fe628d7c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fe628d82910" loc="45:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SlaveAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fe628d82910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fe628d82c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fe628d7cc30" loc="47:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SlaveAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fe628d7cc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fe628d7a020"/>
        <function-ref name="source" scoped="" ref="0x7fe628d7a1b0"/>
        <function-ref name="address" scoped="" ref="0x7fe628d7a340"/>
        <function-ref name="destination" scoped="" ref="0x7fe628d7a4d0"/>
        <function-ref name="setSource" scoped="" ref="0x7fe628d7a660"/>
        <function-ref name="setDestination" scoped="" ref="0x7fe628d7a7f0"/>
        <function-ref name="type" scoped="" ref="0x7fe628d7a980"/>
        <function-ref name="setType" scoped="" ref="0x7fe628d7ab10"/>
        <function-ref name="isForMe" scoped="" ref="0x7fe628d7aca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fe628d7ae30"/>
        <function-ref name="localGroup" scoped="" ref="0x7fe628d79020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fe62a2e1a40" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7fe62a2df690" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Platform" loc="51:../../../tos/interfaces/Platform.nc">
      <function command="" provided="0" name="jiffiesRawSize" ref="0x7fe62a2d6d50" loc="109:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="node_id" ref="0x7fe62a2d2c00" loc="182:../../../tos/interfaces/Platform.nc">
        <documentation loc="164:../../../tos/interfaces/Platform.nc">
          <short>&#10; Platform dependent node id.</short>
          <long>&#10; Platform dependent node id.&#10;&#10; Get a Platform defined node id.  This will typically be a serial number&#10; or mac address.&#10;&#10; Platform define PLATFORM_SERIAL_NUM_SIZE determines the&#10; size.  If not defined defaults to 4 bytes (uint32_t).  But platforms&#10; really should define it to be clear.  (see platform.h)&#10;&#10; input:  *lenp      pointer where to place the length of the number.&#10;&#10; output: *lenp      length filled in if non-null.&#10; return: *uint8_t   pointer to the serial_num or NULL.&#10;&#10; a Node Id is assumed to be a sequence of bytes starting with the&#10; msb first.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lenp" ref="0x7fe62a2d2940" loc="182:../../../tos/interfaces/Platform.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRawSize" ref="0x7fe62a2d7020" loc="79:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRaw" ref="0x7fe62a2d87b0" loc="78:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesExpired" ref="0x7fe62a2d5b40" loc="126:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t_base" ref="0x7fe62a2d5550" loc="126:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
            </type-int>
          </variable>
          <variable name="limit" ref="0x7fe62a2d58b0" loc="126:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIntPriority" ref="0x7fe62a2d2020" loc="162:../../../tos/interfaces/Platform.nc">
        <documentation loc="153:../../../tos/interfaces/Platform.nc">
          <short>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.</short>
          <long>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.&#10;   modern computer hardware allows the assignment of different priorities&#10;   to interrupt sources.  This is inherently a platform thing.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="irq_number" ref="0x7fe62a2d3cd0" loc="162:../../../tos/interfaces/Platform.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set_unaligned_traps" ref="0x7fe62a2d35a0" loc="150:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on_off" ref="0x7fe62a2d3320" loc="150:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesRaw" ref="0x7fe62a2d65b0" loc="108:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="localTime" ref="0x7fe62a2d8020" loc="64:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsExpired" ref="0x7fe62a2d7dc0" loc="95:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t_base" ref="0x7fe62a2d77d0" loc="95:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
            </type-int>
          </variable>
          <variable name="limit" ref="0x7fe62a2d7b30" loc="95:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7fe62a294b40" loc="48:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7fe62a297de0" loc="43:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7fe62a294420" loc="47:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7fe62a297700" loc="42:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7fe62a2965a0" loc="45:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7fe62a29a8f0" loc="40:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7fe62a297020" loc="41:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7fe62a296cc0" loc="46:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7fe62a4047e0" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7fe62a6cc700"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7fe62a32aa80" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7fe62a3281f0" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7fe62a32a2b0" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7fe62a4a2020" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fe62ae42e80" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7fe62a78ae20" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7fe62a78a610" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7fe62a77e770" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event.&#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7fe62a77c020" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7fe62a230020" loc="61:../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7fe62a2307d0" loc="67:../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7fe62a22f020" loc="72:../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7fe62a22e020" loc="83:../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7fe62a22c7d0" loc="100:../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fe62a22b020" loc="117:../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7fe62a22f7b0" loc="77:../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fe62a22bb90" loc="134:../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fe62a22b910" loc="134:../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7fe62a231850" loc="56:../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7fe62a22e800" loc="89:../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7fe62a22c020" loc="94:../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fe62a2218a0" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fe62a220020" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fe62a223a40" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fe62a220e80" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fe62a221190" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fe62a220740" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fe62a226c40" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fe62a223350" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fe62a1f6880" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fe62a1f5020" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7fe62a1f1b10" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fe62a1f1890" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorPullUp" ref="0x7fe62a1ef5d0" loc="126:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fe62a1f8120" loc="59:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fe62a1f4020" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7fe62a1efd60" loc="134:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="129:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDriveStrength" ref="0x7fe62a1ee860" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="136:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short> &#10; Set port drive strength.</short>
          <long> &#10; Set port drive strength.&#10; @param mode: MSP430_PORT_DRIVE_STRENGTH_*&#10; @return EINVAL if invalid mode or pin doesn't support drive&#10;     strength config.&#10; FAIL if pin is not an output&#10; SUCCESS if pin supports it, is an output, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fe62a1ee5e0" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fe62a1f5760" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fe62a1f60e0" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDriveStrength" ref="0x7fe62a1ec190" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get drive strength.</short>
          <long>&#10; Get drive strength.&#10; @return MSP430_PORT_DRIVE_STRENGTH_*&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7fe62a1f2770" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorPullDown" ref="0x7fe62a1f0e30" loc="125:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7fe62a1f88c0" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorOff" ref="0x7fe62a1f03e0" loc="124:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; set resistor mode directly.</short>
          <long>&#10; set resistor mode directly.&#10;&#10; You have to know what you are doing when you use these.  These routines&#10; assume that the port is set for input (PxDIR).  The routines explicitly&#10; change the value of the bits setting in PxOUT.&#10;&#10; The advantage of using these routines is efficiency because there is no&#10; mode checking.  In addition, no error check is done to make sure that the&#10; port is in input mode.  The thing is, first, this is something that you&#10; get right once and then it doesn't change so why check and, second no&#10; one actually checks the error return because there really isn't any&#10; point to doing the check because this isn't something you actually need&#10; to check the return code for.  So why have one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fe62a1f9270" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="46:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7fe62a1f47a0" loc="91:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7fe62a1f1020" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7fe62a1f2020" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fe62a1f99a0" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7fe629ecd9f0" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fe629ef5930"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fe629ecd770" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7fe629ed7600" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fe629ef5d10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fe629ed7380" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7fe629f339e0" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fe629ef5d10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7fe629ed8520" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fe629ef5d10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fe629ed82a0" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7fe629ed4020" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe629ef5d10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fe629ed3950" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fe629ed3ca0" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe629ef5d10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7fe629ed6a30" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe629ef5d10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fe629ed6450" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fe629ed67a0" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe629ef5d10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7fe629ed04a0" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fe629ef5550"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fe629ed0220" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7fe629ecf850" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fe629ef5550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fe629ecf2a0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7fe629ecf5c0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fe629ef5550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7fe629ed22a0" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fe629ed2020" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7fe629ece020" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fe629ef5930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fe629ecb8c0" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7fe629ecbc10" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fe629ef5930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7fe629ecee40" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fe629ef5930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7fe629eb9df0" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
              <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fe629eb9b70" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
              <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7fe629eb7350" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
              <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fe629eb70d0" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
              <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fe629eb9190" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fe629eb8680" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x7fe629ee3a50" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe629ee37d0" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7fe629ee0b20" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe629ee08a0" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fe629edc020" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe629edd910" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe629eddc40" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fe629edd020" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7fe629ede020" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe629edf9e0" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe629edfd10" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fe629ec7c90" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe629ef5d10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fe629ec7340" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe629ef5d10"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fe629ec76c0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe629ec79f0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fe629ec2620" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe629ec2020" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe629ec2350" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fe629ec16d0" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fe629ec52a0" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe629ec5020" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fe629ec47f0" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
              <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe629ec4210" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fe629ec4560" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
              <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7fe629eb4e00" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fe629eb4820" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7fe629eb4b70" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7fe629eaf490" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fe629eb1e40" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7fe629eaf200" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7fe629eb3940" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7fe62ae36110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fe629eb36c0" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7fe629eb1390" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fe629eb1110" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7fe629eb4020" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fe629ec0d40" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7fe629eb24b0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fe629eb2230" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe629f50350" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe629f50350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fe629f491f0" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fe629f4ea60" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7fe629f4b820" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fe629f4b250" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fe629f4b590" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7fe629f4ca60" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7fe629f47270" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7fe629f49980" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fe629f4c270" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7fe629f4f020" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fe629f50c40" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7fe629f4a820" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fe629f4a250" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fe629f4a590" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7fe629f4fae0" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fe629f4f860" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fe629f4e350" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fe629ebd6e0" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
              <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe629edbd00" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7fe629ebd0d0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe629ebd400" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe629e5c350" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe629e5c350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fe629e5cc70" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe629e58c70" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe629e58c70"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fe629e55020" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe629e55020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fe629e51c50" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe629e55020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fe629e54ba0" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7fe629e512b0" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe629e55020"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe629e55020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fe629e53bd0" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe629e55020"/></type-var>
          </variable>
          <variable name="dt" ref="0x7fe629e51020" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe629e55020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fe629e533b0" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7fe629e50480" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe629e55020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fe629e55b80" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe629e55020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fe629e55900" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe629e55020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fe629e543e0" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fe629e2f270" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7fe629e2fbf0" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fe629e2f970" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7fe629e2e610" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fe629e2e390" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7fe629e2c020" loc="44:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fe629e2ed60" loc="44:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fe629e2c710" loc="46:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fe629e3d810" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7fe629e3b2a0" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7fe629e3b020" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fe629e3c020" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fe629e43a80" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fe629e3c760" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fe629e409b0" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fe629e3d120" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fe629e40270" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fe629e3e0e0" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7fe629e3e9f0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fe629e3e770" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7fe629e3bcb0" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7fe629e3ba30" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7fe629e348f0" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10;&#10; It has a predefined idea of what mode that capture should occur in.&#10; If that doesn't work for you, use setControl.&#10;&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; @param ccis configures which input channel to use.&#10;&#10; Msp430Timer.h has convenience definitions:&#10;&#10;     MSP430TIMER_CM_NONE,            MSP430TIMER_CCI_A&#10;     MSP430TIMER_CM_RISING,          MSP430TIMER_CCI_B&#10;     MSP430TIMER_CM_FALLING,         MSP430TIMER_CCI_GND&#10;     MSP430TIMER_CM_BOTH             MSP430TIMER_CCI_VCC&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fe629e34320" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
          <variable name="ccis" ref="0x7fe629e34660" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7fe629e377d0" loc="41:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe62a28b550"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fe62a28a020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fe629e322b0" loc="76:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7fe629e311f0" loc="78:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7fe629e35a30" loc="56:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short>&#10; Sets the time in compare mode.</short>
          <long>&#10; Sets the time in compare mode.&#10;&#10; setControlAsCompare has a predefined, hardcoded idea of&#10; how the control register should be set for doing a compare.&#10;&#10; Your mileage may vary and this may not work for you.   In&#10; which case you set use setControl.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fe629e329f0" loc="77:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7fe629e36020" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7fe629e367b0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7fe629e352a0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe62a28b550"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fe62a28a020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fe629e35020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe62a28b550"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fe62a28a020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fe629e1ed60" loc="45:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="42:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7fe629e18400" loc="85:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="76:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7fe629e18180" loc="85:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fe629e17020" loc="92:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="87:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fe629e18d10" loc="92:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fe629e199a0" loc="74:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="71:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fe629e190e0" loc="69:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="59:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7fe629e1a740" loc="57:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="47:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fe629e1a4c0" loc="57:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fe629ded1f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe629c9de10" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe629c9de10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fe629c98070" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe629c98070"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fe629c98990" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Return counter value.</short>
          <long>&#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe629c98070"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fe629c97ad0" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fe629c97270" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fe629c96270" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSkew" loc="51:../../../tos/lib/timer/TimeSkew.nc">
      <documentation loc="35:../../../tos/lib/timer/TimeSkew.nc">
        <short>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.</short>
        <long>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.  Under various circumstances&#10; adjustments may be made by this underlying timing that can result&#10; in time skew.&#10;&#10; Typically this can occur when the RTC (Real Time Clock) subsystem&#10; has had its time adjusted for example via a GPS providing synchronized&#10; time.  If this skew is below a reasonable threshold (platform dependent)&#10; TimeSkew.skew(skew_val) will be signalled.  Beyond that threshold&#10; it might be better to reboot and reestablish reasonable time via&#10; those mechanisms.&#10;&#10; @author Eric B.Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function event="" provided="0" name="skew" ref="0x7fe629bd5e80" loc="62:../../../tos/lib/timer/TimeSkew.nc">
        <documentation loc="52:../../../tos/lib/timer/TimeSkew.nc">
          <short>&#10; Signaled when the underlying timing system has detected timing&#10; skew.</short>
          <long>&#10; Signaled when the underlying timing system has detected timing&#10; skew.&#10;&#10; @param skew    estimated skew computed.  in millisecs (units platform&#10;                dependent, typically binary millisecs).&#10;                > 0, time has been moved into the future (we were slow).&#10;                &#60; 0, time has been shifted backwards, (we were fast).&#10;                = 0, skew is beyond platform limits.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSkew"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7fe62ae36930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="skew" ref="0x7fe629bd5c00" loc="62:../../../tos/lib/timer/TimeSkew.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7fe62ae36930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7fe629b10e40" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe629b10bc0" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7fe629b11120" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe629b13e80" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7fe629b147a0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7fe629b14520" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7fe629b16bd0" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7fe629b16950" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7fe629b132a0" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7fe629b13020" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7fe629b10020" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe629b11d40" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7fe629afe750" loc="59:../../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe629ef5d10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7fe629afe140" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe629ef5d10"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fe629afe4c0" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7fe629b0bb50" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe629b0b530" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7fe629b0b8c0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7fe629b09d00" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe629b09a80" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7fe629b0cd10" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7fe629b0c350" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7fe629b0c0d0" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7fe629b1d5f0" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe629b1d370" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7fe629b1b7d0" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe629b1b550" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7fe629b19940" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe629b196c0" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7fe629b02040" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe629b03d90" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7fe629b06030" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe629b1e9e0" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7fe629b1ed70" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7fe629b03020" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe629b04c80" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7fe629b04450" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe629b06de0" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7fe629b041c0" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7fe629b01020" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe629b02d70" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7fe629b1aa60" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe629b1a7e0" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fe629af15e0" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe629af1020" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe629af1350" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fe629aecbb0" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe629aec5b0" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe629aec8e0" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fe629aedd20" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fe629aef900" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe629aef680" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fe629aeee00" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
              <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe629aee820" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fe629aeeb70" loc="100:../../../tos/interfaces/Send.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
              <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fe629af54b0" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.&#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource&#10;&#10; @note This command should never be called between putting in a request&#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event,&#10;       we have opted to keep thing simple and warn you about the potential&#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7fe629af64d0" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7fe629af9ae0" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fe629af6cc0" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fe629af4020" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fe629acb5e0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fe629acb020" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7fe629acb350" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fe629aca8f0" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7fe629ac62c0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fe629ac7340" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7fe629ac7b80" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe629ac6020" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fe629ac8aa0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
              <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fe629ac84c0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fe629ac8810" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
              <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7fe629aca0b0" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7fe629acbdf0" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7fe629ac2690" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7fe629acce50" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fe629ad5aa0" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fe629acd350" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7fe629abd840" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe629abd580" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7fe629abed40" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header" ref="0x7fe629f30de0"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7fe629f2d7d0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe629abea40" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7fe629abbb90" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata" ref="0x7fe629f2c3b0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7fe629f2bc60"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe629abb890" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7fe629ad38b0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7fe629ad19c0" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7fe629ad11f0" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7fe629ad4020" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7fe629ad3070" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7fe629ad2190" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7fe629ad29b0" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7fe629ad4880" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7fe629ab5350" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7fe629ab88f0" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7fe629ab7b00" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7fe629ab7880" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7fe629ab70e0" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7fe629ab95e0" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7fe629ab9360" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7fe629ab8110" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7fe629ab9e10" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7fe629a5a020" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7fe629a5b9f0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7fe629a5bd40" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7fe629a5c960" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7fe629a5c020" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7fe629a5e820" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7fe629a5ec00" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7fe629a632a0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
              <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fe629a63020" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
              <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7fe629a5b270" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7fe629a60d70" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7fe629a60af0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7fe629a623e0" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fe629a62160" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7fe629a59270" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7fe629a5e020" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7fe629a5fc50" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7fe629a5aa20" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7fe629a62b60" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fe629b34ea0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7fe629b31630"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7fe629a60390" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7fe629a64850" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7fe629a639f0" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7fe629a5f530" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10;&#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fe629a58c50" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fe629a58c50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fe629a55540" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10;&#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fe629a532b0" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
              <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
            </type-tag>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fe629a58c50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fe629a55cc0" loc="63:../../../tos/interfaces/Read.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
              <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
            </type-tag>
          </variable>
          <variable name="val" ref="0x7fe629a53020" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fe629a58c50"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fe629a302a0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fe629f31020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe629a30020" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fe629a30d80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fe629f31020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe629a30b00" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7fe629a47640" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fe629b34ea0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7fe629b31630"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7fe629a39af0" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fe629ef5d10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7fe629a38ab0" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7fe629a38350" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fe629ef5930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7fe629a392b0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fe629ef5930"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe629ef5d10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7fe629a3fb40" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fe629ef5930"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fe629a39020" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fe629ef5d10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7fe629a28120" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fe629f31020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fe629a342c0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fe629f31020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fe629a363d0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fe629a36c40" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fe629a34020" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fe629a33a80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fe629f31020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fe629a34b90" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fe629a33490" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fe629a337e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fe629a3c190" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fe629a3d960" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7fe629a3d1f0" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7fe629a408d0" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7fe629915190" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fe629914350" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fe629915b30" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fe6299158b0" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7fe6299198f0" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="34:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fe6298ec800" loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="51:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fe6298e8270" loc="85:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fe6298ec070" loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="46:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7fe6298e99a0" loc="80:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Sets whether the edge should be high to low or low to high.</short>
          <long>&#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;&#10; DEPRECATED.&#10;&#10; The if generates extra code that doesn't need to be there.   Replaced&#10; by edge{Rising,Falling}();&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7fe6298e9720" loc="80:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeFalling" ref="0x7fe6298e9020" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fe6298ef870" loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeRising" ref="0x7fe6298eb810" loc="66:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="63:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Sets rising or falling edge for the interrupt generation&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7fe6298eb030" loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="56:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current input value of a port.</short>
          <long> &#10; Gets the current input value of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7fe629796810" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7fe6297950e0" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7fe629795920" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7fe62976e420" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe62976fe10" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fe62976e190" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7fe629769700" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
              <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe62976ad90" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fe629769110" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fe629769460" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
              <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fe62976a020" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fe629f31020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe62976b970" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fe62976bcc0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7fe62976f020" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fe629f31020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe6297709d0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fe629770d20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fe62976db90" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
              <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe62976d250" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fe62976d5a0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fe62976d8f0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
              <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fe62974fa40" loc="76:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fe62974f0d0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fe62974f460" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe62974f7a0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fe62974b020" loc="88:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
              <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fe62974d2a0" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fe62974d630" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe62974d970" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fe62974dce0" loc="89:../../../tos/interfaces/SpiPacket.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
              <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7fe6297518f0" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7fe629751670" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7fe629671b70" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fe62966d4e0" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <short>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; </short>
        <long>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7fe62966caa0" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fe6296a22b0"/></typename>
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fe6296a3e00"/></type-tag>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7fe62966b6f0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe62966b470" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7fe62966ab30" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe62966a8b0" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7fe62966a020" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fe6296695f0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe629669370" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7fe62965e020" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7fe62965f750" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART. &#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information.&#10;&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7fe629657740" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe6296574c0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7fe62965acd0" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART.&#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information. I.e. calling &#60;code>tx&#60;/done> will transmit a byte of&#10; data in the mode (SPI or UART) the USART has been set to before.&#10;&#10; @author Vlado Handziski (handzisk@tkn.tu-berlin.de)&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7fe6296327c0" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7fe62963d2d0" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7fe62964a020" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe6296be020"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fe6296be860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fe62964dcf0" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe6296be020"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fe6296be860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7fe6296403b0" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7fe629648530" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe6296ba020"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fe6296ba860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fe6296482b0" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe6296ba020"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fe6296ba860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7fe6296379e0" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7fe629633020" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7fe629649a90" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe6296bdec0"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7fe6296bc680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7fe629648d20" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe6296ba020"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7fe6296ba860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7fe629644b90" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7fe629644910" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7fe6296441f0" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7fe6296372b0" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7fe6296492a0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe6296bdec0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fe6296bc680"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fe629649020" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe6296bdec0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fe6296bc680"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7fe629645020" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7fe629636190" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7fe629645a00" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7fe629645780" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7fe629641480" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7fe629641c00" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7fe629638420" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7fe62963b190" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7fe62963f350" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7fe629638b60" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7fe62963dab0" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7fe6296368b0" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fe629643390" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fe6296c5d80"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7fe6296c14d0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7fe629635070" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7fe629632020" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7fe629646700" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7fe629646480" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7fe6296312a0" loc="220:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe629631020" loc="220:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7fe62964a800" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe6296be020"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7fe6296be860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7fe629640b20" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7fe62963c270" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7fe62963aba0" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fe62968eb50"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fe62968e730"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fe62963a920" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fe62968eb50"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fe62968e730"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7fe62963bca0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fe6296a22b0"/></typename>
                <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fe6296a3e00"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fe62963ba20" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fe6296a22b0"/></typename>
                <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fe6296a3e00"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7fe629631ac0" loc="227:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="222:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return byte received&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7fe629635860" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7fe629643ba0" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7fe629633780" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7fe62963c9e0" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7fe62963fb30" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fe6295ca020" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <function command="" provided="0" name="disableOwnAddress" ref="0x7fe6295a39d0" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7fe6295b5020" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7fe6295aa620" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fe6295aa3a0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7fe6295be5b0" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7fe6295a7c50" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7fe6295af5e0" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7fe6295b6070" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7fe6295b4020" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7fe6295b8020" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7fe6295b9d30" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7fe6295ba4b0" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7fe6295b1020" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7fe6295a8550" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7fe6295a3270" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7fe6295abc30" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7fe62959e350" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7fe62959b9d0" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7fe6295bd420" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7fe6295b3740" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7fe6295b01f0" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7fe6295b88e0" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7fe6295bf350" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7fe6295ab460" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fe6295ab1e0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7fe6295c3c00" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7fe6295a74d0" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7fe6295a2190" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7fe62959db00" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7fe62959b270" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7fe6295a6b90" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7fe6295a28c0" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7fe6295aadb0" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7fe6295a0390" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7fe6295bdb40" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7fe6295ad7e0" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7fe6295a17b0" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7fe6295a5ac0" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7fe6295b0de0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7fe6295b0b60" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7fe62959c2d0" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7fe6295aca60" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7fe6295a6420" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7fe6295bfe10" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7fe62967a4a0"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fe62967a080"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fe6295bfb90" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7fe62967a4a0"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fe62967a080"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7fe6295b3020" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7fe6295bbcb0" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fe6295bba30" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7fe6295b1980" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe6295b1700" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7fe6295a0b60" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7fe6295b9620" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7fe6295bb350" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7fe6295ac2a0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7fe6295ac020" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fe62ae35520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7fe6295bece0" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7fe6295a1020" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7fe6295a5350" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7fe6295a8cc0" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7fe6295ad020" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7fe6295afd30" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7fe6295b4740" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7fe6295b67b0" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7fe62959ca40" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7fe6295bae30" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fe6295babb0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7fe62959eb10" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7fe6295b5750" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7fe62959d350" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7fe6294f8020" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7fe6294f8880" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="38:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fe6294c1dc0" loc="54:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7fe6294be020" loc="71:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fe6294c1530" loc="44:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="39:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fe6294bf6d0" loc="63:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fe6294be950" loc="79:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwnerInfo" loc="2:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
      <function command="" provided="0" name="inUse" ref="0x7fe6294bdb20" loc="9:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
        <documentation loc="3:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
          <short>&#10; Check whether a DefaultOwner has an active client.</short>
          <long>&#10; Check whether a DefaultOwner has an active client.&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7fe6294b24c0" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fe6294bb490"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fe6294b2240" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fe6294bb490"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7fe6294b4420" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7fe6294b3020" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fe6294bb490"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fe6294b4ca0" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fe6294bb490"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fe6294b3930" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7fe6294bb490"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fe6292a85e0" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fe6292a8360" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fe629295b00" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7fe6292951c0" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7fe629295530" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe629295860" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fe629293880" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fe6292932c0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fe6292935f0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe62927b530" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe62927b530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fe62927b770" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe62927b770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7fe62927a2e0" loc="66:../../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe62927b770"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fe62927a060" loc="66:../../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe62927b770"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7fe629217580" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7fe629205af0" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe629205af0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fe629205d30" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe629205d30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7fe629200bc0" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe629205d30"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe629200940" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7fe6291fed80" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe6291feb00" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7fe629202920" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe6292026a0" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fe6292010c0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe629205d30"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe6291fda80" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7fe6291fdde0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe629205d30"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fe6291de9e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7fe6291de020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7fe6291de750" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7fe6291e07f0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7fe6291e0020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fe6291e3d30" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fe62ae35920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7fe6291f45f0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe62ae35160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe6291f4370" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7fe6291f55f0" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe6291f5370" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fe6291f15f0" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe6291f1370" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fe6291f35f0" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fe6291f3370" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fe629ee58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7fe629ee3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7fe628fce5e0" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fe628fce5e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7fe628fcb2a0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fe62a788020"/>
            <typename><typedef-ref name="error_t" ref="0x7fe62a7801b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fe628fce5e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7fe628fcb020" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fe628fce5e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBusy" loc="2:../../../tos/interfaces/SendBusy.nc">
      <function command="" provided="0" name="busy" ref="0x7fe628de41f0" loc="9:../../../tos/interfaces/SendBusy.nc">
        <documentation loc="3:../../../tos/interfaces/SendBusy.nc">
          <short>&#10; Check whether send queue entry is in use&#10;&#10; </short>
          <long>&#10; Check whether send queue entry is in use&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBusy"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe62a78e090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
