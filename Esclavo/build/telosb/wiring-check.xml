<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="26:SlaveAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fac2bd64cf0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fac2c0eec00"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fac2c0eec00"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fac2c04f110"/></to>
    </wire>
    <wire loc="27:SlaveAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fac2bd61360"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fac2c0370d0"/></to>
    </wire>
    <wire loc="51:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fac2c0370d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fac2c035c40"/></to>
    </wire>
    <wire loc="28:SlaveAppC.nc">
      <from><interface-ref name="TimerMiSlot" scoped="" ref="0x7fac2bd54820"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fac2bc98980"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fac2bc98980"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fac2bc8e050"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:SlaveAppC.nc">
      <from><interface-ref name="TimerLeds" scoped="" ref="0x7fac2bd51cd0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fac2b968260"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fac2b968260"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fac2bc8e050"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:SlaveAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fac2bcf2910"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fac2abb8c30"/></to>
    </wire>
    <wire loc="65:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fac2abb8c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fac2a26eaa0"/></to>
    </wire>
    <wire loc="32:SlaveAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fac2bce28d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fac2abb68b0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fac2abb68b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fac2a26d720"/></to>
    </wire>
    <wire loc="33:SlaveAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7fac2bccfa50"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fac2ac5d360"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fac2ac5d360"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fac2b955cc0"/></to>
    </wire>
    <wire loc="34:SlaveAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fac2bcd78f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fac2abb8020"/></to>
    </wire>
    <wire loc="64:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fac2abb8020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fac2a270e60"/></to>
    </wire>
    <wire loc="35:SlaveAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fac2bcd2180"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fac2abb1910"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fac2abb1910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fac2ac5b5c0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fac2bd0dd50"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:SlaveAppC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fac2bcc8c20"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fac2b94f610"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fac2b94f610"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fac2b916020"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fac2c0ec160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac2ad2fdd0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fac2c0ec160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac2adb8b70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fac2c0ec160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac2add8750"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fac2c0ec160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac2adf5080"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fac2c0ec160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac2af48620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fac2c0ec160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac2b03fc60"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fac2c0ec160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac2b7d47e0"/></to>
    </wire>
    <wire loc="73:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fac2c0ec160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac2a3f8020"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fac2c0ec160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac2b510020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fac2c0ec160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac2b87f510"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fac2c0ec160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac2bc89e50"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fac2c04f780"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fac2c5961e0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fac2c5961e0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fac2c13b140"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fac2c04e1d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac2c0e90c0"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fac2c0e90c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac2c0dc1a0"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fac2c04e8d0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fac2c0ec160"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7fac2c0de130"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7fac2c0dc810"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fac2c0da020"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7fac2c0c3900"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fac2c0c3900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac2c0aa850"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fac2c0da700"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac2c0dd640"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7fac2c0dade0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac2c00c600"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fac2c0aa850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac2c0901c0"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fac2c0a1de0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fac2c090830"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7fac2c211c80"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7fac2c08faf0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7fac2c589940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac2c13a040"/></to>
    </wire>
    <wire loc="56:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7fac2c135490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7fac2c36e9a0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fac2c00c600"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac2c035640"/></to>
    </wire>
    <wire loc="54:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fac2c02c1d0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7fac2c036d80"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fac2c036d80"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fac2bd8f480"/></to>
    </wire>
    <wire loc="55:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fac2c0324d0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7fac2c00e020"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fac2c00e020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fac2bd79b20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fac2c0317f0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7fac2c00d380"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fac2c00d380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fac2bd721b0"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fac2bd7d610"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7fac2bfa08a0"/></to>
    </wire>
    <wire loc="737:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7fac2bfa08a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be49b90"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fac2bd77de0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7fac2bf9d020"/></to>
    </wire>
    <wire loc="738:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7fac2bf9d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be43060"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fac2bd71480"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7fac2bf9b8a0"/></to>
    </wire>
    <wire loc="739:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7fac2bf9b8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be3e540"/></to>
    </wire>
    <wire loc="693:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fac2bff1580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2bef8060"/></to>
    </wire>
    <wire loc="706:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fac2bfd8710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2bec1740"/></to>
    </wire>
    <wire loc="844:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7fac2bf4ed30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2beb1540"/></to>
    </wire>
    <wire loc="864:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7fac2bf53d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be12060"/></to>
    </wire>
    <wire loc="845:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7fac2bf7cd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2beacb90"/></to>
    </wire>
    <wire loc="711:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7fac2bfd3710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2beb6060"/></to>
    </wire>
    <wire loc="724:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7fac2bfb98a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be80740"/></to>
    </wire>
    <wire loc="748:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7fac2bf8b8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be1d540"/></to>
    </wire>
    <wire loc="848:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7fac2bf77d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2bea0540"/></to>
    </wire>
    <wire loc="858:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7fac2bf63d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be33060"/></to>
    </wire>
    <wire loc="870:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7fac2bf44d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be0d540"/></to>
    </wire>
    <wire loc="696:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fac2bfead50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2bee7060"/></to>
    </wire>
    <wire loc="849:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7fac2bf74580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be9bb90"/></to>
    </wire>
    <wire loc="701:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fac2bfe5d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2beddb90"/></to>
    </wire>
    <wire loc="714:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7fac2bfcbe50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2bea6060"/></to>
    </wire>
    <wire loc="727:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7fac2bfb1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be6f540"/></to>
    </wire>
    <wire loc="740:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7fac2bf98020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be39b90"/></to>
    </wire>
    <wire loc="751:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7fac2bf83020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be0d540"/></to>
    </wire>
    <wire loc="691:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fac2bff6580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2bf03740"/></to>
    </wire>
    <wire loc="704:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fac2bfdd580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2beccd10"/></to>
    </wire>
    <wire loc="717:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7fac2bfc3710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be95060"/></to>
    </wire>
    <wire loc="843:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7fac2bf7e580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2beb1540"/></to>
    </wire>
    <wire loc="861:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7fac2bf5b570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be22060"/></to>
    </wire>
    <wire loc="868:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7fac2bf46570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be0d540"/></to>
    </wire>
    <wire loc="854:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7fac2bf6a580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be4e540"/></to>
    </wire>
    <wire loc="722:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7fac2bfbe710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be8bdc0"/></to>
    </wire>
    <wire loc="735:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7fac2bfa58a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be54060"/></to>
    </wire>
    <wire loc="746:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7fac2bf908a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be29b90"/></to>
    </wire>
    <wire loc="862:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7fac2bf58d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be1d540"/></to>
    </wire>
    <wire loc="851:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7fac2bf72d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be5f540"/></to>
    </wire>
    <wire loc="694:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fac2bfefd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2bef2540"/></to>
    </wire>
    <wire loc="707:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fac2bfd6e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2bebcb90"/></to>
    </wire>
    <wire loc="744:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7fac2bf968a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be33060"/></to>
    </wire>
    <wire loc="712:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7fac2bfd1e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2beb1540"/></to>
    </wire>
    <wire loc="725:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7fac2bfb6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be7bb90"/></to>
    </wire>
    <wire loc="749:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7fac2bf88020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be18b90"/></to>
    </wire>
    <wire loc="853:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7fac2bf6dd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be54060"/></to>
    </wire>
    <wire loc="689:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fac2bff9530"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2bf3cd10"/></to>
    </wire>
    <wire loc="702:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fac2bfe2580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2bed7060"/></to>
    </wire>
    <wire loc="715:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7fac2bfc8710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2bea0540"/></to>
    </wire>
    <wire loc="728:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7fac2bfaf8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be6ab90"/></to>
    </wire>
    <wire loc="855:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7fac2bf68d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be95060"/></to>
    </wire>
    <wire loc="859:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7fac2bf60570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be2e540"/></to>
    </wire>
    <wire loc="865:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7fac2bf50570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be0d540"/></to>
    </wire>
    <wire loc="733:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7fac2bfaa8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be5f540"/></to>
    </wire>
    <wire loc="856:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7fac2bf65580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be90540"/></to>
    </wire>
    <wire loc="692:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fac2bff4d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2befeb90"/></to>
    </wire>
    <wire loc="705:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fac2bfdbe50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2bec6260"/></to>
    </wire>
    <wire loc="718:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7fac2bfc1e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be90540"/></to>
    </wire>
    <wire loc="852:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7fac2bf6f580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be5ab90"/></to>
    </wire>
    <wire loc="863:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7fac2bf55570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be18b90"/></to>
    </wire>
    <wire loc="723:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7fac2bfbb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be85260"/></to>
    </wire>
    <wire loc="736:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7fac2bfa2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be4e540"/></to>
    </wire>
    <wire loc="747:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7fac2bf8d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be22060"/></to>
    </wire>
    <wire loc="695:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fac2bfec580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2beedb90"/></to>
    </wire>
    <wire loc="745:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7fac2bf92020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be2e540"/></to>
    </wire>
    <wire loc="700:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fac2bfe7580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2bee2540"/></to>
    </wire>
    <wire loc="713:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7fac2bfcd710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2beacb90"/></to>
    </wire>
    <wire loc="726:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7fac2bfb48a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be74060"/></to>
    </wire>
    <wire loc="750:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7fac2bf868a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be12060"/></to>
    </wire>
    <wire loc="690:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fac2c007d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2bf08260"/></to>
    </wire>
    <wire loc="703:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fac2bfe0d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2bed2540"/></to>
    </wire>
    <wire loc="716:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7fac2bfc6e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be9bb90"/></to>
    </wire>
    <wire loc="729:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7fac2bfac020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be64060"/></to>
    </wire>
    <wire loc="860:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7fac2bf5ed40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be29b90"/></to>
    </wire>
    <wire loc="847:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7fac2bf4b560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2bea6060"/></to>
    </wire>
    <wire loc="846:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7fac2bf79580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2bea6060"/></to>
    </wire>
    <wire loc="734:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7fac2bfa7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be5ab90"/></to>
    </wire>
    <wire loc="867:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7fac2bf49d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be12060"/></to>
    </wire>
    <wire loc="871:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7fac2bf41580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2be39b90"/></to>
    </wire>
    <wire loc="842:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7fac2bf818f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fac2beb6060"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fac2bc8e050"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fac2bc85c30"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fac2bc85c30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fac2b9908e0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fac2bc89e50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac2ba3e020"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fac2b9908e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fac2a5e2db0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fac2bc7b500"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fac2b981020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fac2ba3e020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac2a7d8b10"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fac2b989020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fac2ba112f0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fac2ba0c850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fac2ba3e870"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fac2ba3e870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fac2a7d1890"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fac2b977300"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fac2bab78c0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fac2bab78c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fac2ba9acf0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fac2a7d8b10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac2a7b9660"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fac2a7ca0a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fac2a7d74f0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fac2a7d74f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fac2a7b8020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fac2a7cdc00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fac2bab78c0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fac2a7b4190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fac2a7c0340"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fac2a7c0340"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fac2bc4b990"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fac2a7b3770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fac2a7bfa80"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fac2a7bfa80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fac2bc48720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fac2a7b2a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fac2a7beda0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fac2a7beda0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fac2bc461d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fac2bc4b990"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fac2bc329e0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7fac2bc329e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fac2bbdc260"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fac2bc48720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7fac2bc30280"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7fac2bc30280"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fac2bb7a6d0"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fac2bc461d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7fac2bc2f700"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7fac2bc2f700"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fac2bb79ac0"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fac2bc4b990"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fac2bc329e0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fac2bc48720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7fac2bc2aa50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7fac2bc2aa50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fac2bb6a220"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fac2bc461d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7fac2bc28020"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7fac2bc28020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fac2bb69610"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fac2bc4b990"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fac2bc329e0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fac2bc48720"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7fac2bc27d40"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7fac2bc27d40"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fac2bb626d0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fac2bc461d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7fac2bc25160"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7fac2bc25160"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fac2bb61ac0"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fac2bc4b990"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fac2bc329e0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fac2bc48720"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7fac2bc23020"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7fac2bc23020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fac2bb5bb30"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fac2bc461d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7fac2bc22570"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7fac2bc22570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fac2bb59020"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fac2bc4b990"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fac2bc329e0"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fac2bc48720"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7fac2bc205a0"/></to>
    </wire>
    <wire loc="175:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7fac2bc205a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fac2bb52220"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fac2bc461d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7fac2bc1fa20"/></to>
    </wire>
    <wire loc="176:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7fac2bc1fa20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fac2bb51610"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fac2bc4b990"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fac2bc329e0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fac2bc48720"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7fac2bc1d8c0"/></to>
    </wire>
    <wire loc="182:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7fac2bc1d8c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fac2bb4b6d0"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fac2bc461d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7fac2bc1bd40"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7fac2bc1bd40"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fac2bb4aac0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7fac2bc35730"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fac2bb81220"/></to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7fac2bc37700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fac2bb88cb0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7fac2bc24020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fac2bb607a0"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7fac2bc3d890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fac2bb88020"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7fac2bc1aae0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fac2bb497a0"/></to>
    </wire>
    <wire loc="112:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7fac2bc410c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fac2bbd66d0"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7fac2bc2ba20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fac2bb70cb0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7fac2bc2cbb0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fac2bb70020"/></to>
    </wire>
    <wire loc="146:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7fac2bc2d730"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fac2bb72b30"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7fac2bc33a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fac2bb7f2f0"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7fac2bc21570"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fac2bb59cb0"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7fac2bc34bb0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fac2bb80610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7fac2bc45830"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fac2bbe43e0"/></to>
    </wire>
    <wire loc="119:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7fac2bc3e410"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fac2bb8ab30"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7fac2bc38410"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fac2bb8f7a0"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7fac2bc28da0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fac2bb682f0"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7fac2bc40570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fac2bb90ac0"/></to>
    </wire>
    <wire loc="177:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7fac2bc1e890"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fac2bb502f0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7fac2bc2e700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fac2bb777a0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fac2bbe12f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fac2bbe2bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fac2bbe1940"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7fac2bb413f0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fac2bbe0020"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7fac2bb41b80"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fac2bb8e610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fac2bbe43e0"/></to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fac2bb8dc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fac2bbe2bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fac2bb86b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fac2bbe43e0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fac2bb842f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fac2bbe2bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fac2bb7e160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fac2bbe43e0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fac2bb7d7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fac2bbe2bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fac2bbda100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fac2bbdba60"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fac2bbda750"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7fac2bb40430"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fac2bbdada0"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7fac2bb40bc0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fac2bb76610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fac2bbdc260"/></to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fac2bb75c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fac2bbdba60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fac2bb6fb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fac2bbdc260"/></to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fac2bb6d2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fac2bbdba60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fac2bb66160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fac2bbdc260"/></to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fac2bb657a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fac2bbdba60"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fac2bb5f610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fac2bbdc260"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fac2bb5ec50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fac2bbdba60"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fac2bb57b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fac2bbdc260"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fac2bb552f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fac2bbdba60"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fac2bb4f160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fac2bbdc260"/></to>
    </wire>
    <wire loc="179:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fac2bb4e7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fac2bbdba60"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fac2bb48610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fac2bbdc260"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fac2bb46c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fac2bbdba60"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fac2ba7c0f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fac2bab58e0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fac2bab58e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fac2baaeb80"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fac2baa0c50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fac2bc329e0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7fac2ba089c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac2c589940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fac2a5db3d0"/></from>
      <to><interface-ref name="TimerFrom" scoped="" ref="0x7fac2b989020"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimeSkew" scoped="" ref="0x7fac2a5d5a40"/></from>
      <to><interface-ref name="TimeSkew" scoped="" ref="0x7fac2b984450"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7fac2a5d65d0"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7fac2c0de130"/></to>
    </wire>
    <wire loc="153:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7fac2a5d4100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac2c589940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fac2b955cc0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fac2b928020"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fac2b928020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fac2ad22b80"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fac2b9472c0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fac2aceb8b0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7fac2b93b1d0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7fac2acecce0"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fac2b9508f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fac2aceda80"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fac2b954d20"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fac2acf1020"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fac2b952c00"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fac2acf0df0"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fac2b916020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fac2aec8670"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fac2b936130"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fac2b914080"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fac2b914080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fac2ad22080"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fac2b952020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fac2acf0210"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fac2b94d080"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fac2b915020"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fac2b915020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fac2aec56e0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fac2b92d430"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fac2b914b70"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fac2b914b70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fac2ad0e020"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fac2b9512d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fac2acee470"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fac2b943170"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fac2b9159d0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fac2b9159d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fac2aec4a70"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7fac2ace30f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac2b927530"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fac2acea860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fac2b920a70"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7fac2b920a70"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fac2ad8bc90"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fac2ace9690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fac2b919840"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7fac2b919840"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fac2ad8aa50"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fac2ace54d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fac2b0f6b20"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fac2ace9ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fac2aec8670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fac2aec8670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fac2aebad20"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac2ace8b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac2aec40c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac2aec40c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac2aeb6640"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fac2ace7610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fac2b888dc0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fac2b888dc0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fac2b87e970"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7fac2ace41f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fac2b90e330"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fac2b90e330"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fac2b9087e0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fac2ace3d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fac2c0370d0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fac2ad22b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7fac2ad1fd90"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fac2aec4a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fac2aeb5020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fac2ad0e020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fac2ad0c410"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7fac2ad8bc90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fac2ad80a20"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fac2ad22080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fac2ad1b2d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7fac2b921690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fac2ad8b5e0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fac2ad8b5e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7fac2ad80370"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fac2aec56e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fac2aeb7c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac2b927530"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac2ad8dbe0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac2ad8dbe0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac2ad837b0"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7fac2b918940"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fac2ad8c8e0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fac2ad8c8e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7fac2ad824d0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fac2b921d50"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fac2ad89170"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fac2ad89170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fac2ad7e020"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7fac2ad8aa50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fac2ad7f840"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fac2ad1fd90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fac2b910390"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fac2b910390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fac2b90de70"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fac2ad886b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fac2addd220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fac2addd220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fac2addba10"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fac2addc020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fac2ad11350"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fac2ad11350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fac2ad0ed70"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fac2ad0ed70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fac2ad26ce0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fac2ad26ce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fac2ad20860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fac2ad20860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fac2b910e80"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fac2b910e80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fac2b909990"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fac2ad88020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fac2ad23980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fac2ad23980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fac2ad1f690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fac2ad1f690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fac2adbfaa0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fac2adbfaa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fac2adbbe30"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fac2adbc950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fac2b90fb40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fac2b90fb40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fac2af4d7c0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fac2af4d7c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fac2af45020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac2b907640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac2b898950"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac2b898950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac2b87fb80"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7fac2b8ffb50"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7fac2b893bf0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7fac2b893bf0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7fac2b87c740"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fac2b8fb760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fac2b04d6c0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fac2b8fb760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fac2af505c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fac2af505c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fac2af48ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fac2b04d6c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fac2b03d320"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7fac2b8f42a0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7fac2b04a020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7fac2b04a020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fac2b03dbc0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7fac2b8fd060"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fac2b04acb0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fac2b04acb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fac2b03c970"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fac2b8f2330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fac2aec8670"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac2b8ea920"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac2aec40c0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fac2b8f1420"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fac2adfba20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fac2adfba20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fac2adf4a20"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7fac2b8ed110"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fac2adfdaa0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fac2adfdaa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fac2b5141d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fac2b8f1bf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fac2c0370d0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7fac2b8e0b70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac2c589940"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7fac2b8e1ba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac2c589940"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7fac2b8e2c20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac2c589940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7fac2b8850c0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7fac2b87bb40"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7fac2b877a10"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fac2b7d0220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7fac2b7d0220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fac2b7caaf0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fac2b873c50"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fac2b78ce60"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fac2b78ce60"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fac2b77d630"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fac2b872e70"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7fac2b7876a0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fac2b7876a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fac2b76c630"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7fac2b8700f0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7fac2b785ce0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7fac2b785ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fac2b761020"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7fac2b86bc00"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7fac2b747400"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7fac2b747400"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fac2b5e6680"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fac2b858520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac2b180e20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac2b180e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac2b5944d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fac2b857570"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7fac2b17d7b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fac2b17d7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fac2b857c80"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7fac2b17bae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fac2b17bae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fac2b859d70"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7fac2b17ead0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fac2b17ead0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fac2b859450"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7fac2b17a160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fac2b17a160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fac2b85e420"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7fac2b172870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fac2b172870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fac2b85ecd0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7fac2b170880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fac2b170880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fac2b8655d0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7fac2b16e0a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fac2b16e0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fac2b85d020"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7fac2b177e50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fac2b177e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fac2b85d8f0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7fac2b175670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fac2b175670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fac2b861e20"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7fac2b162500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fac2b162500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fac2b8614a0"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7fac2b163ce0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fac2b163ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fac2b85c1e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7fac2b173e50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fac2b173e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fac2b85ca80"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7fac2b175e50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fac2b175e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fac2b85b3c0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7fac2b174e50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fac2b174e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7fac2b855180"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac2b150a80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac2b150a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac2b5944d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7fac2b8563d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac2b1239e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac2b1239e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac2b5944d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fac2b866390"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fac2b0f6b20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fac2b877020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fac2b0f5d20"/></to>
    </wire>
    <wire loc="23:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fac2b0f5d20"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fac2b0da310"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7fac2b84aca0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac2c589940"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7fac2b84cdb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac2c589940"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fac2b7d47e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac2b7ca260"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fac2b7ca260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac2a57e720"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7fac2b7caaf0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fac2a57d020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fac2a57e720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac2a577760"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fac2a57d020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fac2a5701d0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fac2a577760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac2a55a340"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fac2a56ab90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fac2a576020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fac2a576020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fac2a55abd0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fac2a56c690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fac2b7b4080"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fac2b7b4080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fac2b7afcd0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fac2a557dd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fac2a561e70"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fac2a561e70"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fac2bc4b990"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fac2a554440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fac2a55e5d0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fac2a55e5d0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fac2bc48720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fac2a553760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fac2a55d8f0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fac2a55d8f0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fac2bc461d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fac2b7ac0f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fac2bab58e0"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7fac2b78a090"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fac2b778b00"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7fac2b789390"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fac2b772020"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7fac2b7d2b10"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fac2b782020"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7fac2b7869b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fac2b767af0"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fac2b7812f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fac2bff1580"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fac2b77c7a0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7fac2bfb98a0"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fac2b777c60"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7fac2bff4d50"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fac2b7712f0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fac2bff9530"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fac2b76b7a0"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7fac2bfaf8a0"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fac2b766c60"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7fac2bfbb020"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fac2b7602f0"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7fac2bfb1020"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7fac2b743700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fac2b740c20"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fac2b746060"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fac2b5d7b70"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fac2b729760"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7fac2bc2d730"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7fac2b728a80"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7fac2bc2ba20"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7fac2b726930"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7fac2bfbb020"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fac2b5e52f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fac2b7143f0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fac2b7143f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fac2b6fd3f0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fac2b5d67a0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fac2b7175e0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fac2b7175e0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fac2b7057a0"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fac2b7083f0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7fac2b6f13f0"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fac2b711d50"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7fac2b6fad50"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fac2b70e3f0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7fac2b6f73f0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fac2b71cbc0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7fac2b700d50"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fac2b70bd50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7fac2b6f4d50"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fac2b713710"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7fac2b6fc710"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fac2b707710"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7fac2b6f0710"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fac2b70d710"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7fac2b6f6710"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fac2b715020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7fac2b6fe020"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fac2b709100"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7fac2b6f2100"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fac2b712a30"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7fac2b6fba30"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fac2b70f020"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7fac2b6f8020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fac2b71d8a0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7fac2b701a30"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fac2b70ca30"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7fac2b6f5a30"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fac2b17d160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fac2b171880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fac2b1690a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fac2b1700a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fac2b15d500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fac2b15f500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fac2b17b490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fac2b165880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fac2b160500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fac2b16b880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fac2b16c0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac2b17fa90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac2b592350"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac2b592350"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac2b58a660"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fac2b17ae00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fac2b179490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fac2b164c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fac2b179be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fac2b160ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fac2b1650a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fac2b174670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fac2b1660a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fac2b169880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fac2b166880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fac2b15ece0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fac2b15fce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fac2b16c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fac2b1670a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fac2b162ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fac2b16e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fac2b15dce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fac2b5912c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fac2b17e480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fac2b177670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fac2b173670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fac2b16a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fac2b16a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fac2b1710a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fac2b1782f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fac2b177020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fac2b17a7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fac2b163500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fac2b15e500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fac2b16b0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fac2b167880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fac2b17de00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fac2b16d0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fac2b178940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fac2b16d880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fac2b1640a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fac2b15c9b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fac2b5912c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7fac2b5912c0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fac2b588890"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b587ba0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b586a30"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac2b5944d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac2b589510"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b5848b0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7fac2b578b40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fac2b519770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fac2b519770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fac2b5141d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fac2b583060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac2b4f7c40"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac2b4f7c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac2a47f940"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fac2b580c70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fac2b4f68f0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fac2b4f68f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fac2a47ed70"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fac2b5782e0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fac2b1a8020"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fac2b1a8020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fac2a47b020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fac2b57fa70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fac2c0370d0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7fac2b574bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac2c589940"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fac2b5141d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fac2b510b70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fac2a47b020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fac2b48f850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fac2a47ed70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fac2b490110"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac2a47f940"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac2b496d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fac2a47e5d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fac2a473020"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fac2a473020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fac2b3112c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fac2b490110"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fac2b414a10"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fac2a47c410"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fac2b490790"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fac2b490790"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fac2b413060"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fac2b48aa40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fac2a47b7c0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac2a463760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac2b48d8e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fac2b48b690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac2a474340"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac2a474340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac2b312020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fac2b486b40"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fac2a46ec10"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fac2a46ec10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fac2b3144d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac2b48d8e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac2b414250"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fac2b48f850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fac2b413c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac2b496d80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac2b415470"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fac2b4113e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fac2b48aa40"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fac2b4125b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7fac2b48b690"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fac2b40b480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7fac2b486b40"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7fac2b411a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fac2b401020"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fac2b401020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fac2b3f8700"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fac2b40bc20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fac2c0370d0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7fac2b4092f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac2c589940"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fac2b3f92c0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fac2b3f3c20"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fac2b3fdd10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fac2b3f32d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fac2b3c4bb0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7fac2bf7e580"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7fac2b3c13e0"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7fac2bf7cd50"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fac2b3bfbb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7fac2bf79580"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7fac2b3bc3e0"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7fac2bf74580"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7fac2b3babb0"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7fac2bf77d50"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7fac2b3cad10"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7fac2b267d40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fac2a46b440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fac2b3133f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fac2a46ba50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fac2b26f020"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fac2b26f020"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7fac2b267d40"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fac2a472020"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fac2b401020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac2a4737c0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac2b311ad0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac2b311ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac2b27ae80"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac2b3108a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac2a463760"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fac2b3112c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fac2b27ba60"/></to>
    </wire>
    <wire loc="81:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fac2b27ba60"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fac2a3f56c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7fac2b3144d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fac2b30dd60"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac2b312020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac2b27cca0"/></to>
    </wire>
    <wire loc="80:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac2b27cca0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac2a3f6850"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7fac2b3133f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fac2b30c710"/></to>
    </wire>
    <wire loc="83:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac2b27ae80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac2a3f3a70"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac2b279790"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac2b3108a0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac2b2fbbf0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac2b27ae80"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7fac2b30cd80"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fac2b3fdd10"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fac2b2fb5e0"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fac2b3f92c0"/></to>
    </wire>
    <wire loc="82:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac2b27a270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac2a3f5e40"/></to>
    </wire>
    <wire loc="84:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac2a3f29d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac2b279790"/></to>
    </wire>
    <wire loc="85:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7fac2a3f22d0"/></from>
      <to><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7fac2b278020"/></to>
    </wire>
    <wire loc="87:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fac2a3f12b0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fac2a3f8630"/></to>
    </wire>
    <wire loc="155:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fac2a3ef480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac2c589940"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7fac2b25ebb0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fac2b3f8700"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fac2b259700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7fac2bf7e580"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fac2b257e40"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7fac2bf79580"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fac2b143c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fac2b14dda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fac2b146b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fac2b140670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fac2b139e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fac2b140e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fac2b12c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fac2b12f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fac2b14b120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fac2b134670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fac2b1302f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fac2b145c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fac2b144c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fac2b13a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fac2b13de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fac2b13f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac2b14e760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac2b592350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fac2b14aaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fac2b148120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fac2b133a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fac2b148870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fac2b130ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fac2b14bdc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fac2b136e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fac2b144480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fac2b145480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fac2b14d750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fac2b137e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fac2b138670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fac2b136670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fac2b12dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fac2b12fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fac2b13b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fac2b138e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fac2b131ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fac2b13e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fac2b12cad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fac2b5912c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fac2b14d100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fac2b146370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fac2b143480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fac2b13ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fac2b13fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fac2b139670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fac2b141670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fac2b14c450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fac2b141e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fac2b147020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fac2b147cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fac2b1312f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fac2b132ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fac2b14a450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fac2b1322f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fac2b12d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fac2b13be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fac2b137670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fac2b14caa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fac2b14b770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fac2b13ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fac2b147670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fac2b13d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fac2b134e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fac2b12b7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fac2b5912c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fac2b116c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fac2b121da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fac2b11ab50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fac2b114670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fac2b10de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fac2b114e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fac2b1002f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fac2b1022f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fac2b11e120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fac2b108670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fac2b1032f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fac2b118c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fac2b117c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fac2b10e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fac2b110e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fac2b112670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac2b122760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac2b592350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fac2b11daa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fac2b11c120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fac2b107a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fac2b11c870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fac2b103ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fac2b11edc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fac2b109e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fac2b117480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fac2b118480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fac2b121750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fac2b10ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fac2b10b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fac2b109670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fac2b101ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fac2b102ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fac2b10f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fac2b10be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fac2b104ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fac2b111670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fac2b100ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fac2b5912c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fac2b121100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fac2b11a370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fac2b116480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fac2b10ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fac2b112e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fac2b10d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fac2b115670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fac2b120450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fac2b115e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fac2b11b020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fac2b11bcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fac2b1042f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fac2b106ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fac2b11d450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fac2b1062f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fac2b1012f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fac2b10fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fac2b10a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fac2b120aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fac2b11e770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fac2b111e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fac2b11b670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fac2b110670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fac2b108e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fac2b0ff7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fac2b5912c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7fac2b0d7880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7fac2b0cc020"/></to>
    </wire>
    <wire loc="20:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7fac2b0cc020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7fac2b0c7140"/></to>
    </wire>
    <wire loc="16:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7fac2b0c2bd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7fac2b0cbc50"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7fac2b0cbc50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7fac2b0ae150"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7fac2b0c6530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fac2b0591b0"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7fac2b0b2540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7fac2b0b3590"/></to>
    </wire>
    <wire loc="11:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7fac2b0b3590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fac2b0629e0"/></to>
    </wire>
    <wire loc="18:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7fac2b0a9950"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7fac2b0b0ca0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7fac2b0b0ca0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7fac2b086a90"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7fac2b0ae9f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7fac2b0b2540"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fac2b076020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fac2b070530"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fac2b070530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fac2b06ce50"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fac2b069020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7fac2bc45830"/></to>
    </wire>
    <wire loc="9:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fac2b061c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7fac2bfdd580"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7fac2b046990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7fac2b03b900"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7fac2b048150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7fac2b03a0f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7fac2b03aae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fac2b7d0220"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7fac2b025690"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7fac2b7d2b10"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fac2b01f9b0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fac2b78ce60"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7fac2b01ecd0"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7fac2b7869b0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7fac2b026a80"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7fac2b743700"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fac2b01c020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac2af80c30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac2af80c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac2b5944d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac2b01cd10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac2af7f8f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac2af7f8f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac2b592350"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fac2b0186d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7fac2af7e2f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fac2af7e2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fac2b018de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7fac2af7dcc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fac2af7dcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fac2b017530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7fac2af7c370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fac2af7c370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fac2b017c60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7fac2af7bd00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fac2af7bd00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fac2b019e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7fac2af74c60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fac2af74c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fac2b01b780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7fac2af5c7a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fac2af5c7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fac2b5912c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fac2b019550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fac2af612f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fac2af612f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fac2b0163e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7fac2af76480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fac2af76480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fac2b0155e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7fac2af72e50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fac2af72e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fac2b014020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7fac2af71670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fac2af71670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fac2b016e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7fac2af787b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fac2af787b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fac2b0139c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7fac2af5ead0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fac2af5ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fac2b014890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7fac2af5f2f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fac2af5f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fac2b013130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7fac2af5fad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fac2af5fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7fac2b00ed40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7fac2af50df0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7fac2af50df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7fac2af46550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fac2b034d00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fac2aec8670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac2b033bb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac2aec40c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fac2b02cc60"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fac2aec3550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fac2aec3550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fac2aeb5a80"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fac2b020e80"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fac2aebb480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fac2aebb480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fac2aead8b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fac2b0116c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fac2c0370d0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fac2af73c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fac2af7d020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fac2af77c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fac2af6ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fac2af71e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fac2af5d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fac2af65670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fac2af76c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fac2af6b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fac2af6de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fac2af70670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fac2af79370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fac2af64a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fac2af79ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fac2af61ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fac2af7b060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fac2af66e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fac2af74480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fac2af7e940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fac2af68e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fac2af69670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fac2af66670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fac2af6c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fac2af69e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fac2af62ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fac2af6f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fac2af5dad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fac2b5912c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fac2af77490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fac2af73480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fac2af6be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fac2af70e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fac2af6a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fac2af72670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fac2af7d670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fac2af78160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fac2af78e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fac2af622f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fac2af63ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fac2af7b6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fac2af632f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fac2af5e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fac2af6ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fac2af68670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fac2af7c9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fac2af6fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fac2af6d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fac2af65e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7fac2af4c020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7fac2af457c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fac2af30150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fac2c0370d0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fac2af44020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fac2b78ce60"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7fac2af43380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7fac2b78a090"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7fac2af426b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7fac2b789390"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fac2af41a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fac2b746060"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fac2af406e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac2ae4bd00"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fac2ae4bd00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fac2b5944d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fac2af3f530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7fac2ae27ad0"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fac2ae27ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fac2b5912c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fac2af3ead0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7fac2ae456b0"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fac2ae456b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fac2af3e3a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7fac2ae44370"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fac2ae44370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fac2af3d330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fac2aec8670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac2af3c1e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac2aec40c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fac2af3ad70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fac2aec3550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fac2af3cb90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fac2b888dc0"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fac2af353e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7fac2ae3ce50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fac2ae3ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fac2af35cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7fac2ae3b670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fac2ae3b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fac2af36b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7fac2ae42160"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fac2ae42160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fac2af336d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7fac2ae272f0"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fac2ae272f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fac2af34590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7fac2ae2a2f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fac2ae2a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fac2af34e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7fac2ae2aad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fac2ae2aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fac2af32020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fac2ae2bad0"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fac2ae2bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fac2af328b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7fac2ae48300"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fac2ae48300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7fac2af259d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac2c589940"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fac2aebf660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fac2aeb1af0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fac2ae57300"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fac2b7b4080"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7fac2aeab3b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fac2ae59020"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fac2aeaa6e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fac2bc7b500"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fac2ae53450"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fac2bc8e050"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fac2ae3ec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fac2ae47020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fac2ae41c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fac2ae34e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fac2ae3be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fac2ae46370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fac2ae2f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fac2ae2b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fac2ae40c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fac2ae3fc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fac2ae35670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fac2ae38e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fac2ae3a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac2ae49970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac2b592350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fac2ae45d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fac2ae2ea70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fac2ae44ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fac2ae45060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fac2ae31e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fac2ae3f480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fac2ae40480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fac2ae48950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fac2ae32e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fac2ae33670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fac2ae31670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fac2ae29ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fac2ae37670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fac2ae33e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fac2ae2cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fac2ae39670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fac2ae41490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fac2ae3e480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fac2ae35e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fac2ae3ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fac2ae34670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fac2ae3c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fac2ae47670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fac2ae42e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fac2ae2c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fac2ae2dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fac2ae2d2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fac2ae292f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fac2ae37e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fac2ae32670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fac2ae47cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fac2ae469c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fac2ae39e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fac2ae427b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fac2ae38670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fac2ae2fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fac2ae267a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fac2b5912c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7fac2adf8920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7fac2adf5940"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fac2adff990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fac2adf5080"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fac2add8e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fac2addc020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fac2add7ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fac2add9690"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fac2add9690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fac2b5141d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fac2add68f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fac2adfba20"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac2add5170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac2aec40c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7fac2adbc200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7fac2adb8570"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fac2adb63f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fac2adbc950"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac2adb6a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac2aec40c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fac2ad7ed70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fac2ad886b0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fac2ad7db10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fac2ad88020"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fac2ad7c2f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fac2aec8670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac2ad7b170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac2aec40c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fac2ad7bb70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fac2ad2e410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7fac2ad4fdb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac2c589940"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7fac2ad21800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fac2ad1d580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fac2ad1d580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fac2b5141d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fac2ad091c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fac2b915020"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fac2ac5c3f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fac2b954d20"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fac2ac591d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fac2b952c00"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fac2ac597e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fac2b9508f0"/></to>
    </wire>
    <wire loc="89:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fac2ac56a20"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fac2aec3550"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fac2ac4c890"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fac2b936130"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fac2ac5b5c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fac2b952020"/></to>
    </wire>
    <wire loc="85:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fac2ac57b20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fac2b94d080"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fac2ac58470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fac2b9512d0"/></to>
    </wire>
    <wire loc="90:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fac2ac50af0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fac2aebf660"/></to>
    </wire>
    <wire loc="63:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fac2a270e60"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fac2a2627f0"/></to>
    </wire>
    <wire loc="64:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fac2a26eaa0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fac2ac597e0"/></to>
    </wire>
    <wire loc="65:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fac2a26d720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fac2ac58470"/></to>
    </wire>
    <wire loc="67:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fac2abb4020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fac2a26cda0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fac2a26cda0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fac2ac57b20"/></to>
    </wire>
    <wire loc="60:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fac2a2615f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fac2ac1f930"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fac2a260270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fac2ac58470"/></to>
    </wire>
    <wire loc="53:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fac2ac1f930"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fac2abcedf0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fac2abcc400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fac2ac5c3f0"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fac2abcb060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fac2ac58470"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fac2abca720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fac2ac597e0"/></to>
    </wire>
    <wire loc="184:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7fac2abc9480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac2c589940"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7fac2abc9c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fac2c589940"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fac2abab020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fac2ac597e0"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fac2ababc30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fac2ac58470"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="41:../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="35:../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="200:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/x1xxx/McuSleepC.nc" safe="">
      <documentation loc="36:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="65:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="45:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="33:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="53:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="37:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; Digital pin i/o abstraction, TI MSP430 processors.</short>
        <long>&#10; Digital pin i/o abstraction, TI MSP430 processors.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @author Joao Goncalves &#60;joao.m.goncalves@ist.utl.pt>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="79(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="79(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="79(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="79(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="79(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="79(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="79(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="79(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="79(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="79(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="79(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="79(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="79(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="79(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="79(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="79(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="79(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="79(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="79(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="79(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="79(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="79(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="79(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="79(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="79(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="79(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="79(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="79(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="79(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="79(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="79(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="79(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="79(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="79(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="79(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="79(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="79(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="79(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="79(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="79(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="79(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="79(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="79(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="79(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="79(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="79(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="79(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="79(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="SlaveC" loc="8:SlaveC.nc">
      <module/>
    </component>
    <component qname="SlaveAppC.TimerMiSlot" loc="44(SlaveAppC.TimerMiSlot):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC" loc="48:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <documentation loc="36:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="41(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="41(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="41(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="41(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="41(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="41(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="41(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="41(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="41(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="41(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="41(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="41(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac2c0f7200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac2c0f7200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac2c0f89f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac2c0f7200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac2c0f89f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac2c0f7200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac2c0f89f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="55(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac2c0f89f0"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC.VT" loc="61(HilTimerMilliC.VirtualizeTimerC.VT):../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <documentation loc="33:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerImplP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fac2ba03530"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac2c0f89f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SlaveAppC.TimerLeds" loc="44(SlaveAppC.TimerLeds):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac2c0f7200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac2c0f7200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac2c0f7200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac2c0f7200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac2c0f7200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="47(HplCC2420InterruptsC.CaptureSFDC):../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; The default for GpioCapture is CCIxA.  Other channels are available&#10; (like B) but they need to be hardcoded in another module.  See&#10; tos/platforms/exp5438_2520/hardware/cc2520/P81SfdCaptureC.nc&#10;&#10; Lower levels have been modified to support being able to change&#10; CCIS in the control registers.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="51:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc" safe="">
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="50(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="50(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
        <short>&#10; An HPL abstraction of USART0 on the MSP430.</short>
        <long>&#10; An HPL abstraction of USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="54:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="56(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="96(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f7640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fac2c0f79b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f7640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fac2c0f79b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac2c0f7200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SlaveAppC.AMSenderC" loc="47(SlaveAppC.AMSenderC):../../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.AMSenderC.SenderC" loc="47(SlaveAppC.AMSenderC.SenderC):../../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fac2bd0dd50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(SlaveAppC.AMSenderC.SenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fac2bd0dd50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../../tos/system/AMQueueP.nc">
      <documentation loc="33:../../../tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SlaveAppC.AMReceiverC" loc="43(SlaveAppC.AMReceiverC):../../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7fac2bf3b1d0" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7fac2bf3b580" loc="81:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7fac2bf3b930" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7fac2bf3bce0" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7fac2bf3a0d0" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7fac2bc15930" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7fac2bc15cd0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7fac2bc140d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7fac2bc14450" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7fac2bc147d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7fac2bc14b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7fac2bc13020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7fac2bc133b0" loc="49:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7fac2bc13780" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7fac2bbd8c80" loc="42:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7fac2bbd50d0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fac2baf2cb0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fac2baf2cb0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fac2baafa40" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fac2baafa40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fac2ba99570" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fac2ba99570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fac2ba99d40" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fac2ba99d40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fac2ba98160" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fac2ba98160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fac2ba98940" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fac2ba98940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fac2ba98d10" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7fac2ba97540" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7fac2ba97540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fac2ba786d0" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fac2ba786d0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fac2ba75020" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fac2ba75020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fac2ba75410" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fac2ba75410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fac2ba75bf0" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fac2ba75bf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fac2ba74020" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fac2ba39cc0" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fac2ba39cc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="55:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fac2ba03530" loc="55:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fac2ba03530"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fac2ba03880" loc="56:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="VirtualizeTimerImplP" loc="61:../../../tos/lib/timer/VirtualizeTimerImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fac2b9f4980" loc="61:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fac2b9f4980"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fac2b9f4cd0" loc="62:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fac2b980550" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fac2b980550"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="47:../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; The default for GpioCapture is CCIxA.  Other channels are available&#10; (like B) but they need to be hardcoded in another module.  See&#10; tos/platforms/exp5438_2520/hardware/cc2520/P81SfdCaptureC.nc&#10;&#10; Lower levels have been modified to support being able to change&#10; CCIS in the control registers.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="50:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="56:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fac2b2f55e0" loc="56:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7fac2b2ea9b0" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="96:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7fac2b2cfcc0" loc="96:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fac2b084020" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fac2b084020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fac2b0847b0" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac2b0847b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../../tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fac2ac44660" loc="47:../../../tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fac2bd0dd50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../../tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fac2ac3a360" loc="47:../../../tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fac2bd0dd50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fac2ac330d0" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fac2bd0dd50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7fac2ac1ac80" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:../../../tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fac2abb0330" loc="43:../../../tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fac2bd0dd50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7fac2c0ec160" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fac2c0ec160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac2c0ec4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fac2c0eec00" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fac2c0eec00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fac2c0ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac2c0e90c0" loc="42:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fac2c0e90c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac2c0e9440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7fac2c0de130" loc="43:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7fac2c0de130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7fac2c0e81b0"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7fac2c0e8340"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7fac2c0de7d0"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7fac2c0de960"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7fac2c0deaf0"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7fac2c0dec80"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7fac2c0dee10"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7fac2c0e8020"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7fac2c0de4b0"/>
        <function-ref name="node_id" scoped="" ref="0x7fac2c0de640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7fac2c0da700" loc="7:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7fac2c0da700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac2c0daa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac2c0dc1a0" loc="4:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fac2c0dc1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac2c0dc520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7fac2c0da020" loc="6:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fac2c0da020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac2c0da3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7fac2c0dade0" loc="8:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7fac2c0dade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac2c0d9180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7fac2c0dc810" loc="5:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7fac2c0dc810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7fac2c0db980"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7fac2c0dbb10"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7fac2c0db020"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7fac2c0db1b0"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7fac2c0db340"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7fac2c0db4d0"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7fac2c0db660"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7fac2c0db7f0"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7fac2c0dcb90"/>
        <function-ref name="node_id" scoped="" ref="0x7fac2c0dcd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac2c0dd640" loc="2:../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fac2c0dd640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac2c0dd9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7fac2c0c3900" loc="39:../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fac2c0c3900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac2c0c3c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fac2c0a1de0" loc="40:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fac2c0a1de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fac2c0a6c70"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fac2c0a6310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fac2c0a64a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fac2c0a6630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fac2c0a6180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fac2c0a67c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fac2c0a6950"/>
        <function-ref name="initClocks" scoped="" ref="0x7fac2c0a6ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac2c0aa850" loc="39:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fac2c0aa850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac2c0aabd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fac2c090830" loc="203:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fac2c090830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fac2c08f7f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fac2c090d40"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fac2c08f020"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fac2c08f1b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fac2c090bb0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fac2c08f340"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fac2c08f4d0"/>
        <function-ref name="initClocks" scoped="" ref="0x7fac2c08f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7fac2c08faf0" loc="204:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fac2c08faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fac2c08fe70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac2c0901c0" loc="202:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fac2c0901c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac2c090540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7fac2c211c80" loc="55:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fac2c211c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fac2c3ec0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7fac2c36e9a0" loc="51:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fac2c36e9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fac2c36ed20"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fac2c489020"/>
        <function-ref name="sleep" scoped="" ref="0x7fac2c4891b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7fac2c2af3d0" loc="52:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7fac2c2af3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fac2c2af750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7fac2c0a88b0" loc="39:../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fac2c0a88b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fac2c05b7f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fac2c0a8dc0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fac2c05b020"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fac2c05b1b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fac2c0a8c30"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fac2c05b340"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fac2c05b4d0"/>
        <function-ref name="initClocks" scoped="" ref="0x7fac2c05b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fac2c04e8d0" loc="69:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fac2c04e8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac2c04ec50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fac2c04f110" loc="66:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fac2c04f110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fac2c04f490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7fac2c04e1d0" loc="68:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7fac2c04e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac2c04e550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7fac2c04f780" loc="67:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fac2c04f780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac2c04fb00"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fac2c04fc90"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fac2c04fe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fac2c589940" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fac2c589940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac2c589cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7fac2c589e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fac2c5961e0" loc="46:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fac2c5961e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac2c596560"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fac2c5966f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fac2c596880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fac2c13a040" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fac2c13a040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac2c13a3c0"/>
        <function-ref name="runTask" scoped="" ref="0x7fac2c13a550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7fac2c135490" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fac2c135490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fac2c135810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fac2c1359a0"/>
        <function-ref name="sleep" scoped="" ref="0x7fac2c135b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fac2c13b140" loc="54:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fac2c13b140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac2c13b4c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fac2c13b650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fac2c13b7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fac2c0370d0" loc="46:../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fac2c0370d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fac2c037450"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fac2c0375e0"/>
        <function-ref name="led1On" scoped="" ref="0x7fac2c037770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fac2c037900"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fac2c037a90"/>
        <function-ref name="get" scoped="" ref="0x7fac2c037c20"/>
        <function-ref name="led1Off" scoped="" ref="0x7fac2c037db0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fac2c0424d0"/>
        <function-ref name="set" scoped="" ref="0x7fac2c042020"/>
        <function-ref name="led0On" scoped="" ref="0x7fac2c0421b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fac2c042340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7fac2c02c1d0" loc="50:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fac2c02c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2c02c550"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2c02c6e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2c02c870"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2c02ca00"/>
        <function-ref name="get" scoped="" ref="0x7fac2c02cb90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2c02cd20"/>
        <function-ref name="set" scoped="" ref="0x7fac2c032020"/>
        <function-ref name="clr" scoped="" ref="0x7fac2c0321b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac2c035640" loc="46:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fac2c035640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac2c0359c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7fac2c0324d0" loc="51:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fac2c0324d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2c032850"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2c0329e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2c032b70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2c032d00"/>
        <function-ref name="get" scoped="" ref="0x7fac2c031020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2c0311b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2c031340"/>
        <function-ref name="clr" scoped="" ref="0x7fac2c0314d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fac2c035c40" loc="47:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fac2c035c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fac2c034020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fac2c0341b0"/>
        <function-ref name="led1On" scoped="" ref="0x7fac2c034340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fac2c0344d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fac2c034660"/>
        <function-ref name="get" scoped="" ref="0x7fac2c0347f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fac2c034980"/>
        <function-ref name="led2Off" scoped="" ref="0x7fac2c033020"/>
        <function-ref name="set" scoped="" ref="0x7fac2c034b10"/>
        <function-ref name="led0On" scoped="" ref="0x7fac2c034ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7fac2c034e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7fac2c0317f0" loc="52:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fac2c0317f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2c031b70"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2c031d00"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2c02b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2c02b1b0"/>
        <function-ref name="get" scoped="" ref="0x7fac2c02b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2c02b4d0"/>
        <function-ref name="set" scoped="" ref="0x7fac2c02b660"/>
        <function-ref name="clr" scoped="" ref="0x7fac2c02b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7fac2c036d80" loc="41:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fac2c036d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2c00f180"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2c00f310"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2c00f4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2c00f630"/>
        <function-ref name="get" scoped="" ref="0x7fac2c00f7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2c00f950"/>
        <function-ref name="set" scoped="" ref="0x7fac2c00fae0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2c00fc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7fac2c00e020" loc="42:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fac2c00e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2c00e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2c00e530"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2c00e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2c00e850"/>
        <function-ref name="get" scoped="" ref="0x7fac2c00e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2c00eb70"/>
        <function-ref name="set" scoped="" ref="0x7fac2c00ed00"/>
        <function-ref name="clr" scoped="" ref="0x7fac2c00d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7fac2c00c600" loc="44:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fac2c00c600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac2c00c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7fac2c00d380" loc="43:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fac2c00d380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2c00d700"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2c00d890"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2c00da20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2c00dbb0"/>
        <function-ref name="get" scoped="" ref="0x7fac2c00dd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2c00c020"/>
        <function-ref name="set" scoped="" ref="0x7fac2c00c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2c00c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fac2bff1580" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fac2bff1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bff1900"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bff1a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bff1c20"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bfef980"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bff0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bff01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bff0340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bff04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bff0660"/>
        <function-ref name="get" scoped="" ref="0x7fac2bff07f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bff0980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bff0b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bff0ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bfef020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bfef1b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bfef340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bfef4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bff1db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bfef660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bfef7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fac2bfd8710" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fac2bfd8710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bfd8a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bfd8c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bfd8db0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bfd6a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bfd71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bfd7340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bfd74d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bfd7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bfd77f0"/>
        <function-ref name="get" scoped="" ref="0x7fac2bfd7980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bfd7b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bfd7ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bfd7e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bfd6120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bfd62b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bfd6440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bfd65d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bfd7020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bfd6760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bfd68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7fac2bf4ed30" loc="205:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7fac2bf4ed30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf4d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf4d270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf4d400"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf4b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf4d720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf4d8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf4da40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf4dbd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf4dd60"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf4c020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf4c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf4c340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf4c4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf4c760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf4c8f0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf4ca80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf4cc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf4d590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf4cda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf4b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7fac2bf53d40" loc="201:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7fac2bf53d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf520e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf52270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf52400"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf501b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf52720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf528b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf52a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf52bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf52d60"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf51020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf511b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf51340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf514d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf51760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf518f0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf51a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf51c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf52590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf51da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf50020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7fac2bf7cd50" loc="183:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7fac2bf7cd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf7b100"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf7b290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf7b420"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf791b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf7b740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf7b8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf7ba60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf7bbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf7bd80"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf7a020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf7a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf7a340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf7a4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf7a760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf7a8f0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf7aa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf7ac10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf7b5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf7ada0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf79020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7fac2bfd3710" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7fac2bfd3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bfd3a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bfd3c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bfd3db0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bfd1a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bfd21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bfd2340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bfd24d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bfd2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bfd27f0"/>
        <function-ref name="get" scoped="" ref="0x7fac2bfd2980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bfd2b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bfd2ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bfd2e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bfd1120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bfd12b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bfd1440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bfd15d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bfd2020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bfd1760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bfd18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7fac2bfb98a0" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7fac2bfb98a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bfb9c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bfb9db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bfb8020"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bfb7c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bfb8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bfb84d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bfb8660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bfb87f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bfb8980"/>
        <function-ref name="get" scoped="" ref="0x7fac2bfb8b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bfb8ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bfb8e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bfb7020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bfb72b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bfb7440"/>
        <function-ref name="set" scoped="" ref="0x7fac2bfb75d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bfb7760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bfb81b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bfb78f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bfb7a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7fac2bfa08a0" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7fac2bfa08a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bfa0c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bfa0db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf9f020"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf9ec10"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf9f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf9f4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf9f660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf9f7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf9f980"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf9fb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf9fca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf9fe30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf9e020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf9e2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf9e440"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf9e5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf9e760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf9f1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf9e8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf9ea80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7fac2bf8b8a0" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7fac2bf8b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf8bc20"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf8bdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf8a020"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf89c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf8a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf8a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf8a660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf8a7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf8a980"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf8ab10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf8aca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf8ae30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf89020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf892b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf89440"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf895d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf89760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf8a1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf898f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf89a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7fac2bf77d50" loc="185:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7fac2bf77d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf76100"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf76290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf76420"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf741b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf76740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf768d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf76a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf76bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf76d80"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf75020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf751b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf75340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf754d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf75760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf758f0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf75a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf75c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf765b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf75da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf74020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7fac2bf63d40" loc="195:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7fac2bf63d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf620e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf62270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf62400"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf601b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf62720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf628b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf62a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf62bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf62d60"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf61020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf611b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf61340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf614d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf61760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf618f0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf61a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf61c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf62590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf61da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf60020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7fac2bf44d50" loc="211:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7fac2bf44d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf43100"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf43290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf43420"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf411b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf43740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf438d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf43a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf43bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf43d80"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf42020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf421b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf42340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf424d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf42760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf428f0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf42a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf42c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf435b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf42da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf41020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fac2bfead50" loc="57:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fac2bfead50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bfe9100"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bfe9290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bfe9420"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bfe71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bfe9740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bfe98d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bfe9a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bfe9bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bfe9d80"/>
        <function-ref name="get" scoped="" ref="0x7fac2bfe8020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bfe81b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bfe8340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bfe84d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bfe8760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bfe88f0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bfe8a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bfe8c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bfe95b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bfe8da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bfe7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7fac2bf74580" loc="186:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7fac2bf74580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf74900"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf74a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf74c20"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf72980"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf73020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf731b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf73340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf734d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf73660"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf737f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf73980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf73b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf73ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf72020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf721b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf72340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf724d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf74db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf72660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf727f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fac2bfe5d50" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fac2bfe5d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bfe4100"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bfe4290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bfe4420"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bfe21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bfe4740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bfe48d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bfe4a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bfe4bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bfe4d80"/>
        <function-ref name="get" scoped="" ref="0x7fac2bfe3020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bfe31b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bfe3340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bfe34d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bfe3760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bfe38f0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bfe3a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bfe3c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bfe45b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bfe3da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bfe2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7fac2bfcbe50" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7fac2bfcbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bfca210"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bfca3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bfca530"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bfc8340"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bfca850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bfca9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bfcab70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bfcad00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bfc9020"/>
        <function-ref name="get" scoped="" ref="0x7fac2bfc91b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bfc9340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bfc94d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bfc9660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bfc98f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bfc9a80"/>
        <function-ref name="set" scoped="" ref="0x7fac2bfc9c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bfc9da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bfca6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bfc8020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bfc81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7fac2bfb1020" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7fac2bfb1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bfb13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bfb1530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bfb16c0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bfaf4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bfb19e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bfb1b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bfb1d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bfb0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bfb01b0"/>
        <function-ref name="get" scoped="" ref="0x7fac2bfb0340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bfb04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bfb0660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bfb07f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bfb0a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bfb0c10"/>
        <function-ref name="set" scoped="" ref="0x7fac2bfb0da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bfaf020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bfb1850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bfaf1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bfaf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7fac2bf98020" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7fac2bf98020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf983a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf98530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf986c0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf964d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf989e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf98b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf98d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf97020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf971b0"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf97340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf974d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf97660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf977f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf97a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf97c10"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf97da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf96020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf98850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf961b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf96340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7fac2bf83020" loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7fac2bf83020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf833a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf83530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf836c0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf814d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf839e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf83b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf83d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf82020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf821b0"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf82340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf824d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf82660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf827f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf82a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf82c10"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf82da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf81020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf83850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf811b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf81340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fac2bff6580" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fac2bff6580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bff6900"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bff6a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bff6c20"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bff4980"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bff5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bff51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bff5340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bff54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bff5660"/>
        <function-ref name="get" scoped="" ref="0x7fac2bff57f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bff5980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bff5b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bff5ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bff4020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bff41b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bff4340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bff44d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bff6db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bff4660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bff47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fac2bfdd580" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fac2bfdd580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bfdda00"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bfddb90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bfddd20"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bfdba80"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bfdc1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bfdc340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bfdc4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bfdc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bfdc7f0"/>
        <function-ref name="get" scoped="" ref="0x7fac2bfdc980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bfdcb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bfdcca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bfdce30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bfdb120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bfdb2b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bfdb440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bfdb5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bfdc020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bfdb760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bfdb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7fac2bfc3710" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7fac2bfc3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bfc3a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bfc3c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bfc3db0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bfc1a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bfc21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bfc2340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bfc24d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bfc2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bfc27f0"/>
        <function-ref name="get" scoped="" ref="0x7fac2bfc2980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bfc2b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bfc2ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bfc2e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bfc1120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bfc12b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bfc1440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bfc15d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bfc2020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bfc1760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bfc18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7fac2bf7e580" loc="182:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7fac2bf7e580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf7e900"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf7ea90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf7ec20"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf7c980"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf7d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf7d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf7d340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf7d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf7d660"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf7d7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf7d980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf7db10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf7dca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf7c020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf7c1b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf7c340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf7c4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf7edb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf7c660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf7c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7fac2bf5b570" loc="198:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7fac2bf5b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf5b8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf5ba80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf5bc10"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf58980"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf59020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf591b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf59340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf594d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf59660"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf597f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf59980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf59b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf59ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf58020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf581b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf58340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf584d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf5bda0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf58660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf587f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7fac2bf46570" loc="209:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7fac2bf46570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf468f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf46a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf46c10"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf44980"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf45020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf451b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf45340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf454d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf45660"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf457f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf45980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf45b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf45ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf44020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf441b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf44340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf444d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf46da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf44660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf447f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7fac2bf6a580" loc="191:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7fac2bf6a580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf6a900"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf6aa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf6ac20"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf68980"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf69020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf691b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf69340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf694d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf69660"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf697f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf69980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf69b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf69ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf68020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf681b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf68340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf684d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf6adb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf68660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf687f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7fac2bfbe710" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7fac2bfbe710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bfbec90"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bfbee20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bfbd020"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bfbcc10"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bfbd340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bfbd4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bfbd660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bfbd7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bfbd980"/>
        <function-ref name="get" scoped="" ref="0x7fac2bfbdb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bfbdca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bfbde30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bfbc020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bfbc2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bfbc440"/>
        <function-ref name="set" scoped="" ref="0x7fac2bfbc5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bfbc760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bfbd1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bfbc8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bfbca80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7fac2bfa58a0" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7fac2bfa58a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bfa5c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bfa5db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bfa4020"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bfa3c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bfa4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bfa44d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bfa4660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bfa47f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bfa4980"/>
        <function-ref name="get" scoped="" ref="0x7fac2bfa4b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bfa4ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bfa4e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bfa3020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bfa32b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bfa3440"/>
        <function-ref name="set" scoped="" ref="0x7fac2bfa35d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bfa3760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bfa41b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bfa38f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bfa3a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7fac2bf908a0" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7fac2bf908a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf90c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf90db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf8f020"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf8ec10"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf8f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf8f4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf8f660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf8f7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf8f980"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf8fb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf8fca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf8fe30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf8e020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf8e2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf8e440"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf8e5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf8e760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf8f1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf8e8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf8ea80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7fac2bf58d40" loc="199:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7fac2bf58d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf570e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf57270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf57400"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf551b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf57720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf578b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf57a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf57bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf57d60"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf56020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf561b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf56340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf564d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf56760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf568f0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf56a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf56c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf57590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf56da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf55020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7fac2bf72d40" loc="188:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7fac2bf72d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf710e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf71270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf71400"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf6f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf71720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf718b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf71a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf71bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf71d60"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf70020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf701b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf70340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf704d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf70760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf708f0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf70a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf70c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf71590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf70da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf6f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fac2bfefd50" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fac2bfefd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bfee100"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bfee290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bfee420"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bfec1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bfee740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bfee8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bfeea60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bfeebf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bfeed80"/>
        <function-ref name="get" scoped="" ref="0x7fac2bfed020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bfed1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bfed340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bfed4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bfed760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bfed8f0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bfeda80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bfedc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bfee5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bfedda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bfec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fac2bfd6e50" loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fac2bfd6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bfd5210"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bfd53a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bfd5530"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bfd3340"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bfd5850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bfd59e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bfd5b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bfd5d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bfd4020"/>
        <function-ref name="get" scoped="" ref="0x7fac2bfd41b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bfd4340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bfd44d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bfd4660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bfd48f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bfd4a80"/>
        <function-ref name="set" scoped="" ref="0x7fac2bfd4c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bfd4da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bfd56c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bfd3020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bfd31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7fac2bf968a0" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7fac2bf968a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf96c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf96db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf94020"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf93c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf94340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf944d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf94660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf947f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf94980"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf94b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf94ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf94e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf93020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf932b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf93440"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf935d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf93760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf941b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf938f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf93a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7fac2bfd1e50" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7fac2bfd1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bfcf210"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bfcf3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bfcf530"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bfcd340"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bfcf850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bfcf9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bfcfb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bfcfd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bfce020"/>
        <function-ref name="get" scoped="" ref="0x7fac2bfce1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bfce340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bfce4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bfce660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bfce8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bfcea80"/>
        <function-ref name="set" scoped="" ref="0x7fac2bfcec10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bfceda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bfcf6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bfcd020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bfcd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7fac2bfb6020" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7fac2bfb6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bfb63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bfb6530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bfb66c0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bfb44d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bfb69e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bfb6b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bfb6d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bfb5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bfb51b0"/>
        <function-ref name="get" scoped="" ref="0x7fac2bfb5340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bfb54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bfb5660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bfb57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bfb5a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bfb5c10"/>
        <function-ref name="set" scoped="" ref="0x7fac2bfb5da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bfb4020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bfb6850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bfb41b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bfb4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7fac2bf9d020" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7fac2bf9d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf9d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf9d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf9d6c0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf9b4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf9d9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf9db70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf9dd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf9c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf9c1b0"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf9c340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf9c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf9c660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf9c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf9ca80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf9cc10"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf9cda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf9b020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf9d850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf9b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf9b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7fac2bf88020" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7fac2bf88020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf883a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf88530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf886c0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf864d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf889e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf88b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf88d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf87020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf871b0"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf87340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf874d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf87660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf877f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf87a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf87c10"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf87da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf86020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf88850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf861b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf86340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7fac2bf6dd50" loc="190:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7fac2bf6dd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf6c100"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf6c290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf6c420"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf6a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf6c740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf6c8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf6ca60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf6cbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf6cd80"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf6b020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf6b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf6b340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf6b4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf6b760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf6b8f0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf6ba80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf6bc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf6c5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf6bda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf6a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fac2bff9530" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fac2bff9530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bff98b0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bff9a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bff9bd0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2c007980"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2c008020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2c0081b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2c008340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2c0084d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2c008660"/>
        <function-ref name="get" scoped="" ref="0x7fac2c0087f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2c008980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2c008b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2c008ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2c007020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2c0071b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2c007340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2c0074d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bff9d60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2c007660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2c0077f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fac2bfe2580" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fac2bfe2580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bfe2900"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bfe2a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bfe2c20"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bfe0980"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bfe1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bfe11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bfe1340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bfe14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bfe1660"/>
        <function-ref name="get" scoped="" ref="0x7fac2bfe17f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bfe1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bfe1b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bfe1ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bfe0020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bfe01b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bfe0340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bfe04d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bfe2db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bfe0660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bfe07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7fac2bfc8710" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7fac2bfc8710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bfc8a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bfc8c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bfc8db0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bfc6a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bfc71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bfc7340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bfc74d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bfc7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bfc77f0"/>
        <function-ref name="get" scoped="" ref="0x7fac2bfc7980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bfc7b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bfc7ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bfc7e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bfc6120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bfc62b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bfc6440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bfc65d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bfc7020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bfc6760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bfc68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7fac2bfaf8a0" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7fac2bfaf8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bfafc20"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bfafdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bfae020"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bfadc10"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bfae340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bfae4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bfae660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bfae7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bfae980"/>
        <function-ref name="get" scoped="" ref="0x7fac2bfaeb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bfaeca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bfaee30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bfad020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bfad2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bfad440"/>
        <function-ref name="set" scoped="" ref="0x7fac2bfad5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bfad760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bfae1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bfad8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bfada80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7fac2bf68d50" loc="192:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7fac2bf68d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf67100"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf67290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf67420"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf651b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf67740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf678d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf67a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf67bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf67d80"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf66020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf661b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf66340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf664d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf66760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf668f0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf66a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf66c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf675b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf66da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf65020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7fac2bf60570" loc="196:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7fac2bf60570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf608f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf60a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf60c10"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf5e980"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf5f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf5f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf5f340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf5f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf5f660"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf5f7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf5f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf5fb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf5fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf5e020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf5e1b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf5e340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf5e4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf60da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf5e660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf5e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7fac2bf50570" loc="202:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7fac2bf50570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf508f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf50a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf50c10"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf4e980"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf4f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf4f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf4f340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf4f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf4f660"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf4f7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf4f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf4fb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf4fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf4e020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf4e1b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf4e340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf4e4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf50da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf4e660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf4e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7fac2bfaa8a0" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7fac2bfaa8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bfaac20"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bfaadb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bfa9020"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bfa8c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bfa9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bfa94d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bfa9660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bfa97f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bfa9980"/>
        <function-ref name="get" scoped="" ref="0x7fac2bfa9b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bfa9ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bfa9e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bfa8020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bfa82b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bfa8440"/>
        <function-ref name="set" scoped="" ref="0x7fac2bfa85d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bfa8760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bfa91b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bfa88f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bfa8a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7fac2bf65580" loc="193:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7fac2bf65580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf65900"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf65a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf65c20"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf63980"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf64020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf641b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf64340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf644d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf64660"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf647f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf64980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf64b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf64ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf63020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf631b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf63340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf634d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf65db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf63660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf637f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fac2bff4d50" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fac2bff4d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bff3100"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bff3290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bff3420"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bff11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bff3740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bff38d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bff3a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bff3bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bff3d80"/>
        <function-ref name="get" scoped="" ref="0x7fac2bff2020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bff21b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bff2340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bff24d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bff2760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bff28f0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bff2a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bff2c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bff35b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bff2da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bff1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fac2bfdbe50" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fac2bfdbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bfda210"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bfda3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bfda530"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bfd8340"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bfda850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bfda9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bfdab70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bfdad00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bfd9020"/>
        <function-ref name="get" scoped="" ref="0x7fac2bfd91b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bfd9340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bfd94d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bfd9660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bfd98f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bfd9a80"/>
        <function-ref name="set" scoped="" ref="0x7fac2bfd9c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bfd9da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bfda6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bfd8020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bfd81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7fac2bfc1e50" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7fac2bfc1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bfc0210"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bfc03a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bfc0530"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bfbe340"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bfc0850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bfc09e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bfc0b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bfc0d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bfbf020"/>
        <function-ref name="get" scoped="" ref="0x7fac2bfbf1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bfbf340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bfbf4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bfbf660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bfbf8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bfbfa80"/>
        <function-ref name="set" scoped="" ref="0x7fac2bfbfc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bfbfda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bfc06c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bfbe020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bfbe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7fac2bf6f580" loc="189:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7fac2bf6f580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf6f900"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf6fa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf6fc20"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf6d980"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf6e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf6e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf6e340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf6e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf6e660"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf6e7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf6e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf6eb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf6eca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf6d020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf6d1b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf6d340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf6d4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf6fdb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf6d660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf6d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7fac2bf55570" loc="200:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7fac2bf55570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf558f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf55a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf55c10"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf53980"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf54020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf541b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf54340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf544d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf54660"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf547f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf54980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf54b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf54ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf53020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf531b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf53340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf534d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf55da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf53660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf537f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7fac2bfbb020" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7fac2bfbb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bfbb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bfbb530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bfbb6c0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bfb94d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bfbb9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bfbbb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bfbbd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bfba020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bfba1b0"/>
        <function-ref name="get" scoped="" ref="0x7fac2bfba340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bfba4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bfba660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bfba7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bfbaa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bfbac10"/>
        <function-ref name="set" scoped="" ref="0x7fac2bfbada0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bfb9020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bfbb850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bfb91b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bfb9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7fac2bfa2020" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7fac2bfa2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bfa23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bfa2530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bfa26c0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bfa04d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bfa29e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bfa2b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bfa2d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bfa1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bfa11b0"/>
        <function-ref name="get" scoped="" ref="0x7fac2bfa1340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bfa14d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bfa1660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bfa17f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bfa1a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bfa1c10"/>
        <function-ref name="set" scoped="" ref="0x7fac2bfa1da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bfa0020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bfa2850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bfa01b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bfa0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7fac2bf8d020" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7fac2bf8d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf8d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf8d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf8d6c0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf8b4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf8d9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf8db70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf8dd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf8c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf8c1b0"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf8c340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf8c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf8c660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf8c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf8ca80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf8cc10"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf8cda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf8b020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf8d850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf8b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf8b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fac2bfec580" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fac2bfec580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bfec900"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bfeca90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bfecc20"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bfea980"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bfeb020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bfeb1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bfeb340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bfeb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bfeb660"/>
        <function-ref name="get" scoped="" ref="0x7fac2bfeb7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bfeb980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bfebb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bfebca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bfea020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bfea1b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bfea340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bfea4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bfecdb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bfea660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bfea7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7fac2bf92020" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7fac2bf92020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf923a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf92530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf926c0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf904d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf929e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf92b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf92d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf91020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf911b0"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf91340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf914d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf91660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf917f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf91a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf91c10"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf91da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf90020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf92850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf901b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf90340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fac2bfe7580" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fac2bfe7580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bfe7900"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bfe7a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bfe7c20"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bfe5980"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bfe6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bfe61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bfe6340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bfe64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bfe6660"/>
        <function-ref name="get" scoped="" ref="0x7fac2bfe67f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bfe6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bfe6b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bfe6ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bfe5020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bfe51b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bfe5340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bfe54d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bfe7db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bfe5660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bfe57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7fac2bfcd710" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7fac2bfcd710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bfcda90"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bfcdc20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bfcddb0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bfcba80"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bfcc1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bfcc340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bfcc4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bfcc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bfcc7f0"/>
        <function-ref name="get" scoped="" ref="0x7fac2bfcc980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bfccb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bfccca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bfcce30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bfcb120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bfcb2b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bfcb440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bfcb5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bfcc020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bfcb760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bfcb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7fac2bfb48a0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7fac2bfb48a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bfb4c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bfb4db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bfb3020"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bfb2c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bfb3340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bfb34d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bfb3660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bfb37f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bfb3980"/>
        <function-ref name="get" scoped="" ref="0x7fac2bfb3b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bfb3ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bfb3e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bfb2020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bfb22b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bfb2440"/>
        <function-ref name="set" scoped="" ref="0x7fac2bfb25d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bfb2760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bfb31b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bfb28f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bfb2a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7fac2bf9b8a0" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7fac2bf9b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf9bc20"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf9bdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf9a020"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf99c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf9a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf9a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf9a660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf9a7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf9a980"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf9ab10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf9aca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf9ae30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf99020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf992b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf99440"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf995d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf99760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf9a1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf998f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf99a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7fac2bf868a0" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7fac2bf868a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf86c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf86db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf85020"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf84c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf85340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf854d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf85660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf857f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf85980"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf85b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf85ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf85e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf84020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf842b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf84440"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf845d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf84760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf851b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf848f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf84a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fac2c007d50" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fac2c007d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bff8100"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bff8290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bff8420"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bff61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bff8740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bff88d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bff8a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bff8bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bff8d80"/>
        <function-ref name="get" scoped="" ref="0x7fac2bff7020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bff71b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bff7340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bff74d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bff7760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bff78f0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bff7a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bff7c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bff85b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bff7da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bff6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fac2bfe0d50" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fac2bfe0d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bfdf100"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bfdf290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bfdf420"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bfdd1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bfdf740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bfdf8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bfdfa60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bfdfbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bfdfd80"/>
        <function-ref name="get" scoped="" ref="0x7fac2bfde020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bfde1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bfde340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bfde4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bfde760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bfde8f0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bfdea80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bfdec10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bfdf5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bfdeda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bfdd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7fac2bfc6e50" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7fac2bfc6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bfc5210"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bfc53a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bfc5530"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bfc3340"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bfc5850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bfc59e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bfc5b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bfc5d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bfc4020"/>
        <function-ref name="get" scoped="" ref="0x7fac2bfc41b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bfc4340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bfc44d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bfc4660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bfc48f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bfc4a80"/>
        <function-ref name="set" scoped="" ref="0x7fac2bfc4c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bfc4da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bfc56c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bfc3020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bfc31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7fac2bfac020" loc="90:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7fac2bfac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bfac3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bfac530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bfac6c0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bfaa4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bfac9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bfacb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bfacd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bfab020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bfab1b0"/>
        <function-ref name="get" scoped="" ref="0x7fac2bfab340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bfab4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bfab660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bfab7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bfaba80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bfabc10"/>
        <function-ref name="set" scoped="" ref="0x7fac2bfabda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bfaa020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bfac850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bfaa1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bfaa340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7fac2bf5ed40" loc="197:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7fac2bf5ed40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf5d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf5d270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf5d400"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf5b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf5d720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf5d8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf5da40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf5dbd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf5dd60"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf5c020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf5c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf5c340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf5c4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf5c760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf5c8f0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf5ca80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf5cc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf5d590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf5cda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf5b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7fac2bf4b560" loc="206:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7fac2bf4b560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf4b8e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf4ba70"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf4bc00"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf49980"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf4a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf4a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf4a340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf4a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf4a660"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf4a7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf4a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf4ab10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf4aca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf49020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf491b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf49340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf494d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf4bd90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf49660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf497f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7fac2bf79580" loc="184:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7fac2bf79580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf79900"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf79a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf79c20"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf77980"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf78020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf781b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf78340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf784d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf78660"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf787f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf78980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf78b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf78ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf77020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf771b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf77340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf774d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf79db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf77660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf777f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7fac2bfa7020" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7fac2bfa7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bfa73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bfa7530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bfa76c0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bfa54d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bfa79e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bfa7b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bfa7d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bfa6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bfa61b0"/>
        <function-ref name="get" scoped="" ref="0x7fac2bfa6340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bfa64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bfa6660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bfa67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bfa6a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bfa6c10"/>
        <function-ref name="set" scoped="" ref="0x7fac2bfa6da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bfa5020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bfa7850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bfa51b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bfa5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7fac2bf49d40" loc="208:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7fac2bf49d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf480e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf48270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf48400"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf461b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf48720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf488b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf48a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf48bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf48d60"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf47020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf471b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf47340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf474d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf47760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf478f0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf47a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf47c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf48590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf47da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf46020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7fac2bf41580" loc="212:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7fac2bf41580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf41900"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf41a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf41c20"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf3f980"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf40020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf401b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf40340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf404d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf40660"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf407f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf40980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf40b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf40ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf3f020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf3f1b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf3f340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf3f4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf41db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf3f660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf3f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7fac2bf818f0" loc="181:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7fac2bf818f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf800a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf80230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf803c0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf7e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf806e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf80870"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf80a00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf80b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf80d20"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf7f020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf7f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf7f340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf7f4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf7f760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf7f8f0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf7fa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf7fc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf80550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf7fda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf7e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2bf3cd10" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2bf3cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf0d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf0d270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf0d400"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf0b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf0d720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf0d8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf0da40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf0dbd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf0dd60"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf0c020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf0c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf0c340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf0c4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf0c760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf0c8f0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf0ca80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf0cc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf0cda0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf0d590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf0b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2bf08260" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2bf08260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf085e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf08770"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf08900"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf06660"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf08c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf08db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf07020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf071b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf07340"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf074d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf07660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf077f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf07980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf07c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf07da0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf06020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf061b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf06340"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf08a90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf064d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2bf03740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2bf03740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bf03ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bf03c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bf03de0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bf01a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bf021b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bf02340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bf024d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bf02660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bf027f0"/>
        <function-ref name="get" scoped="" ref="0x7fac2bf02980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bf02b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bf02ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bf02e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bf01120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bf012b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bf01440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bf015d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bf01760"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bf02020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bf018f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2befeb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2befeb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2befd020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2befd1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2befd340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2befb020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2befd660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2befd7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2befd980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2befdb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2befdca0"/>
        <function-ref name="get" scoped="" ref="0x7fac2befde30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2befc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2befc1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2befc340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2befc5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2befc760"/>
        <function-ref name="set" scoped="" ref="0x7fac2befc8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2befca80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2befcc10"/>
        <function-ref name="clr" scoped="" ref="0x7fac2befd4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2befcda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2bef8060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2bef8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bef83e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bef8570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bef8700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bef54d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bef8a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bef8bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bef8d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bef6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bef61b0"/>
        <function-ref name="get" scoped="" ref="0x7fac2bef6340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bef64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bef6660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bef67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bef6a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bef6c10"/>
        <function-ref name="set" scoped="" ref="0x7fac2bef6da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bef5020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bef51b0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bef8890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bef5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2bef2540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2bef2540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bef28c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bef2a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bef2be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bef0980"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bef1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bef11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bef1340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bef14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bef1660"/>
        <function-ref name="get" scoped="" ref="0x7fac2bef17f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bef1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bef1b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bef1ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bef0020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bef01b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bef0340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bef04d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bef0660"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bef2d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bef07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2beedb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2beedb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2beec020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2beec1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2beec340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2beea020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2beec660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2beec7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2beec980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2beecb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2beecca0"/>
        <function-ref name="get" scoped="" ref="0x7fac2beece30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2beeb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2beeb1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2beeb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2beeb5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2beeb760"/>
        <function-ref name="set" scoped="" ref="0x7fac2beeb8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2beeba80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2beebc10"/>
        <function-ref name="clr" scoped="" ref="0x7fac2beec4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2beebda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2bee7060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2bee7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bee73e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bee7570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bee7700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bee54d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bee7a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bee7bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bee7d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bee6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bee61b0"/>
        <function-ref name="get" scoped="" ref="0x7fac2bee6340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bee64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bee6660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bee67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bee6a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bee6c10"/>
        <function-ref name="set" scoped="" ref="0x7fac2bee6da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bee5020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bee51b0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bee7890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bee5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2bee2540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2bee2540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bee28c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bee2a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bee2be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bee0980"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bee1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bee11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bee1340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bee14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bee1660"/>
        <function-ref name="get" scoped="" ref="0x7fac2bee17f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bee1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bee1b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bee1ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bee0020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bee01b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bee0340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bee04d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bee0660"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bee2d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bee07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2beddb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2beddb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bedc020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bedc1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bedc340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2beda020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bedc660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bedc7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bedc980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bedcb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bedcca0"/>
        <function-ref name="get" scoped="" ref="0x7fac2bedce30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bedb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bedb1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bedb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bedb5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bedb760"/>
        <function-ref name="set" scoped="" ref="0x7fac2bedb8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bedba80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bedbc10"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bedc4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bedbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2bed7060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2bed7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bed73e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bed7570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bed7700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bed54d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bed7a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bed7bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bed7d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bed6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bed61b0"/>
        <function-ref name="get" scoped="" ref="0x7fac2bed6340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bed64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bed6660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bed67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bed6a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bed6c10"/>
        <function-ref name="set" scoped="" ref="0x7fac2bed6da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bed5020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bed51b0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bed7890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bed5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2bed2540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2bed2540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bed28c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bed2a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bed2be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bed0980"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bed1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bed11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bed1340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bed14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bed1660"/>
        <function-ref name="get" scoped="" ref="0x7fac2bed17f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bed1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bed1b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bed1ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bed0020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bed01b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bed0340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bed04d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bed0660"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bed2d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bed07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2beccd10" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2beccd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2becb0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2becb270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2becb400"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bec91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2becb720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2becb8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2becba40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2becbbd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2becbd60"/>
        <function-ref name="get" scoped="" ref="0x7fac2beca020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2beca1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2beca340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2beca4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2beca760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2beca8f0"/>
        <function-ref name="set" scoped="" ref="0x7fac2becaa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2becac10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2becada0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2becb590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bec9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2bec6260" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2bec6260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bec65e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bec6770"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bec6900"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bec4660"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bec6c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bec6db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bec5020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bec51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bec5340"/>
        <function-ref name="get" scoped="" ref="0x7fac2bec54d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bec5660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bec57f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bec5980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bec5c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bec5da0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bec4020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bec41b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bec4340"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bec6a90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bec44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2bec1740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2bec1740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bec1ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bec1c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bec1de0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bebfa80"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bec01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bec0340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bec04d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bec0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bec07f0"/>
        <function-ref name="get" scoped="" ref="0x7fac2bec0980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bec0b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bec0ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bec0e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bebf120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bebf2b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bebf440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bebf5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bebf760"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bec0020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bebf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2bebcb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2bebcb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bebb020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bebb1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bebb340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2beb9020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bebb660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bebb7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bebb980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bebbb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bebbca0"/>
        <function-ref name="get" scoped="" ref="0x7fac2bebbe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2beba020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2beba1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2beba340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2beba5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2beba760"/>
        <function-ref name="set" scoped="" ref="0x7fac2beba8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bebaa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bebac10"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bebb4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bebada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2beb6060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2beb6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2beb63e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2beb6570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2beb6700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2beb44d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2beb6a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2beb6bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2beb6d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2beb5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2beb51b0"/>
        <function-ref name="get" scoped="" ref="0x7fac2beb5340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2beb54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2beb5660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2beb57f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2beb5a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2beb5c10"/>
        <function-ref name="set" scoped="" ref="0x7fac2beb5da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2beb4020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2beb41b0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2beb6890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2beb4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2beb1540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2beb1540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2beb18c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2beb1a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2beb1be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2beaf980"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2beb0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2beb01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2beb0340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2beb04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2beb0660"/>
        <function-ref name="get" scoped="" ref="0x7fac2beb07f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2beb0980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2beb0b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2beb0ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2beaf020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2beaf1b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2beaf340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2beaf4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2beaf660"/>
        <function-ref name="clr" scoped="" ref="0x7fac2beb1d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2beaf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2beacb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2beacb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2beab020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2beab1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2beab340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bea9020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2beab660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2beab7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2beab980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2beabb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2beabca0"/>
        <function-ref name="get" scoped="" ref="0x7fac2beabe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2beaa020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2beaa1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2beaa340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2beaa5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2beaa760"/>
        <function-ref name="set" scoped="" ref="0x7fac2beaa8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2beaaa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2beaac10"/>
        <function-ref name="clr" scoped="" ref="0x7fac2beab4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2beaada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2bea6060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2bea6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bea63e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bea6570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bea6700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bea34d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bea6a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bea6bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bea6d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bea4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bea41b0"/>
        <function-ref name="get" scoped="" ref="0x7fac2bea4340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bea44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bea4660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bea47f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bea4a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bea4c10"/>
        <function-ref name="set" scoped="" ref="0x7fac2bea4da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bea3020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bea31b0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bea6890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bea3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2bea0540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2bea0540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bea08c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bea0a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bea0be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2be9e980"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2be9f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2be9f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2be9f340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2be9f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2be9f660"/>
        <function-ref name="get" scoped="" ref="0x7fac2be9f7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2be9f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2be9fb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2be9fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2be9e020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2be9e1b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2be9e340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2be9e4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2be9e660"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bea0d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2be9e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2be9bb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2be9bb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2be9a020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2be9a1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2be9a340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2be98020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2be9a660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2be9a7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2be9a980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2be9ab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2be9aca0"/>
        <function-ref name="get" scoped="" ref="0x7fac2be9ae30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2be99020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2be991b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2be99340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2be995d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2be99760"/>
        <function-ref name="set" scoped="" ref="0x7fac2be998f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2be99a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2be99c10"/>
        <function-ref name="clr" scoped="" ref="0x7fac2be9a4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2be99da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2be95060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2be95060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2be953e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2be95570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2be95700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2be934d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2be95a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2be95bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2be95d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2be94020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2be941b0"/>
        <function-ref name="get" scoped="" ref="0x7fac2be94340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2be944d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2be94660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2be947f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2be94a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2be94c10"/>
        <function-ref name="set" scoped="" ref="0x7fac2be94da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2be93020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2be931b0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2be95890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2be93340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2be90540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2be90540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2be908c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2be90a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2be90be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2be8e980"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2be8f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2be8f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2be8f340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2be8f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2be8f660"/>
        <function-ref name="get" scoped="" ref="0x7fac2be8f7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2be8f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2be8fb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2be8fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2be8e020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2be8e1b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2be8e340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2be8e4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2be8e660"/>
        <function-ref name="clr" scoped="" ref="0x7fac2be90d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2be8e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2be8bdc0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2be8bdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2be8a180"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2be8a310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2be8a4a0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2be881b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2be8a7c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2be8a950"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2be8aae0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2be8ac70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2be8ae00"/>
        <function-ref name="get" scoped="" ref="0x7fac2be89020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2be891b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2be89340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2be894d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2be89760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2be898f0"/>
        <function-ref name="set" scoped="" ref="0x7fac2be89a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2be89c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2be89da0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2be8a630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2be88020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2be85260" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2be85260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2be855e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2be85770"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2be85900"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2be83660"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2be85c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2be85db0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2be84020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2be841b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2be84340"/>
        <function-ref name="get" scoped="" ref="0x7fac2be844d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2be84660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2be847f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2be84980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2be84c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2be84da0"/>
        <function-ref name="set" scoped="" ref="0x7fac2be83020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2be831b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2be83340"/>
        <function-ref name="clr" scoped="" ref="0x7fac2be85a90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2be834d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2be80740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2be80740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2be80ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2be80c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2be80de0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2be7ea80"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2be7f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2be7f340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2be7f4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2be7f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2be7f7f0"/>
        <function-ref name="get" scoped="" ref="0x7fac2be7f980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2be7fb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2be7fca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2be7fe30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2be7e120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2be7e2b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2be7e440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2be7e5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2be7e760"/>
        <function-ref name="clr" scoped="" ref="0x7fac2be7f020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2be7e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2be7bb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2be7bb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2be79020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2be791b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2be79340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2be77020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2be79660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2be797f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2be79980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2be79b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2be79ca0"/>
        <function-ref name="get" scoped="" ref="0x7fac2be79e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2be78020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2be781b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2be78340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2be785d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2be78760"/>
        <function-ref name="set" scoped="" ref="0x7fac2be788f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2be78a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2be78c10"/>
        <function-ref name="clr" scoped="" ref="0x7fac2be794d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2be78da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2be74060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2be74060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2be743e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2be74570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2be74700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2be724d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2be74a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2be74bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2be74d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2be73020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2be731b0"/>
        <function-ref name="get" scoped="" ref="0x7fac2be73340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2be734d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2be73660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2be737f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2be73a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2be73c10"/>
        <function-ref name="set" scoped="" ref="0x7fac2be73da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2be72020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2be721b0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2be74890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2be72340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2be6f540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2be6f540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2be6f8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2be6fa50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2be6fbe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2be6d980"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2be6e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2be6e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2be6e340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2be6e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2be6e660"/>
        <function-ref name="get" scoped="" ref="0x7fac2be6e7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2be6e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2be6eb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2be6eca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2be6d020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2be6d1b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2be6d340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2be6d4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2be6d660"/>
        <function-ref name="clr" scoped="" ref="0x7fac2be6fd70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2be6d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2be6ab90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2be6ab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2be69020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2be691b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2be69340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2be67020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2be69660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2be697f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2be69980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2be69b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2be69ca0"/>
        <function-ref name="get" scoped="" ref="0x7fac2be69e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2be68020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2be681b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2be68340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2be685d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2be68760"/>
        <function-ref name="set" scoped="" ref="0x7fac2be688f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2be68a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2be68c10"/>
        <function-ref name="clr" scoped="" ref="0x7fac2be694d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2be68da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2be64060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2be64060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2be643e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2be64570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2be64700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2be624d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2be64a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2be64bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2be64d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2be63020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2be631b0"/>
        <function-ref name="get" scoped="" ref="0x7fac2be63340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2be634d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2be63660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2be637f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2be63a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2be63c10"/>
        <function-ref name="set" scoped="" ref="0x7fac2be63da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2be62020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2be621b0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2be64890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2be62340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2be5f540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2be5f540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2be5f8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2be5fa50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2be5fbe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2be5d980"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2be5e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2be5e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2be5e340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2be5e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2be5e660"/>
        <function-ref name="get" scoped="" ref="0x7fac2be5e7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2be5e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2be5eb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2be5eca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2be5d020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2be5d1b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2be5d340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2be5d4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2be5d660"/>
        <function-ref name="clr" scoped="" ref="0x7fac2be5fd70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2be5d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2be5ab90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2be5ab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2be59020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2be591b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2be59340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2be57020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2be59660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2be597f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2be59980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2be59b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2be59ca0"/>
        <function-ref name="get" scoped="" ref="0x7fac2be59e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2be58020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2be581b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2be58340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2be585d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2be58760"/>
        <function-ref name="set" scoped="" ref="0x7fac2be588f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2be58a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2be58c10"/>
        <function-ref name="clr" scoped="" ref="0x7fac2be594d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2be58da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2be54060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2be54060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2be543e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2be54570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2be54700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2be524d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2be54a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2be54bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2be54d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2be53020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2be531b0"/>
        <function-ref name="get" scoped="" ref="0x7fac2be53340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2be534d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2be53660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2be537f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2be53a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2be53c10"/>
        <function-ref name="set" scoped="" ref="0x7fac2be53da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2be52020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2be521b0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2be54890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2be52340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2be4e540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2be4e540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2be4e8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2be4ea50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2be4ebe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2be4c980"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2be4d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2be4d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2be4d340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2be4d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2be4d660"/>
        <function-ref name="get" scoped="" ref="0x7fac2be4d7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2be4d980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2be4db10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2be4dca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2be4c020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2be4c1b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2be4c340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2be4c4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2be4c660"/>
        <function-ref name="clr" scoped="" ref="0x7fac2be4ed70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2be4c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2be49b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2be49b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2be48020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2be481b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2be48340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2be46020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2be48660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2be487f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2be48980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2be48b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2be48ca0"/>
        <function-ref name="get" scoped="" ref="0x7fac2be48e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2be47020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2be471b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2be47340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2be475d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2be47760"/>
        <function-ref name="set" scoped="" ref="0x7fac2be478f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2be47a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2be47c10"/>
        <function-ref name="clr" scoped="" ref="0x7fac2be484d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2be47da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2be43060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2be43060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2be433e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2be43570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2be43700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2be414d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2be43a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2be43bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2be43d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2be42020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2be421b0"/>
        <function-ref name="get" scoped="" ref="0x7fac2be42340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2be424d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2be42660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2be427f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2be42a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2be42c10"/>
        <function-ref name="set" scoped="" ref="0x7fac2be42da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2be41020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2be411b0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2be43890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2be41340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2be3e540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2be3e540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2be3e8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2be3ea50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2be3ebe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2be3c980"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2be3d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2be3d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2be3d340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2be3d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2be3d660"/>
        <function-ref name="get" scoped="" ref="0x7fac2be3d7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2be3d980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2be3db10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2be3dca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2be3c020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2be3c1b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2be3c340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2be3c4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2be3c660"/>
        <function-ref name="clr" scoped="" ref="0x7fac2be3ed70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2be3c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2be39b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2be39b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2be38020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2be381b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2be38340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2be36020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2be38660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2be387f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2be38980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2be38b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2be38ca0"/>
        <function-ref name="get" scoped="" ref="0x7fac2be38e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2be37020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2be371b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2be37340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2be375d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2be37760"/>
        <function-ref name="set" scoped="" ref="0x7fac2be378f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2be37a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2be37c10"/>
        <function-ref name="clr" scoped="" ref="0x7fac2be384d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2be37da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2be33060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2be33060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2be333e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2be33570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2be33700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2be314d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2be33a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2be33bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2be33d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2be32020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2be321b0"/>
        <function-ref name="get" scoped="" ref="0x7fac2be32340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2be324d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2be32660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2be327f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2be32a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2be32c10"/>
        <function-ref name="set" scoped="" ref="0x7fac2be32da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2be31020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2be311b0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2be33890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2be31340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2be2e540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2be2e540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2be2e8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2be2ea50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2be2ebe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2be2c980"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2be2d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2be2d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2be2d340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2be2d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2be2d660"/>
        <function-ref name="get" scoped="" ref="0x7fac2be2d7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2be2d980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2be2db10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2be2dca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2be2c020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2be2c1b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2be2c340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2be2c4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2be2c660"/>
        <function-ref name="clr" scoped="" ref="0x7fac2be2ed70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2be2c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2be29b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2be29b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2be27020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2be271b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2be27340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2be25020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2be27660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2be277f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2be27980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2be27b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2be27ca0"/>
        <function-ref name="get" scoped="" ref="0x7fac2be27e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2be26020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2be261b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2be26340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2be265d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2be26760"/>
        <function-ref name="set" scoped="" ref="0x7fac2be268f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2be26a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2be26c10"/>
        <function-ref name="clr" scoped="" ref="0x7fac2be274d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2be26da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2be22060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2be22060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2be223e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2be22570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2be22700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2be204d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2be22a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2be22bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2be22d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2be21020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2be211b0"/>
        <function-ref name="get" scoped="" ref="0x7fac2be21340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2be214d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2be21660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2be217f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2be21a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2be21c10"/>
        <function-ref name="set" scoped="" ref="0x7fac2be21da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2be20020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2be201b0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2be22890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2be20340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2be1d540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2be1d540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2be1d8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2be1da50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2be1dbe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2be1b980"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2be1c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2be1c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2be1c340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2be1c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2be1c660"/>
        <function-ref name="get" scoped="" ref="0x7fac2be1c7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2be1c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2be1cb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2be1cca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2be1b020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2be1b1b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2be1b340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2be1b4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2be1b660"/>
        <function-ref name="clr" scoped="" ref="0x7fac2be1dd70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2be1b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2be18b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2be18b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2be17020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2be171b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2be17340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2be15020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2be17660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2be177f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2be17980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2be17b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2be17ca0"/>
        <function-ref name="get" scoped="" ref="0x7fac2be17e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2be16020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2be161b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2be16340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2be165d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2be16760"/>
        <function-ref name="set" scoped="" ref="0x7fac2be168f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2be16a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2be16c10"/>
        <function-ref name="clr" scoped="" ref="0x7fac2be174d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2be16da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2be12060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2be12060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2be123e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2be12570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2be12700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2be104d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2be12a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2be12bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2be12d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2be11020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2be111b0"/>
        <function-ref name="get" scoped="" ref="0x7fac2be11340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2be114d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2be11660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2be117f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2be11a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2be11c10"/>
        <function-ref name="set" scoped="" ref="0x7fac2be11da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2be10020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2be101b0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2be12890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2be10340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fac2be0d540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fac2be0d540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2be0d8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2be0da50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2be0dbe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2be0b980"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2be0c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2be0c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2be0c340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2be0c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2be0c660"/>
        <function-ref name="get" scoped="" ref="0x7fac2be0c7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2be0c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2be0cb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2be0cca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2be0b020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2be0b1b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2be0b340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2be0b4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2be0b660"/>
        <function-ref name="clr" scoped="" ref="0x7fac2be0dd70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2be0b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fac2bd7d610" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fac2bd7d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bd7d990"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bd7db20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bd7dcb0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bd7b980"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bd7c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bd7c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bd7c340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bd7c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bd7c660"/>
        <function-ref name="get" scoped="" ref="0x7fac2bd7c7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bd7c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bd7cb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bd7cca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bd7b020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bd7b1b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bd7b340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bd7b4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bd7b660"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bd7de40"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bd7b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fac2bd8f480" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fac2bd8f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bd8f800"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bd8f990"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bd8fb20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bd8fcb0"/>
        <function-ref name="get" scoped="" ref="0x7fac2bd8fe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bd7d020"/>
        <function-ref name="set" scoped="" ref="0x7fac2bd7d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bd7d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fac2bd77de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fac2bd77de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bd76180"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bd76310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bd764a0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bd741b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bd767c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bd76950"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bd76ae0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bd76c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bd76e00"/>
        <function-ref name="get" scoped="" ref="0x7fac2bd75020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bd751b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bd75340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bd754d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bd75760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bd758f0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bd75a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bd75c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bd75da0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bd76630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bd74020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fac2bd79b20" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fac2bd79b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bd77020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bd771b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bd77340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bd774d0"/>
        <function-ref name="get" scoped="" ref="0x7fac2bd77660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bd777f0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bd77980"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bd77b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fac2bd71480" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fac2bd71480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bd71800"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bd71990"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2bd71b20"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2bd6f7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bd71e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bd70020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2bd701b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2bd70340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bd704d0"/>
        <function-ref name="get" scoped="" ref="0x7fac2bd70660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2bd707f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2bd70980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2bd70b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2bd70da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2bd6f020"/>
        <function-ref name="set" scoped="" ref="0x7fac2bd6f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2bd6f340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2bd6f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bd71cb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2bd6f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fac2bd721b0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fac2bd721b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2bd72530"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2bd726c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2bd72850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2bd729e0"/>
        <function-ref name="get" scoped="" ref="0x7fac2bd72b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2bd72d00"/>
        <function-ref name="set" scoped="" ref="0x7fac2bd71020"/>
        <function-ref name="clr" scoped="" ref="0x7fac2bd711b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7fac2bccfa50" loc="18:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x7fac2bccfa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fac2bccfdd0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fac2bcd8020"/>
        <function-ref name="start" scoped="" ref="0x7fac2bcd81b0"/>
        <function-ref name="stop" scoped="" ref="0x7fac2bcd8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fac2bd64cf0" loc="9:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fac2bd64cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fac2bd610a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fac2bcf2910" loc="14:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fac2bcf2910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2bcf2c90"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fac2bcf2e20"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2bd4a020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2bd4a1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fac2bd4a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fac2bcd78f0" loc="16:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fac2bcd78f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac2bcd7c70"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2bcd7e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2bce1020"/>
        <function-ref name="cancel" scoped="" ref="0x7fac2bce11b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac2bce1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fac2bcc8c20" loc="19:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fac2bcc8c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fac2bcd6020"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fac2bcd61b0"/>
        <function-ref name="getRssi" scoped="" ref="0x7fac2bcd6340"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fac2bcd64d0"/>
        <function-ref name="getPower" scoped="" ref="0x7fac2bcd6660"/>
        <function-ref name="getLqi" scoped="" ref="0x7fac2bcd67f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7fac2bcd2180" loc="17:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fac2bcd2180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac2bcd2500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fac2bd61360" loc="10:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fac2bd61360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fac2bd616e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fac2bd61870"/>
        <function-ref name="led1On" scoped="" ref="0x7fac2bd61a00"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fac2bd61b90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fac2bd61d20"/>
        <function-ref name="get" scoped="" ref="0x7fac2bd60020"/>
        <function-ref name="led1Off" scoped="" ref="0x7fac2bd601b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fac2bd607f0"/>
        <function-ref name="set" scoped="" ref="0x7fac2bd60340"/>
        <function-ref name="led0On" scoped="" ref="0x7fac2bd604d0"/>
        <function-ref name="led2On" scoped="" ref="0x7fac2bd60660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerMiSlot" ref="0x7fac2bd54820" loc="11:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMiSlot" scoped="" ref="0x7fac2bd54820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac2c0f89f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac2bd53cf0"/>
        <function-ref name="fired" scoped="" ref="0x7fac2bd5e300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fac2bd530d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fac2bd5ec00"/>
        <function-ref name="getdt" scoped="" ref="0x7fac2bd51660"/>
        <function-ref name="gett0" scoped="" ref="0x7fac2bd511e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac2bd5e780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fac2bd5f480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fac2bd536e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fac2bd5f950"/>
        <function-ref name="stop" scoped="" ref="0x7fac2bd5fe20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerLeds" ref="0x7fac2bd51cd0" loc="12:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerLeds" scoped="" ref="0x7fac2bd51cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac2c0f89f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac2bd4c220"/>
        <function-ref name="fired" scoped="" ref="0x7fac2bd4f7c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fac2bd4e590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fac2bd4e110"/>
        <function-ref name="getdt" scoped="" ref="0x7fac2bd4cb20"/>
        <function-ref name="gett0" scoped="" ref="0x7fac2bd4c6a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac2bd4fc40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fac2bd50940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fac2bd4eba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fac2bd50e10"/>
        <function-ref name="stop" scoped="" ref="0x7fac2bd4f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fac2bce28d0" loc="15:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fac2bce28d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fac2bce2c50"/>
        <function-ref name="source" scoped="" ref="0x7fac2bce2de0"/>
        <function-ref name="address" scoped="" ref="0x7fac2bd49020"/>
        <function-ref name="destination" scoped="" ref="0x7fac2bd491b0"/>
        <function-ref name="setSource" scoped="" ref="0x7fac2bd49340"/>
        <function-ref name="setDestination" scoped="" ref="0x7fac2bd494d0"/>
        <function-ref name="type" scoped="" ref="0x7fac2bd49660"/>
        <function-ref name="setType" scoped="" ref="0x7fac2bd497f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fac2bd49980"/>
        <function-ref name="setGroup" scoped="" ref="0x7fac2bd49b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7fac2bd49ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fac2bc98980" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="SlaveAppC.TimerMiSlot"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fac2bc98980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac2c0f89f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac2b96ce80"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b96d4a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fac2b96c260"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fac2b96dda0"/>
        <function-ref name="getdt" scoped="" ref="0x7fac2b96b7a0"/>
        <function-ref name="gett0" scoped="" ref="0x7fac2b96b320"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac2b96d920"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fac2b96e5a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fac2b96c870"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fac2b96ea70"/>
        <function-ref name="stop" scoped="" ref="0x7fac2b96d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fac2bc8e050" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7fac2bc8e050"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac2c0f89f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac2bc8a630"/>
        <function-ref name="fired" scoped="" ref="0x7fac2bc8dac0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fac2bc8b920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fac2bc8b4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fac2bc89020"/>
        <function-ref name="gett0" scoped="" ref="0x7fac2bc8aab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac2bc8b020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fac2bc8ec40"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fac2bc8a020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fac2bc8d170"/>
        <function-ref name="stop" scoped="" ref="0x7fac2bc8d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fac2bc85c30" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7fac2bc85c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac2c0f89f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac2bc80110"/>
        <function-ref name="fired" scoped="" ref="0x7fac2bc836a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fac2bc824a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fac2bc82020"/>
        <function-ref name="getdt" scoped="" ref="0x7fac2bc80a10"/>
        <function-ref name="gett0" scoped="" ref="0x7fac2bc80590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac2bc83b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fac2bc84860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fac2bc82ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fac2bc84d30"/>
        <function-ref name="stop" scoped="" ref="0x7fac2bc83220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fac2bc7b500" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fac2bc7b500"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac2c0f89f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac2bc7d170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac2bc89e50" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fac2bc89e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac2bc85210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fac2ba3e870" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fac2ba3e870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac2c0f89f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac2ba3b090"/>
        <function-ref name="fired" scoped="" ref="0x7fac2ba3c090"/>
        <function-ref name="startAt" scoped="" ref="0x7fac2ba3ca10"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac2ba3c550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fac2ba3b550"/>
        <function-ref name="start" scoped="" ref="0x7fac2ba3d6a0"/>
        <function-ref name="stop" scoped="" ref="0x7fac2ba3dbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac2ba3e020" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fac2ba3e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac2ba3e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fac2a7d74f0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fac2a7d74f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac2c0f7200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac2a7d4db0"/>
        <function-ref name="fired" scoped="" ref="0x7fac2a7d6da0"/>
        <function-ref name="startAt" scoped="" ref="0x7fac2a7d4760"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac2a7d42a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fac2a7d32a0"/>
        <function-ref name="start" scoped="" ref="0x7fac2a7d63d0"/>
        <function-ref name="stop" scoped="" ref="0x7fac2a7d68e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac2a7d8b10" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fac2a7d8b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac2a7d7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fac2a7beda0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fac2a7beda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2a7bd180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fac2a7bd310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fac2a7bd4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fac2a7bd630"/>
        <function-ref name="fired" scoped="" ref="0x7fac2a7bd7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fac2a7c0340" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fac2a7c0340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2a7c06c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fac2a7c0850"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2a7c09e0"/>
        <function-ref name="get" scoped="" ref="0x7fac2a7c0b70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2a7c0d00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2a7bf020"/>
        <function-ref name="getMode" scoped="" ref="0x7fac2a7bf1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2a7bf340"/>
        <function-ref name="overflow" scoped="" ref="0x7fac2a7bf4d0"/>
        <function-ref name="setMode" scoped="" ref="0x7fac2a7bf660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fac2a7bf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fac2a7bfa80" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fac2a7bfa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fac2a7bfe00"/>
        <function-ref name="getControl" scoped="" ref="0x7fac2a7be020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2a7be1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fac2a7be340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fac2a7be4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2a7be660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fac2a7be7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fac2a7be980"/>
        <function-ref name="setControl" scoped="" ref="0x7fac2a7beb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fac2bc461d0" loc="52:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fac2bc461d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bc46550"/>
        <function-ref name="setEvent" scoped="" ref="0x7fac2bc466e0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fac2bc46870"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fac2bc46a00"/>
        <function-ref name="fired" scoped="" ref="0x7fac2bc46b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fac2bc4b990" loc="50:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fac2bc4b990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2bc4bd10"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fac2bc4a020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2bc4a1b0"/>
        <function-ref name="get" scoped="" ref="0x7fac2bc4a340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2bc4a4d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2bc4a660"/>
        <function-ref name="getMode" scoped="" ref="0x7fac2bc4a7f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2bc4a980"/>
        <function-ref name="overflow" scoped="" ref="0x7fac2bc4ab10"/>
        <function-ref name="setMode" scoped="" ref="0x7fac2bc4aca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fac2bc4ae30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fac2bc48720" loc="51:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fac2bc48720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fac2bc48aa0"/>
        <function-ref name="getControl" scoped="" ref="0x7fac2bc48c30"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2bc48dc0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fac2bc47020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fac2bc471b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2bc47340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fac2bc474d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fac2bc47660"/>
        <function-ref name="setControl" scoped="" ref="0x7fac2bc477f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7fac2bc35730" loc="56:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7fac2bc35730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fac2bc35ab0"/>
        <function-ref name="getControl" scoped="" ref="0x7fac2bc35c40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2bc35dd0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fac2bc34020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fac2bc341b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2bc34340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fac2bc344d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fac2bc34660"/>
        <function-ref name="setControl" scoped="" ref="0x7fac2bc347f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7fac2bc30280" loc="61:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7fac2bc30280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fac2bc30600"/>
        <function-ref name="getControl" scoped="" ref="0x7fac2bc30790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2bc30920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fac2bc30ab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fac2bc30c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2bc30dd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fac2bc2f020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fac2bc2f1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fac2bc2f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7fac2bc37700" loc="55:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7fac2bc37700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bc37a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fac2bc37c10"/>
        <function-ref name="captured" scoped="" ref="0x7fac2bc37da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2bc35020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2bc351b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fac2bc35340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7fac2bc24020" loc="73:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7fac2bc24020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bc243a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fac2bc24530"/>
        <function-ref name="captured" scoped="" ref="0x7fac2bc246c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2bc24850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2bc249e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fac2bc24b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7fac2bc3d890" loc="54:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7fac2bc3d890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bc3dc10"/>
        <function-ref name="setEvent" scoped="" ref="0x7fac2bc3dda0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fac2bc37020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fac2bc371b0"/>
        <function-ref name="fired" scoped="" ref="0x7fac2bc37340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7fac2bc25160" loc="72:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7fac2bc25160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bc254e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fac2bc25670"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fac2bc25800"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fac2bc25990"/>
        <function-ref name="fired" scoped="" ref="0x7fac2bc25b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7fac2bc1aae0" loc="82:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7fac2bc1aae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bc1ae60"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fac2bc19020"/>
        <function-ref name="captured" scoped="" ref="0x7fac2bc191b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2bc19340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2bc194d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fac2bc19660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7fac2bc23020" loc="74:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7fac2bc23020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fac2bc233a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fac2bc23530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2bc236c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fac2bc23850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fac2bc239e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2bc23b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fac2bc23d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fac2bc22020"/>
        <function-ref name="setControl" scoped="" ref="0x7fac2bc221b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7fac2bc410c0" loc="50:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7fac2bc410c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fac2bc41440"/>
        <function-ref name="getControl" scoped="" ref="0x7fac2bc415d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2bc41760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fac2bc418f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fac2bc41a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2bc41c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fac2bc41da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fac2bc40020"/>
        <function-ref name="setControl" scoped="" ref="0x7fac2bc401b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7fac2bc2ba20" loc="66:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7fac2bc2ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bc2bda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fac2bc2a020"/>
        <function-ref name="captured" scoped="" ref="0x7fac2bc2a1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2bc2a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2bc2a4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fac2bc2a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7fac2bc2cbb0" loc="65:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7fac2bc2cbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bc2b020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fac2bc2b1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fac2bc2b340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fac2bc2b4d0"/>
        <function-ref name="fired" scoped="" ref="0x7fac2bc2b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7fac2bc2d730" loc="64:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7fac2bc2d730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fac2bc2dab0"/>
        <function-ref name="getControl" scoped="" ref="0x7fac2bc2dc40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2bc2ddd0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fac2bc2c020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fac2bc2c1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2bc2c340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fac2bc2c4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fac2bc2c660"/>
        <function-ref name="setControl" scoped="" ref="0x7fac2bc2c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7fac2bc33a20" loc="58:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7fac2bc33a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bc33da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fac2bc32020"/>
        <function-ref name="captured" scoped="" ref="0x7fac2bc321b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2bc32340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2bc324d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fac2bc32660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7fac2bc21570" loc="76:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7fac2bc21570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bc218f0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fac2bc21a80"/>
        <function-ref name="captured" scoped="" ref="0x7fac2bc21c10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2bc21da0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2bc20020"/>
        <function-ref name="setEdge" scoped="" ref="0x7fac2bc201b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7fac2bc2aa50" loc="67:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7fac2bc2aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fac2bc2add0"/>
        <function-ref name="getControl" scoped="" ref="0x7fac2bc29020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2bc291b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fac2bc29340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fac2bc294d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2bc29660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fac2bc297f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fac2bc29980"/>
        <function-ref name="setControl" scoped="" ref="0x7fac2bc29b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7fac2bc34bb0" loc="57:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7fac2bc34bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bc33020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fac2bc331b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fac2bc33340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fac2bc334d0"/>
        <function-ref name="fired" scoped="" ref="0x7fac2bc33660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7fac2bc45830" loc="49:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7fac2bc45830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2bc45bb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fac2bc45d40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2bc42020"/>
        <function-ref name="get" scoped="" ref="0x7fac2bc421b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2bc42340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2bc424d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fac2bc42660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2bc427f0"/>
        <function-ref name="overflow" scoped="" ref="0x7fac2bc42980"/>
        <function-ref name="setMode" scoped="" ref="0x7fac2bc42b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fac2bc42ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7fac2bc22570" loc="75:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7fac2bc22570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bc22af0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fac2bc22c80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fac2bc22e10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fac2bc21020"/>
        <function-ref name="fired" scoped="" ref="0x7fac2bc211b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7fac2bc3e410" loc="53:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7fac2bc3e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fac2bc3e790"/>
        <function-ref name="getControl" scoped="" ref="0x7fac2bc3e920"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2bc3eab0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fac2bc3ec40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fac2bc3edd0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2bc3d020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fac2bc3d1b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fac2bc3d340"/>
        <function-ref name="setControl" scoped="" ref="0x7fac2bc3d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7fac2bc205a0" loc="77:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7fac2bc205a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fac2bc20920"/>
        <function-ref name="getControl" scoped="" ref="0x7fac2bc20ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2bc20c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fac2bc20dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fac2bc1f020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2bc1f1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fac2bc1f340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fac2bc1f4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fac2bc1f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7fac2bc38410" loc="52:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7fac2bc38410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bc38790"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fac2bc38920"/>
        <function-ref name="captured" scoped="" ref="0x7fac2bc38ab0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2bc38c40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2bc38dd0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fac2bc3e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7fac2bc28da0" loc="69:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7fac2bc28da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bc27180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fac2bc27310"/>
        <function-ref name="captured" scoped="" ref="0x7fac2bc274a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2bc27630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2bc277c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fac2bc27950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7fac2bc40570" loc="51:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7fac2bc40570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bc408f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fac2bc40a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fac2bc40c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fac2bc40da0"/>
        <function-ref name="fired" scoped="" ref="0x7fac2bc3f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7fac2bc28020" loc="68:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7fac2bc28020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bc283a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fac2bc28530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fac2bc286c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fac2bc28850"/>
        <function-ref name="fired" scoped="" ref="0x7fac2bc289e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7fac2bc1e890" loc="79:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7fac2bc1e890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bc1ec10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fac2bc1eda0"/>
        <function-ref name="captured" scoped="" ref="0x7fac2bc1d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2bc1d1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2bc1d340"/>
        <function-ref name="setEdge" scoped="" ref="0x7fac2bc1d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7fac2bc27d40" loc="71:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7fac2bc27d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fac2bc260e0"/>
        <function-ref name="getControl" scoped="" ref="0x7fac2bc26270"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2bc26400"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fac2bc26590"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fac2bc26720"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2bc268b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fac2bc26a40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fac2bc26bd0"/>
        <function-ref name="setControl" scoped="" ref="0x7fac2bc26d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7fac2bc329e0" loc="60:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7fac2bc329e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2bc32d60"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fac2bc31020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2bc311b0"/>
        <function-ref name="get" scoped="" ref="0x7fac2bc31340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2bc314d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2bc31660"/>
        <function-ref name="getMode" scoped="" ref="0x7fac2bc317f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2bc31980"/>
        <function-ref name="overflow" scoped="" ref="0x7fac2bc31b10"/>
        <function-ref name="setMode" scoped="" ref="0x7fac2bc31ca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fac2bc31e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7fac2bc2e700" loc="63:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7fac2bc2e700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bc2ea80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fac2bc2ec10"/>
        <function-ref name="captured" scoped="" ref="0x7fac2bc2eda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2bc2d020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2bc2d1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fac2bc2d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7fac2bc1fa20" loc="78:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7fac2bc1fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bc1fda0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fac2bc1e020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fac2bc1e1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fac2bc1e340"/>
        <function-ref name="fired" scoped="" ref="0x7fac2bc1e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7fac2bc1bd40" loc="81:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7fac2bc1bd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bc1a0e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fac2bc1a270"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fac2bc1a400"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fac2bc1a590"/>
        <function-ref name="fired" scoped="" ref="0x7fac2bc1a720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7fac2bc2f700" loc="62:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7fac2bc2f700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bc2fb80"/>
        <function-ref name="setEvent" scoped="" ref="0x7fac2bc2fd10"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fac2bc2e020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fac2bc2e1b0"/>
        <function-ref name="fired" scoped="" ref="0x7fac2bc2e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7fac2bc1d8c0" loc="80:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7fac2bc1d8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fac2bc1dc40"/>
        <function-ref name="getControl" scoped="" ref="0x7fac2bc1ddd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2bc1b020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fac2bc1b1b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fac2bc1b340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2bc1b4d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fac2bc1b660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fac2bc1b7f0"/>
        <function-ref name="setControl" scoped="" ref="0x7fac2bc1b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fac2bbe1940" loc="55:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fac2bbe1940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac2bbe1cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fac2bbe12f0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fac2bbe12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac2bbe1670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fac2bbe0020" loc="56:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fac2bbe0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac2bbe03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fac2bbe2bf0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fac2bbe2bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac2bbe1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fac2bbe43e0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fac2bbe43e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2bbe4760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fac2bbe48f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2bbe4a80"/>
        <function-ref name="get" scoped="" ref="0x7fac2bbe4c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2bbe4da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2bbe2020"/>
        <function-ref name="getMode" scoped="" ref="0x7fac2bbe21b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2bbe2340"/>
        <function-ref name="overflow" scoped="" ref="0x7fac2bbe24d0"/>
        <function-ref name="setMode" scoped="" ref="0x7fac2bbe2660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fac2bbe27f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fac2bbda750" loc="55:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fac2bbda750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac2bbdaad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fac2bbda100" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fac2bbda100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac2bbda480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fac2bbdada0" loc="56:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fac2bbdada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac2bbd9180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fac2bbdba60" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fac2bbdba60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac2bbdbe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fac2bbdc260" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fac2bbdc260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2bbdc5e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fac2bbdc770"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2bbdc900"/>
        <function-ref name="get" scoped="" ref="0x7fac2bbdca90"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2bbdcc20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2bbdcdb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fac2bbdb020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2bbdb1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fac2bbdb340"/>
        <function-ref name="setMode" scoped="" ref="0x7fac2bbdb4d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fac2bbdb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fac2bb8f7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fac2bb8f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bb8fb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fac2bb8fcb0"/>
        <function-ref name="captured" scoped="" ref="0x7fac2bb8fe40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2bb8e020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2bb8e1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fac2bb8e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fac2bbd66d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fac2bbd66d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fac2bbd6a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fac2bbd6be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2bbd6d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fac2bb90020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fac2bb901b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2bb90340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fac2bb904d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fac2bb90660"/>
        <function-ref name="setControl" scoped="" ref="0x7fac2bb907f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fac2bb8dc50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fac2bb8dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac2bb8c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fac2bb90ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fac2bb90ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bb90e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fac2bb8f020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fac2bb8f1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fac2bb8f340"/>
        <function-ref name="fired" scoped="" ref="0x7fac2bb8f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fac2bb8e610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fac2bb8e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2bb8e990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fac2bb8eb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2bb8ecb0"/>
        <function-ref name="get" scoped="" ref="0x7fac2bb8ee40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2bb8d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2bb8d1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fac2bb8d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2bb8d4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fac2bb8d660"/>
        <function-ref name="setMode" scoped="" ref="0x7fac2bb8d7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fac2bb8d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fac2bb88cb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fac2bb88cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bb860a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fac2bb86230"/>
        <function-ref name="captured" scoped="" ref="0x7fac2bb863c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2bb86550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2bb866e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fac2bb86870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fac2bb8ab30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fac2bb8ab30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fac2bb89020"/>
        <function-ref name="getControl" scoped="" ref="0x7fac2bb891b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2bb89340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fac2bb894d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fac2bb89660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2bb897f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fac2bb89980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fac2bb89b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fac2bb89ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fac2bb842f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fac2bb842f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac2bb84670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fac2bb88020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fac2bb88020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bb883a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fac2bb88530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fac2bb886c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fac2bb88850"/>
        <function-ref name="fired" scoped="" ref="0x7fac2bb889e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fac2bb86b40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fac2bb86b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2bb85020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fac2bb851b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2bb85340"/>
        <function-ref name="get" scoped="" ref="0x7fac2bb854d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2bb85660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2bb857f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fac2bb85980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2bb85b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fac2bb85ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fac2bb85e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fac2bb84020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fac2bb7f2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fac2bb7f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bb7f670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fac2bb7f800"/>
        <function-ref name="captured" scoped="" ref="0x7fac2bb7f990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2bb7fb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2bb7fcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fac2bb7fe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fac2bb81220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fac2bb81220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fac2bb815a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fac2bb81730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2bb818c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fac2bb81a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fac2bb81be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2bb81d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fac2bb80020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fac2bb801b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fac2bb80340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fac2bb7d7a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fac2bb7d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac2bb7db20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fac2bb80610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fac2bb80610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bb80990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fac2bb80b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fac2bb80cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fac2bb80e40"/>
        <function-ref name="fired" scoped="" ref="0x7fac2bb7f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fac2bb7e160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fac2bb7e160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2bb7e4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fac2bb7e670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2bb7e800"/>
        <function-ref name="get" scoped="" ref="0x7fac2bb7e990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2bb7eb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2bb7ecb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fac2bb7ee40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2bb7d020"/>
        <function-ref name="overflow" scoped="" ref="0x7fac2bb7d1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fac2bb7d340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fac2bb7d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fac2bb777a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fac2bb777a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bb77b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fac2bb77cb0"/>
        <function-ref name="captured" scoped="" ref="0x7fac2bb77e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2bb76020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2bb761b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fac2bb76340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fac2bb7a6d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fac2bb7a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fac2bb7aa50"/>
        <function-ref name="getControl" scoped="" ref="0x7fac2bb7abe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2bb7ad70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fac2bb79020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fac2bb791b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2bb79340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fac2bb794d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fac2bb79660"/>
        <function-ref name="setControl" scoped="" ref="0x7fac2bb797f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fac2bb75c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fac2bb75c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac2bb74020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fac2bb79ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fac2bb79ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bb79e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fac2bb77020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fac2bb771b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fac2bb77340"/>
        <function-ref name="fired" scoped="" ref="0x7fac2bb774d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fac2bb76610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fac2bb76610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2bb76990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fac2bb76b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2bb76cb0"/>
        <function-ref name="get" scoped="" ref="0x7fac2bb76e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2bb75020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2bb751b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fac2bb75340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2bb754d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fac2bb75660"/>
        <function-ref name="setMode" scoped="" ref="0x7fac2bb757f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fac2bb75980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fac2bb70cb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fac2bb70cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bb6f0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fac2bb6f230"/>
        <function-ref name="captured" scoped="" ref="0x7fac2bb6f3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2bb6f550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2bb6f6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fac2bb6f870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fac2bb72b30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fac2bb72b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fac2bb71020"/>
        <function-ref name="getControl" scoped="" ref="0x7fac2bb711b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2bb71340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fac2bb714d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fac2bb71660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2bb717f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fac2bb71980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fac2bb71b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fac2bb71ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fac2bb6d2f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fac2bb6d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac2bb6d670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fac2bb70020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fac2bb70020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bb703a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fac2bb70530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fac2bb706c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fac2bb70850"/>
        <function-ref name="fired" scoped="" ref="0x7fac2bb709e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fac2bb6fb40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fac2bb6fb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2bb6e020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fac2bb6e1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2bb6e340"/>
        <function-ref name="get" scoped="" ref="0x7fac2bb6e4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2bb6e660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2bb6e7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fac2bb6e980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2bb6eb10"/>
        <function-ref name="overflow" scoped="" ref="0x7fac2bb6eca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fac2bb6ee30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fac2bb6d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fac2bb682f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fac2bb682f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bb68670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fac2bb68800"/>
        <function-ref name="captured" scoped="" ref="0x7fac2bb68990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2bb68b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2bb68cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fac2bb68e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fac2bb6a220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fac2bb6a220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fac2bb6a5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fac2bb6a730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2bb6a8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fac2bb6aa50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fac2bb6abe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2bb6ad70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fac2bb69020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fac2bb691b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fac2bb69340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fac2bb657a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fac2bb657a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac2bb65b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fac2bb69610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fac2bb69610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bb69990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fac2bb69b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fac2bb69cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fac2bb69e40"/>
        <function-ref name="fired" scoped="" ref="0x7fac2bb68020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fac2bb66160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fac2bb66160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2bb664e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fac2bb66670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2bb66800"/>
        <function-ref name="get" scoped="" ref="0x7fac2bb66990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2bb66b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2bb66cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fac2bb66e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2bb65020"/>
        <function-ref name="overflow" scoped="" ref="0x7fac2bb651b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fac2bb65340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fac2bb654d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fac2bb607a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fac2bb607a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bb60b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fac2bb60cb0"/>
        <function-ref name="captured" scoped="" ref="0x7fac2bb60e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2bb5f020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2bb5f1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fac2bb5f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fac2bb626d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fac2bb626d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fac2bb62a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fac2bb62be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2bb62d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fac2bb61020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fac2bb611b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2bb61340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fac2bb614d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fac2bb61660"/>
        <function-ref name="setControl" scoped="" ref="0x7fac2bb617f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fac2bb5ec50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fac2bb5ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac2bb5d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fac2bb61ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fac2bb61ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bb61e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fac2bb60020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fac2bb601b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fac2bb60340"/>
        <function-ref name="fired" scoped="" ref="0x7fac2bb604d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fac2bb5f610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fac2bb5f610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2bb5f990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fac2bb5fb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2bb5fcb0"/>
        <function-ref name="get" scoped="" ref="0x7fac2bb5fe40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2bb5e020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2bb5e1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fac2bb5e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2bb5e4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fac2bb5e660"/>
        <function-ref name="setMode" scoped="" ref="0x7fac2bb5e7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fac2bb5e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fac2bb59cb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fac2bb59cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bb570a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fac2bb57230"/>
        <function-ref name="captured" scoped="" ref="0x7fac2bb573c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2bb57550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2bb576e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fac2bb57870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fac2bb5bb30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fac2bb5bb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fac2bb5a020"/>
        <function-ref name="getControl" scoped="" ref="0x7fac2bb5a1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2bb5a340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fac2bb5a4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fac2bb5a660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2bb5a7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fac2bb5a980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fac2bb5ab10"/>
        <function-ref name="setControl" scoped="" ref="0x7fac2bb5aca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fac2bb552f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fac2bb552f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac2bb55670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fac2bb59020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fac2bb59020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bb593a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fac2bb59530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fac2bb596c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fac2bb59850"/>
        <function-ref name="fired" scoped="" ref="0x7fac2bb599e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fac2bb57b40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fac2bb57b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2bb56020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fac2bb561b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2bb56340"/>
        <function-ref name="get" scoped="" ref="0x7fac2bb564d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2bb56660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2bb567f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fac2bb56980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2bb56b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fac2bb56ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fac2bb56e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fac2bb55020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fac2bb502f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fac2bb502f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bb50670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fac2bb50800"/>
        <function-ref name="captured" scoped="" ref="0x7fac2bb50990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2bb50b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2bb50cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fac2bb50e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fac2bb52220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fac2bb52220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fac2bb525a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fac2bb52730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2bb528c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fac2bb52a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fac2bb52be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2bb52d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fac2bb51020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fac2bb511b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fac2bb51340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fac2bb4e7a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fac2bb4e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac2bb4eb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fac2bb51610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fac2bb51610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bb51990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fac2bb51b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fac2bb51cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fac2bb51e40"/>
        <function-ref name="fired" scoped="" ref="0x7fac2bb50020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fac2bb4f160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fac2bb4f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2bb4f4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fac2bb4f670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2bb4f800"/>
        <function-ref name="get" scoped="" ref="0x7fac2bb4f990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2bb4fb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2bb4fcb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fac2bb4fe40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2bb4e020"/>
        <function-ref name="overflow" scoped="" ref="0x7fac2bb4e1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fac2bb4e340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fac2bb4e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fac2bb497a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fac2bb497a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bb49b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fac2bb49cb0"/>
        <function-ref name="captured" scoped="" ref="0x7fac2bb49e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2bb48020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2bb481b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fac2bb48340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fac2bb4b6d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fac2bb4b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fac2bb4ba50"/>
        <function-ref name="getControl" scoped="" ref="0x7fac2bb4bbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2bb4bd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fac2bb4a020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fac2bb4a1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2bb4a340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fac2bb4a4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fac2bb4a660"/>
        <function-ref name="setControl" scoped="" ref="0x7fac2bb4a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fac2bb46c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fac2bb46c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac2bb45020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fac2bb4aac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fac2bb4aac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2bb4ae40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fac2bb49020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fac2bb491b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fac2bb49340"/>
        <function-ref name="fired" scoped="" ref="0x7fac2bb494d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fac2bb48610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fac2bb48610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2bb48990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fac2bb48b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2bb48cb0"/>
        <function-ref name="get" scoped="" ref="0x7fac2bb48e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2bb46020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2bb461b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fac2bb46340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2bb464d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fac2bb46660"/>
        <function-ref name="setMode" scoped="" ref="0x7fac2bb467f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fac2bb46980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7fac2bb40bc0" loc="7:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7fac2bb40bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac2bb3f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7fac2bb413f0" loc="4:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7fac2bb413f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac2bb41770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7fac2bb41b80" loc="5:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7fac2bb41b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac2bb40020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7fac2bb40430" loc="6:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7fac2bb40430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac2bb407b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fac2a7b2a80" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fac2a7b2a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2a7b2e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7fac2a7b1020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fac2a7b11b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fac2a7b1340"/>
        <function-ref name="fired" scoped="" ref="0x7fac2a7b14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fac2a7b4190" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fac2a7b4190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2a7b4510"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fac2a7b46a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2a7b4830"/>
        <function-ref name="get" scoped="" ref="0x7fac2a7b49c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2a7b4b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2a7b4ce0"/>
        <function-ref name="getMode" scoped="" ref="0x7fac2a7b4e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2a7b3030"/>
        <function-ref name="overflow" scoped="" ref="0x7fac2a7b31c0"/>
        <function-ref name="setMode" scoped="" ref="0x7fac2a7b3350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fac2a7b34e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fac2a7b8020" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fac2a7b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac2c0f7200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac2a7b6870"/>
        <function-ref name="fired" scoped="" ref="0x7fac2a7b7840"/>
        <function-ref name="startAt" scoped="" ref="0x7fac2a7b6220"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac2a7b7d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fac2a7b6d30"/>
        <function-ref name="start" scoped="" ref="0x7fac2a7b8e30"/>
        <function-ref name="stop" scoped="" ref="0x7fac2a7b7380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac2a7b9660" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fac2a7b9660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac2a7b99e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fac2a7b3770" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fac2a7b3770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fac2a7b3af0"/>
        <function-ref name="getControl" scoped="" ref="0x7fac2a7b3c80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2a7b3e10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fac2a7b2020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fac2a7b21b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2a7b2340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fac2a7b24d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fac2a7b2660"/>
        <function-ref name="setControl" scoped="" ref="0x7fac2a7b27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fac2bab78c0" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fac2bab78c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac2c0f89f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac2babb700"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2bab60d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2babbbc0"/>
        <function-ref name="overflow" scoped="" ref="0x7fac2bab6590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7fac2bab58e0" loc="43:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fac2bab58e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac2c0f7200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac2bab2780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2bab1150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2bab2c40"/>
        <function-ref name="overflow" scoped="" ref="0x7fac2bab1610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fac2baa0c50" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fac2baa0c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2ba9f020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fac2ba9f1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2ba9f340"/>
        <function-ref name="get" scoped="" ref="0x7fac2ba9f4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2ba9f660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2ba9f7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fac2ba9f980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2ba9fb10"/>
        <function-ref name="overflow" scoped="" ref="0x7fac2ba9fca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fac2ba9fe30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fac2ba9e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fac2baaeb80" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fac2baaeb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac2c0f7200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac2baad9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2baa0360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2baade70"/>
        <function-ref name="overflow" scoped="" ref="0x7fac2baa0820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fac2ba7c0f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fac2ba7c0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac2c0f7200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac2ba7b020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2ba7b9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2ba7b4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fac2ba7be60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fac2ba9acf0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fac2ba9acf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac2c0f89f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac2ba7fb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2ba7e550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2ba7e090"/>
        <function-ref name="overflow" scoped="" ref="0x7fac2ba7ea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fac2a7d1890" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fac2a7d1890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac2c0f89f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac2a7cd0d0"/>
        <function-ref name="fired" scoped="" ref="0x7fac2a7cf0d0"/>
        <function-ref name="startAt" scoped="" ref="0x7fac2a7cfa50"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac2a7cf590"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fac2a7cd590"/>
        <function-ref name="start" scoped="" ref="0x7fac2a7d06e0"/>
        <function-ref name="stop" scoped="" ref="0x7fac2a7d0bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fac2a7ca0a0" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fac2a7ca0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac2c0f7200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac2a7c8b30"/>
        <function-ref name="fired" scoped="" ref="0x7fac2a7c99f0"/>
        <function-ref name="startAt" scoped="" ref="0x7fac2a7c84e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac2a7c8020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fac2a7c6020"/>
        <function-ref name="start" scoped="" ref="0x7fac2a7c9020"/>
        <function-ref name="stop" scoped="" ref="0x7fac2a7c9530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fac2a7cdc00" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fac2a7cdc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac2c0f89f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac2a7cca80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2a7cb4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2a7cb020"/>
        <function-ref name="overflow" scoped="" ref="0x7fac2a7cb9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7fac2ba089c0" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7fac2ba089c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac2ba08d40"/>
        <function-ref name="runTask" scoped="" ref="0x7fac2ba07020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fac2ba0c850" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fac2ba0c850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac2c0f89f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac2ba08090"/>
        <function-ref name="fired" scoped="" ref="0x7fac2ba09090"/>
        <function-ref name="startAt" scoped="" ref="0x7fac2ba09a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac2ba09550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fac2ba08550"/>
        <function-ref name="start" scoped="" ref="0x7fac2ba0b6a0"/>
        <function-ref name="stop" scoped="" ref="0x7fac2ba0bbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fac2ba112f0" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fac2ba112f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac2c0f89f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac2ba0d870"/>
        <function-ref name="fired" scoped="" ref="0x7fac2ba10e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fac2ba0ec00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fac2ba0e780"/>
        <function-ref name="getdt" scoped="" ref="0x7fac2ba0c1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7fac2ba0dcf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac2ba0e300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fac2ba10020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fac2ba0d260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fac2ba104f0"/>
        <function-ref name="stop" scoped="" ref="0x7fac2ba109c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fac2b989020" loc="58:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7fac2b989020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac2c0f89f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac2b985630"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b988a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fac2b987920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fac2b9874a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fac2b984020"/>
        <function-ref name="gett0" scoped="" ref="0x7fac2b985ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac2b987020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fac2b989c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fac2b985020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fac2b988110"/>
        <function-ref name="stop" scoped="" ref="0x7fac2b9885e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7fac2b984450" loc="59:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSkew" scoped="" ref="0x7fac2b984450"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7fac2b9847d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fac2b9908e0" loc="57:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fac2b9908e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac2c0f89f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac2b98b020"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b98e4c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fac2b98c300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fac2b98ee00"/>
        <function-ref name="getdt" scoped="" ref="0x7fac2b98b960"/>
        <function-ref name="gett0" scoped="" ref="0x7fac2b98b4c0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac2b98e960"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fac2b98f560"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fac2b98c930"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fac2b98fa50"/>
        <function-ref name="stop" scoped="" ref="0x7fac2b98e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7fac2a5d4100" loc="153:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7fac2a5d4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac2a5d4480"/>
        <function-ref name="runTask" scoped="" ref="0x7fac2a5d4610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fac2a5db3d0" loc="65:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7fac2a5db3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac2c0f89f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac2a5d7870"/>
        <function-ref name="fired" scoped="" ref="0x7fac2a5dae40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fac2a5d8c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fac2a5d8780"/>
        <function-ref name="getdt" scoped="" ref="0x7fac2a5d61e0"/>
        <function-ref name="gett0" scoped="" ref="0x7fac2a5d7cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac2a5d8300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fac2a5da020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fac2a5d7260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fac2a5da4f0"/>
        <function-ref name="stop" scoped="" ref="0x7fac2a5da9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7fac2a5d5a40" loc="67:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSkew" scoped="" ref="0x7fac2a5d5a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7fac2a5d5dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Platform" ref="0x7fac2a5d65d0" loc="66:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7fac2a5d65d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7fac2a5d5660"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7fac2a5d57f0"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7fac2a5d6c70"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7fac2a5d6e00"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7fac2a5d5020"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7fac2a5d51b0"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7fac2a5d5340"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7fac2a5d54d0"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7fac2a5d6950"/>
        <function-ref name="node_id" scoped="" ref="0x7fac2a5d6ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fac2a5e2db0" loc="63:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fac2a5e2db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac2c0f89f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac2a5dc470"/>
        <function-ref name="fired" scoped="" ref="0x7fac2a5e09b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fac2a5de7c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fac2a5de320"/>
        <function-ref name="getdt" scoped="" ref="0x7fac2a5dcdb0"/>
        <function-ref name="gett0" scoped="" ref="0x7fac2a5dc910"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac2a5e0e50"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fac2a5e1a80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fac2a5dedf0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fac2a5e0020"/>
        <function-ref name="stop" scoped="" ref="0x7fac2a5e0510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fac2b981020" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fac2b981020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac2c0f89f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac2b981c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fac2b977300" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fac2b977300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac2c0f89f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac2b976150"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2b976ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2b976610"/>
        <function-ref name="overflow" scoped="" ref="0x7fac2b974020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fac2b968260" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="SlaveAppC.TimerLeds"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fac2b968260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac2c0f89f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac2b9656e0"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b967ca0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fac2b966a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fac2b9665f0"/>
        <function-ref name="getdt" scoped="" ref="0x7fac2b964020"/>
        <function-ref name="gett0" scoped="" ref="0x7fac2b965b60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac2b966170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fac2b968e50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fac2b9650d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fac2b967350"/>
        <function-ref name="stop" scoped="" ref="0x7fac2b967820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fac2b955cc0" loc="55:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fac2b955cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fac2b9540a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fac2b954230"/>
        <function-ref name="start" scoped="" ref="0x7fac2b9543c0"/>
        <function-ref name="stop" scoped="" ref="0x7fac2b954550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fac2b9472c0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fac2b9472c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fac2bd0dd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fac2b947640"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fac2b9477d0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fac2b947960"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fac2b947af0"/>
        <function-ref name="setCca" scoped="" ref="0x7fac2b947c80"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fac2b947e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fac2b93b1d0" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7fac2b93b1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fac2bd0dd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fac2b93b650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fac2b9508f0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fac2b9508f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2b950c70"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fac2b950e00"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2b94f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2b94f1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fac2b94f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fac2b954d20" loc="56:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fac2b954d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fac2bd0dd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac2b9530e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2b953270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2b953400"/>
        <function-ref name="cancel" scoped="" ref="0x7fac2b953590"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac2b953720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fac2b952c00" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fac2b952c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fac2bd0dd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac2b951020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fac2b94f610" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fac2b94f610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fac2b94f990"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fac2b94fb20"/>
        <function-ref name="getRssi" scoped="" ref="0x7fac2b94fcb0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fac2b94fe40"/>
        <function-ref name="getPower" scoped="" ref="0x7fac2b94e020"/>
        <function-ref name="getLqi" scoped="" ref="0x7fac2b94e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fac2b936130" loc="65:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fac2b936130"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fac2b9364b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fac2b936640"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fac2b9367d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fac2b936960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fac2b952020" loc="57:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fac2b952020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fac2bd0dd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac2b9523a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fac2b94d080" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fac2b94d080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fac2b94d400"/>
        <function-ref name="noAck" scoped="" ref="0x7fac2b94d590"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fac2b94d720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fac2b92d430" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fac2b92d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fac2b92d7b0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fac2b92d940"/>
        <function-ref name="getRetries" scoped="" ref="0x7fac2b92dad0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fac2b92dc60"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fac2b92ddf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fac2b9512d0" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fac2b9512d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fac2b951650"/>
        <function-ref name="source" scoped="" ref="0x7fac2b9517e0"/>
        <function-ref name="address" scoped="" ref="0x7fac2b951970"/>
        <function-ref name="destination" scoped="" ref="0x7fac2b951b00"/>
        <function-ref name="setSource" scoped="" ref="0x7fac2b951c90"/>
        <function-ref name="setDestination" scoped="" ref="0x7fac2b951e20"/>
        <function-ref name="type" scoped="" ref="0x7fac2b950020"/>
        <function-ref name="setType" scoped="" ref="0x7fac2b9501b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fac2b950340"/>
        <function-ref name="setGroup" scoped="" ref="0x7fac2b9504d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7fac2b950660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fac2b943170" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fac2b943170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fac2b9434f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fac2b928020" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fac2b928020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fac2b9283a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fac2b928530"/>
        <function-ref name="start" scoped="" ref="0x7fac2b9286c0"/>
        <function-ref name="stop" scoped="" ref="0x7fac2b928850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fac2b9159d0" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fac2b9159d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fac2b915d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fac2b914b70" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fac2b914b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fac2b913020"/>
        <function-ref name="setRetries" scoped="" ref="0x7fac2b9131b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7fac2b913340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fac2b9134d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fac2b913660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fac2b916020" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fac2b916020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fac2b9163a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fac2b916530"/>
        <function-ref name="getRssi" scoped="" ref="0x7fac2b9166c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fac2b916850"/>
        <function-ref name="getPower" scoped="" ref="0x7fac2b9169e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fac2b916b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fac2b920a70" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fac2b920a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac2b920df0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2b919020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2b9191b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fac2b919340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac2b9194d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fac2b914080" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fac2b914080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fac2b914400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fac2b914590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fac2b914720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fac2b9148b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fac2b921690" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7fac2b921690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac2b921a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fac2b915020" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fac2b915020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fac2b9153a0"/>
        <function-ref name="noAck" scoped="" ref="0x7fac2b915530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fac2b9156c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac2b927530" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fac2b927530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac2b9278b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac2b927a40"/>
        <function-ref name="request" scoped="" ref="0x7fac2b927bd0"/>
        <function-ref name="granted" scoped="" ref="0x7fac2b927d60"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac2b926020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fac2b918940" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7fac2b918940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac2b918cc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2b918e50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2b921020"/>
        <function-ref name="cancel" scoped="" ref="0x7fac2b9211b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac2b921340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fac2b921d50" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fac2b921d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2b920100"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fac2b920290"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2b920420"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2b9205b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fac2b920740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fac2b919840" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fac2b919840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac2b919bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fac2b910390" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fac2b910390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fac2b910710"/>
        <function-ref name="stopDone" scoped="" ref="0x7fac2b9108a0"/>
        <function-ref name="start" scoped="" ref="0x7fac2b910a30"/>
        <function-ref name="stop" scoped="" ref="0x7fac2b910bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fac2b90e330" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fac2b90e330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fac2b90e6b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fac2b90e840"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fac2b90e9d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fac2b90eb60"/>
        <function-ref name="setCca" scoped="" ref="0x7fac2b90ecf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fac2b90ee80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fac2b910e80" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fac2b910e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac2b90f220"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2b90f3b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2b90f540"/>
        <function-ref name="cancel" scoped="" ref="0x7fac2b90f6d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac2b90f860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fac2b90fb40" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fac2b90fb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac2b90e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fac2b90de70" loc="39:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fac2b90de70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fac2b909220"/>
        <function-ref name="stopDone" scoped="" ref="0x7fac2b9093b0"/>
        <function-ref name="start" scoped="" ref="0x7fac2b909540"/>
        <function-ref name="stop" scoped="" ref="0x7fac2b9096d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fac2b9087e0" loc="41:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fac2b9087e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fac2b908b60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fac2b908cf0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fac2b908e80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fac2b907030"/>
        <function-ref name="setCca" scoped="" ref="0x7fac2b9071c0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fac2b907350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7fac2b8fd060" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7fac2b8fd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fac2b8fd3e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fac2b8fd570"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fac2b8fd700"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fac2b8fd890"/>
        <function-ref name="setCca" scoped="" ref="0x7fac2b8fda20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fac2b8fdbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fac2b8f2330" loc="50:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fac2b8f2330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fac2b8f26b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fac2b8f2840"/>
        <function-ref name="getRssi" scoped="" ref="0x7fac2b8f29d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fac2b8f2b60"/>
        <function-ref name="getPower" scoped="" ref="0x7fac2b8f2cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fac2b8f2e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7fac2b8f42a0" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7fac2b8f42a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac2b8f4620"/>
        <function-ref name="cancel" scoped="" ref="0x7fac2b8f47b0"/>
        <function-ref name="modify" scoped="" ref="0x7fac2b8f4940"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac2b8f4ad0"/>
        <function-ref name="resend" scoped="" ref="0x7fac2b8f4c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fac2b909990" loc="40:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fac2b909990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac2b909d10"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2b908020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2b9081b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fac2b908340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac2b9084d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fac2b8f1420" loc="48:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fac2b8f1420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fac2b8f17a0"/>
        <function-ref name="rand32" scoped="" ref="0x7fac2b8f1930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fac2b8fb760" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7fac2b8fb760"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fac2b8fbae0"/>
        <function-ref name="stop" scoped="" ref="0x7fac2b8fbc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fac2b8ea920" loc="51:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac2b8ea920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fac2b8eaca0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fac2b8eae30"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fac2b8ee020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7fac2b8ffb50" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fac2b8ffb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fac2b905020"/>
        <function-ref name="rfOff" scoped="" ref="0x7fac2b9051b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7fac2b905340"/>
        <function-ref name="startVReg" scoped="" ref="0x7fac2b9054d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fac2b905660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fac2b9057f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fac2b905980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fac2b905b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fac2b8f1bf0" loc="49:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fac2b8f1bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fac2b8f3020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fac2b8f31b0"/>
        <function-ref name="led1On" scoped="" ref="0x7fac2b8f3340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fac2b8f34d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fac2b8f3660"/>
        <function-ref name="get" scoped="" ref="0x7fac2b8f37f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fac2b8f3980"/>
        <function-ref name="led2Off" scoped="" ref="0x7fac2b8f2020"/>
        <function-ref name="set" scoped="" ref="0x7fac2b8f3b10"/>
        <function-ref name="led0On" scoped="" ref="0x7fac2b8f3ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7fac2b8f3e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fac2b907640" loc="43:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fac2b907640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac2b9079c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac2b907b50"/>
        <function-ref name="request" scoped="" ref="0x7fac2b907ce0"/>
        <function-ref name="granted" scoped="" ref="0x7fac2b907e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac2b906030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7fac2b8ed110" loc="52:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7fac2b8ed110"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fac2b8ed590"/>
        <function-ref name="toIdle" scoped="" ref="0x7fac2b8ed720"/>
        <function-ref name="isState" scoped="" ref="0x7fac2b8ed8b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fac2b8eda40"/>
        <function-ref name="requestState" scoped="" ref="0x7fac2b8edbd0"/>
        <function-ref name="forceState" scoped="" ref="0x7fac2b8edd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7fac2b8e0b70" loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7fac2b8e0b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac2b8de020"/>
        <function-ref name="runTask" scoped="" ref="0x7fac2b8de1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7fac2b8e1ba0" loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7fac2b8e1ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac2b8e0020"/>
        <function-ref name="runTask" scoped="" ref="0x7fac2b8e01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7fac2b8e2c20" loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7fac2b8e2c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac2b8e1020"/>
        <function-ref name="runTask" scoped="" ref="0x7fac2b8e11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7fac2b888dc0" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fac2b888dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fac2b894180"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fac2b894310"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fac2b8944a0"/>
        <function-ref name="syncDone" scoped="" ref="0x7fac2b894630"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fac2b8947c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fac2b894950"/>
        <function-ref name="setChannel" scoped="" ref="0x7fac2b894ae0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fac2b894c70"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fac2b894e00"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fac2b893020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fac2b8931b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fac2b893340"/>
        <function-ref name="sync" scoped="" ref="0x7fac2b8934d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fac2b893760"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fac2b8938f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7fac2b8850c0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7fac2b8850c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b885cb0"/>
        <function-ref name="readDone" scoped="" ref="0x7fac2b884170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7fac2b893bf0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fac2b893bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fac2b887020"/>
        <function-ref name="rfOff" scoped="" ref="0x7fac2b8871b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7fac2b887340"/>
        <function-ref name="startVReg" scoped="" ref="0x7fac2b8874d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fac2b887660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fac2b8877f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fac2b887980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fac2b887b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac2b898950" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fac2b898950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac2b898cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac2b898e60"/>
        <function-ref name="request" scoped="" ref="0x7fac2b895020"/>
        <function-ref name="granted" scoped="" ref="0x7fac2b8951b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac2b895340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7fac2b87e970" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fac2b87e970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fac2b87ecf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fac2b87ee80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fac2b87d030"/>
        <function-ref name="syncDone" scoped="" ref="0x7fac2b87d1c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fac2b87d350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fac2b87d4e0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fac2b87d670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fac2b87d800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fac2b87d990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fac2b87db20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fac2b87dcb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fac2b87de40"/>
        <function-ref name="sync" scoped="" ref="0x7fac2b87c020"/>
        <function-ref name="getChannel" scoped="" ref="0x7fac2b87c2b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fac2b87c440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7fac2b85c1e0" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fac2b85c1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b85c560"/>
        <function-ref name="write" scoped="" ref="0x7fac2b85c6f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7fac2b877020" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fac2b877020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fac2b8773a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7fac2b877a10" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7fac2b877a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac2c0f7200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac2b8732a0"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b8752a0"/>
        <function-ref name="startAt" scoped="" ref="0x7fac2b875c20"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac2b875760"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fac2b873760"/>
        <function-ref name="start" scoped="" ref="0x7fac2b876890"/>
        <function-ref name="stop" scoped="" ref="0x7fac2b876da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7fac2b85d020" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fac2b85d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b85d3a0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b85d530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7fac2b872e70" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7fac2b872e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b871220"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b8713b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b871540"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b8716d0"/>
        <function-ref name="get" scoped="" ref="0x7fac2b871860"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b8719f0"/>
        <function-ref name="set" scoped="" ref="0x7fac2b871b80"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b871d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7fac2b87bb40" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7fac2b87bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b87a750"/>
        <function-ref name="readDone" scoped="" ref="0x7fac2b87abd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7fac2b84aca0" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7fac2b84aca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac2b8490a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fac2b849230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7fac2b85ca80" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fac2b85ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b85ce00"/>
        <function-ref name="write" scoped="" ref="0x7fac2b85b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7fac2b85b3c0" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fac2b85b3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b85b740"/>
        <function-ref name="write" scoped="" ref="0x7fac2b85b8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7fac2b85ecd0" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fac2b85ecd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b8650a0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b865230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fac2b866390" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fac2b866390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fac2b866710"/>
        <function-ref name="changed" scoped="" ref="0x7fac2b8668a0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fac2b866a30"/>
        <function-ref name="setAddress" scoped="" ref="0x7fac2b866bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fac2b873c50" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fac2b873c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b872020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b8721b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b872340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b8724d0"/>
        <function-ref name="get" scoped="" ref="0x7fac2b872660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b8727f0"/>
        <function-ref name="set" scoped="" ref="0x7fac2b872980"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b872b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7fac2b859450" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fac2b859450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b8599d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7fac2b8700f0" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7fac2b8700f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b870470"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b870600"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b870790"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b870920"/>
        <function-ref name="get" scoped="" ref="0x7fac2b870ab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b870c40"/>
        <function-ref name="set" scoped="" ref="0x7fac2b870dd0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b86f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac2b87f510" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fac2b87f510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac2b87f890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7fac2b85d8f0" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fac2b85d8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b85dc70"/>
        <function-ref name="write" scoped="" ref="0x7fac2b85de00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7fac2b859d70" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fac2b859d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b858180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fac2b858520" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fac2b858520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac2b8588a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac2b858a30"/>
        <function-ref name="request" scoped="" ref="0x7fac2b858bc0"/>
        <function-ref name="granted" scoped="" ref="0x7fac2b858d50"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac2b856020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7fac2b855180" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7fac2b855180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac2b855500"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac2b855690"/>
        <function-ref name="request" scoped="" ref="0x7fac2b855820"/>
        <function-ref name="granted" scoped="" ref="0x7fac2b8559b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac2b855b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7fac2b87c740" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fac2b87c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fac2b87cac0"/>
        <function-ref name="rfOff" scoped="" ref="0x7fac2b87cc50"/>
        <function-ref name="rxOn" scoped="" ref="0x7fac2b87cde0"/>
        <function-ref name="startVReg" scoped="" ref="0x7fac2b87b020"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fac2b87b1b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fac2b87b340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fac2b87b4d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fac2b87b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7fac2b8655d0" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fac2b8655d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b865950"/>
        <function-ref name="write" scoped="" ref="0x7fac2b865ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7fac2b85e420" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fac2b85e420"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b85e7a0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b85e930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7fac2b857570" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fac2b857570"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b8578f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fac2b855e00" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fac2b855e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fac2b8541c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fac2b854350"/>
        <function-ref name="led1On" scoped="" ref="0x7fac2b8544e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fac2b854670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fac2b854800"/>
        <function-ref name="get" scoped="" ref="0x7fac2b854990"/>
        <function-ref name="led1Off" scoped="" ref="0x7fac2b854b20"/>
        <function-ref name="led2Off" scoped="" ref="0x7fac2b8531b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2b854cb0"/>
        <function-ref name="led0On" scoped="" ref="0x7fac2b854e40"/>
        <function-ref name="led2On" scoped="" ref="0x7fac2b853020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7fac2b84cdb0" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7fac2b84cdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac2b84a180"/>
        <function-ref name="runTask" scoped="" ref="0x7fac2b84a310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac2b87fb80" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fac2b87fb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac2b87e020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac2b87e1b0"/>
        <function-ref name="request" scoped="" ref="0x7fac2b87e340"/>
        <function-ref name="granted" scoped="" ref="0x7fac2b87e4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac2b87e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7fac2b861e20" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fac2b861e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b8691c0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b869350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7fac2b8614a0" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fac2b8614a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b861920"/>
        <function-ref name="write" scoped="" ref="0x7fac2b861ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7fac2b86bc00" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7fac2b86bc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac2b86e020"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b86e1b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fac2b86e340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fac2b86e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7fac2b8563d0" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7fac2b8563d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac2b856750"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac2b8568e0"/>
        <function-ref name="request" scoped="" ref="0x7fac2b856a70"/>
        <function-ref name="granted" scoped="" ref="0x7fac2b856c00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac2b856d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7fac2b857c80" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fac2b857c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b8590a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac2b7d47e0" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fac2b7d47e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac2b7d4b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7fac2b7d0220" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7fac2b7d0220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac2c0f7200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac2b7ceb30"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b7cfa60"/>
        <function-ref name="startAt" scoped="" ref="0x7fac2b7ce4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac2b7ce020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fac2b7cd020"/>
        <function-ref name="start" scoped="" ref="0x7fac2b7cf090"/>
        <function-ref name="stop" scoped="" ref="0x7fac2b7cf5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac2b7ca260" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fac2b7ca260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac2b7ca5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7fac2b7caaf0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7fac2b7caaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac2c0f7200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac2b790390"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b791360"/>
        <function-ref name="startAt" scoped="" ref="0x7fac2b791ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac2b791820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fac2b790850"/>
        <function-ref name="start" scoped="" ref="0x7fac2b792970"/>
        <function-ref name="stop" scoped="" ref="0x7fac2b792e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fac2a57d020" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fac2a57d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac2c0f7200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac2a57b870"/>
        <function-ref name="fired" scoped="" ref="0x7fac2a57c840"/>
        <function-ref name="startAt" scoped="" ref="0x7fac2a57b220"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac2a57cd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fac2a57bd30"/>
        <function-ref name="start" scoped="" ref="0x7fac2a57de30"/>
        <function-ref name="stop" scoped="" ref="0x7fac2a57c380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac2a57e720" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fac2a57e720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac2a57eaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fac2a576020" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fac2a576020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac2c0f7200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac2a573870"/>
        <function-ref name="fired" scoped="" ref="0x7fac2a575840"/>
        <function-ref name="startAt" scoped="" ref="0x7fac2a573220"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac2a575d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fac2a573d30"/>
        <function-ref name="start" scoped="" ref="0x7fac2a576e30"/>
        <function-ref name="stop" scoped="" ref="0x7fac2a575380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac2a577760" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fac2a577760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac2a577ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fac2a55d8f0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fac2a55d8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2a55dc70"/>
        <function-ref name="setEvent" scoped="" ref="0x7fac2a55de00"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fac2a55c020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fac2a55c1b0"/>
        <function-ref name="fired" scoped="" ref="0x7fac2a55c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fac2a561e70" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fac2a561e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2a560220"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fac2a5603b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2a560540"/>
        <function-ref name="get" scoped="" ref="0x7fac2a5606d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2a560860"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2a5609f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fac2a560b80"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2a560d10"/>
        <function-ref name="overflow" scoped="" ref="0x7fac2a55e020"/>
        <function-ref name="setMode" scoped="" ref="0x7fac2a55e1b0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fac2a55e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fac2a55e5d0" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fac2a55e5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fac2a55e950"/>
        <function-ref name="getControl" scoped="" ref="0x7fac2a55eae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2a55ec70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fac2a55ee00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fac2a55d020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2a55d1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fac2a55d340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fac2a55d4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fac2a55d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fac2a553760" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fac2a553760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2a553ae0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fac2a553c70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fac2a553e00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fac2a552020"/>
        <function-ref name="fired" scoped="" ref="0x7fac2a5521b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fac2a557dd0" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fac2a557dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2a555180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fac2a555310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2a5554a0"/>
        <function-ref name="get" scoped="" ref="0x7fac2a555630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2a5557c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2a555950"/>
        <function-ref name="getMode" scoped="" ref="0x7fac2a555ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2a555c70"/>
        <function-ref name="overflow" scoped="" ref="0x7fac2a555e00"/>
        <function-ref name="setMode" scoped="" ref="0x7fac2a554020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fac2a5541b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fac2a55abd0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fac2a55abd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac2c0f7200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac2a5574e0"/>
        <function-ref name="fired" scoped="" ref="0x7fac2a5584e0"/>
        <function-ref name="startAt" scoped="" ref="0x7fac2a558e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac2a5589a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fac2a5579a0"/>
        <function-ref name="start" scoped="" ref="0x7fac2a559a80"/>
        <function-ref name="stop" scoped="" ref="0x7fac2a558020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac2a55a340" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fac2a55a340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac2a55a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fac2a554440" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fac2a554440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fac2a5547c0"/>
        <function-ref name="getControl" scoped="" ref="0x7fac2a554950"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2a554ae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fac2a554c70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fac2a554e00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2a553020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fac2a5531b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fac2a553340"/>
        <function-ref name="setControl" scoped="" ref="0x7fac2a5534d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fac2b7b4080" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fac2b7b4080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac2c0f7200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac2b7b3020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2b7b39a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2b7b34e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fac2b7b3e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fac2b7ac0f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fac2b7ac0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac2c0f7200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac2b7aa020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2b7aa9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2b7aa4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fac2b7aae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fac2b7afcd0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fac2b7afcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac2c0f7200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac2b7aeb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2b7ad550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2b7ad090"/>
        <function-ref name="overflow" scoped="" ref="0x7fac2b7ada10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fac2a5701d0" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fac2a5701d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac2c0f7200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac2a56eb30"/>
        <function-ref name="fired" scoped="" ref="0x7fac2a56f9f0"/>
        <function-ref name="startAt" scoped="" ref="0x7fac2a56e4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac2a56e020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fac2a56c020"/>
        <function-ref name="start" scoped="" ref="0x7fac2a56f020"/>
        <function-ref name="stop" scoped="" ref="0x7fac2a56f530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fac2a56ab90" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fac2a56ab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac2c0f7200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac2a5674e0"/>
        <function-ref name="fired" scoped="" ref="0x7fac2a5684e0"/>
        <function-ref name="startAt" scoped="" ref="0x7fac2a568e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac2a5689a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fac2a5679a0"/>
        <function-ref name="start" scoped="" ref="0x7fac2a5699d0"/>
        <function-ref name="stop" scoped="" ref="0x7fac2a568020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fac2a56c690" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fac2a56c690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac2c0f7200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac2a56b5b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2a56a020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2a56ba70"/>
        <function-ref name="overflow" scoped="" ref="0x7fac2a56a4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7fac2b78a090" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7fac2b78a090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b78a410"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b78a5a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b78a730"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b78a8c0"/>
        <function-ref name="get" scoped="" ref="0x7fac2b78aa50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b78abe0"/>
        <function-ref name="set" scoped="" ref="0x7fac2b78ad70"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b789020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7fac2b789390" loc="45:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7fac2b789390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b789710"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b7898a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b789a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b789bc0"/>
        <function-ref name="get" scoped="" ref="0x7fac2b789d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b787020"/>
        <function-ref name="set" scoped="" ref="0x7fac2b7871b0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b787340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7fac2b7876a0" loc="46:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7fac2b7876a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b787a20"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b787bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b787d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b786020"/>
        <function-ref name="get" scoped="" ref="0x7fac2b7861b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b786340"/>
        <function-ref name="set" scoped="" ref="0x7fac2b7864d0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b786660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7fac2b78ce60" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fac2b78ce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b78b210"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b78b3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b78b530"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b78b6c0"/>
        <function-ref name="get" scoped="" ref="0x7fac2b78b850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b78b9e0"/>
        <function-ref name="set" scoped="" ref="0x7fac2b78bb70"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b78bd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7fac2b785ce0" loc="48:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7fac2b785ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b7840a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b784230"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b7843c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b784550"/>
        <function-ref name="get" scoped="" ref="0x7fac2b7846e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b784870"/>
        <function-ref name="set" scoped="" ref="0x7fac2b784a00"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b784b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7fac2b7d2b10" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7fac2b7d2b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b78c020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b78c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b78c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b78c4d0"/>
        <function-ref name="get" scoped="" ref="0x7fac2b78c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b78c7f0"/>
        <function-ref name="set" scoped="" ref="0x7fac2b78c980"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b78cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7fac2b7869b0" loc="47:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7fac2b7869b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b786d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b785020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b7851b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b785340"/>
        <function-ref name="get" scoped="" ref="0x7fac2b7854d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b785660"/>
        <function-ref name="set" scoped="" ref="0x7fac2b7857f0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b785980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fac2b7812f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fac2b7812f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b781670"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b781800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2b781990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2b77f660"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b781cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b781e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2b780020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2b7801b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b780340"/>
        <function-ref name="get" scoped="" ref="0x7fac2b7804d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2b780660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2b7807f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2b780980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2b780c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2b780da0"/>
        <function-ref name="set" scoped="" ref="0x7fac2b77f020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2b77f1b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2b77f340"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b781b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2b77f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fac2b782020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fac2b782020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b7823a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b782530"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b7826c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b782850"/>
        <function-ref name="get" scoped="" ref="0x7fac2b7829e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b782b70"/>
        <function-ref name="set" scoped="" ref="0x7fac2b782d00"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b781020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fac2b77c7a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fac2b77c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b77cb20"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b77ccb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2b77ce40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2b77aa80"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b77b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b77b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2b77b4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2b77b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b77b7f0"/>
        <function-ref name="get" scoped="" ref="0x7fac2b77b980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2b77bb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2b77bca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2b77be30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2b77a120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2b77a2b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2b77a440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2b77a5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2b77a760"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b77b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2b77a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fac2b77d630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fac2b77d630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b77d9b0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b77db40"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b77dcd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b77de60"/>
        <function-ref name="get" scoped="" ref="0x7fac2b77c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b77c1b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2b77c340"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b77c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fac2b777c60" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fac2b777c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b776020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b7761b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2b776340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2b774020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b776660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b7767f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2b776980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2b776b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b776ca0"/>
        <function-ref name="get" scoped="" ref="0x7fac2b776e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2b775020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2b7751b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2b775340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2b7755d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2b775760"/>
        <function-ref name="set" scoped="" ref="0x7fac2b7758f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2b775a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2b775c10"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b7764d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2b775da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fac2b778b00" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fac2b778b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b778e80"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b777030"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b7771c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b777350"/>
        <function-ref name="get" scoped="" ref="0x7fac2b7774e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b777670"/>
        <function-ref name="set" scoped="" ref="0x7fac2b777800"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b777990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fac2b7712f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fac2b7712f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b771670"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b771800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2b771990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2b76e660"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b771cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b771e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2b76f020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2b76f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b76f340"/>
        <function-ref name="get" scoped="" ref="0x7fac2b76f4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2b76f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2b76f7f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2b76f980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2b76fc10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2b76fda0"/>
        <function-ref name="set" scoped="" ref="0x7fac2b76e020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2b76e1b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2b76e340"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b771b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2b76e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fac2b772020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fac2b772020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b7723a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b772530"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b7726c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b772850"/>
        <function-ref name="get" scoped="" ref="0x7fac2b7729e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b772b70"/>
        <function-ref name="set" scoped="" ref="0x7fac2b772d00"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b771020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fac2b76b7a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fac2b76b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b76bb20"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b76bcb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2b76be40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2b769a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b76a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b76a340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2b76a4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2b76a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b76a7f0"/>
        <function-ref name="get" scoped="" ref="0x7fac2b76a980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2b76ab10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2b76aca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2b76ae30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2b769120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2b7692b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2b769440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2b7695d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2b769760"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b76a020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2b7698f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fac2b76c630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fac2b76c630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b76c9b0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b76cb40"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b76ccd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b76ce60"/>
        <function-ref name="get" scoped="" ref="0x7fac2b76b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b76b1b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2b76b340"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b76b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fac2b766c60" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fac2b766c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b765020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b7651b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2b765340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2b763020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b765660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b7657f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2b765980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2b765b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b765ca0"/>
        <function-ref name="get" scoped="" ref="0x7fac2b765e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2b764020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2b7641b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2b764340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2b7645d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2b764760"/>
        <function-ref name="set" scoped="" ref="0x7fac2b7648f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2b764a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2b764c10"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b7654d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2b764da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fac2b767af0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fac2b767af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b767e70"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b766030"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b7661c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b766350"/>
        <function-ref name="get" scoped="" ref="0x7fac2b7664e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b766670"/>
        <function-ref name="set" scoped="" ref="0x7fac2b766800"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b766990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fac2b7602f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fac2b7602f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b760670"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b760800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2b760990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2b75e660"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b760cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b760e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2b75f020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2b75f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b75f340"/>
        <function-ref name="get" scoped="" ref="0x7fac2b75f4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2b75f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2b75f7f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2b75f980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2b75fc10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2b75fda0"/>
        <function-ref name="set" scoped="" ref="0x7fac2b75e020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2b75e1b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2b75e340"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b760b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2b75e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fac2b761020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fac2b761020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b7613a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b761530"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b7616c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b761850"/>
        <function-ref name="get" scoped="" ref="0x7fac2b7619e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b761b70"/>
        <function-ref name="set" scoped="" ref="0x7fac2b761d00"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b760020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7fac2b743700" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7fac2b743700"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fac2b743a80"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b743c10"/>
        <function-ref name="captured" scoped="" ref="0x7fac2b743da0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fac2b747020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7fac2b747400" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7fac2b747400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac2b747780"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b747910"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fac2b747aa0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fac2b747c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7fac2b746060" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fac2b746060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac2b7463e0"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b746570"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fac2b746700"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fac2b746890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7fac2b728a80" loc="50:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7fac2b728a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fac2b728e00"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fac2b726020"/>
        <function-ref name="captured" scoped="" ref="0x7fac2b7261b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2b726340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2b7264d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fac2b726660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fac2b740c20" loc="48:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fac2b740c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fac2b729020"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b7291b0"/>
        <function-ref name="captured" scoped="" ref="0x7fac2b729340"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fac2b7294d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fac2b729760" loc="49:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fac2b729760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fac2b729ae0"/>
        <function-ref name="getControl" scoped="" ref="0x7fac2b729c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2b729e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fac2b728020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fac2b7281b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2b728340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fac2b7284d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fac2b728660"/>
        <function-ref name="setControl" scoped="" ref="0x7fac2b7287f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7fac2b726930" loc="51:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fac2b726930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b726cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b726e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2b725020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2b724c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b725340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b7254d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2b725660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2b7257f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b725980"/>
        <function-ref name="get" scoped="" ref="0x7fac2b725b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2b725ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2b725e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2b724020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2b7242b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2b724440"/>
        <function-ref name="set" scoped="" ref="0x7fac2b7245d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2b724760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2b7248f0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b7251b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2b724a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fac2b7143f0" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fac2b7143f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2b714770"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b714900"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b714a90"/>
        <function-ref name="edge" scoped="" ref="0x7fac2b714c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fac2b714db0"/>
        <function-ref name="enable" scoped="" ref="0x7fac2b713020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fac2b7131b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fac2b713340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fac2b7083f0" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fac2b7083f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2b708770"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b708900"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b708a90"/>
        <function-ref name="edge" scoped="" ref="0x7fac2b708c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fac2b708db0"/>
        <function-ref name="enable" scoped="" ref="0x7fac2b707020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fac2b7071b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fac2b707340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fac2b711d50" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fac2b711d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2b710100"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b710290"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b710420"/>
        <function-ref name="edge" scoped="" ref="0x7fac2b7105b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fac2b710740"/>
        <function-ref name="enable" scoped="" ref="0x7fac2b7108d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fac2b710a60"/>
        <function-ref name="getValue" scoped="" ref="0x7fac2b710bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fac2b70e3f0" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fac2b70e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2b70e770"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b70e900"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b70ea90"/>
        <function-ref name="edge" scoped="" ref="0x7fac2b70ec20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fac2b70edb0"/>
        <function-ref name="enable" scoped="" ref="0x7fac2b70d020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fac2b70d1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fac2b70d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fac2b71cbc0" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fac2b71cbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2b716020"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b7161b0"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b716340"/>
        <function-ref name="edge" scoped="" ref="0x7fac2b7164d0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fac2b716660"/>
        <function-ref name="enable" scoped="" ref="0x7fac2b7167f0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fac2b716980"/>
        <function-ref name="getValue" scoped="" ref="0x7fac2b716b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fac2b70bd50" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fac2b70bd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2b70a210"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b70a3a0"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b70a530"/>
        <function-ref name="edge" scoped="" ref="0x7fac2b70a6c0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fac2b70a850"/>
        <function-ref name="enable" scoped="" ref="0x7fac2b70a9e0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fac2b70ab70"/>
        <function-ref name="getValue" scoped="" ref="0x7fac2b70ad00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fac2b713710" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fac2b713710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2b713a90"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b713c20"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b713db0"/>
        <function-ref name="edge" scoped="" ref="0x7fac2b712020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fac2b7121b0"/>
        <function-ref name="enable" scoped="" ref="0x7fac2b712340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fac2b7124d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fac2b712660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fac2b707710" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fac2b707710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2b707a90"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b707c20"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b707db0"/>
        <function-ref name="edge" scoped="" ref="0x7fac2b706020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fac2b7061b0"/>
        <function-ref name="enable" scoped="" ref="0x7fac2b706340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fac2b7064d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fac2b706660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fac2b7175e0" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fac2b7175e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2b717960"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b717af0"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b717c80"/>
        <function-ref name="edge" scoped="" ref="0x7fac2b717e10"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fac2b71d020"/>
        <function-ref name="enable" scoped="" ref="0x7fac2b71d1b0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fac2b71d340"/>
        <function-ref name="getValue" scoped="" ref="0x7fac2b71d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fac2b70d710" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fac2b70d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2b70da90"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b70dc20"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b70ddb0"/>
        <function-ref name="edge" scoped="" ref="0x7fac2b70c020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fac2b70c1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fac2b70c340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fac2b70c4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fac2b70c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fac2b715020" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fac2b715020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2b7153a0"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b715530"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b7156c0"/>
        <function-ref name="edge" scoped="" ref="0x7fac2b715850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fac2b7159e0"/>
        <function-ref name="enable" scoped="" ref="0x7fac2b715b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fac2b715d00"/>
        <function-ref name="getValue" scoped="" ref="0x7fac2b714020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fac2b709100" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fac2b709100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2b709480"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b709610"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b7097a0"/>
        <function-ref name="edge" scoped="" ref="0x7fac2b709930"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fac2b709ac0"/>
        <function-ref name="enable" scoped="" ref="0x7fac2b709c50"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fac2b709de0"/>
        <function-ref name="getValue" scoped="" ref="0x7fac2b708020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fac2b712a30" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fac2b712a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2b712db0"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b711020"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b7111b0"/>
        <function-ref name="edge" scoped="" ref="0x7fac2b711340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fac2b7114d0"/>
        <function-ref name="enable" scoped="" ref="0x7fac2b711660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fac2b7117f0"/>
        <function-ref name="getValue" scoped="" ref="0x7fac2b711980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fac2b70f020" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fac2b70f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2b70f3a0"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b70f530"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b70f6c0"/>
        <function-ref name="edge" scoped="" ref="0x7fac2b70f850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fac2b70f9e0"/>
        <function-ref name="enable" scoped="" ref="0x7fac2b70fb70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fac2b70fd00"/>
        <function-ref name="getValue" scoped="" ref="0x7fac2b70e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fac2b71d8a0" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fac2b71d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2b71dc20"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b71ddb0"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b71c020"/>
        <function-ref name="edge" scoped="" ref="0x7fac2b71c1b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fac2b71c340"/>
        <function-ref name="enable" scoped="" ref="0x7fac2b71c4d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fac2b71c660"/>
        <function-ref name="getValue" scoped="" ref="0x7fac2b71c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fac2b70ca30" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fac2b70ca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2b70cdb0"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b70b020"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b70b1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fac2b70b340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fac2b70b4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fac2b70b660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fac2b70b7f0"/>
        <function-ref name="getValue" scoped="" ref="0x7fac2b70b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fac2b6fd3f0" loc="58:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fac2b6fd3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2b6fd770"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b6fd900"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b6fda90"/>
        <function-ref name="edge" scoped="" ref="0x7fac2b6fdc20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fac2b6fddb0"/>
        <function-ref name="enable" scoped="" ref="0x7fac2b6fc020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fac2b6fc1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fac2b6fc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fac2b6f13f0" loc="70:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fac2b6f13f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2b6f1770"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b6f1900"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b6f1a90"/>
        <function-ref name="edge" scoped="" ref="0x7fac2b6f1c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fac2b6f1db0"/>
        <function-ref name="enable" scoped="" ref="0x7fac2b6f0020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fac2b6f01b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fac2b6f0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fac2b6fad50" loc="61:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fac2b6fad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2b6f9100"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b6f9290"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b6f9420"/>
        <function-ref name="edge" scoped="" ref="0x7fac2b6f95b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fac2b6f9740"/>
        <function-ref name="enable" scoped="" ref="0x7fac2b6f98d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fac2b6f9a60"/>
        <function-ref name="getValue" scoped="" ref="0x7fac2b6f9bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fac2b6f73f0" loc="65:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fac2b6f73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2b6f7770"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b6f7900"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b6f7a90"/>
        <function-ref name="edge" scoped="" ref="0x7fac2b6f7c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fac2b6f7db0"/>
        <function-ref name="enable" scoped="" ref="0x7fac2b6f6020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fac2b6f61b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fac2b6f6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fac2b700d50" loc="56:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fac2b700d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2b6ff100"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b6ff290"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b6ff420"/>
        <function-ref name="edge" scoped="" ref="0x7fac2b6ff5b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fac2b6ff740"/>
        <function-ref name="enable" scoped="" ref="0x7fac2b6ff8d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fac2b6ffa60"/>
        <function-ref name="getValue" scoped="" ref="0x7fac2b6ffbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fac2b6f4d50" loc="68:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fac2b6f4d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2b6f3210"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b6f33a0"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b6f3530"/>
        <function-ref name="edge" scoped="" ref="0x7fac2b6f36c0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fac2b6f3850"/>
        <function-ref name="enable" scoped="" ref="0x7fac2b6f39e0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fac2b6f3b70"/>
        <function-ref name="getValue" scoped="" ref="0x7fac2b6f3d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fac2b6fc710" loc="59:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fac2b6fc710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2b6fca90"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b6fcc20"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b6fcdb0"/>
        <function-ref name="edge" scoped="" ref="0x7fac2b6fb020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fac2b6fb1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fac2b6fb340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fac2b6fb4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fac2b6fb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fac2b6f0710" loc="71:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fac2b6f0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2b6f0a90"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b6f0c20"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b6f0db0"/>
        <function-ref name="edge" scoped="" ref="0x7fac2b6ef020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fac2b6ef1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fac2b6ef340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fac2b6ef4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fac2b6ef660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fac2b7057a0" loc="54:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fac2b7057a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2b705b20"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b705cb0"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b705e40"/>
        <function-ref name="edge" scoped="" ref="0x7fac2b701020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fac2b7011b0"/>
        <function-ref name="enable" scoped="" ref="0x7fac2b701340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fac2b7014d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fac2b701660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fac2b6f6710" loc="66:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fac2b6f6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2b6f6a90"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b6f6c20"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b6f6db0"/>
        <function-ref name="edge" scoped="" ref="0x7fac2b6f5020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fac2b6f51b0"/>
        <function-ref name="enable" scoped="" ref="0x7fac2b6f5340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fac2b6f54d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fac2b6f5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fac2b6fe020" loc="57:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fac2b6fe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2b6fe3a0"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b6fe530"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b6fe6c0"/>
        <function-ref name="edge" scoped="" ref="0x7fac2b6fe850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fac2b6fe9e0"/>
        <function-ref name="enable" scoped="" ref="0x7fac2b6feb70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fac2b6fed00"/>
        <function-ref name="getValue" scoped="" ref="0x7fac2b6fd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fac2b6f2100" loc="69:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fac2b6f2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2b6f2480"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b6f2610"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b6f27a0"/>
        <function-ref name="edge" scoped="" ref="0x7fac2b6f2930"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fac2b6f2ac0"/>
        <function-ref name="enable" scoped="" ref="0x7fac2b6f2c50"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fac2b6f2de0"/>
        <function-ref name="getValue" scoped="" ref="0x7fac2b6f1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fac2b6fba30" loc="60:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fac2b6fba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2b6fbdb0"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b6fa020"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b6fa1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fac2b6fa340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fac2b6fa4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fac2b6fa660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fac2b6fa7f0"/>
        <function-ref name="getValue" scoped="" ref="0x7fac2b6fa980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fac2b6f8020" loc="64:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fac2b6f8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2b6f83a0"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b6f8530"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b6f86c0"/>
        <function-ref name="edge" scoped="" ref="0x7fac2b6f8850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fac2b6f89e0"/>
        <function-ref name="enable" scoped="" ref="0x7fac2b6f8b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fac2b6f8d00"/>
        <function-ref name="getValue" scoped="" ref="0x7fac2b6f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fac2b701a30" loc="55:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fac2b701a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2b701db0"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b700020"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b7001b0"/>
        <function-ref name="edge" scoped="" ref="0x7fac2b700340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fac2b7004d0"/>
        <function-ref name="enable" scoped="" ref="0x7fac2b700660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fac2b7007f0"/>
        <function-ref name="getValue" scoped="" ref="0x7fac2b700980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fac2b6f5a30" loc="67:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fac2b6f5a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2b6f5db0"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b6f4020"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b6f41b0"/>
        <function-ref name="edge" scoped="" ref="0x7fac2b6f4340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fac2b6f44d0"/>
        <function-ref name="enable" scoped="" ref="0x7fac2b6f4660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fac2b6f47f0"/>
        <function-ref name="getValue" scoped="" ref="0x7fac2b6f4980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fac2b5e52f0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fac2b5e52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2b5e5670"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b5e5800"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b5e5990"/>
        <function-ref name="edge" scoped="" ref="0x7fac2b5e5b20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fac2b5e5cb0"/>
        <function-ref name="enable" scoped="" ref="0x7fac2b5e5e40"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fac2b5d8020"/>
        <function-ref name="getValue" scoped="" ref="0x7fac2b5d81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fac2b5e6680" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fac2b5e6680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac2b5e6a00"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b5e6b90"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fac2b5e6d20"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fac2b5e5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fac2b5d67a0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fac2b5d67a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2b5d6b20"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b5d6cb0"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b5d6e40"/>
        <function-ref name="edge" scoped="" ref="0x7fac2b5d5020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fac2b5d51b0"/>
        <function-ref name="enable" scoped="" ref="0x7fac2b5d5340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fac2b5d54d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fac2b5d5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fac2b5d7b70" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fac2b5d7b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac2b5d6020"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b5d61b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fac2b5d6340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fac2b5d64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fac2b173e50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fac2b173e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b172410"/>
        <function-ref name="write" scoped="" ref="0x7fac2b1725a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fac2b17d160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fac2b17d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b17d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fac2b177e50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fac2b177e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b175210"/>
        <function-ref name="write" scoped="" ref="0x7fac2b1753a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fac2b171880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fac2b171880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b171c00"/>
        <function-ref name="write" scoped="" ref="0x7fac2b171d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fac2b1690a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fac2b1690a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b169420"/>
        <function-ref name="write" scoped="" ref="0x7fac2b1695b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fac2b1700a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fac2b1700a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b170420"/>
        <function-ref name="write" scoped="" ref="0x7fac2b1705b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fac2b15d500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fac2b15d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b15d880"/>
        <function-ref name="write" scoped="" ref="0x7fac2b15da10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fac2b15f500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fac2b15f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b15f880"/>
        <function-ref name="write" scoped="" ref="0x7fac2b15fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fac2b17b490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fac2b17b490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b17b810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fac2b165880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fac2b165880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b165c00"/>
        <function-ref name="write" scoped="" ref="0x7fac2b165d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fac2b160500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fac2b160500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b160880"/>
        <function-ref name="write" scoped="" ref="0x7fac2b160a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fac2b175e50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fac2b175e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b174210"/>
        <function-ref name="write" scoped="" ref="0x7fac2b1743a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fac2b174e50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fac2b174e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b173210"/>
        <function-ref name="write" scoped="" ref="0x7fac2b1733a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fac2b16b880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fac2b16b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b16bc00"/>
        <function-ref name="write" scoped="" ref="0x7fac2b16bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fac2b16c0a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fac2b16c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b16c420"/>
        <function-ref name="write" scoped="" ref="0x7fac2b16c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fac2b170880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fac2b170880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b170c00"/>
        <function-ref name="write" scoped="" ref="0x7fac2b170d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fac2b17fa90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac2b17fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fac2b17fe10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fac2b17e020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fac2b17e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fac2b17ae00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fac2b17ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b1791c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fac2b179490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fac2b179490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b179910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fac2b164c80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fac2b164c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b1630a0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b163230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fac2b179be0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fac2b179be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b178020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fac2b160ce0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fac2b160ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b15f0a0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b15f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fac2b17a160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fac2b17a160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b17a4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fac2b1650a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fac2b1650a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b165420"/>
        <function-ref name="write" scoped="" ref="0x7fac2b1655b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fac2b174670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fac2b174670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b1749f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b174b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fac2b175670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fac2b175670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b1759f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b175b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fac2b17ead0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fac2b17ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b17ee50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fac2b1660a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fac2b1660a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b166420"/>
        <function-ref name="write" scoped="" ref="0x7fac2b1665b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fac2b169880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fac2b169880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b169c00"/>
        <function-ref name="write" scoped="" ref="0x7fac2b169d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fac2b166880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fac2b166880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b166c00"/>
        <function-ref name="write" scoped="" ref="0x7fac2b166d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fac2b15ece0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fac2b15ece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b15d0a0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b15d230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fac2b15fce0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fac2b15fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b15e0a0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b15e230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fac2b16c880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fac2b16c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b16cc00"/>
        <function-ref name="write" scoped="" ref="0x7fac2b16cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fac2b1670a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fac2b1670a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b167420"/>
        <function-ref name="write" scoped="" ref="0x7fac2b1675b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fac2b162ce0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fac2b162ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b1600a0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b160230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fac2b16e880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fac2b16e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b16ec00"/>
        <function-ref name="write" scoped="" ref="0x7fac2b16ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fac2b15dce0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fac2b15dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fac2b15c0a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fac2b15c230"/>
        <function-ref name="write" scoped="" ref="0x7fac2b15c3c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fac2b15c550"/>
        <function-ref name="readDone" scoped="" ref="0x7fac2b15c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fac2b17e480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fac2b17e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b17e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fac2b177670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fac2b177670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b1779f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b177b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fac2b173670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fac2b173670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b1739f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b173b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fac2b16a0a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fac2b16a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b16a420"/>
        <function-ref name="write" scoped="" ref="0x7fac2b16a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fac2b16e0a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fac2b16e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b16e420"/>
        <function-ref name="write" scoped="" ref="0x7fac2b16e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fac2b16a880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fac2b16a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b16ac00"/>
        <function-ref name="write" scoped="" ref="0x7fac2b16ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fac2b172870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fac2b172870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b172bf0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b172d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fac2b17d7b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fac2b17d7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b17db30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fac2b1710a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fac2b1710a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b171420"/>
        <function-ref name="write" scoped="" ref="0x7fac2b1715b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac2b180e20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fac2b180e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac2b17f1c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac2b17f350"/>
        <function-ref name="request" scoped="" ref="0x7fac2b17f4e0"/>
        <function-ref name="granted" scoped="" ref="0x7fac2b17f670"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac2b17f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fac2b1782f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fac2b1782f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b178670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fac2b177020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fac2b177020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b1773a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fac2b162500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fac2b162500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b162880"/>
        <function-ref name="write" scoped="" ref="0x7fac2b162a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fac2b163ce0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fac2b163ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b1620a0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b162230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fac2b17a7b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fac2b17a7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b17ab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fac2b163500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fac2b163500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b163880"/>
        <function-ref name="write" scoped="" ref="0x7fac2b163a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fac2b15e500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fac2b15e500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b15e880"/>
        <function-ref name="write" scoped="" ref="0x7fac2b15ea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fac2b16b0a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fac2b16b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b16b420"/>
        <function-ref name="write" scoped="" ref="0x7fac2b16b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fac2b167880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fac2b167880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b167c00"/>
        <function-ref name="write" scoped="" ref="0x7fac2b167d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fac2b17de00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fac2b17de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b17b1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fac2b17bae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fac2b17bae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b17be60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fac2b16d0a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fac2b16d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b16d420"/>
        <function-ref name="write" scoped="" ref="0x7fac2b16d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fac2b178940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fac2b178940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b178cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fac2b16d880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fac2b16d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b16dc00"/>
        <function-ref name="write" scoped="" ref="0x7fac2b16dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fac2b1640a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fac2b1640a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b164820"/>
        <function-ref name="write" scoped="" ref="0x7fac2b1649b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fac2b15c9b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fac2b15c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fac2b15cd30"/>
        <function-ref name="writeDone" scoped="" ref="0x7fac2b15b020"/>
        <function-ref name="write" scoped="" ref="0x7fac2b15b1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fac2b15b340"/>
        <function-ref name="readDone" scoped="" ref="0x7fac2b15b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7fac2b5912c0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7fac2b5912c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fac2b591640"/>
        <function-ref name="writeDone" scoped="" ref="0x7fac2b5917d0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b591960"/>
        <function-ref name="beginRead" scoped="" ref="0x7fac2b591af0"/>
        <function-ref name="readDone" scoped="" ref="0x7fac2b591c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fac2b592350" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac2b592350"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fac2b5926d0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fac2b592860"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fac2b5929f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7fac2b590540" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7fac2b590540"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b5908c0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b590a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7fac2b58f370" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7fac2b58f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b58f6f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b58f880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac2b5944d0" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fac2b5944d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac2b594850"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac2b5949e0"/>
        <function-ref name="request" scoped="" ref="0x7fac2b594b70"/>
        <function-ref name="granted" scoped="" ref="0x7fac2b594d00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac2b592020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7fac2b58d1d0" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7fac2b58d1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b58d550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7fac2b5782e0" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fac2b5782e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac2b578660"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac2b5787f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7fac2b588890" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7fac2b588890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fac2b588c10"/>
        <function-ref name="writeDone" scoped="" ref="0x7fac2b588da0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b587020"/>
        <function-ref name="beginRead" scoped="" ref="0x7fac2b5871b0"/>
        <function-ref name="readDone" scoped="" ref="0x7fac2b587340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fac2b58a660" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac2b58a660"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fac2b58a9e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fac2b58ab70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fac2b58ad00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7fac2b580c70" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fac2b580c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fac2b582020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7fac2b578b40" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7fac2b578b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fac2b57f020"/>
        <function-ref name="toIdle" scoped="" ref="0x7fac2b57f1b0"/>
        <function-ref name="isState" scoped="" ref="0x7fac2b57f340"/>
        <function-ref name="isIdle" scoped="" ref="0x7fac2b57f4d0"/>
        <function-ref name="requestState" scoped="" ref="0x7fac2b57f660"/>
        <function-ref name="forceState" scoped="" ref="0x7fac2b57f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fac2b583060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fac2b583060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac2b5833e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac2b583570"/>
        <function-ref name="request" scoped="" ref="0x7fac2b583700"/>
        <function-ref name="granted" scoped="" ref="0x7fac2b583890"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac2b583a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7fac2b587ba0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7fac2b587ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b586020"/>
        <function-ref name="write" scoped="" ref="0x7fac2b5861b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7fac2b586a30" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7fac2b586a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b586db0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b584020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fac2b57fa70" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fac2b57fa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fac2b57fdf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fac2b579020"/>
        <function-ref name="led1On" scoped="" ref="0x7fac2b5791b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fac2b579340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fac2b5794d0"/>
        <function-ref name="get" scoped="" ref="0x7fac2b579660"/>
        <function-ref name="led1Off" scoped="" ref="0x7fac2b5797f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fac2b579e30"/>
        <function-ref name="set" scoped="" ref="0x7fac2b579980"/>
        <function-ref name="led0On" scoped="" ref="0x7fac2b579b10"/>
        <function-ref name="led2On" scoped="" ref="0x7fac2b579ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac2b589510" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fac2b589510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac2b589890"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac2b589a20"/>
        <function-ref name="request" scoped="" ref="0x7fac2b589bb0"/>
        <function-ref name="granted" scoped="" ref="0x7fac2b589d40"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac2b588020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7fac2b574bd0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7fac2b574bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac2b573020"/>
        <function-ref name="runTask" scoped="" ref="0x7fac2b5731b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7fac2b5848b0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7fac2b5848b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b584c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fac2b519770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fac2b519770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fac2b519af0"/>
        <function-ref name="toIdle" scoped="" ref="0x7fac2b519c80"/>
        <function-ref name="isState" scoped="" ref="0x7fac2b519e10"/>
        <function-ref name="isIdle" scoped="" ref="0x7fac2b515020"/>
        <function-ref name="requestState" scoped="" ref="0x7fac2b5151b0"/>
        <function-ref name="forceState" scoped="" ref="0x7fac2b515340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fac2b5141d0" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fac2b5141d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fac2b514550"/>
        <function-ref name="toIdle" scoped="" ref="0x7fac2b5146e0"/>
        <function-ref name="isState" scoped="" ref="0x7fac2b514870"/>
        <function-ref name="isIdle" scoped="" ref="0x7fac2b514a00"/>
        <function-ref name="requestState" scoped="" ref="0x7fac2b514b90"/>
        <function-ref name="forceState" scoped="" ref="0x7fac2b514d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac2b510020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fac2b510020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac2b5103a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fac2b510b70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fac2b510b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fac2b50f020"/>
        <function-ref name="toIdle" scoped="" ref="0x7fac2b50f1b0"/>
        <function-ref name="isState" scoped="" ref="0x7fac2b50f340"/>
        <function-ref name="isIdle" scoped="" ref="0x7fac2b50f4d0"/>
        <function-ref name="requestState" scoped="" ref="0x7fac2b50f660"/>
        <function-ref name="forceState" scoped="" ref="0x7fac2b50f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fac2b1a8020" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fac2b1a8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac2b1a83a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac2b1a8530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fac2b4f68f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fac2b4f68f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fac2b4f6c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac2b4f7c40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fac2b4f7c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac2b4f6020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac2b4f61b0"/>
        <function-ref name="request" scoped="" ref="0x7fac2b4f6340"/>
        <function-ref name="granted" scoped="" ref="0x7fac2b4f64d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac2b4f6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fac2a47e5d0" loc="82:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fac2a47e5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fac2a47e950"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac2a47eae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fac2a47b020" loc="87:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fac2a47b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac2a47b3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac2a47b530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fac2a47b7c0" loc="89:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fac2a47b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fac2a47bb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fac2a47ed70" loc="83:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fac2a47ed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fac2a47c180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac2a47f940" loc="81:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fac2a47f940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac2a47fcc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac2a47fe50"/>
        <function-ref name="request" scoped="" ref="0x7fac2a47e020"/>
        <function-ref name="granted" scoped="" ref="0x7fac2a47e1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac2a47e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fac2a47c410" loc="85:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fac2a47c410"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fac2a47c790"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fac2a47c920"/>
        <function-ref name="splitRead" scoped="" ref="0x7fac2a47cab0"/>
        <function-ref name="write" scoped="" ref="0x7fac2a47cc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fac2b48d8e0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac2b48d8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fac2b48dc60"/>
        <function-ref name="configure" scoped="" ref="0x7fac2b48ddf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fac2b48f850" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fac2b48f850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac2b48fbd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac2b48fd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fac2b48aa40" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fac2b48aa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fac2b48adc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fac2b490110" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fac2b490110"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fac2b490490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fac2b48b690" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fac2b48b690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac2b48ba10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac2b48bba0"/>
        <function-ref name="request" scoped="" ref="0x7fac2b48bd30"/>
        <function-ref name="granted" scoped="" ref="0x7fac2b48a020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac2b48a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac2b496d80" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fac2b496d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac2b491180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac2b491310"/>
        <function-ref name="request" scoped="" ref="0x7fac2b4914a0"/>
        <function-ref name="granted" scoped="" ref="0x7fac2b491630"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac2b4917c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fac2b490790" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fac2b490790"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fac2b490b10"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fac2b490ca0"/>
        <function-ref name="splitRead" scoped="" ref="0x7fac2b490e30"/>
        <function-ref name="write" scoped="" ref="0x7fac2b48f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fac2b486b40" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fac2b486b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fac2b488020"/>
        <function-ref name="txDone" scoped="" ref="0x7fac2b4881b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fac2b414250" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac2b414250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fac2b4145f0"/>
        <function-ref name="configure" scoped="" ref="0x7fac2b414780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fac2b413c50" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fac2b413c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac2b412020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac2b4121b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fac2b4113e0" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fac2b4113e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fac2b411780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fac2b414a10" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fac2b414a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fac2b414d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7fac2b411a50" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fac2b411a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fac2b411dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fac2b40f020"/>
        <function-ref name="setUctl" scoped="" ref="0x7fac2b40f1b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fac2b40f340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fac2b40f4d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fac2b40f660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fac2b40f7f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fac2b40f980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fac2b40fb10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fac2b40fca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fac2b40fe30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fac2b40e020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fac2b40e1b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fac2b40e440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fac2b40e5d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fac2b40e760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fac2b40e8f0"/>
        <function-ref name="isUart" scoped="" ref="0x7fac2b40ea80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fac2b40ec10"/>
        <function-ref name="isSpi" scoped="" ref="0x7fac2b40eda0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fac2b40d020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fac2b40d1b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fac2b40d340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fac2b40d4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fac2b40d660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fac2b40d9f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fac2b40db80"/>
        <function-ref name="setUbr" scoped="" ref="0x7fac2b40dd10"/>
        <function-ref name="tx" scoped="" ref="0x7fac2b40c020"/>
        <function-ref name="getUctl" scoped="" ref="0x7fac2b40c1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fac2b40c340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fac2b40c4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fac2b40c660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fac2b40c7f0"/>
        <function-ref name="rx" scoped="" ref="0x7fac2b40c980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fac2b40cb10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fac2b40cca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fac2b40ce30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fac2b40b020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fac2b40b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fac2b40bc20" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fac2b40bc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fac2b40a020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fac2b40a1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7fac2b40a340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fac2b40a4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fac2b40a660"/>
        <function-ref name="get" scoped="" ref="0x7fac2b40a7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fac2b40a980"/>
        <function-ref name="led2On" scoped="" ref="0x7fac2b409020"/>
        <function-ref name="set" scoped="" ref="0x7fac2b40aca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fac2b40ab10"/>
        <function-ref name="led0On" scoped="" ref="0x7fac2b40ae30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fac2b4125b0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fac2b4125b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac2b412950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac2b412ae0"/>
        <function-ref name="request" scoped="" ref="0x7fac2b412c70"/>
        <function-ref name="granted" scoped="" ref="0x7fac2b412e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac2b411020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac2b415470" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fac2b415470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac2b415810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac2b4159a0"/>
        <function-ref name="request" scoped="" ref="0x7fac2b415b30"/>
        <function-ref name="granted" scoped="" ref="0x7fac2b415cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac2b415e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fac2b413060" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fac2b413060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fac2b4133e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fac2b413570"/>
        <function-ref name="splitRead" scoped="" ref="0x7fac2b413700"/>
        <function-ref name="write" scoped="" ref="0x7fac2b413890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fac2b40b480" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fac2b40b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fac2b40b800"/>
        <function-ref name="txDone" scoped="" ref="0x7fac2b40b990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7fac2b4092f0" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7fac2b4092f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac2b409670"/>
        <function-ref name="runTask" scoped="" ref="0x7fac2b409800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7fac2b3f92c0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fac2b3f92c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac2b3f9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fac2b3fdd10" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fac2b3fdd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fac2b3fc0e0"/>
        <function-ref name="txDone" scoped="" ref="0x7fac2b3fc270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fac2b401020" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fac2b401020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fac2b4013a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fac2b401530"/>
        <function-ref name="setUctl" scoped="" ref="0x7fac2b4016c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fac2b401850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fac2b4019e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fac2b401b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fac2b401d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fac2b400020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fac2b4001b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fac2b400340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fac2b4004d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fac2b400660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fac2b4007f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fac2b400a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fac2b400c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fac2b400da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fac2b3ff020"/>
        <function-ref name="isUart" scoped="" ref="0x7fac2b3ff1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fac2b3ff340"/>
        <function-ref name="isSpi" scoped="" ref="0x7fac2b3ff4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fac2b3ff660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fac2b3ff7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fac2b3ff980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fac2b3ffb10"/>
        <function-ref name="getMode" scoped="" ref="0x7fac2b3ffca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fac2b3fe220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fac2b3fe3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fac2b3fe540"/>
        <function-ref name="tx" scoped="" ref="0x7fac2b3fe6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fac2b3fe860"/>
        <function-ref name="disableUart" scoped="" ref="0x7fac2b3fe9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fac2b3feb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fac2b3fed10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fac2b3fd020"/>
        <function-ref name="rx" scoped="" ref="0x7fac2b3fd1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fac2b3fd340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fac2b3fd4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fac2b3fd660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fac2b3fd7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fac2b3fd980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fac2b3bfbb0" loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fac2b3bfbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b3be020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b3be1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2b3be340"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b3bc020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b3be660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b3be7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2b3be980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2b3beb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b3beca0"/>
        <function-ref name="get" scoped="" ref="0x7fac2b3bee30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2b3bd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2b3bd1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2b3bd340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2b3bd5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2b3bd760"/>
        <function-ref name="set" scoped="" ref="0x7fac2b3bd8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2b3bda80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2b3be4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2b3bdc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2b3bdda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fac2b3f32d0" loc="56:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fac2b3f32d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fac2b3f3650"/>
        <function-ref name="txDone" scoped="" ref="0x7fac2b3f37e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7fac2b3bc3e0" loc="63:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7fac2b3bc3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b3bc760"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b3bc8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2b3bca80"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b3ba7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b3bcda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b3bb020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2b3bb1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2b3bb340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b3bb4d0"/>
        <function-ref name="get" scoped="" ref="0x7fac2b3bb660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2b3bb7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2b3bb980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2b3bbb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2b3bbda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2b3ba020"/>
        <function-ref name="set" scoped="" ref="0x7fac2b3ba1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2b3ba340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2b3bcc10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2b3ba4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2b3ba660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7fac2b3babb0" loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7fac2b3babb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b3b9020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b3b91b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2b3b9340"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b3b7020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b3b9660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b3b97f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2b3b9980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2b3b9b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b3b9ca0"/>
        <function-ref name="get" scoped="" ref="0x7fac2b3b9e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2b3b8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2b3b81b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2b3b8340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2b3b85d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2b3b8760"/>
        <function-ref name="set" scoped="" ref="0x7fac2b3b88f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2b3b8a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2b3b94d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2b3b8c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2b3b8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7fac2b3f8700" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fac2b3f8700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fac2b3f8a80"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fac2b3f8c10"/>
        <function-ref name="setUctl" scoped="" ref="0x7fac2b3f8da0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fac2b3f7020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fac2b3f71b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fac2b3f7340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fac2b3f74d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fac2b3f7660"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fac2b3f77f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fac2b3f7980"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fac2b3f7b10"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fac2b3f7ca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fac2b3f7e30"/>
        <function-ref name="getUbr" scoped="" ref="0x7fac2b3f6120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fac2b3f62b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fac2b3f6440"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fac2b3f65d0"/>
        <function-ref name="isUart" scoped="" ref="0x7fac2b3f6760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fac2b3f68f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fac2b3f6a80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fac2b3f6c10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fac2b3f6da0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fac2b3f5020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fac2b3f51b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fac2b3f5340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fac2b3f56d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fac2b3f5860"/>
        <function-ref name="setUbr" scoped="" ref="0x7fac2b3f59f0"/>
        <function-ref name="tx" scoped="" ref="0x7fac2b3f5b80"/>
        <function-ref name="getUctl" scoped="" ref="0x7fac2b3f5d10"/>
        <function-ref name="disableUart" scoped="" ref="0x7fac2b3f4020"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fac2b3f41b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fac2b3f4340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fac2b3f44d0"/>
        <function-ref name="rx" scoped="" ref="0x7fac2b3f4660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fac2b3f47f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fac2b3f4980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fac2b3f4b10"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fac2b3f4ca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fac2b3f4e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7fac2b3cad10" loc="59:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7fac2b3cad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fac2b3f10e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fac2b3f1270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fac2b3f1400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fac2b3f1590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fac2b3f1720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fac2b3f18b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fac2b3f1a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fac2b3f1bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fac2b3f1d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fac2b3f0020"/>
        <function-ref name="getData" scoped="" ref="0x7fac2b3f01b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fac2b3f0340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fac2b3f04d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fac2b3f0760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fac2b3f08f0"/>
        <function-ref name="getIV" scoped="" ref="0x7fac2b3f0a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fac2b3f0c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fac2b3f0da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fac2b3c8020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fac2b3c81b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fac2b3c8340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fac2b3c84d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fac2b3c8660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fac2b3c87f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fac2b3c8980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fac2b3c8d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fac2b3c7020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fac2b3c71b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fac2b3c7340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fac2b3c74d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fac2b3c7660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fac2b3c77f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fac2b3c7980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fac2b3c7b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fac2b3c7ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fac2b3c7e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fac2b3c6020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fac2b3c61b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fac2b3c6340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fac2b3c64d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fac2b3c6660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fac2b3c67f0"/>
        <function-ref name="setData" scoped="" ref="0x7fac2b3c6980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fac2b3c6b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fac2b3c6ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fac2b3c6e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fac2b3c5020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fac2b3c51b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fac2b3c5340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fac2b3c58d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fac2b3c5a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fac2b3c5bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fac2b3c5d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fac2b3c4020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fac2b3c41b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fac2b3c4340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fac2b3c44d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fac2b3c4660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fac2b3c47f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7fac2b3c13e0" loc="61:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7fac2b3c13e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b3c1760"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b3c18f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2b3c1a80"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b3bf7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b3c1da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b3c0020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2b3c01b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2b3c0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b3c04d0"/>
        <function-ref name="get" scoped="" ref="0x7fac2b3c0660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2b3c07f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2b3c0980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2b3c0b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2b3c0da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2b3bf020"/>
        <function-ref name="set" scoped="" ref="0x7fac2b3bf1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2b3bf340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2b3c1c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2b3bf4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2b3bf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fac2b3f3c20" loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fac2b3f3c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac2b3f2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fac2b3c4bb0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fac2b3c4bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b3c3020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b3c31b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2b3c3340"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b3c1020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b3c3660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b3c37f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2b3c3980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2b3c3b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b3c3ca0"/>
        <function-ref name="get" scoped="" ref="0x7fac2b3c3e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2b3c2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2b3c21b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2b3c2340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2b3c25d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2b3c2760"/>
        <function-ref name="set" scoped="" ref="0x7fac2b3c28f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2b3c2a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2b3c34d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2b3c2c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2b3c2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fac2a473020" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fac2a473020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fac2a4733a0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac2a473530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7fac2a46b440" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fac2a46b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac2a46b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fac2a463760" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac2a463760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fac2a463ae0"/>
        <function-ref name="configure" scoped="" ref="0x7fac2a463c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7fac2a46ba50" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fac2a46ba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fac2a46bdd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fac2a469020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fac2a4691b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fac2a469340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fac2a4694d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fac2a469660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fac2a4697f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fac2a469980"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fac2a469b10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fac2a469ca0"/>
        <function-ref name="getData" scoped="" ref="0x7fac2a469e30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fac2a468020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fac2a4681b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fac2a468440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fac2a4685d0"/>
        <function-ref name="getIV" scoped="" ref="0x7fac2a468760"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fac2a4688f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fac2a468a80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fac2a468c10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fac2a468da0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fac2a467020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fac2a4671b0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fac2a467340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fac2a4674d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fac2a467660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fac2a4679f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fac2a467b80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fac2a467d10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fac2a466020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fac2a4661b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fac2a466340"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fac2a4664d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fac2a466660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fac2a4667f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fac2a466980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fac2a466b10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fac2a466ca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fac2a466e30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fac2a465020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fac2a4651b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fac2a465340"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fac2a4654d0"/>
        <function-ref name="setData" scoped="" ref="0x7fac2a465660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fac2a4657f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fac2a465980"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fac2a465b10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fac2a465ca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fac2a465e30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fac2a464020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fac2a4645b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fac2a464740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fac2a4648d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fac2a464a60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fac2a464bf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fac2a464d80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fac2a463020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fac2a4631b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fac2a463340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fac2a4634d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fac2a46ec10" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fac2a46ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fac2a46b020"/>
        <function-ref name="txDone" scoped="" ref="0x7fac2a46b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac2a474340" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fac2a474340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac2a4746c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac2a474850"/>
        <function-ref name="request" scoped="" ref="0x7fac2a4749e0"/>
        <function-ref name="granted" scoped="" ref="0x7fac2a474b70"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac2a474d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fac2a472020" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fac2a472020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fac2a4723a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fac2a472530"/>
        <function-ref name="setUctl" scoped="" ref="0x7fac2a4726c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fac2a472850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fac2a4729e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fac2a472b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fac2a472d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fac2a471020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fac2a4711b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fac2a471340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fac2a4714d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fac2a471660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fac2a4717f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fac2a471a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fac2a471c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fac2a471da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fac2a470020"/>
        <function-ref name="isUart" scoped="" ref="0x7fac2a4701b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fac2a470340"/>
        <function-ref name="isSpi" scoped="" ref="0x7fac2a4704d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fac2a470660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fac2a4707f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fac2a470980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fac2a470b10"/>
        <function-ref name="getMode" scoped="" ref="0x7fac2a470ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fac2a46f220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fac2a46f3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fac2a46f540"/>
        <function-ref name="tx" scoped="" ref="0x7fac2a46f6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fac2a46f860"/>
        <function-ref name="disableUart" scoped="" ref="0x7fac2a46f9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fac2a46fb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fac2a46fd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fac2a46e020"/>
        <function-ref name="rx" scoped="" ref="0x7fac2a46e1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fac2a46e340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fac2a46e4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fac2a46e660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fac2a46e7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fac2a46e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fac2a4737c0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac2a4737c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac2a473b40"/>
        <function-ref name="userId" scoped="" ref="0x7fac2a473cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fac2b3112c0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fac2b3112c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fac2b311640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac2b3117d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fac2b3108a0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac2b3108a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fac2b310c20"/>
        <function-ref name="configure" scoped="" ref="0x7fac2b310db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fac2b3144d0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fac2b3144d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fac2b314850"/>
        <function-ref name="txDone" scoped="" ref="0x7fac2b3149e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac2b312020" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fac2b312020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac2b3123a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac2b312530"/>
        <function-ref name="request" scoped="" ref="0x7fac2b3126c0"/>
        <function-ref name="granted" scoped="" ref="0x7fac2b312850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac2b3129e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fac2b3133f0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fac2b3133f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac2b313770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fac2b311ad0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac2b311ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac2b311e50"/>
        <function-ref name="userId" scoped="" ref="0x7fac2b310020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fac2b2fbbf0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac2b2fbbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac2b2fa020"/>
        <function-ref name="userId" scoped="" ref="0x7fac2b2fa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fac2b30dd60" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fac2b30dd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fac2b30c180"/>
        <function-ref name="txDone" scoped="" ref="0x7fac2b30c310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7fac2b2fb5e0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fac2b2fb5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac2b2fb960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fac2b30c710" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fac2b30c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac2b30cab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7fac2b30cd80" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7fac2b30cd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fac2b2fb180"/>
        <function-ref name="txDone" scoped="" ref="0x7fac2b2fb310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fac2b27ba60" loc="59:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fac2b27ba60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fac2b27be00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac2b27a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fac2b279790" loc="64:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac2b279790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fac2b279b30"/>
        <function-ref name="configure" scoped="" ref="0x7fac2b279cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fac2b27a270" loc="60:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac2b27a270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac2b27a5f0"/>
        <function-ref name="requested" scoped="" ref="0x7fac2b27a780"/>
        <function-ref name="granted" scoped="" ref="0x7fac2b27a910"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac2b27aaa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac2b27ac30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac2b27cca0" loc="58:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fac2b27cca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac2b27b0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac2b27b230"/>
        <function-ref name="request" scoped="" ref="0x7fac2b27b3c0"/>
        <function-ref name="granted" scoped="" ref="0x7fac2b27b550"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac2b27b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7fac2b278020" loc="65:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7fac2b278020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac2b2783a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fac2b27ae80" loc="61:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac2b27ae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac2b279220"/>
        <function-ref name="userId" scoped="" ref="0x7fac2b2793b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac2a3f8020" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fac2a3f8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac2a3f83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fac2a3f8630" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fac2a3f8630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fac2a3f89b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fac2a3f8b40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fac2a3f8cd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fac2a3f8e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fac2a3f56c0" loc="99:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fac2a3f56c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fac2a3f5a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac2a3f5bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fac2a3f29d0" loc="105:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fac2a3f29d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fac2a3f2d70"/>
        <function-ref name="configure" scoped="" ref="0x7fac2a3f1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fac2a3f12b0" loc="106:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fac2a3f12b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fac2a3f1630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fac2a3f17c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fac2a3f1950"/>
        <function-ref name="dequeue" scoped="" ref="0x7fac2a3f1ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fac2a3f5e40" loc="100:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fac2a3f5e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac2a3f31e0"/>
        <function-ref name="requested" scoped="" ref="0x7fac2a3f3370"/>
        <function-ref name="granted" scoped="" ref="0x7fac2a3f3500"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac2a3f3690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fac2a3f3820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fac2a3f1d30" loc="107:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fac2a3f1d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fac2a3f00e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fac2a3f0270"/>
        <function-ref name="led1On" scoped="" ref="0x7fac2a3f0400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fac2a3f0590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fac2a3f0720"/>
        <function-ref name="get" scoped="" ref="0x7fac2a3f08b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fac2a3f0a40"/>
        <function-ref name="led0On" scoped="" ref="0x7fac2a3ef1b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2a3f0d60"/>
        <function-ref name="led2On" scoped="" ref="0x7fac2a3f0bd0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fac2a3ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac2a3f6850" loc="98:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fac2a3f6850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac2a3f6bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac2a3f6d80"/>
        <function-ref name="request" scoped="" ref="0x7fac2a3f5020"/>
        <function-ref name="granted" scoped="" ref="0x7fac2a3f51b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac2a3f5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7fac2a3f22d0" loc="104:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7fac2a3f22d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac2a3f2650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fac2a3f3a70" loc="101:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fac2a3f3a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fac2a3f3df0"/>
        <function-ref name="userId" scoped="" ref="0x7fac2a3f2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fac2a3ef480" loc="155:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fac2a3ef480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac2a3ef800"/>
        <function-ref name="runTask" scoped="" ref="0x7fac2a3ef990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7fac2b26f020" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fac2b26f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fac2b26f3a0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fac2b26f530"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fac2b26f6c0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fac2b26f850"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fac2b26f9e0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fac2b26fb70"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fac2b26fd00"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fac2b26e020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fac2b26e1b0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fac2b26e340"/>
        <function-ref name="getData" scoped="" ref="0x7fac2b26e4d0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fac2b26e660"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fac2b26e7f0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fac2b26ea80"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fac2b26ec10"/>
        <function-ref name="getIV" scoped="" ref="0x7fac2b26eda0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fac2b26d020"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fac2b26d1b0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fac2b26d340"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fac2b26d4d0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fac2b26d660"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fac2b26d7f0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fac2b26d980"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fac2b26db10"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fac2b26dca0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fac2b26c220"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fac2b26c3b0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fac2b26c540"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fac2b26c6d0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fac2b26c860"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fac2b26c9f0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fac2b26cb80"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fac2b26cd10"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fac2b26b020"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fac2b26b1b0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fac2b26b340"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fac2b26b4d0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fac2b26b660"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fac2b26b7f0"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fac2b26b980"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fac2b26bb10"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fac2b26bca0"/>
        <function-ref name="setData" scoped="" ref="0x7fac2b26be30"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fac2b26a020"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fac2b26a1b0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fac2b26a340"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fac2b26a4d0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fac2b26a660"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fac2b26a7f0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fac2b26ad80"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fac2b269020"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fac2b2691b0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fac2b269340"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fac2b2694d0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fac2b269660"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fac2b2697f0"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fac2b269980"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fac2b269b10"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fac2b269ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7fac2b25ebb0" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7fac2b25ebb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fac2b25d020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fac2b25d1b0"/>
        <function-ref name="setUctl" scoped="" ref="0x7fac2b25d340"/>
        <function-ref name="enableUart" scoped="" ref="0x7fac2b25d4d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fac2b25d660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fac2b25d7f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fac2b25d980"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fac2b25db10"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fac2b25dca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fac2b25de30"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fac2b25c020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fac2b25c1b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fac2b25c340"/>
        <function-ref name="getUbr" scoped="" ref="0x7fac2b25c5d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fac2b25c760"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fac2b25c8f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fac2b25ca80"/>
        <function-ref name="isUart" scoped="" ref="0x7fac2b25cc10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fac2b25cda0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fac2b25b020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fac2b25b1b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fac2b25b340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fac2b25b4d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fac2b25b660"/>
        <function-ref name="getMode" scoped="" ref="0x7fac2b25b7f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fac2b25bb80"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fac2b25bd10"/>
        <function-ref name="setUbr" scoped="" ref="0x7fac2b25a020"/>
        <function-ref name="tx" scoped="" ref="0x7fac2b25a1b0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fac2b25a340"/>
        <function-ref name="disableUart" scoped="" ref="0x7fac2b25a4d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fac2b25a660"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fac2b25a7f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fac2b25a980"/>
        <function-ref name="rx" scoped="" ref="0x7fac2b25ab10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fac2b25aca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fac2b25ae30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fac2b259020"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fac2b2591b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fac2b259340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fac2b257e40" loc="52:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fac2b257e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b2561e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b256370"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2b256500"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b2541b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b256820"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b2569b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2b256b40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2b256cd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b256e60"/>
        <function-ref name="get" scoped="" ref="0x7fac2b255020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2b2551b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2b255340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2b2554d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2b255760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2b2558f0"/>
        <function-ref name="set" scoped="" ref="0x7fac2b255a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2b255c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2b256690"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2b255da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2b254020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7fac2b267d40" loc="48:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7fac2b267d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fac2b2640e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fac2b264270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fac2b264400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fac2b264590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fac2b264720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fac2b2648b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fac2b264a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fac2b264bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fac2b264d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fac2b263020"/>
        <function-ref name="getData" scoped="" ref="0x7fac2b2631b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fac2b263340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fac2b2634d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fac2b263760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fac2b2638f0"/>
        <function-ref name="getIV" scoped="" ref="0x7fac2b263a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fac2b263c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fac2b263da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fac2b262020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fac2b2621b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fac2b262340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fac2b2624d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fac2b262660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fac2b2627f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fac2b262980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fac2b262d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fac2b261020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fac2b2611b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fac2b261340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fac2b2614d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fac2b261660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fac2b2617f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fac2b261980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fac2b261b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fac2b261ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fac2b261e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fac2b260020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fac2b2601b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fac2b260340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fac2b2604d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fac2b260660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fac2b2607f0"/>
        <function-ref name="setData" scoped="" ref="0x7fac2b260980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fac2b260b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fac2b260ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fac2b260e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fac2b25f020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fac2b25f1b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fac2b25f340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fac2b25f8d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fac2b25fa60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fac2b25fbf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fac2b25fd80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fac2b25e020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fac2b25e1b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fac2b25e340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fac2b25e4d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fac2b25e660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fac2b25e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fac2b259700" loc="51:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fac2b259700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b259a80"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b259c10"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2b259da0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b257a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b2581b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b258340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2b2584d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2b258660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b2587f0"/>
        <function-ref name="get" scoped="" ref="0x7fac2b258980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2b258b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2b258ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2b258e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2b257120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2b2572b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2b257440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2b2575d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2b258020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2b257760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2b2578f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fac2b143c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fac2b143c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b141210"/>
        <function-ref name="write" scoped="" ref="0x7fac2b1413a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fac2b14dda0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fac2b14dda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b14c180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fac2b146b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fac2b146b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b145020"/>
        <function-ref name="write" scoped="" ref="0x7fac2b1451b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fac2b140670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fac2b140670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b1409f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b140b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fac2b139e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fac2b139e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b138210"/>
        <function-ref name="write" scoped="" ref="0x7fac2b1383a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fac2b140e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fac2b140e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b13f210"/>
        <function-ref name="write" scoped="" ref="0x7fac2b13f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fac2b12c2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fac2b12c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b12c670"/>
        <function-ref name="write" scoped="" ref="0x7fac2b12c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fac2b12f2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fac2b12f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b12f670"/>
        <function-ref name="write" scoped="" ref="0x7fac2b12f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fac2b14b120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fac2b14b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b14b4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fac2b134670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fac2b134670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b1349f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b134b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fac2b1302f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fac2b1302f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b130670"/>
        <function-ref name="write" scoped="" ref="0x7fac2b130800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fac2b145c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fac2b145c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b144020"/>
        <function-ref name="write" scoped="" ref="0x7fac2b1441b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fac2b144c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fac2b144c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b143020"/>
        <function-ref name="write" scoped="" ref="0x7fac2b1431b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fac2b13a670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fac2b13a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b13a9f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b13ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fac2b13de50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fac2b13de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b13b210"/>
        <function-ref name="write" scoped="" ref="0x7fac2b13b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fac2b13f670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fac2b13f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b13f9f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b13fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fac2b14e760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac2b14e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fac2b14eae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fac2b14ec70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fac2b14ee00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fac2b14aaa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fac2b14aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b14ae20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fac2b148120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fac2b148120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b1485a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fac2b133a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fac2b133a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b133df0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b132020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fac2b148870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fac2b148870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b148bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fac2b130ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fac2b130ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b130e50"/>
        <function-ref name="write" scoped="" ref="0x7fac2b12f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fac2b14bdc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fac2b14bdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b14a180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fac2b136e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fac2b136e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b134210"/>
        <function-ref name="write" scoped="" ref="0x7fac2b1343a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fac2b144480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fac2b144480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b144800"/>
        <function-ref name="write" scoped="" ref="0x7fac2b144990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fac2b145480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fac2b145480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b145800"/>
        <function-ref name="write" scoped="" ref="0x7fac2b145990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fac2b14d750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fac2b14d750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b14dad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fac2b137e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fac2b137e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b136210"/>
        <function-ref name="write" scoped="" ref="0x7fac2b1363a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fac2b138670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fac2b138670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b1389f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b138b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fac2b136670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fac2b136670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b1369f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b136b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fac2b12dad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fac2b12dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b12de50"/>
        <function-ref name="write" scoped="" ref="0x7fac2b12c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fac2b12fad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fac2b12fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b12fe50"/>
        <function-ref name="write" scoped="" ref="0x7fac2b12d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fac2b13b670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fac2b13b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b13b9f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b13bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fac2b138e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fac2b138e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b137210"/>
        <function-ref name="write" scoped="" ref="0x7fac2b1373a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fac2b131ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fac2b131ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b131e50"/>
        <function-ref name="write" scoped="" ref="0x7fac2b130020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fac2b13e670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fac2b13e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b13e9f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b13eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fac2b12cad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fac2b12cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fac2b12ce50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fac2b12b020"/>
        <function-ref name="write" scoped="" ref="0x7fac2b12b1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fac2b12b340"/>
        <function-ref name="readDone" scoped="" ref="0x7fac2b12b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fac2b14d100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fac2b14d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b14d480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fac2b146370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fac2b146370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b1466f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b146880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fac2b143480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fac2b143480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b143800"/>
        <function-ref name="write" scoped="" ref="0x7fac2b143990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fac2b13ae50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fac2b13ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b139210"/>
        <function-ref name="write" scoped="" ref="0x7fac2b1393a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fac2b13fe50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fac2b13fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b13e210"/>
        <function-ref name="write" scoped="" ref="0x7fac2b13e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fac2b139670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fac2b139670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b1399f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b139b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fac2b141670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fac2b141670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b1419f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b141b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fac2b14c450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fac2b14c450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b14c7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fac2b141e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fac2b141e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b140210"/>
        <function-ref name="write" scoped="" ref="0x7fac2b1403a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac2b150a80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fac2b150a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac2b150e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac2b14e020"/>
        <function-ref name="request" scoped="" ref="0x7fac2b14e1b0"/>
        <function-ref name="granted" scoped="" ref="0x7fac2b14e340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac2b14e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fac2b147020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fac2b147020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b1473a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fac2b147cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fac2b147cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b1460a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fac2b1312f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fac2b1312f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b131670"/>
        <function-ref name="write" scoped="" ref="0x7fac2b131800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fac2b132ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fac2b132ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b132e50"/>
        <function-ref name="write" scoped="" ref="0x7fac2b131020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fac2b14a450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fac2b14a450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b14a7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fac2b1322f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fac2b1322f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b132670"/>
        <function-ref name="write" scoped="" ref="0x7fac2b132800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fac2b12d2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fac2b12d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b12d670"/>
        <function-ref name="write" scoped="" ref="0x7fac2b12d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fac2b13be50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fac2b13be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b13a210"/>
        <function-ref name="write" scoped="" ref="0x7fac2b13a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fac2b137670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fac2b137670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b1379f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b137b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fac2b14caa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fac2b14caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b14ce20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fac2b14b770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fac2b14b770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b14baf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fac2b13ee50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fac2b13ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b13d210"/>
        <function-ref name="write" scoped="" ref="0x7fac2b13d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fac2b147670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fac2b147670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b1479f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fac2b13d670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fac2b13d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b13d9f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b13db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fac2b134e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fac2b134e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b133610"/>
        <function-ref name="write" scoped="" ref="0x7fac2b1337a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fac2b12b7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fac2b12b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fac2b12bb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fac2b12bcb0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b12be40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fac2b12a020"/>
        <function-ref name="readDone" scoped="" ref="0x7fac2b12a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fac2b116c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fac2b116c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b115210"/>
        <function-ref name="write" scoped="" ref="0x7fac2b1153a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fac2b121da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fac2b121da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b120180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fac2b11ab50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fac2b11ab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b118020"/>
        <function-ref name="write" scoped="" ref="0x7fac2b1181b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fac2b114670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fac2b114670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b1149f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b114b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fac2b10de50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fac2b10de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b10b210"/>
        <function-ref name="write" scoped="" ref="0x7fac2b10b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fac2b114e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fac2b114e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b112210"/>
        <function-ref name="write" scoped="" ref="0x7fac2b1123a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fac2b1002f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fac2b1002f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b100670"/>
        <function-ref name="write" scoped="" ref="0x7fac2b100800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fac2b1022f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fac2b1022f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b102670"/>
        <function-ref name="write" scoped="" ref="0x7fac2b102800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fac2b11e120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fac2b11e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b11e4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fac2b108670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fac2b108670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b1089f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b108b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fac2b1032f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fac2b1032f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b103670"/>
        <function-ref name="write" scoped="" ref="0x7fac2b103800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fac2b118c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fac2b118c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b117020"/>
        <function-ref name="write" scoped="" ref="0x7fac2b1171b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fac2b117c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fac2b117c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b116020"/>
        <function-ref name="write" scoped="" ref="0x7fac2b1161b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fac2b10e670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fac2b10e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b10e9f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b10eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fac2b110e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fac2b110e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b10f210"/>
        <function-ref name="write" scoped="" ref="0x7fac2b10f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fac2b112670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fac2b112670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b1129f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b112b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fac2b122760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac2b122760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fac2b122ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fac2b122c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fac2b122e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fac2b11daa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fac2b11daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b11de20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fac2b11c120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fac2b11c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b11c5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fac2b107a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fac2b107a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b107df0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b106020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fac2b11c870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fac2b11c870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b11cbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fac2b103ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fac2b103ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b103e50"/>
        <function-ref name="write" scoped="" ref="0x7fac2b102020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fac2b11edc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fac2b11edc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b11d180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fac2b109e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fac2b109e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b108210"/>
        <function-ref name="write" scoped="" ref="0x7fac2b1083a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fac2b117480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fac2b117480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b117800"/>
        <function-ref name="write" scoped="" ref="0x7fac2b117990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fac2b118480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fac2b118480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b118800"/>
        <function-ref name="write" scoped="" ref="0x7fac2b118990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fac2b121750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fac2b121750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b121ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fac2b10ae50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fac2b10ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b109210"/>
        <function-ref name="write" scoped="" ref="0x7fac2b1093a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fac2b10b670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fac2b10b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b10b9f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b10bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fac2b109670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fac2b109670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b1099f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b109b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fac2b101ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fac2b101ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b101e50"/>
        <function-ref name="write" scoped="" ref="0x7fac2b100020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fac2b102ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fac2b102ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b102e50"/>
        <function-ref name="write" scoped="" ref="0x7fac2b101020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fac2b10f670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fac2b10f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b10f9f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b10fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fac2b10be50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fac2b10be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b10a210"/>
        <function-ref name="write" scoped="" ref="0x7fac2b10a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fac2b104ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fac2b104ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b104e50"/>
        <function-ref name="write" scoped="" ref="0x7fac2b103020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fac2b111670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fac2b111670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b1119f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b111b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fac2b100ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fac2b100ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fac2b100e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fac2b0ff020"/>
        <function-ref name="write" scoped="" ref="0x7fac2b0ff1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fac2b0ff340"/>
        <function-ref name="readDone" scoped="" ref="0x7fac2b0ff4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fac2b121100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fac2b121100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b121480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fac2b11a370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fac2b11a370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b11a6f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b11a880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fac2b116480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fac2b116480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b116800"/>
        <function-ref name="write" scoped="" ref="0x7fac2b116990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fac2b10ee50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fac2b10ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b10d210"/>
        <function-ref name="write" scoped="" ref="0x7fac2b10d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fac2b112e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fac2b112e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b111210"/>
        <function-ref name="write" scoped="" ref="0x7fac2b1113a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fac2b10d670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fac2b10d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b10d9f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b10db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fac2b115670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fac2b115670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b1159f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b115b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fac2b120450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fac2b120450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b1207d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fac2b115e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fac2b115e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b114210"/>
        <function-ref name="write" scoped="" ref="0x7fac2b1143a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac2b1239e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fac2b1239e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac2b123d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac2b122020"/>
        <function-ref name="request" scoped="" ref="0x7fac2b1221b0"/>
        <function-ref name="granted" scoped="" ref="0x7fac2b122340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac2b1224d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fac2b11b020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fac2b11b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b11b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fac2b11bcc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fac2b11bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b11a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fac2b1042f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fac2b1042f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b104670"/>
        <function-ref name="write" scoped="" ref="0x7fac2b104800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fac2b106ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fac2b106ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b106e50"/>
        <function-ref name="write" scoped="" ref="0x7fac2b104020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fac2b11d450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fac2b11d450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b11d7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fac2b1062f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fac2b1062f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b106670"/>
        <function-ref name="write" scoped="" ref="0x7fac2b106800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fac2b1012f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fac2b1012f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b101670"/>
        <function-ref name="write" scoped="" ref="0x7fac2b101800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fac2b10fe50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fac2b10fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b10e210"/>
        <function-ref name="write" scoped="" ref="0x7fac2b10e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fac2b10a670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fac2b10a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b10a9f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b10ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fac2b120aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fac2b120aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b120e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fac2b11e770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fac2b11e770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b11eaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fac2b111e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fac2b111e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b110210"/>
        <function-ref name="write" scoped="" ref="0x7fac2b1103a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fac2b11b670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fac2b11b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b11b9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fac2b110670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fac2b110670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b1109f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b110b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fac2b108e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fac2b108e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b107610"/>
        <function-ref name="write" scoped="" ref="0x7fac2b1077a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fac2b0ff7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fac2b0ff7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fac2b0ffb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fac2b0ffcb0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b0ffe40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fac2b0fe020"/>
        <function-ref name="readDone" scoped="" ref="0x7fac2b0fe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7fac2b0f6b20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fac2b0f6b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fac2b0f3020"/>
        <function-ref name="changed" scoped="" ref="0x7fac2b0f31b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fac2b0f3340"/>
        <function-ref name="setAddress" scoped="" ref="0x7fac2b0f34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7fac2b0f5d20" loc="13:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fac2b0f5d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fac2b0df0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7fac2b0da310" loc="5:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fac2b0da310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fac2b0da690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7fac2b0d7880" loc="8:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7fac2b0d7880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b0d7c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7fac2b0cc020" loc="8:../../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7fac2b0cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b0cc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7fac2b0c2bd0" loc="14:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7fac2b0c2bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b0c6020"/>
        <function-ref name="write" scoped="" ref="0x7fac2b0c61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7fac2b0c6530" loc="15:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7fac2b0c6530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fac2b0c68b0"/>
        <function-ref name="stop" scoped="" ref="0x7fac2b0c6a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7fac2b0c7140" loc="11:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7fac2b0c7140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b0c74c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7fac2b0cbc50" loc="8:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7fac2b0cbc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b0b2020"/>
        <function-ref name="write" scoped="" ref="0x7fac2b0b21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7fac2b0b2540" loc="11:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7fac2b0b2540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b0b28c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b0b2a50"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b0b2be0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b0b2d70"/>
        <function-ref name="get" scoped="" ref="0x7fac2b0b1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b0b11b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2b0b1340"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b0b14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7fac2b0a9950" loc="15:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7fac2b0a9950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f7640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fac2c0f79b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fac2b0ab780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7fac2b0ae150" loc="11:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7fac2b0ae150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b0ae4d0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b0ae660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7fac2b0ae9f0" loc="14:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7fac2b0ae9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b0aed70"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b0ad020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b0ad1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b0ad340"/>
        <function-ref name="get" scoped="" ref="0x7fac2b0ad4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b0ad660"/>
        <function-ref name="set" scoped="" ref="0x7fac2b0ad7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b0ad980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7fac2b0b0ca0" loc="41:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7fac2b0b0ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f7640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fac2c0f79b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fac2b088ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7fac2b086a90" loc="54:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7fac2b086a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f7640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fac2c0f79b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fac2b0858d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fac2b076020" loc="55:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fac2b076020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f7640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fac2c0f79b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac2b076e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2b074800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2b074340"/>
        <function-ref name="overflow" scoped="" ref="0x7fac2b074cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7fac2b070530" loc="46:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fac2b070530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f7640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fac2c0f79b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac2b06f3d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2b06fd50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2b06f890"/>
        <function-ref name="overflow" scoped="" ref="0x7fac2b06e260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fac2b069020" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fac2b069020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2b0693a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fac2b069530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fac2b0696c0"/>
        <function-ref name="get" scoped="" ref="0x7fac2b069850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fac2b0699e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2b069b70"/>
        <function-ref name="getMode" scoped="" ref="0x7fac2b069d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2b068020"/>
        <function-ref name="overflow" scoped="" ref="0x7fac2b0681b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fac2b068340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fac2b0684d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fac2b06ce50" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fac2b06ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f7640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fac2c0f79b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac2b06bca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2b06a670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2b06a1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fac2b06ab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7fac2b0b3590" loc="3:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7fac2b0b3590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b0b3910"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b0b3aa0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b0b3c30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b0b3dc0"/>
        <function-ref name="get" scoped="" ref="0x7fac2b064020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b0641b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2b064340"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b0644d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fac2b061c50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fac2b061c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b060020"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b0601b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fac2b060340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fac2b05e020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b060660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b0607f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fac2b060980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fac2b060b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b060ca0"/>
        <function-ref name="get" scoped="" ref="0x7fac2b060e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fac2b05f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fac2b05f1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fac2b05f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fac2b05f5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fac2b05f760"/>
        <function-ref name="set" scoped="" ref="0x7fac2b05f8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fac2b05fa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fac2b05fc10"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b0604d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fac2b05fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fac2b0629e0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fac2b0629e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b062d60"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b061020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b0611b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b061340"/>
        <function-ref name="get" scoped="" ref="0x7fac2b0614d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b061660"/>
        <function-ref name="set" scoped="" ref="0x7fac2b0617f0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b061980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fac2b0591b0" loc="14:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fac2b0591b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fac2b059530"/>
        <function-ref name="stop" scoped="" ref="0x7fac2b0596c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fac2b04acb0" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fac2b04acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fac2b0490a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fac2b049230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fac2b0493c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fac2b049550"/>
        <function-ref name="setCca" scoped="" ref="0x7fac2b0496e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fac2b049870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7fac2b046990" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7fac2b046990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fac2b046d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7fac2b04a020" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7fac2b04a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac2b04a3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fac2b04a530"/>
        <function-ref name="modify" scoped="" ref="0x7fac2b04a6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac2b04a850"/>
        <function-ref name="resend" scoped="" ref="0x7fac2b04a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fac2b04d6c0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fac2b04d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fac2b04da40"/>
        <function-ref name="stop" scoped="" ref="0x7fac2b04dbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7fac2b048150" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7fac2b048150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fac2b0484d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fac2b03c970" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fac2b03c970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fac2b03ccf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fac2b03ce80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fac2b03b030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fac2b03b1c0"/>
        <function-ref name="setCca" scoped="" ref="0x7fac2b03b350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fac2b03b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fac2b02cc60" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fac2b02cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac2c0f7200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fac2b030210"/>
        <function-ref name="clear" scoped="" ref="0x7fac2b030940"/>
        <function-ref name="isValid" scoped="" ref="0x7fac2b031ac0"/>
        <function-ref name="set" scoped="" ref="0x7fac2b029090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7fac2b014020" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fac2b014020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b0143a0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b014530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7fac2b014890" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fac2b014890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b014c10"/>
        <function-ref name="write" scoped="" ref="0x7fac2b014da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7fac2b03b900" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7fac2b03b900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fac2b03bc80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7fac2b017530" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fac2b017530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b0178b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7fac2b026a80" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7fac2b026a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fac2b026e00"/>
        <function-ref name="disable" scoped="" ref="0x7fac2b025020"/>
        <function-ref name="captured" scoped="" ref="0x7fac2b0251b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fac2b025340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7fac2b03aae0" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7fac2b03aae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac2c0f7200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac2b034390"/>
        <function-ref name="fired" scoped="" ref="0x7fac2b036360"/>
        <function-ref name="startAt" scoped="" ref="0x7fac2b036ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac2b036820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fac2b034850"/>
        <function-ref name="start" scoped="" ref="0x7fac2b037970"/>
        <function-ref name="stop" scoped="" ref="0x7fac2b037e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fac2b034d00" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fac2b034d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fac2b0330a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fac2b033230"/>
        <function-ref name="getRssi" scoped="" ref="0x7fac2b0333c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fac2b033550"/>
        <function-ref name="getPower" scoped="" ref="0x7fac2b0336e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fac2b033870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7fac2b019550" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fac2b019550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b0198d0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b019a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7fac2b019e00" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fac2b019e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b0181c0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b018350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7fac2b00ed40" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fac2b00ed40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac2b0110e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fac2b011270"/>
        <function-ref name="sfd" scoped="" ref="0x7fac2b011400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fac2b03dbc0" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fac2b03dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac2b03c020"/>
        <function-ref name="cancel" scoped="" ref="0x7fac2b03c1b0"/>
        <function-ref name="modify" scoped="" ref="0x7fac2b03c340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac2b03c4d0"/>
        <function-ref name="resend" scoped="" ref="0x7fac2b03c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7fac2b01cd10" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac2b01cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fac2b01b0e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fac2b01b270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fac2b01b400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7fac2b017c60" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fac2b017c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b016020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fac2b01f9b0" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fac2b01f9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b01fd30"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b01e020"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b01e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b01e340"/>
        <function-ref name="get" scoped="" ref="0x7fac2b01e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b01e660"/>
        <function-ref name="set" scoped="" ref="0x7fac2b01e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b01e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac2b03fc60" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fac2b03fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac2b03d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fac2b033bb0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac2b033bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fac2b032020"/>
        <function-ref name="getHeader" scoped="" ref="0x7fac2b0321b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fac2b032340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7fac2b020e80" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fac2b020e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac2b026220"/>
        <function-ref name="isSet" scoped="" ref="0x7fac2b0263b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fac2b026540"/>
        <function-ref name="set" scoped="" ref="0x7fac2b0266d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7fac2b0163e0" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fac2b0163e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b016960"/>
        <function-ref name="write" scoped="" ref="0x7fac2b016af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fac2b01c020" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fac2b01c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac2b01c3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac2b01c530"/>
        <function-ref name="request" scoped="" ref="0x7fac2b01c6c0"/>
        <function-ref name="granted" scoped="" ref="0x7fac2b01c850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac2b01c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7fac2b025690" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7fac2b025690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b025b10"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b025ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b025e30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b01f020"/>
        <function-ref name="get" scoped="" ref="0x7fac2b01f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b01f340"/>
        <function-ref name="set" scoped="" ref="0x7fac2b01f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b01f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7fac2b013130" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fac2b013130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b0134b0"/>
        <function-ref name="write" scoped="" ref="0x7fac2b013640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7fac2b0139c0" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fac2b0139c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b013d40"/>
        <function-ref name="write" scoped="" ref="0x7fac2b012020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7fac2b0186d0" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fac2b0186d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b018a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7fac2b01ecd0" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7fac2b01ecd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2b01d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2b01d230"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2b01d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2b01d550"/>
        <function-ref name="get" scoped="" ref="0x7fac2b01d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2b01d870"/>
        <function-ref name="set" scoped="" ref="0x7fac2b01da00"/>
        <function-ref name="clr" scoped="" ref="0x7fac2b01db90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fac2b0116c0" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fac2b0116c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fac2b011a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fac2b011bd0"/>
        <function-ref name="led1On" scoped="" ref="0x7fac2b011d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fac2b010020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fac2b0101b0"/>
        <function-ref name="get" scoped="" ref="0x7fac2b010340"/>
        <function-ref name="led1Off" scoped="" ref="0x7fac2b0104d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fac2b010b10"/>
        <function-ref name="set" scoped="" ref="0x7fac2b010660"/>
        <function-ref name="led0On" scoped="" ref="0x7fac2b0107f0"/>
        <function-ref name="led2On" scoped="" ref="0x7fac2b010980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7fac2b0155e0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fac2b0155e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2b015960"/>
        <function-ref name="write" scoped="" ref="0x7fac2b015af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fac2b03d320" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fac2b03d320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fac2b03d6a0"/>
        <function-ref name="stop" scoped="" ref="0x7fac2b03d830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7fac2b01b780" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fac2b01b780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fac2b01bb00"/>
        <function-ref name="writeDone" scoped="" ref="0x7fac2b01bc90"/>
        <function-ref name="write" scoped="" ref="0x7fac2b01be20"/>
        <function-ref name="beginRead" scoped="" ref="0x7fac2b019020"/>
        <function-ref name="readDone" scoped="" ref="0x7fac2b0191b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7fac2b018de0" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fac2b018de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b017180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7fac2b016e80" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fac2b016e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2b015220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7fac2b03a0f0" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7fac2b03a0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fac2b03a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fac2af73c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fac2af73c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af72210"/>
        <function-ref name="write" scoped="" ref="0x7fac2af723a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fac2af7d020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fac2af7d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2af7d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fac2af77c70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fac2af77c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af76020"/>
        <function-ref name="write" scoped="" ref="0x7fac2af761b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fac2af71670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fac2af71670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af719f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2af71b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fac2af6ae50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fac2af6ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af69210"/>
        <function-ref name="write" scoped="" ref="0x7fac2af693a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fac2af71e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fac2af71e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af70210"/>
        <function-ref name="write" scoped="" ref="0x7fac2af703a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fac2af5d2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fac2af5d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af5d670"/>
        <function-ref name="write" scoped="" ref="0x7fac2af5d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fac2af5f2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fac2af5f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af5f670"/>
        <function-ref name="write" scoped="" ref="0x7fac2af5f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fac2af7c370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fac2af7c370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2af7c6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fac2af65670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fac2af65670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af659f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2af65b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fac2af612f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fac2af612f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af61670"/>
        <function-ref name="write" scoped="" ref="0x7fac2af61800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fac2af76c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fac2af76c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af74020"/>
        <function-ref name="write" scoped="" ref="0x7fac2af741b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fac2af74c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fac2af74c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af73020"/>
        <function-ref name="write" scoped="" ref="0x7fac2af731b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fac2af6b670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fac2af6b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af6b9f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2af6bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fac2af6de50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fac2af6de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af6c210"/>
        <function-ref name="write" scoped="" ref="0x7fac2af6c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fac2af70670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fac2af70670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af709f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2af70b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fac2af7f8f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac2af7f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fac2af7fc70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fac2af7fe00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fac2af7e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fac2af7bd00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fac2af7bd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2af790a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fac2af79370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fac2af79370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2af797f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fac2af64a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fac2af64a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af64df0"/>
        <function-ref name="write" scoped="" ref="0x7fac2af63020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fac2af79ac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fac2af79ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2af79e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fac2af61ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fac2af61ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af61e50"/>
        <function-ref name="write" scoped="" ref="0x7fac2af5f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fac2af7b060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fac2af7b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2af7b3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fac2af66e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fac2af66e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af65210"/>
        <function-ref name="write" scoped="" ref="0x7fac2af653a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fac2af74480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fac2af74480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af74800"/>
        <function-ref name="write" scoped="" ref="0x7fac2af74990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fac2af76480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fac2af76480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af76800"/>
        <function-ref name="write" scoped="" ref="0x7fac2af76990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fac2af7e940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fac2af7e940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2af7ecc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fac2af68e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fac2af68e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af66210"/>
        <function-ref name="write" scoped="" ref="0x7fac2af663a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fac2af69670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fac2af69670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af699f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2af69b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fac2af66670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fac2af66670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af669f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2af66b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fac2af5ead0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fac2af5ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af5ee50"/>
        <function-ref name="write" scoped="" ref="0x7fac2af5d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fac2af5fad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fac2af5fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af5fe50"/>
        <function-ref name="write" scoped="" ref="0x7fac2af5e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fac2af6c670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fac2af6c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af6c9f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2af6cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fac2af69e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fac2af69e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af68210"/>
        <function-ref name="write" scoped="" ref="0x7fac2af683a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fac2af62ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fac2af62ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af62e50"/>
        <function-ref name="write" scoped="" ref="0x7fac2af61020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fac2af6f670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fac2af6f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af6f9f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2af6fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fac2af5dad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fac2af5dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fac2af5de50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fac2af5c020"/>
        <function-ref name="write" scoped="" ref="0x7fac2af5c1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fac2af5c340"/>
        <function-ref name="readDone" scoped="" ref="0x7fac2af5c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fac2af7e2f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fac2af7e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2af7e670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fac2af77490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fac2af77490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af77810"/>
        <function-ref name="write" scoped="" ref="0x7fac2af779a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fac2af73480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fac2af73480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af73800"/>
        <function-ref name="write" scoped="" ref="0x7fac2af73990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fac2af6be50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fac2af6be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af6a210"/>
        <function-ref name="write" scoped="" ref="0x7fac2af6a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fac2af70e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fac2af70e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af6f210"/>
        <function-ref name="write" scoped="" ref="0x7fac2af6f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fac2af6a670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fac2af6a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af6a9f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2af6ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fac2af72670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fac2af72670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af729f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2af72b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fac2af7d670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fac2af7d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2af7d9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fac2af72e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fac2af72e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af71210"/>
        <function-ref name="write" scoped="" ref="0x7fac2af713a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac2af80c30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fac2af80c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac2af7f020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac2af7f1b0"/>
        <function-ref name="request" scoped="" ref="0x7fac2af7f340"/>
        <function-ref name="granted" scoped="" ref="0x7fac2af7f4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac2af7f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fac2af78160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fac2af78160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2af784e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fac2af78e00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fac2af78e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2af771c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fac2af622f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fac2af622f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af62670"/>
        <function-ref name="write" scoped="" ref="0x7fac2af62800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fac2af63ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fac2af63ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af63e50"/>
        <function-ref name="write" scoped="" ref="0x7fac2af62020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fac2af7b6b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fac2af7b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2af7ba30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fac2af632f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fac2af632f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af63670"/>
        <function-ref name="write" scoped="" ref="0x7fac2af63800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fac2af5e2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fac2af5e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af5e670"/>
        <function-ref name="write" scoped="" ref="0x7fac2af5e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fac2af6ce50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fac2af6ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af6b210"/>
        <function-ref name="write" scoped="" ref="0x7fac2af6b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fac2af68670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fac2af68670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af689f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2af68b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fac2af7dcc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fac2af7dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2af7c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fac2af7c9c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fac2af7c9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2af7cd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fac2af6fe50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fac2af6fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af6d210"/>
        <function-ref name="write" scoped="" ref="0x7fac2af6d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fac2af787b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fac2af787b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2af78b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fac2af6d670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fac2af6d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af6d9f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2af6db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fac2af65e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fac2af65e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af64610"/>
        <function-ref name="write" scoped="" ref="0x7fac2af647a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fac2af5c7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fac2af5c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fac2af5cb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fac2af5ccb0"/>
        <function-ref name="write" scoped="" ref="0x7fac2af5ce40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fac2af5b020"/>
        <function-ref name="readDone" scoped="" ref="0x7fac2af5b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7fac2af50df0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fac2af50df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac2af4d1c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fac2af4d350"/>
        <function-ref name="sfd" scoped="" ref="0x7fac2af4d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fac2af4d7c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fac2af4d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac2af4db40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7fac2af4c020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7fac2af4c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fac2af4c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fac2af505c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fac2af505c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fac2af50940"/>
        <function-ref name="stop" scoped="" ref="0x7fac2af50ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7fac2af43380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7fac2af43380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2af43700"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2af43890"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2af43a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2af43bb0"/>
        <function-ref name="get" scoped="" ref="0x7fac2af43d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2af42020"/>
        <function-ref name="set" scoped="" ref="0x7fac2af421b0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2af42340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fac2af3cb90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fac2af3cb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fac2af3b020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fac2af3b1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fac2af3b340"/>
        <function-ref name="syncDone" scoped="" ref="0x7fac2af3b4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fac2af3b660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fac2af3b7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fac2af3b980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fac2af3bb10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fac2af3bca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fac2af3be30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fac2af3a020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fac2af3a1b0"/>
        <function-ref name="sync" scoped="" ref="0x7fac2af3a340"/>
        <function-ref name="getChannel" scoped="" ref="0x7fac2af3a5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fac2af3a760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7fac2af259d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7fac2af259d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac2af25d50"/>
        <function-ref name="runTask" scoped="" ref="0x7fac2af24020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fac2af3ad70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fac2af3ad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac2c0f7200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fac2af37330"/>
        <function-ref name="clear" scoped="" ref="0x7fac2af37a60"/>
        <function-ref name="isValid" scoped="" ref="0x7fac2af39ba0"/>
        <function-ref name="set" scoped="" ref="0x7fac2af36210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7fac2af426b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7fac2af426b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2af42a30"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2af42bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2af42d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2af41020"/>
        <function-ref name="get" scoped="" ref="0x7fac2af411b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2af41340"/>
        <function-ref name="set" scoped="" ref="0x7fac2af414d0"/>
        <function-ref name="clr" scoped="" ref="0x7fac2af41660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7fac2af35cb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fac2af35cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af340a0"/>
        <function-ref name="write" scoped="" ref="0x7fac2af34230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7fac2af34590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fac2af34590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af34910"/>
        <function-ref name="write" scoped="" ref="0x7fac2af34aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7fac2af336d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fac2af336d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af33a50"/>
        <function-ref name="write" scoped="" ref="0x7fac2af33be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fac2af3d330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fac2af3d330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fac2af3d6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fac2af3d840"/>
        <function-ref name="getRssi" scoped="" ref="0x7fac2af3d9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fac2af3db60"/>
        <function-ref name="getPower" scoped="" ref="0x7fac2af3dcf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fac2af3de80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7fac2af46550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fac2af46550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac2af468d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fac2af46a60"/>
        <function-ref name="sfd" scoped="" ref="0x7fac2af46bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7fac2af3e3a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fac2af3e3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2af3e720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fac2af44020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fac2af44020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fac2af443a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fac2af44530"/>
        <function-ref name="toggle" scoped="" ref="0x7fac2af446c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fac2af44850"/>
        <function-ref name="get" scoped="" ref="0x7fac2af449e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fac2af44b70"/>
        <function-ref name="set" scoped="" ref="0x7fac2af44d00"/>
        <function-ref name="clr" scoped="" ref="0x7fac2af43020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7fac2af32020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fac2af32020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af323a0"/>
        <function-ref name="write" scoped="" ref="0x7fac2af32530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac2af48620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fac2af48620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac2af489a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fac2af3c1e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac2af3c1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fac2af3c560"/>
        <function-ref name="getHeader" scoped="" ref="0x7fac2af3c6f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fac2af3c880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fac2af45020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fac2af45020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac2af453a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fac2af406e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fac2af406e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac2af40a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac2af40bf0"/>
        <function-ref name="request" scoped="" ref="0x7fac2af40d80"/>
        <function-ref name="granted" scoped="" ref="0x7fac2af3f020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac2af3f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7fac2af34e00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fac2af34e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af331c0"/>
        <function-ref name="write" scoped="" ref="0x7fac2af33350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7fac2af3f530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fac2af3f530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fac2af3f8b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fac2af3fa40"/>
        <function-ref name="write" scoped="" ref="0x7fac2af3fbd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fac2af3fd60"/>
        <function-ref name="readDone" scoped="" ref="0x7fac2af3e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7fac2af328b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fac2af328b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2af32e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7fac2af457c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7fac2af457c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fac2af45b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fac2af30150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fac2af30150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fac2af304d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fac2af30660"/>
        <function-ref name="led1On" scoped="" ref="0x7fac2af307f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fac2af30980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fac2af30b10"/>
        <function-ref name="get" scoped="" ref="0x7fac2af30ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fac2af30e30"/>
        <function-ref name="led2Off" scoped="" ref="0x7fac2af2f4d0"/>
        <function-ref name="set" scoped="" ref="0x7fac2af2f020"/>
        <function-ref name="led0On" scoped="" ref="0x7fac2af2f1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fac2af2f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7fac2af353e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fac2af353e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2af35760"/>
        <function-ref name="write" scoped="" ref="0x7fac2af358f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7fac2af36b10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fac2af36b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2af35020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7fac2af41a50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fac2af41a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fac2af41dd0"/>
        <function-ref name="disable" scoped="" ref="0x7fac2af40020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fac2af401b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fac2af40340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7fac2af3ead0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fac2af3ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2af3d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fac2af48ca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fac2af48ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fac2af460a0"/>
        <function-ref name="stop" scoped="" ref="0x7fac2af46230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fac2aec4a70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fac2aec4a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fac2aec4df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fac2aec8670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fac2aec8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fac2aec89f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fac2aec8b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7fac2aec8d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fac2aec5020"/>
        <function-ref name="getPower" scoped="" ref="0x7fac2aec51b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fac2aec5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fac2aec3550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fac2aec3550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac2c0f7200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fac2aec2b00"/>
        <function-ref name="clear" scoped="" ref="0x7fac2aec02a0"/>
        <function-ref name="isValid" scoped="" ref="0x7fac2aec23d0"/>
        <function-ref name="set" scoped="" ref="0x7fac2aec09d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7fac2aec40c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac2aec40c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fac2aec4440"/>
        <function-ref name="getHeader" scoped="" ref="0x7fac2aec45d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fac2aec4760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fac2aebb480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fac2aebb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac2aebb800"/>
        <function-ref name="isSet" scoped="" ref="0x7fac2aebb990"/>
        <function-ref name="cancel" scoped="" ref="0x7fac2aebbb20"/>
        <function-ref name="set" scoped="" ref="0x7fac2aebbcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fac2aebf660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fac2aebf660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac2c0f89f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fac2aebece0"/>
        <function-ref name="clear" scoped="" ref="0x7fac2aebc460"/>
        <function-ref name="isValid" scoped="" ref="0x7fac2aebe5b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2aebcb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fac2aec56e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fac2aec56e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fac2aec5a60"/>
        <function-ref name="noAck" scoped="" ref="0x7fac2aec5bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fac2aec5d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fac2aeb5020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fac2aeb5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fac2aeb53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fac2aebad20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fac2aebad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fac2aeb70e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fac2aeb7270"/>
        <function-ref name="getRssi" scoped="" ref="0x7fac2aeb7400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fac2aeb7590"/>
        <function-ref name="getPower" scoped="" ref="0x7fac2aeb7720"/>
        <function-ref name="getLqi" scoped="" ref="0x7fac2aeb78b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fac2aeac4a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fac2aeac4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2aeac820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fac2aeac9b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2aeacb40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2aeaccd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fac2aeace60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fac2aeb5a80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fac2aeb5a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac2c0f7200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fac2aeb2020"/>
        <function-ref name="clear" scoped="" ref="0x7fac2aeb2750"/>
        <function-ref name="isValid" scoped="" ref="0x7fac2aeb48d0"/>
        <function-ref name="set" scoped="" ref="0x7fac2aeb2e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7fac2aeb6640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac2aeb6640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fac2aeb69c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fac2aeb6b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fac2aeb6ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fac2aead8b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fac2aead8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac2aeadc30"/>
        <function-ref name="isSet" scoped="" ref="0x7fac2aeaddc0"/>
        <function-ref name="cancel" scoped="" ref="0x7fac2aeac020"/>
        <function-ref name="set" scoped="" ref="0x7fac2aeac1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7fac2aeab3b0" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7fac2aeab3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac2c0f7200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac2aeaa020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7fac2aeaa6e0" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fac2aeaa6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac2c0f89f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac2aea83d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fac2aeb1af0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fac2aeb1af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac2c0f89f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fac2aeae0d0"/>
        <function-ref name="clear" scoped="" ref="0x7fac2aeae800"/>
        <function-ref name="isValid" scoped="" ref="0x7fac2aeb0970"/>
        <function-ref name="set" scoped="" ref="0x7fac2aead020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fac2aeb7c50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fac2aeb7c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fac2aeb6020"/>
        <function-ref name="noAck" scoped="" ref="0x7fac2aeb61b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fac2aeb6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fac2ae59020" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fac2ae59020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac2c0f7200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac2ae59c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fac2ae57300" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fac2ae57300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac2c0f7200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fac2ae56150"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fac2ae56ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fac2ae56610"/>
        <function-ref name="overflow" scoped="" ref="0x7fac2ae55020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fac2ae53450" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fac2ae53450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac2c0f89f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fac2ae4fa20"/>
        <function-ref name="fired" scoped="" ref="0x7fac2ae50020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fac2ae50da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fac2ae50920"/>
        <function-ref name="getdt" scoped="" ref="0x7fac2ae4e4a0"/>
        <function-ref name="gett0" scoped="" ref="0x7fac2ae4e020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fac2ae504a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fac2ae52090"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fac2ae4f410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fac2ae52560"/>
        <function-ref name="stop" scoped="" ref="0x7fac2ae52a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fac2ae3ec60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fac2ae3ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae3c210"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae3c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fac2ae47020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fac2ae47020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2ae473a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fac2ae41c70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fac2ae41c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae40020"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae401b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fac2ae3b670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fac2ae3b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae3b9f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae3bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fac2ae34e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fac2ae34e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae33210"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae333a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fac2ae3be50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fac2ae3be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae3a210"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae3a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fac2ae272f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fac2ae272f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae27670"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae27800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fac2ae2a2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fac2ae2a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae2a670"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae2a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fac2ae46370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fac2ae46370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2ae466f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fac2ae2f670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fac2ae2f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae2f9f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae2fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fac2ae2b2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fac2ae2b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae2b670"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae2b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fac2ae40c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fac2ae40c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae3f020"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae3f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fac2ae3fc60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fac2ae3fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae3e020"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae3e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fac2ae35670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fac2ae35670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae359f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae35b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fac2ae38e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fac2ae38e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae37210"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae373a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fac2ae3a670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fac2ae3a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae3a9f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae3ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fac2ae49970" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fac2ae49970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fac2ae49cf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fac2ae49e80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fac2ae48030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fac2ae45d00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fac2ae45d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2ae440a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fac2ae44370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fac2ae44370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2ae447f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fac2ae2ea70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fac2ae2ea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae2edf0"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae2d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fac2ae44ac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fac2ae44ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2ae44e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fac2ae2bad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fac2ae2bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae2be50"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae2a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fac2ae45060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fac2ae45060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2ae453e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fac2ae31e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fac2ae31e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae2f210"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae2f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fac2ae3f480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fac2ae3f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae3f800"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae3f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fac2ae40480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fac2ae40480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae40800"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae40990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fac2ae48950" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fac2ae48950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2ae48cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fac2ae32e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fac2ae32e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae31210"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae313a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fac2ae33670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fac2ae33670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae339f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae33b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fac2ae31670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fac2ae31670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae319f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae31b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fac2ae29ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fac2ae29ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae29e50"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae27020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fac2ae2aad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fac2ae2aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae2ae50"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae29020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fac2ae37670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fac2ae37670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae379f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae37b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fac2ae33e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fac2ae33e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae32210"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae323a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fac2ae2cad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fac2ae2cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae2ce50"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae2b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fac2ae39670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fac2ae39670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae399f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae39b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fac2ae27ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fac2ae27ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fac2ae27e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fac2ae26020"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae261b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fac2ae26340"/>
        <function-ref name="readDone" scoped="" ref="0x7fac2ae264d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fac2ae48300" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fac2ae48300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2ae48680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fac2ae41490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fac2ae41490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae41810"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae419a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fac2ae3e480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fac2ae3e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae3e800"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae3e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fac2ae35e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fac2ae35e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae34210"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae343a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fac2ae3ae50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fac2ae3ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae39210"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae393a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fac2ae34670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fac2ae34670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae349f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae34b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fac2ae3c670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fac2ae3c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae3c9f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae3cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fac2ae47670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fac2ae47670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2ae479f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fac2ae3ce50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fac2ae3ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae3b210"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae3b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac2ae4bd00" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fac2ae4bd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac2ae490a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac2ae49230"/>
        <function-ref name="request" scoped="" ref="0x7fac2ae493c0"/>
        <function-ref name="granted" scoped="" ref="0x7fac2ae49550"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac2ae496e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fac2ae42160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fac2ae42160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2ae424e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fac2ae42e00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fac2ae42e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2ae411c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fac2ae2c2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fac2ae2c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae2c670"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae2c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fac2ae2dad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fac2ae2dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae2de50"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae2c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fac2ae456b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fac2ae456b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2ae45a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fac2ae2d2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fac2ae2d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae2d670"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae2d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fac2ae292f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fac2ae292f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae29670"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae29800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fac2ae37e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fac2ae37e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae35210"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae353a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fac2ae32670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fac2ae32670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae329f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae32b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fac2ae47cc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fac2ae47cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2ae460a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fac2ae469c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fac2ae469c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2ae46d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fac2ae39e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fac2ae39e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae38210"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae383a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fac2ae427b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fac2ae427b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fac2ae42b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fac2ae38670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fac2ae38670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae389f0"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae38b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fac2ae2fe50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fac2ae2fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fac2ae2e610"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae2e7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fac2ae267a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fac2ae267a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fac2ae26b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fac2ae26cb0"/>
        <function-ref name="write" scoped="" ref="0x7fac2ae26e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fac2ae25020"/>
        <function-ref name="readDone" scoped="" ref="0x7fac2ae251b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fac2adfba20" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fac2adfba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fac2adfbda0"/>
        <function-ref name="rand32" scoped="" ref="0x7fac2adfa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fac2adf8920" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7fac2adf8920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac2adfb560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac2adff990" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fac2adff990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac2adffd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fac2adf4a20" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fac2adf4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fac2adf4da0"/>
        <function-ref name="rand32" scoped="" ref="0x7fac2adf3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fac2adf5940" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7fac2adf5940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac2adf4560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac2adf5080" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fac2adf5080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac2adf5400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fac2adfdaa0" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fac2adfdaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fac2adfde20"/>
        <function-ref name="toIdle" scoped="" ref="0x7fac2ade6020"/>
        <function-ref name="isState" scoped="" ref="0x7fac2ade61b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fac2ade6340"/>
        <function-ref name="requestState" scoped="" ref="0x7fac2ade64d0"/>
        <function-ref name="forceState" scoped="" ref="0x7fac2ade6660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fac2addc020" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fac2addc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac2addc3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2addc530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2addc6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fac2addc850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac2addc9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fac2addd220" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fac2addd220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac2addd5a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2addd730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2addd8c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fac2addda50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac2adddbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fac2add8e60" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fac2add8e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac2add7210"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2add73a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2add7530"/>
        <function-ref name="cancel" scoped="" ref="0x7fac2add76c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac2add7850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fac2addba10" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fac2addba10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac2addbd90"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2add8020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2add81b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fac2add8340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac2add84d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fac2add68f0" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fac2add68f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fac2add6c70"/>
        <function-ref name="rand32" scoped="" ref="0x7fac2add6e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac2add8750" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fac2add8750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac2add8ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fac2add5170" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac2add5170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fac2add54f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fac2add5680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fac2add5810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7fac2add7ae0" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fac2add7ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fac2add7e60"/>
        <function-ref name="toIdle" scoped="" ref="0x7fac2add6020"/>
        <function-ref name="isState" scoped="" ref="0x7fac2add61b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fac2add6340"/>
        <function-ref name="requestState" scoped="" ref="0x7fac2add64d0"/>
        <function-ref name="forceState" scoped="" ref="0x7fac2add6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fac2add9690" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fac2add9690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fac2add9a10"/>
        <function-ref name="toIdle" scoped="" ref="0x7fac2add9ba0"/>
        <function-ref name="isState" scoped="" ref="0x7fac2add9d30"/>
        <function-ref name="isIdle" scoped="" ref="0x7fac2adc2020"/>
        <function-ref name="requestState" scoped="" ref="0x7fac2adc21b0"/>
        <function-ref name="forceState" scoped="" ref="0x7fac2adc2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fac2adbc950" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fac2adbc950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac2adbccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fac2adbfaa0" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fac2adbfaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac2adbfe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7fac2adbc200" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7fac2adbc200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac2adbc580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fac2adb63f0" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fac2adb63f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac2adb6770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac2adb8b70" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fac2adb8b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac2adb6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fac2adbbe30" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fac2adbbe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac2adb81e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fac2adb6a70" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac2adb6a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fac2adb6df0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fac2adb5020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fac2adb51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7fac2adb8570" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7fac2adb8570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac2adb88f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fac2ad88020" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fac2ad88020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac2ad883a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fac2ad886b0" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fac2ad886b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac2ad88a30"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2ad88bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2ad88d50"/>
        <function-ref name="cancel" scoped="" ref="0x7fac2ad87020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac2ad871b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fac2ad8c8e0" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fac2ad8c8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac2ad8cc60"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2ad8cdf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2ad8b020"/>
        <function-ref name="cancel" scoped="" ref="0x7fac2ad8b1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac2ad8b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fac2ad8bc90" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fac2ad8bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac2ad8a0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2ad8a230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2ad8a3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fac2ad8a550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac2ad8a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fac2ad8b5e0" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fac2ad8b5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac2ad8b960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac2ad8dbe0" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fac2ad8dbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac2ad8c020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac2ad8c1b0"/>
        <function-ref name="request" scoped="" ref="0x7fac2ad8c340"/>
        <function-ref name="granted" scoped="" ref="0x7fac2ad8c4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac2ad8c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fac2ad8aa50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fac2ad8aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac2ad8add0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fac2ad89170" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fac2ad89170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2ad894f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fac2ad89680"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2ad89810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2ad899a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fac2ad89b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fac2ad7ed70" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fac2ad7ed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac2ad7d180"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2ad7d310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2ad7d4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fac2ad7d630"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac2ad7d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fac2ad7db10" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fac2ad7db10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac2ad7c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7fac2ad4fdb0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7fac2ad4fdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac2ad4e180"/>
        <function-ref name="runTask" scoped="" ref="0x7fac2ad4e310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fac2ad7c2f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fac2ad7c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fac2ad7c670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fac2ad7c800"/>
        <function-ref name="getRssi" scoped="" ref="0x7fac2ad7c990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fac2ad7cb20"/>
        <function-ref name="getPower" scoped="" ref="0x7fac2ad7ccb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fac2ad7ce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fac2ad80a20" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fac2ad80a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac2ad80da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2ad7f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2ad7f1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fac2ad7f340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac2ad7f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fac2ad7bb70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fac2ad7bb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fac2ad7a020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fac2ad7a1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fac2ad7a340"/>
        <function-ref name="dequeue" scoped="" ref="0x7fac2ad7a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fac2ad7b170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac2ad7b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fac2ad7b4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fac2ad7b680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fac2ad7b810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fac2ad80370" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7fac2ad80370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac2ad806f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fac2ad837b0" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fac2ad837b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac2ad83b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac2ad83cc0"/>
        <function-ref name="request" scoped="" ref="0x7fac2ad83e50"/>
        <function-ref name="granted" scoped="" ref="0x7fac2ad82020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac2ad821b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fac2ad824d0" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7fac2ad824d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac2ad82850"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2ad829e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2ad82b70"/>
        <function-ref name="cancel" scoped="" ref="0x7fac2ad82d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac2ad80020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fac2ad7f840" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fac2ad7f840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac2ad7fbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fac2ad7e020" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fac2ad7e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2ad7e3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fac2ad7e530"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2ad7e6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2ad7e850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fac2ad7e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fac2ad2fdd0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fac2ad2fdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fac2ad2e180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fac2ad2e410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fac2ad2e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fac2ad2e790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fac2ad2e920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fac2ad2eab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fac2ad2ec40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fac2ad22b80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fac2ad22b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fac2ad21020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fac2ad211b0"/>
        <function-ref name="start" scoped="" ref="0x7fac2ad21340"/>
        <function-ref name="stop" scoped="" ref="0x7fac2ad214d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fac2ad20860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fac2ad20860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac2ad20be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2ad20d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2ad1f020"/>
        <function-ref name="cancel" scoped="" ref="0x7fac2ad1f1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac2ad1f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fac2ad1f690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fac2ad1f690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac2ad1fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fac2ad26ce0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fac2ad26ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac2ad230a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2ad23230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2ad233c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fac2ad23550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac2ad236e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fac2ad22080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fac2ad22080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fac2ad22400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fac2ad22590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fac2ad22720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fac2ad228b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7fac2ad21800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7fac2ad21800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fac2ad21b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7fac2ad21d10"/>
        <function-ref name="isState" scoped="" ref="0x7fac2ad20020"/>
        <function-ref name="isIdle" scoped="" ref="0x7fac2ad201b0"/>
        <function-ref name="requestState" scoped="" ref="0x7fac2ad20340"/>
        <function-ref name="forceState" scoped="" ref="0x7fac2ad204d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fac2ad1fd90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7fac2ad1fd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fac2ad1e180"/>
        <function-ref name="stopDone" scoped="" ref="0x7fac2ad1e310"/>
        <function-ref name="start" scoped="" ref="0x7fac2ad1e4a0"/>
        <function-ref name="stop" scoped="" ref="0x7fac2ad1e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fac2ad23980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fac2ad23980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac2ad23d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fac2ad1b2d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fac2ad1b2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fac2ad1b650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fac2ad1b7e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fac2ad1b970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fac2ad1bb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fac2ad1d580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fac2ad1d580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fac2ad1d900"/>
        <function-ref name="toIdle" scoped="" ref="0x7fac2ad1da90"/>
        <function-ref name="isState" scoped="" ref="0x7fac2ad1dc20"/>
        <function-ref name="isIdle" scoped="" ref="0x7fac2ad1ddb0"/>
        <function-ref name="requestState" scoped="" ref="0x7fac2ad1c020"/>
        <function-ref name="forceState" scoped="" ref="0x7fac2ad1c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fac2ad0ed70" loc="45:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fac2ad0ed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac2ad0d180"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2ad0d310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2ad0d4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fac2ad0d630"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac2ad0d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fac2ad11350" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fac2ad11350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac2ad116d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2ad11860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2ad119f0"/>
        <function-ref name="cancel" scoped="" ref="0x7fac2ad11b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac2ad11d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fac2ad0e020" loc="41:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fac2ad0e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fac2ad0e3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fac2ad0e530"/>
        <function-ref name="getRetries" scoped="" ref="0x7fac2ad0e6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fac2ad0e850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fac2ad0e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7fac2ad091c0" loc="44:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fac2ad091c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fac2ad09540"/>
        <function-ref name="noAck" scoped="" ref="0x7fac2ad096d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fac2ad09860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fac2ad0c410" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fac2ad0c410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fac2ad0c790"/>
        <function-ref name="setRetries" scoped="" ref="0x7fac2ad0c920"/>
        <function-ref name="getRetries" scoped="" ref="0x7fac2ad0cab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fac2ad0cc40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fac2ad0cdd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fac2ace9690" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fac2ace9690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac2ace9a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fac2acea860" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fac2acea860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac2aceabe0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2acead70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2ace9020"/>
        <function-ref name="cancel" scoped="" ref="0x7fac2ace91b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac2ace9340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fac2ace7610" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fac2ace7610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fac2ace7990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fac2ace7b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fac2ace7cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7fac2ace7e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fac2ace6020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fac2ace61b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fac2ace6340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fac2ace64d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fac2ace6660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fac2ace67f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fac2ace6980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fac2ace6b10"/>
        <function-ref name="sync" scoped="" ref="0x7fac2ace6ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fac2ace5020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fac2ace51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fac2aceb8b0" loc="54:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fac2aceb8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fac2bd0dd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fac2acebc30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fac2acebdc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fac2acea020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fac2acea1b0"/>
        <function-ref name="setCca" scoped="" ref="0x7fac2acea340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fac2acea4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fac2acecce0" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7fac2acecce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fac2bd0dd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fac2aceb0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7fac2ace41f0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7fac2ace41f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fac2ace4570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fac2ace4700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fac2ace4890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fac2ace4a20"/>
        <function-ref name="setCca" scoped="" ref="0x7fac2ace4bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fac2ace4d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fac2aceda80" loc="52:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fac2aceda80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2acede00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fac2acec020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2acec1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2acec340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fac2acec4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fac2acf1020" loc="48:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fac2acf1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fac2bd0dd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac2acf13a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2acf1530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2acf16c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fac2acf1850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac2acf19e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fac2acf0df0" loc="50:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fac2acf0df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fac2bd0dd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac2acee1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fac2ace9ce0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fac2ace9ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fac2ace80a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fac2ace8230"/>
        <function-ref name="getRssi" scoped="" ref="0x7fac2ace83c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fac2ace8550"/>
        <function-ref name="getPower" scoped="" ref="0x7fac2ace86e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fac2ace8870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fac2ace54d0" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fac2ace54d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fac2ace5950"/>
        <function-ref name="changed" scoped="" ref="0x7fac2ace5ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fac2ace5c70"/>
        <function-ref name="setAddress" scoped="" ref="0x7fac2ace5e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fac2ace8b70" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fac2ace8b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fac2ace7020"/>
        <function-ref name="getHeader" scoped="" ref="0x7fac2ace71b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fac2ace7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fac2acf0210" loc="49:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fac2acf0210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fac2bd0dd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac2acf0590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fac2ace3d30" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fac2ace3d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fac2ace10e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fac2ace1270"/>
        <function-ref name="led1On" scoped="" ref="0x7fac2ace1400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fac2ace1590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fac2ace1720"/>
        <function-ref name="get" scoped="" ref="0x7fac2ace18b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fac2ace1a40"/>
        <function-ref name="led2Off" scoped="" ref="0x7fac2ace01b0"/>
        <function-ref name="set" scoped="" ref="0x7fac2ace1bd0"/>
        <function-ref name="led0On" scoped="" ref="0x7fac2ace1d60"/>
        <function-ref name="led2On" scoped="" ref="0x7fac2ace0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fac2acee470" loc="51:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fac2acee470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fac2acee7f0"/>
        <function-ref name="source" scoped="" ref="0x7fac2acee980"/>
        <function-ref name="address" scoped="" ref="0x7fac2aceeb10"/>
        <function-ref name="destination" scoped="" ref="0x7fac2aceeca0"/>
        <function-ref name="setSource" scoped="" ref="0x7fac2aceee30"/>
        <function-ref name="setDestination" scoped="" ref="0x7fac2aced020"/>
        <function-ref name="type" scoped="" ref="0x7fac2aced1b0"/>
        <function-ref name="setType" scoped="" ref="0x7fac2aced340"/>
        <function-ref name="isForMe" scoped="" ref="0x7fac2aced4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fac2aced660"/>
        <function-ref name="localGroup" scoped="" ref="0x7fac2aced7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7fac2ace30f0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7fac2ace30f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fac2ace3470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fac2ace3600"/>
        <function-ref name="request" scoped="" ref="0x7fac2ace3790"/>
        <function-ref name="granted" scoped="" ref="0x7fac2ace3920"/>
        <function-ref name="isOwner" scoped="" ref="0x7fac2ace3ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fac2ac5d360" loc="61:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fac2ac5d360"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fac2ac5d6e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fac2ac5d870"/>
        <function-ref name="start" scoped="" ref="0x7fac2ac5da00"/>
        <function-ref name="stop" scoped="" ref="0x7fac2ac5db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fac2ac5c3f0" loc="63:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fac2ac5c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fac2bd0dd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac2ac5c770"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2ac5c900"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2ac5ca90"/>
        <function-ref name="cancel" scoped="" ref="0x7fac2ac5cc20"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac2ac5cdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fac2ac591d0" loc="65:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fac2ac591d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fac2bd0dd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac2ac59550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fac2ac597e0" loc="67:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fac2ac597e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2ac59b60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fac2ac59cf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2ac59e80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2ac58030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fac2ac581c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fac2ac56a20" loc="70:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fac2ac56a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fac2c0f7200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fac2ac54020"/>
        <function-ref name="clear" scoped="" ref="0x7fac2ac54750"/>
        <function-ref name="isValid" scoped="" ref="0x7fac2ac55890"/>
        <function-ref name="set" scoped="" ref="0x7fac2ac54e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fac2ac4c890" loc="72:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fac2ac4c890"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fac2ac4cc10"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fac2ac4cda0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fac2ac4b020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fac2ac4b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fac2ac5b5c0" loc="64:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fac2ac5b5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fac2bd0dd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac2ac5b940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fac2ac57b20" loc="69:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fac2ac57b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fac2ac56020"/>
        <function-ref name="noAck" scoped="" ref="0x7fac2ac561b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fac2ac56340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fac2ac58470" loc="68:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fac2ac58470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fac2ac587f0"/>
        <function-ref name="source" scoped="" ref="0x7fac2ac58980"/>
        <function-ref name="address" scoped="" ref="0x7fac2ac58b10"/>
        <function-ref name="destination" scoped="" ref="0x7fac2ac58ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7fac2ac58e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7fac2ac57020"/>
        <function-ref name="type" scoped="" ref="0x7fac2ac571b0"/>
        <function-ref name="setType" scoped="" ref="0x7fac2ac57340"/>
        <function-ref name="isForMe" scoped="" ref="0x7fac2ac574d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fac2ac57660"/>
        <function-ref name="localGroup" scoped="" ref="0x7fac2ac577f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fac2ac50af0" loc="71:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fac2ac50af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fac2c0f8680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fac2c0f89f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fac2ac4e0d0"/>
        <function-ref name="clear" scoped="" ref="0x7fac2ac4e800"/>
        <function-ref name="isValid" scoped="" ref="0x7fac2ac4f970"/>
        <function-ref name="set" scoped="" ref="0x7fac2ac4c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fac2abb8020" loc="49:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fac2abb8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac2abb83a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2abb8530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2abb86c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fac2abb8850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac2abb89e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fac2abb8c30" loc="50:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fac2abb8c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2abb6020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fac2abb61b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2abb6340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2abb64d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fac2abb6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fac2abb68b0" loc="51:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fac2abb68b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fac2abb6c30"/>
        <function-ref name="source" scoped="" ref="0x7fac2abb6dc0"/>
        <function-ref name="address" scoped="" ref="0x7fac2abb5020"/>
        <function-ref name="destination" scoped="" ref="0x7fac2abb51b0"/>
        <function-ref name="setSource" scoped="" ref="0x7fac2abb5340"/>
        <function-ref name="setDestination" scoped="" ref="0x7fac2abb54d0"/>
        <function-ref name="type" scoped="" ref="0x7fac2abb5660"/>
        <function-ref name="setType" scoped="" ref="0x7fac2abb57f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fac2abb5980"/>
        <function-ref name="setGroup" scoped="" ref="0x7fac2abb5b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7fac2abb5ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fac2abb4020" loc="52:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fac2abb4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fac2abb43a0"/>
        <function-ref name="noAck" scoped="" ref="0x7fac2abb4530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fac2abb46c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fac2a270e60" loc="49:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fac2a270e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac2a26e210"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2a26e3a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2a26e530"/>
        <function-ref name="cancel" scoped="" ref="0x7fac2a26e6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac2a26e850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fac2a26eaa0" loc="50:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fac2a26eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2a26ee20"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fac2a26d020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2a26d1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2a26d340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fac2a26d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fac2a26d720" loc="51:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fac2a26d720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fac2a26daa0"/>
        <function-ref name="source" scoped="" ref="0x7fac2a26dc30"/>
        <function-ref name="address" scoped="" ref="0x7fac2a26ddc0"/>
        <function-ref name="destination" scoped="" ref="0x7fac2a26c020"/>
        <function-ref name="setSource" scoped="" ref="0x7fac2a26c1b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fac2a26c340"/>
        <function-ref name="type" scoped="" ref="0x7fac2a26c4d0"/>
        <function-ref name="setType" scoped="" ref="0x7fac2a26c660"/>
        <function-ref name="isForMe" scoped="" ref="0x7fac2a26c7f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fac2a26c980"/>
        <function-ref name="localGroup" scoped="" ref="0x7fac2a26cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fac2a26cda0" loc="52:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fac2a26cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fac2a26b180"/>
        <function-ref name="noAck" scoped="" ref="0x7fac2a26b310"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fac2a26b4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fac2a2627f0" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fac2a2627f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac2a262b70"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2a262d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2a261020"/>
        <function-ref name="cancel" scoped="" ref="0x7fac2a2611b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac2a261340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7fac2a2615f0" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fac2a2615f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac2a261970"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2a261b00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2a261c90"/>
        <function-ref name="cancel" scoped="" ref="0x7fac2a261e20"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac2a260020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fac2a260270" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fac2a260270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fac2a2605f0"/>
        <function-ref name="source" scoped="" ref="0x7fac2a260780"/>
        <function-ref name="address" scoped="" ref="0x7fac2a260910"/>
        <function-ref name="destination" scoped="" ref="0x7fac2a260aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7fac2a260c30"/>
        <function-ref name="setDestination" scoped="" ref="0x7fac2a260dc0"/>
        <function-ref name="type" scoped="" ref="0x7fac2a25f020"/>
        <function-ref name="setType" scoped="" ref="0x7fac2a25f1b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fac2a25f340"/>
        <function-ref name="setGroup" scoped="" ref="0x7fac2a25f4d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7fac2a25f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fac2ac1f930" loc="43:../../../tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fac2ac1f930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac2ac1fcb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2ac1fe40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2ac1c020"/>
        <function-ref name="cancel" scoped="" ref="0x7fac2ac1c1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac2ac1c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fac2abcc400" loc="51:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fac2abcc400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fac2bd0dd50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac2abcc7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2abcc930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2abccac0"/>
        <function-ref name="cancel" scoped="" ref="0x7fac2abccc50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac2abccde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fac2abcedf0" loc="47:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fac2abcedf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fac2abcd1c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2abcd350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2abcd4e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fac2abcd670"/>
        <function-ref name="sendDone" scoped="" ref="0x7fac2abcd800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fac2abca720" loc="53:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fac2abca720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2abcaaa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fac2abcac30"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2abcadc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2abc9020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fac2abc91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBusy" ref="0x7fac2abcdb80" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBusy" scoped="" ref="0x7fac2abcdb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBusy"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="busy" scoped="" ref="0x7fac2abcc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7fac2abc9480" loc="184:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7fac2abc9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac2abc9800"/>
        <function-ref name="runTask" scoped="" ref="0x7fac2abc9990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7fac2abc9c60" loc="140:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7fac2abc9c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fac2abc8020"/>
        <function-ref name="runTask" scoped="" ref="0x7fac2abc81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fac2abcb060" loc="52:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fac2abcb060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fac2abcb3e0"/>
        <function-ref name="source" scoped="" ref="0x7fac2abcb570"/>
        <function-ref name="address" scoped="" ref="0x7fac2abcb700"/>
        <function-ref name="destination" scoped="" ref="0x7fac2abcb890"/>
        <function-ref name="setSource" scoped="" ref="0x7fac2abcba20"/>
        <function-ref name="setDestination" scoped="" ref="0x7fac2abcbbb0"/>
        <function-ref name="type" scoped="" ref="0x7fac2abcbd40"/>
        <function-ref name="setType" scoped="" ref="0x7fac2abca020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fac2abca1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fac2abca340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fac2abca4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fac2abab020" loc="46:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SlaveAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fac2abab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fac2abab3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fac2abab530"/>
        <function-ref name="getPayload" scoped="" ref="0x7fac2abab6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fac2abab850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fac2abab9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fac2abb1910" loc="45:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SlaveAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fac2abb1910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fac2abb1c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fac2ababc30" loc="47:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SlaveAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fac2ababc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fac2aba9020"/>
        <function-ref name="source" scoped="" ref="0x7fac2aba91b0"/>
        <function-ref name="address" scoped="" ref="0x7fac2aba9340"/>
        <function-ref name="destination" scoped="" ref="0x7fac2aba94d0"/>
        <function-ref name="setSource" scoped="" ref="0x7fac2aba9660"/>
        <function-ref name="setDestination" scoped="" ref="0x7fac2aba97f0"/>
        <function-ref name="type" scoped="" ref="0x7fac2aba9980"/>
        <function-ref name="setType" scoped="" ref="0x7fac2aba9b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7fac2aba9ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fac2aba9e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7fac2aba8020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fac2c0edc60" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7fac2c0ee830" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Platform" loc="51:../../../tos/interfaces/Platform.nc">
      <function command="" provided="0" name="jiffiesRawSize" ref="0x7fac2c0e3d50" loc="109:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="node_id" ref="0x7fac2c0dfc00" loc="182:../../../tos/interfaces/Platform.nc">
        <documentation loc="164:../../../tos/interfaces/Platform.nc">
          <short>&#10; Platform dependent node id.</short>
          <long>&#10; Platform dependent node id.&#10;&#10; Get a Platform defined node id.  This will typically be a serial number&#10; or mac address.&#10;&#10; Platform define PLATFORM_SERIAL_NUM_SIZE determines the&#10; size.  If not defined defaults to 4 bytes (uint32_t).  But platforms&#10; really should define it to be clear.  (see platform.h)&#10;&#10; input:  *lenp      pointer where to place the length of the number.&#10;&#10; output: *lenp      length filled in if non-null.&#10; return: *uint8_t   pointer to the serial_num or NULL.&#10;&#10; a Node Id is assumed to be a sequence of bytes starting with the&#10; msb first.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lenp" ref="0x7fac2c0df940" loc="182:../../../tos/interfaces/Platform.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRawSize" ref="0x7fac2c0e4030" loc="79:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRaw" ref="0x7fac2c0e6870" loc="78:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesExpired" ref="0x7fac2c0e2b40" loc="126:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t_base" ref="0x7fac2c0e2550" loc="126:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
            </type-int>
          </variable>
          <variable name="limit" ref="0x7fac2c0e28b0" loc="126:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIntPriority" ref="0x7fac2c0df020" loc="162:../../../tos/interfaces/Platform.nc">
        <documentation loc="153:../../../tos/interfaces/Platform.nc">
          <short>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.</short>
          <long>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.&#10;   modern computer hardware allows the assignment of different priorities&#10;   to interrupt sources.  This is inherently a platform thing.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="irq_number" ref="0x7fac2c0e0cd0" loc="162:../../../tos/interfaces/Platform.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set_unaligned_traps" ref="0x7fac2c0e05a0" loc="150:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on_off" ref="0x7fac2c0e0320" loc="150:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesRaw" ref="0x7fac2c0e35b0" loc="108:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="localTime" ref="0x7fac2c0e60e0" loc="64:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsExpired" ref="0x7fac2c0e4dd0" loc="95:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t_base" ref="0x7fac2c0e47e0" loc="95:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
            </type-int>
          </variable>
          <variable name="limit" ref="0x7fac2c0e4b40" loc="95:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7fac2c0a1b40" loc="48:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7fac2c0a4de0" loc="43:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7fac2c0a1420" loc="47:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7fac2c0a4700" loc="42:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7fac2c0a35a0" loc="45:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7fac2c0a78f0" loc="40:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7fac2c0a4020" loc="41:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7fac2c0a3cc0" loc="46:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7fac2c2117e0" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7fac2c4d9700"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7fac2c137a80" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7fac2c1351f0" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7fac2c1372b0" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7fac2c2af020" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fac2cc4fe80" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7fac2c597e20" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7fac2c597610" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7fac2c58b770" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event.&#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7fac2c589020" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7fac2c03d020" loc="61:../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7fac2c03d7d0" loc="67:../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7fac2c03c020" loc="72:../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7fac2c03b020" loc="83:../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7fac2c0397d0" loc="100:../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fac2c038020" loc="117:../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7fac2c03c7b0" loc="77:../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fac2c038b90" loc="134:../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fac2c038910" loc="134:../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7fac2c03e850" loc="56:../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7fac2c03b800" loc="89:../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7fac2c039020" loc="94:../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fac2c02e8a0" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fac2c02d020" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fac2c030a40" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fac2c02de80" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fac2c02e190" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fac2c02d740" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fac2c033c40" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fac2c030350" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fac2c003880" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fac2c002020" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7fac2bffeb10" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fac2bffe890" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorPullUp" ref="0x7fac2bffc5d0" loc="126:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fac2c005120" loc="59:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fac2c001020" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7fac2bffcd60" loc="134:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="129:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDriveStrength" ref="0x7fac2bffb860" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="136:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short> &#10; Set port drive strength.</short>
          <long> &#10; Set port drive strength.&#10; @param mode: MSP430_PORT_DRIVE_STRENGTH_*&#10; @return EINVAL if invalid mode or pin doesn't support drive&#10;     strength config.&#10; FAIL if pin is not an output&#10; SUCCESS if pin supports it, is an output, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fac2bffb5e0" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fac2c002760" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fac2c0030e0" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDriveStrength" ref="0x7fac2bff9190" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get drive strength.</short>
          <long>&#10; Get drive strength.&#10; @return MSP430_PORT_DRIVE_STRENGTH_*&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7fac2bfff770" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorPullDown" ref="0x7fac2bffde30" loc="125:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7fac2c0058c0" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorOff" ref="0x7fac2bffd3e0" loc="124:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; set resistor mode directly.</short>
          <long>&#10; set resistor mode directly.&#10;&#10; You have to know what you are doing when you use these.  These routines&#10; assume that the port is set for input (PxDIR).  The routines explicitly&#10; change the value of the bits setting in PxOUT.&#10;&#10; The advantage of using these routines is efficiency because there is no&#10; mode checking.  In addition, no error check is done to make sure that the&#10; port is in input mode.  The thing is, first, this is something that you&#10; get right once and then it doesn't change so why check and, second no&#10; one actually checks the error return because there really isn't any&#10; point to doing the check because this isn't something you actually need&#10; to check the return code for.  So why have one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fac2c006270" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="46:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7fac2c0017a0" loc="91:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7fac2bffe020" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7fac2bfff020" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fac2c0069a0" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7fac2bcd0110" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
              <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fac2bcd4e40" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
              <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7fac2bccf600" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
              <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fac2bccf380" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
              <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fac2bcd4460" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fac2bcd0960" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x7fac2bcfa3f0" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac2bcfa170" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7fac2bcf8490" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac2bcf8210" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fac2bcf67b0" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac2bcf61b0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fac2bcf64e0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fac2bcf58a0" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7fac2bcf7930" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac2bcf7370" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fac2bcf76a0" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fac2bcde2c0" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fac2bd0c560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fac2bcf3930" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fac2bd0c560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fac2bcf3cb0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fac2bcde020" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fac2bcda970" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac2bcda370" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fac2bcda6a0" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fac2bcd9a60" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fac2bcdd630" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac2bcdd3b0" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fac2bcdcb80" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
              <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac2bcdc5a0" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fac2bcdc8f0" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
              <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7fac2bccc2b0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fac2bccdb50" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7fac2bccc020" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7fac2bcc8980" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fac2bcc8380" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7fac2bcc86f0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7fac2bcccd90" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7fac2cc43110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fac2bcccb10" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7fac2bcc9880" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fac2bcc9600" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7fac2bccd350" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fac2bccd0d0" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7fac2bcca990" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fac2bcca710" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fac2bcd59c0" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
              <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac2bcd5060" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7fac2bcd53b0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fac2bcd56e0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fac2bd5d350" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fac2bd5d350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fac2bd561f0" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fac2bd5ba60" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7fac2bd58820" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fac2bd58250" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fac2bd58590" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7fac2bd59a60" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7fac2bd54270" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7fac2bd56980" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fac2bd59270" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7fac2bd5c020" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fac2bd5dc40" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7fac2bd57820" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fac2bd57250" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fac2bd57590" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7fac2bd5cae0" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fac2bd5c860" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fac2bd5b350" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7fac2bce52a0" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fac2bd0c180"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fac2bce5020" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7fac2bceed60" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fac2bd0c560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fac2bceeae0" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7fac2bcf11f0" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fac2bd0c560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7fac2bcf1cb0" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fac2bd0c560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fac2bcf1a30" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7fac2bceb7a0" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fac2bd0c560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fac2bceb1c0" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fac2bceb510" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fac2bd0c560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7fac2bced2b0" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fac2bd0c560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fac2bcefc40" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fac2bced020" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fac2bd0c560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7fac2bce8bf0" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fac2bd0dd50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fac2bce8970" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7fac2bcea020" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fac2bd0dd50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fac2bce69a0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7fac2bce6cc0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fac2bd0dd50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7fac2bce99f0" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fac2bce9770" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7fac2bce3730" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fac2bd0c180"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fac2bce3150" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7fac2bce34a0" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fac2bd0c180"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7fac2bce2580" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fac2bd0c180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fac2bc7e6d0" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fac2bc7e6d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fac2bc7b020" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fac2bc76070" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fac2bc76070"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fac2bc762b0" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac2bc762b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fac2bc72e00" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac2bc762b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fac2bc75e40" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7fac2bc72460" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac2bc762b0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac2bc762b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fac2bc74e60" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac2bc762b0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7fac2bc721d0" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac2bc762b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fac2bc74640" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7fac2bc71620" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac2bc762b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fac2bc76e10" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac2bc762b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fac2bc76b90" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac2bc762b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fac2bc75680" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fac2bc50270" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7fac2bc50bf0" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fac2bc50970" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7fac2bc4f610" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fac2bc4f390" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7fac2bc4d020" loc="44:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fac2bc4fd60" loc="44:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fac2bc4d710" loc="46:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fac2bc5ead0" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7fac2bc5c400" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7fac2bc5c180" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fac2bc5d270" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fac2bc64d30" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fac2bc5d9b0" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fac2bc61c50" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fac2bc5e3e0" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fac2bc61510" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fac2bc5f390" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7fac2bc5fca0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fac2bc5fa20" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7fac2bc5ce10" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7fac2bc5cb90" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7fac2bc548f0" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10;&#10; It has a predefined idea of what mode that capture should occur in.&#10; If that doesn't work for you, use setControl.&#10;&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; @param ccis configures which input channel to use.&#10;&#10; Msp430Timer.h has convenience definitions:&#10;&#10;     MSP430TIMER_CM_NONE,            MSP430TIMER_CCI_A&#10;     MSP430TIMER_CM_RISING,          MSP430TIMER_CCI_B&#10;     MSP430TIMER_CM_FALLING,         MSP430TIMER_CCI_GND&#10;     MSP430TIMER_CM_BOTH             MSP430TIMER_CCI_VCC&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fac2bc54320" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
          <variable name="ccis" ref="0x7fac2bc54660" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7fac2bc587d0" loc="41:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac2c098550"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fac2c097020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fac2bc532b0" loc="76:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7fac2bc521f0" loc="78:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7fac2bc56a30" loc="56:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short>&#10; Sets the time in compare mode.</short>
          <long>&#10; Sets the time in compare mode.&#10;&#10; setControlAsCompare has a predefined, hardcoded idea of&#10; how the control register should be set for doing a compare.&#10;&#10; Your mileage may vary and this may not work for you.   In&#10; which case you set use setControl.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fac2bc539f0" loc="77:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7fac2bc57020" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7fac2bc577b0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7fac2bc562a0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac2c098550"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fac2c097020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fac2bc56020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fac2c098550"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fac2c097020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fac2bc3fd60" loc="45:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="42:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7fac2bc39400" loc="85:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="76:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7fac2bc39180" loc="85:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fac2bc38020" loc="92:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="87:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fac2bc39d10" loc="92:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fac2bc3a9a0" loc="74:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="71:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fac2bc3a0e0" loc="69:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="59:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7fac2bc3b740" loc="57:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="47:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fac2bc3b4c0" loc="57:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fac2bc0e1f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fac2babee10" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fac2babee10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fac2bab9070" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac2bab9070"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fac2bab9990" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Return counter value.</short>
          <long>&#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac2bab9070"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fac2bab8ad0" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fac2bab8270" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fac2bab7270" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSkew" loc="51:../../../tos/lib/timer/TimeSkew.nc">
      <documentation loc="35:../../../tos/lib/timer/TimeSkew.nc">
        <short>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.</short>
        <long>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.  Under various circumstances&#10; adjustments may be made by this underlying timing that can result&#10; in time skew.&#10;&#10; Typically this can occur when the RTC (Real Time Clock) subsystem&#10; has had its time adjusted for example via a GPS providing synchronized&#10; time.  If this skew is below a reasonable threshold (platform dependent)&#10; TimeSkew.skew(skew_val) will be signalled.  Beyond that threshold&#10; it might be better to reboot and reestablish reasonable time via&#10; those mechanisms.&#10;&#10; @author Eric B.Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function event="" provided="0" name="skew" ref="0x7fac2b9f6e80" loc="62:../../../tos/lib/timer/TimeSkew.nc">
        <documentation loc="52:../../../tos/lib/timer/TimeSkew.nc">
          <short>&#10; Signaled when the underlying timing system has detected timing&#10; skew.</short>
          <long>&#10; Signaled when the underlying timing system has detected timing&#10; skew.&#10;&#10; @param skew    estimated skew computed.  in millisecs (units platform&#10;                dependent, typically binary millisecs).&#10;                > 0, time has been moved into the future (we were slow).&#10;                &#60; 0, time has been shifted backwards, (we were fast).&#10;                = 0, skew is beyond platform limits.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSkew"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7fac2cc43930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="skew" ref="0x7fac2b9f6c00" loc="62:../../../tos/lib/timer/TimeSkew.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7fac2cc43930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7fac2b93e980" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac2b93e700" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7fac2b941c30" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac2b9419b0" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7fac2b942350" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7fac2b9420d0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7fac2b944800" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7fac2b944580" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7fac2b942d80" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7fac2b942b00" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7fac2b93fb10" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac2b93f890" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7fac2b92c2b0" loc="59:../../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fac2bd0c560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7fac2b93cc50" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fac2bd0c560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fac2b92c020" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7fac2b939680" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac2b939060" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7fac2b9393f0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7fac2b938850" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac2b9385d0" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7fac2b93a810" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7fac2b93de10" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7fac2b93db90" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7fac2b94b2e0" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac2b94b060" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7fac2b949510" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac2b949290" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7fac2b948680" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac2b948400" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7fac2b930b30" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac2b9308b0" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7fac2b935b90" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac2b935570" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7fac2b935900" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7fac2b932ad0" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac2b932850" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7fac2b932020" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac2b933960" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7fac2b933cf0" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7fac2b92fb70" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac2b92f8f0" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7fac2b945780" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac2b945500" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fac2b91f2b0" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac2b926c40" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fac2b91f020" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fac2b91b890" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac2b91b290" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fac2b91b5c0" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fac2b91a9b0" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fac2b91e5f0" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac2b91e370" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fac2b91dac0" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
              <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac2b91d4e0" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fac2b91d830" loc="100:../../../tos/interfaces/Send.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
              <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fac2b923120" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.&#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource&#10;&#10; @note This command should never be called between putting in a request&#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event,&#10;       we have opted to keep thing simple and warn you about the potential&#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7fac2b924120" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7fac2b925770" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fac2b924910" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fac2b923b70" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fac2b8f93a0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fac2b8fedc0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7fac2b8f9110" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fac2b8f86a0" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7fac2b8f5e70" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fac2b8f5060" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7fac2b8f58a0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fac2b8f5bd0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fac2b8f7840" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
              <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fac2b8f7260" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fac2b8f75b0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
              <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7fac2b8f9e30" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7fac2b8f9bb0" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7fac2b8f10e0" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7fac2b8fa870" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fac2b904a40" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fac2b8fb270" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7fac2b8eb2e0" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac2b8eb020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7fac2b8ec710" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header" ref="0x7fac2bd47410"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7fac2bd46d70"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac2b8ec410" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7fac2b8ea620" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata" ref="0x7fac2bd44860"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7fac2bd42180"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac2b8ea320" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7fac2b9016e0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7fac2b8ff840" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7fac2b8ff070" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7fac2b906e20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7fac2b902e80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7fac2b900020" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7fac2b900840" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7fac2b9026c0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7fac2b8e5d00" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7fac2b8e6350" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7fac2b8e5530" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7fac2b8e52b0" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7fac2b8e6ac0" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7fac2b8e7020" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7fac2b8eec90" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7fac2b8e7ad0" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7fac2b8e7850" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7fac2b889870" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7fac2b889290" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7fac2b8895e0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7fac2b88b1f0" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7fac2b88c880" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7fac2b88c210" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7fac2b88c5f0" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7fac2b892c10" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
              <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fac2b892990" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
              <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7fac2b88ba70" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7fac2b88e730" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7fac2b88e4b0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7fac2b891d30" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fac2b891ab0" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7fac2b888ae0" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7fac2b88d9c0" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7fac2b88d740" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7fac2b8882b0" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7fac2b88f4d0" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fac2b962ac0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7fac2b95f240"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7fac2b88fcc0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7fac2b8921f0" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7fac2b891390" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7fac2b88d020" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10;&#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fac2b8864a0" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fac2b8864a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fac2b886d60" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10;&#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fac2b883ac0" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
              <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
            </type-tag>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fac2b8864a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fac2b883510" loc="63:../../../tos/interfaces/Read.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
              <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
            </type-tag>
          </variable>
          <variable name="val" ref="0x7fac2b883830" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fac2b8864a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fac2b85f520" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fac2bd4b600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fac2b85f2a0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fac2b85e030" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fac2bd4b600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fac2b85fd80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7fac2b878c50" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fac2b962ac0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7fac2b95f240"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7fac2b8670e0" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fac2bd0c560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7fac2b866070" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7fac2b8678c0" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fac2bd0c180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7fac2b868860" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fac2bd0c180"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fac2bd0c560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7fac2b868280" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fac2bd0c180"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fac2b8685d0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fac2bd0c560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7fac2b857120" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fac2bd4b600"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fac2b864840" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fac2bd4b600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fac2b86a9b0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fac2b864250" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fac2b8645a0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fac2b861020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fac2bd4b600"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fac2b862150" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fac2b8629c0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fac2b862d10" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fac2b86b7e0" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fac2b86b020" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7fac2b86c720" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7fac2b86fdb0" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7fac2b745190" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fac2b743350" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fac2b745b30" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fac2b7458b0" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7fac2b7488f0" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="34:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fac2b71b800" loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="51:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fac2b717270" loc="85:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fac2b71b070" loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="46:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7fac2b7199a0" loc="80:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Sets whether the edge should be high to low or low to high.</short>
          <long>&#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;&#10; DEPRECATED.&#10;&#10; The if generates extra code that doesn't need to be there.   Replaced&#10; by edge{Rising,Falling}();&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7fac2b719720" loc="80:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeFalling" ref="0x7fac2b719020" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fac2b71e870" loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeRising" ref="0x7fac2b71a810" loc="66:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="63:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Sets rising or falling edge for the interrupt generation&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7fac2b71a030" loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="56:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current input value of a port.</short>
          <long> &#10; Gets the current input value of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7fac2b5c8810" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7fac2b5c40e0" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7fac2b5c4920" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7fac2b59d420" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fac2b59ee10" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fac2b59d190" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7fac2b598700" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
              <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fac2b599d90" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fac2b598110" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fac2b598460" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
              <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fac2b599020" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fac2bd4b600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fac2b59b970" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fac2b59bcc0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7fac2b59e020" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fac2bd4b600"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fac2b5a09d0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fac2b5a0d20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fac2b59cb90" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
              <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fac2b59c250" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fac2b59c5a0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fac2b59c8f0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
              <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fac2b57ea40" loc="76:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fac2b57e0d0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fac2b57e460" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fac2b57e7a0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fac2b57a020" loc="88:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
              <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fac2b57d2a0" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fac2b57d630" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fac2b57d970" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fac2b57dce0" loc="89:../../../tos/interfaces/SpiPacket.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
              <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7fac2b5808f0" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7fac2b580670" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7fac2b4a0b70" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fac2b49d4e0" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <short>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; </short>
        <long>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7fac2b49baa0" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fac2b4d12b0"/></typename>
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fac2b4d2e00"/></type-tag>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7fac2b49a6f0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fac2b49a470" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7fac2b499b30" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fac2b4998b0" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7fac2b499020" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fac2b4985f0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fac2b498370" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7fac2b48d020" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7fac2b48e750" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART. &#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information.&#10;&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7fac2b486740" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fac2b4864c0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7fac2b489cd0" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART.&#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information. I.e. calling &#60;code>tx&#60;/done> will transmit a byte of&#10; data in the mode (SPI or UART) the USART has been set to before.&#10;&#10; @author Vlado Handziski (handzisk@tkn.tu-berlin.de)&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7fac2b4617c0" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7fac2b46d2d0" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7fac2b479020" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fac2b4ee020"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fac2b4ee860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fac2b47ccf0" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fac2b4ee020"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fac2b4ee860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7fac2b46f3b0" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7fac2b477530" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fac2b4e9020"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fac2b4e9860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fac2b4772b0" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fac2b4e9020"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fac2b4e9860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7fac2b4669e0" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7fac2b462020" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7fac2b478a90" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fac2b4ecec0"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7fac2b4eb680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7fac2b477d20" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fac2b4e9020"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7fac2b4e9860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7fac2b473b90" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7fac2b473910" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7fac2b4731f0" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7fac2b4662b0" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7fac2b4782a0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fac2b4ecec0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fac2b4eb680"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fac2b478020" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fac2b4ecec0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fac2b4eb680"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7fac2b474020" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7fac2b465190" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7fac2b474a00" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7fac2b474780" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7fac2b470480" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7fac2b470c00" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7fac2b468420" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7fac2b46a190" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7fac2b46e350" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7fac2b468b60" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7fac2b46dab0" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7fac2b4658b0" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fac2b472390" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fac2b4f4d80"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7fac2b4f04d0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7fac2b464070" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7fac2b461020" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7fac2b475700" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7fac2b475480" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7fac2b4602a0" loc="220:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fac2b460020" loc="220:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7fac2b479800" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fac2b4ee020"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7fac2b4ee860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7fac2b46fb20" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7fac2b46b270" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7fac2b469ba0" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fac2b4bdb50"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fac2b4bd730"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fac2b469920" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fac2b4bdb50"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fac2b4bd730"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7fac2b46aca0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fac2b4d12b0"/></typename>
                <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fac2b4d2e00"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fac2b46aa20" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fac2b4d12b0"/></typename>
                <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fac2b4d2e00"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7fac2b460ac0" loc="227:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="222:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return byte received&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7fac2b464860" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7fac2b472ba0" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7fac2b462780" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7fac2b46b9e0" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7fac2b46eb30" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fac2b3f9020" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <function command="" provided="0" name="disableOwnAddress" ref="0x7fac2b3d39d0" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7fac2b3e4020" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7fac2b3d9620" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fac2b3d93a0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7fac2b3ed5b0" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7fac2b3d6c50" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7fac2b3de5e0" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7fac2b3e6070" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7fac2b3e3020" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7fac2b3e7020" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7fac2b3e8d30" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7fac2b3e94b0" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7fac2b3e0020" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7fac2b3d8550" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7fac2b3d3270" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7fac2b3dac30" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7fac2b3cd350" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7fac2b3ca9d0" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7fac2b3ec420" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7fac2b3e2740" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7fac2b3df1f0" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7fac2b3e78e0" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7fac2b3ee350" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7fac2b3da460" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fac2b3da1e0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7fac2b3f2c00" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7fac2b3d64d0" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7fac2b3d1190" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7fac2b3ccb00" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7fac2b3ca270" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7fac2b3d5b90" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7fac2b3d18c0" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7fac2b3d9db0" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7fac2b3cf390" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7fac2b3ecb40" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7fac2b3dd7e0" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7fac2b3d07b0" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7fac2b3d4ac0" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7fac2b3dfde0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7fac2b3dfb60" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7fac2b3cb2d0" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7fac2b3dba60" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7fac2b3d5420" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7fac2b3eee10" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7fac2b4a94a0"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fac2b4a9080"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fac2b3eeb90" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7fac2b4a94a0"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fac2b4a9080"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7fac2b3e2020" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7fac2b3ebcb0" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fac2b3eba30" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7fac2b3e0980" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fac2b3e0700" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7fac2b3cfb60" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7fac2b3e8620" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7fac2b3eb350" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7fac2b3db2a0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7fac2b3db020" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fac2cc42520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7fac2b3edce0" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7fac2b3d0020" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7fac2b3d4350" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7fac2b3d8cc0" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7fac2b3dd020" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7fac2b3ded30" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7fac2b3e3740" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7fac2b3e67b0" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7fac2b3cba40" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7fac2b3e9e30" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fac2b3e9bb0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7fac2b3cdb10" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7fac2b3e4750" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7fac2b3cc350" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7fac2b329020" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7fac2b329880" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="38:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fac2b2f0dc0" loc="54:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7fac2b2ed020" loc="71:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fac2b2f0530" loc="44:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="39:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fac2b2ef6d0" loc="63:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fac2b2ed950" loc="79:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwnerInfo" loc="2:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
      <function command="" provided="0" name="inUse" ref="0x7fac2b2ecb20" loc="9:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
        <documentation loc="3:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
          <short>&#10; Check whether a DefaultOwner has an active client.</short>
          <long>&#10; Check whether a DefaultOwner has an active client.&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7fac2b2e14c0" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fac2b2ea490"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fac2b2e1240" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fac2b2ea490"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7fac2b2e3420" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7fac2b2e2020" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fac2b2ea490"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fac2b2e3ca0" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fac2b2ea490"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fac2b2e2930" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7fac2b2ea490"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fac2b0d75e0" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fac2b0d7360" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fac2b0c4b00" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7fac2b0c41c0" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7fac2b0c4530" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fac2b0c4860" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fac2b0c2880" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fac2b0c22c0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fac2b0c25f0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fac2b0aa530" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fac2b0aa530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fac2b0aa770" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac2b0aa770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7fac2b0a92e0" loc="66:../../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac2b0aa770"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fac2b0a9060" loc="66:../../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac2b0aa770"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7fac2b046580" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7fac2b032af0" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fac2b032af0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fac2b032d30" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac2b032d30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7fac2b02dbc0" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac2b032d30"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac2b02d940" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7fac2b02bd80" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac2b02bb00" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7fac2b02f920" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac2b02f6a0" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fac2b02c0c0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac2b032d30"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac2b02aa80" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7fac2b02ade0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fac2b032d30"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fac2b00e9e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7fac2b00e020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7fac2b00e750" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7fac2b00f7f0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7fac2b00f020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fac2b012d30" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fac2cc42920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7fac2b0235f0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fac2cc42160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac2b023370" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7fac2b0245f0" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac2b024370" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fac2b0205f0" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac2b020370" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fac2b0225f0" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fac2b022370" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fac2bcfc350"/>
                <typename><typedef-ref name="message_t" ref="0x7fac2bcfb9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7fac2adfc5e0" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fac2adfc5e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7fac2adf82a0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fac2c595020"/>
            <typename><typedef-ref name="error_t" ref="0x7fac2c58d1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fac2adfc5e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7fac2adf8020" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fac2adfc5e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBusy" loc="2:../../../tos/interfaces/SendBusy.nc">
      <function command="" provided="0" name="busy" ref="0x7fac2ac131f0" loc="9:../../../tos/interfaces/SendBusy.nc">
        <documentation loc="3:../../../tos/interfaces/SendBusy.nc">
          <short>&#10; Check whether send queue entry is in use&#10;&#10; </short>
          <long>&#10; Check whether send queue entry is in use&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBusy"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fac2c59b090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
